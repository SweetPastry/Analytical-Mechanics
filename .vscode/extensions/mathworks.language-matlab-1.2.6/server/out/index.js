/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/ansi-regex/index.js":
/*!******************************************!*\
  !*** ./node_modules/ansi-regex/index.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";


module.exports = ({onlyFirst = false} = {}) => {
	const pattern = [
		'[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)',
		'(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))'
	].join('|');

	return new RegExp(pattern, onlyFirst ? undefined : 'g');
};


/***/ }),

/***/ "./node_modules/ansi-styles/index.js":
/*!*******************************************!*\
  !*** ./node_modules/ansi-styles/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* module decorator */ module = __webpack_require__.nmd(module);


const wrapAnsi16 = (fn, offset) => (...args) => {
	const code = fn(...args);
	return `\u001B[${code + offset}m`;
};

const wrapAnsi256 = (fn, offset) => (...args) => {
	const code = fn(...args);
	return `\u001B[${38 + offset};5;${code}m`;
};

const wrapAnsi16m = (fn, offset) => (...args) => {
	const rgb = fn(...args);
	return `\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;
};

const ansi2ansi = n => n;
const rgb2rgb = (r, g, b) => [r, g, b];

const setLazyProperty = (object, property, get) => {
	Object.defineProperty(object, property, {
		get: () => {
			const value = get();

			Object.defineProperty(object, property, {
				value,
				enumerable: true,
				configurable: true
			});

			return value;
		},
		enumerable: true,
		configurable: true
	});
};

/** @type {typeof import('color-convert')} */
let colorConvert;
const makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {
	if (colorConvert === undefined) {
		colorConvert = __webpack_require__(/*! color-convert */ "./node_modules/color-convert/index.js");
	}

	const offset = isBackground ? 10 : 0;
	const styles = {};

	for (const [sourceSpace, suite] of Object.entries(colorConvert)) {
		const name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;
		if (sourceSpace === targetSpace) {
			styles[name] = wrap(identity, offset);
		} else if (typeof suite === 'object') {
			styles[name] = wrap(suite[targetSpace], offset);
		}
	}

	return styles;
};

function assembleStyles() {
	const codes = new Map();
	const styles = {
		modifier: {
			reset: [0, 0],
			// 21 isn't widely supported and 22 does the same thing
			bold: [1, 22],
			dim: [2, 22],
			italic: [3, 23],
			underline: [4, 24],
			inverse: [7, 27],
			hidden: [8, 28],
			strikethrough: [9, 29]
		},
		color: {
			black: [30, 39],
			red: [31, 39],
			green: [32, 39],
			yellow: [33, 39],
			blue: [34, 39],
			magenta: [35, 39],
			cyan: [36, 39],
			white: [37, 39],

			// Bright color
			blackBright: [90, 39],
			redBright: [91, 39],
			greenBright: [92, 39],
			yellowBright: [93, 39],
			blueBright: [94, 39],
			magentaBright: [95, 39],
			cyanBright: [96, 39],
			whiteBright: [97, 39]
		},
		bgColor: {
			bgBlack: [40, 49],
			bgRed: [41, 49],
			bgGreen: [42, 49],
			bgYellow: [43, 49],
			bgBlue: [44, 49],
			bgMagenta: [45, 49],
			bgCyan: [46, 49],
			bgWhite: [47, 49],

			// Bright color
			bgBlackBright: [100, 49],
			bgRedBright: [101, 49],
			bgGreenBright: [102, 49],
			bgYellowBright: [103, 49],
			bgBlueBright: [104, 49],
			bgMagentaBright: [105, 49],
			bgCyanBright: [106, 49],
			bgWhiteBright: [107, 49]
		}
	};

	// Alias bright black as gray (and grey)
	styles.color.gray = styles.color.blackBright;
	styles.bgColor.bgGray = styles.bgColor.bgBlackBright;
	styles.color.grey = styles.color.blackBright;
	styles.bgColor.bgGrey = styles.bgColor.bgBlackBright;

	for (const [groupName, group] of Object.entries(styles)) {
		for (const [styleName, style] of Object.entries(group)) {
			styles[styleName] = {
				open: `\u001B[${style[0]}m`,
				close: `\u001B[${style[1]}m`
			};

			group[styleName] = styles[styleName];

			codes.set(style[0], style[1]);
		}

		Object.defineProperty(styles, groupName, {
			value: group,
			enumerable: false
		});
	}

	Object.defineProperty(styles, 'codes', {
		value: codes,
		enumerable: false
	});

	styles.color.close = '\u001B[39m';
	styles.bgColor.close = '\u001B[49m';

	setLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));
	setLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));
	setLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));
	setLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));
	setLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));
	setLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));

	return styles;
}

// Make the export immutable
Object.defineProperty(module, 'exports', {
	enumerable: true,
	get: assembleStyles
});


/***/ }),

/***/ "./node_modules/anymatch/index.js":
/*!****************************************!*\
  !*** ./node_modules/anymatch/index.js ***!
  \****************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const picomatch = __webpack_require__(/*! picomatch */ "./node_modules/picomatch/index.js");
const normalizePath = __webpack_require__(/*! normalize-path */ "./node_modules/normalize-path/index.js");

/**
 * @typedef {(testString: string) => boolean} AnymatchFn
 * @typedef {string|RegExp|AnymatchFn} AnymatchPattern
 * @typedef {AnymatchPattern|AnymatchPattern[]} AnymatchMatcher
 */
const BANG = '!';
const DEFAULT_OPTIONS = {returnIndex: false};
const arrify = (item) => Array.isArray(item) ? item : [item];

/**
 * @param {AnymatchPattern} matcher
 * @param {object} options
 * @returns {AnymatchFn}
 */
const createPattern = (matcher, options) => {
  if (typeof matcher === 'function') {
    return matcher;
  }
  if (typeof matcher === 'string') {
    const glob = picomatch(matcher, options);
    return (string) => matcher === string || glob(string);
  }
  if (matcher instanceof RegExp) {
    return (string) => matcher.test(string);
  }
  return (string) => false;
};

/**
 * @param {Array<Function>} patterns
 * @param {Array<Function>} negPatterns
 * @param {String|Array} args
 * @param {Boolean} returnIndex
 * @returns {boolean|number}
 */
const matchPatterns = (patterns, negPatterns, args, returnIndex) => {
  const isList = Array.isArray(args);
  const _path = isList ? args[0] : args;
  if (!isList && typeof _path !== 'string') {
    throw new TypeError('anymatch: second argument must be a string: got ' +
      Object.prototype.toString.call(_path))
  }
  const path = normalizePath(_path, false);

  for (let index = 0; index < negPatterns.length; index++) {
    const nglob = negPatterns[index];
    if (nglob(path)) {
      return returnIndex ? -1 : false;
    }
  }

  const applied = isList && [path].concat(args.slice(1));
  for (let index = 0; index < patterns.length; index++) {
    const pattern = patterns[index];
    if (isList ? pattern(...applied) : pattern(path)) {
      return returnIndex ? index : true;
    }
  }

  return returnIndex ? -1 : false;
};

/**
 * @param {AnymatchMatcher} matchers
 * @param {Array|string} testString
 * @param {object} options
 * @returns {boolean|number|Function}
 */
const anymatch = (matchers, testString, options = DEFAULT_OPTIONS) => {
  if (matchers == null) {
    throw new TypeError('anymatch: specify first argument');
  }
  const opts = typeof options === 'boolean' ? {returnIndex: options} : options;
  const returnIndex = opts.returnIndex || false;

  // Early cache for matchers.
  const mtchers = arrify(matchers);
  const negatedGlobs = mtchers
    .filter(item => typeof item === 'string' && item.charAt(0) === BANG)
    .map(item => item.slice(1))
    .map(item => picomatch(item, opts));
  const patterns = mtchers
    .filter(item => typeof item !== 'string' || (typeof item === 'string' && item.charAt(0) !== BANG))
    .map(matcher => createPattern(matcher, opts));

  if (testString == null) {
    return (testString, ri = false) => {
      const returnIndex = typeof ri === 'boolean' ? ri : false;
      return matchPatterns(patterns, negatedGlobs, testString, returnIndex);
    }
  }

  return matchPatterns(patterns, negatedGlobs, testString, returnIndex);
};

anymatch.default = anymatch;
module.exports = anymatch;


/***/ }),

/***/ "./node_modules/binary-extensions/index.js":
/*!*************************************************!*\
  !*** ./node_modules/binary-extensions/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! ./binary-extensions.json */ "./node_modules/binary-extensions/binary-extensions.json");


/***/ }),

/***/ "./node_modules/braces/index.js":
/*!**************************************!*\
  !*** ./node_modules/braces/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const stringify = __webpack_require__(/*! ./lib/stringify */ "./node_modules/braces/lib/stringify.js");
const compile = __webpack_require__(/*! ./lib/compile */ "./node_modules/braces/lib/compile.js");
const expand = __webpack_require__(/*! ./lib/expand */ "./node_modules/braces/lib/expand.js");
const parse = __webpack_require__(/*! ./lib/parse */ "./node_modules/braces/lib/parse.js");

/**
 * Expand the given pattern or create a regex-compatible string.
 *
 * ```js
 * const braces = require('braces');
 * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']
 * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']
 * ```
 * @param {String} `str`
 * @param {Object} `options`
 * @return {String}
 * @api public
 */

const braces = (input, options = {}) => {
  let output = [];

  if (Array.isArray(input)) {
    for (const pattern of input) {
      const result = braces.create(pattern, options);
      if (Array.isArray(result)) {
        output.push(...result);
      } else {
        output.push(result);
      }
    }
  } else {
    output = [].concat(braces.create(input, options));
  }

  if (options && options.expand === true && options.nodupes === true) {
    output = [...new Set(output)];
  }
  return output;
};

/**
 * Parse the given `str` with the given `options`.
 *
 * ```js
 * // braces.parse(pattern, [, options]);
 * const ast = braces.parse('a/{b,c}/d');
 * console.log(ast);
 * ```
 * @param {String} pattern Brace pattern to parse
 * @param {Object} options
 * @return {Object} Returns an AST
 * @api public
 */

braces.parse = (input, options = {}) => parse(input, options);

/**
 * Creates a braces string from an AST, or an AST node.
 *
 * ```js
 * const braces = require('braces');
 * let ast = braces.parse('foo/{a,b}/bar');
 * console.log(stringify(ast.nodes[2])); //=> '{a,b}'
 * ```
 * @param {String} `input` Brace pattern or AST.
 * @param {Object} `options`
 * @return {Array} Returns an array of expanded values.
 * @api public
 */

braces.stringify = (input, options = {}) => {
  if (typeof input === 'string') {
    return stringify(braces.parse(input, options), options);
  }
  return stringify(input, options);
};

/**
 * Compiles a brace pattern into a regex-compatible, optimized string.
 * This method is called by the main [braces](#braces) function by default.
 *
 * ```js
 * const braces = require('braces');
 * console.log(braces.compile('a/{b,c}/d'));
 * //=> ['a/(b|c)/d']
 * ```
 * @param {String} `input` Brace pattern or AST.
 * @param {Object} `options`
 * @return {Array} Returns an array of expanded values.
 * @api public
 */

braces.compile = (input, options = {}) => {
  if (typeof input === 'string') {
    input = braces.parse(input, options);
  }
  return compile(input, options);
};

/**
 * Expands a brace pattern into an array. This method is called by the
 * main [braces](#braces) function when `options.expand` is true. Before
 * using this method it's recommended that you read the [performance notes](#performance))
 * and advantages of using [.compile](#compile) instead.
 *
 * ```js
 * const braces = require('braces');
 * console.log(braces.expand('a/{b,c}/d'));
 * //=> ['a/b/d', 'a/c/d'];
 * ```
 * @param {String} `pattern` Brace pattern
 * @param {Object} `options`
 * @return {Array} Returns an array of expanded values.
 * @api public
 */

braces.expand = (input, options = {}) => {
  if (typeof input === 'string') {
    input = braces.parse(input, options);
  }

  let result = expand(input, options);

  // filter out empty strings if specified
  if (options.noempty === true) {
    result = result.filter(Boolean);
  }

  // filter out duplicates if specified
  if (options.nodupes === true) {
    result = [...new Set(result)];
  }

  return result;
};

/**
 * Processes a brace pattern and returns either an expanded array
 * (if `options.expand` is true), a highly optimized regex-compatible string.
 * This method is called by the main [braces](#braces) function.
 *
 * ```js
 * const braces = require('braces');
 * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))
 * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'
 * ```
 * @param {String} `pattern` Brace pattern
 * @param {Object} `options`
 * @return {Array} Returns an array of expanded values.
 * @api public
 */

braces.create = (input, options = {}) => {
  if (input === '' || input.length < 3) {
    return [input];
  }

  return options.expand !== true
    ? braces.compile(input, options)
    : braces.expand(input, options);
};

/**
 * Expose "braces"
 */

module.exports = braces;


/***/ }),

/***/ "./node_modules/braces/lib/compile.js":
/*!********************************************!*\
  !*** ./node_modules/braces/lib/compile.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const fill = __webpack_require__(/*! fill-range */ "./node_modules/fill-range/index.js");
const utils = __webpack_require__(/*! ./utils */ "./node_modules/braces/lib/utils.js");

const compile = (ast, options = {}) => {
  const walk = (node, parent = {}) => {
    const invalidBlock = utils.isInvalidBrace(parent);
    const invalidNode = node.invalid === true && options.escapeInvalid === true;
    const invalid = invalidBlock === true || invalidNode === true;
    const prefix = options.escapeInvalid === true ? '\\' : '';
    let output = '';

    if (node.isOpen === true) {
      return prefix + node.value;
    }

    if (node.isClose === true) {
      console.log('node.isClose', prefix, node.value);
      return prefix + node.value;
    }

    if (node.type === 'open') {
      return invalid ? prefix + node.value : '(';
    }

    if (node.type === 'close') {
      return invalid ? prefix + node.value : ')';
    }

    if (node.type === 'comma') {
      return node.prev.type === 'comma' ? '' : invalid ? node.value : '|';
    }

    if (node.value) {
      return node.value;
    }

    if (node.nodes && node.ranges > 0) {
      const args = utils.reduce(node.nodes);
      const range = fill(...args, { ...options, wrap: false, toRegex: true, strictZeros: true });

      if (range.length !== 0) {
        return args.length > 1 && range.length > 1 ? `(${range})` : range;
      }
    }

    if (node.nodes) {
      for (const child of node.nodes) {
        output += walk(child, node);
      }
    }

    return output;
  };

  return walk(ast);
};

module.exports = compile;


/***/ }),

/***/ "./node_modules/braces/lib/constants.js":
/*!**********************************************!*\
  !*** ./node_modules/braces/lib/constants.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";


module.exports = {
  MAX_LENGTH: 10000,

  // Digits
  CHAR_0: '0', /* 0 */
  CHAR_9: '9', /* 9 */

  // Alphabet chars.
  CHAR_UPPERCASE_A: 'A', /* A */
  CHAR_LOWERCASE_A: 'a', /* a */
  CHAR_UPPERCASE_Z: 'Z', /* Z */
  CHAR_LOWERCASE_Z: 'z', /* z */

  CHAR_LEFT_PARENTHESES: '(', /* ( */
  CHAR_RIGHT_PARENTHESES: ')', /* ) */

  CHAR_ASTERISK: '*', /* * */

  // Non-alphabetic chars.
  CHAR_AMPERSAND: '&', /* & */
  CHAR_AT: '@', /* @ */
  CHAR_BACKSLASH: '\\', /* \ */
  CHAR_BACKTICK: '`', /* ` */
  CHAR_CARRIAGE_RETURN: '\r', /* \r */
  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */
  CHAR_COLON: ':', /* : */
  CHAR_COMMA: ',', /* , */
  CHAR_DOLLAR: '$', /* . */
  CHAR_DOT: '.', /* . */
  CHAR_DOUBLE_QUOTE: '"', /* " */
  CHAR_EQUAL: '=', /* = */
  CHAR_EXCLAMATION_MARK: '!', /* ! */
  CHAR_FORM_FEED: '\f', /* \f */
  CHAR_FORWARD_SLASH: '/', /* / */
  CHAR_HASH: '#', /* # */
  CHAR_HYPHEN_MINUS: '-', /* - */
  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */
  CHAR_LEFT_CURLY_BRACE: '{', /* { */
  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */
  CHAR_LINE_FEED: '\n', /* \n */
  CHAR_NO_BREAK_SPACE: '\u00A0', /* \u00A0 */
  CHAR_PERCENT: '%', /* % */
  CHAR_PLUS: '+', /* + */
  CHAR_QUESTION_MARK: '?', /* ? */
  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */
  CHAR_RIGHT_CURLY_BRACE: '}', /* } */
  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */
  CHAR_SEMICOLON: ';', /* ; */
  CHAR_SINGLE_QUOTE: '\'', /* ' */
  CHAR_SPACE: ' ', /*   */
  CHAR_TAB: '\t', /* \t */
  CHAR_UNDERSCORE: '_', /* _ */
  CHAR_VERTICAL_LINE: '|', /* | */
  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\uFEFF' /* \uFEFF */
};


/***/ }),

/***/ "./node_modules/braces/lib/expand.js":
/*!*******************************************!*\
  !*** ./node_modules/braces/lib/expand.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const fill = __webpack_require__(/*! fill-range */ "./node_modules/fill-range/index.js");
const stringify = __webpack_require__(/*! ./stringify */ "./node_modules/braces/lib/stringify.js");
const utils = __webpack_require__(/*! ./utils */ "./node_modules/braces/lib/utils.js");

const append = (queue = '', stash = '', enclose = false) => {
  const result = [];

  queue = [].concat(queue);
  stash = [].concat(stash);

  if (!stash.length) return queue;
  if (!queue.length) {
    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;
  }

  for (const item of queue) {
    if (Array.isArray(item)) {
      for (const value of item) {
        result.push(append(value, stash, enclose));
      }
    } else {
      for (let ele of stash) {
        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;
        result.push(Array.isArray(ele) ? append(item, ele, enclose) : item + ele);
      }
    }
  }
  return utils.flatten(result);
};

const expand = (ast, options = {}) => {
  const rangeLimit = options.rangeLimit === undefined ? 1000 : options.rangeLimit;

  const walk = (node, parent = {}) => {
    node.queue = [];

    let p = parent;
    let q = parent.queue;

    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {
      p = p.parent;
      q = p.queue;
    }

    if (node.invalid || node.dollar) {
      q.push(append(q.pop(), stringify(node, options)));
      return;
    }

    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {
      q.push(append(q.pop(), ['{}']));
      return;
    }

    if (node.nodes && node.ranges > 0) {
      const args = utils.reduce(node.nodes);

      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {
        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');
      }

      let range = fill(...args, options);
      if (range.length === 0) {
        range = stringify(node, options);
      }

      q.push(append(q.pop(), range));
      node.nodes = [];
      return;
    }

    const enclose = utils.encloseBrace(node);
    let queue = node.queue;
    let block = node;

    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {
      block = block.parent;
      queue = block.queue;
    }

    for (let i = 0; i < node.nodes.length; i++) {
      const child = node.nodes[i];

      if (child.type === 'comma' && node.type === 'brace') {
        if (i === 1) queue.push('');
        queue.push('');
        continue;
      }

      if (child.type === 'close') {
        q.push(append(q.pop(), queue, enclose));
        continue;
      }

      if (child.value && child.type !== 'open') {
        queue.push(append(queue.pop(), child.value));
        continue;
      }

      if (child.nodes) {
        walk(child, node);
      }
    }

    return queue;
  };

  return utils.flatten(walk(ast));
};

module.exports = expand;


/***/ }),

/***/ "./node_modules/braces/lib/parse.js":
/*!******************************************!*\
  !*** ./node_modules/braces/lib/parse.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const stringify = __webpack_require__(/*! ./stringify */ "./node_modules/braces/lib/stringify.js");

/**
 * Constants
 */

const {
  MAX_LENGTH,
  CHAR_BACKSLASH, /* \ */
  CHAR_BACKTICK, /* ` */
  CHAR_COMMA, /* , */
  CHAR_DOT, /* . */
  CHAR_LEFT_PARENTHESES, /* ( */
  CHAR_RIGHT_PARENTHESES, /* ) */
  CHAR_LEFT_CURLY_BRACE, /* { */
  CHAR_RIGHT_CURLY_BRACE, /* } */
  CHAR_LEFT_SQUARE_BRACKET, /* [ */
  CHAR_RIGHT_SQUARE_BRACKET, /* ] */
  CHAR_DOUBLE_QUOTE, /* " */
  CHAR_SINGLE_QUOTE, /* ' */
  CHAR_NO_BREAK_SPACE,
  CHAR_ZERO_WIDTH_NOBREAK_SPACE
} = __webpack_require__(/*! ./constants */ "./node_modules/braces/lib/constants.js");

/**
 * parse
 */

const parse = (input, options = {}) => {
  if (typeof input !== 'string') {
    throw new TypeError('Expected a string');
  }

  const opts = options || {};
  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;
  if (input.length > max) {
    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);
  }

  const ast = { type: 'root', input, nodes: [] };
  const stack = [ast];
  let block = ast;
  let prev = ast;
  let brackets = 0;
  const length = input.length;
  let index = 0;
  let depth = 0;
  let value;

  /**
   * Helpers
   */

  const advance = () => input[index++];
  const push = node => {
    if (node.type === 'text' && prev.type === 'dot') {
      prev.type = 'text';
    }

    if (prev && prev.type === 'text' && node.type === 'text') {
      prev.value += node.value;
      return;
    }

    block.nodes.push(node);
    node.parent = block;
    node.prev = prev;
    prev = node;
    return node;
  };

  push({ type: 'bos' });

  while (index < length) {
    block = stack[stack.length - 1];
    value = advance();

    /**
     * Invalid chars
     */

    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {
      continue;
    }

    /**
     * Escaped chars
     */

    if (value === CHAR_BACKSLASH) {
      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });
      continue;
    }

    /**
     * Right square bracket (literal): ']'
     */

    if (value === CHAR_RIGHT_SQUARE_BRACKET) {
      push({ type: 'text', value: '\\' + value });
      continue;
    }

    /**
     * Left square bracket: '['
     */

    if (value === CHAR_LEFT_SQUARE_BRACKET) {
      brackets++;

      let next;

      while (index < length && (next = advance())) {
        value += next;

        if (next === CHAR_LEFT_SQUARE_BRACKET) {
          brackets++;
          continue;
        }

        if (next === CHAR_BACKSLASH) {
          value += advance();
          continue;
        }

        if (next === CHAR_RIGHT_SQUARE_BRACKET) {
          brackets--;

          if (brackets === 0) {
            break;
          }
        }
      }

      push({ type: 'text', value });
      continue;
    }

    /**
     * Parentheses
     */

    if (value === CHAR_LEFT_PARENTHESES) {
      block = push({ type: 'paren', nodes: [] });
      stack.push(block);
      push({ type: 'text', value });
      continue;
    }

    if (value === CHAR_RIGHT_PARENTHESES) {
      if (block.type !== 'paren') {
        push({ type: 'text', value });
        continue;
      }
      block = stack.pop();
      push({ type: 'text', value });
      block = stack[stack.length - 1];
      continue;
    }

    /**
     * Quotes: '|"|`
     */

    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {
      const open = value;
      let next;

      if (options.keepQuotes !== true) {
        value = '';
      }

      while (index < length && (next = advance())) {
        if (next === CHAR_BACKSLASH) {
          value += next + advance();
          continue;
        }

        if (next === open) {
          if (options.keepQuotes === true) value += next;
          break;
        }

        value += next;
      }

      push({ type: 'text', value });
      continue;
    }

    /**
     * Left curly brace: '{'
     */

    if (value === CHAR_LEFT_CURLY_BRACE) {
      depth++;

      const dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;
      const brace = {
        type: 'brace',
        open: true,
        close: false,
        dollar,
        depth,
        commas: 0,
        ranges: 0,
        nodes: []
      };

      block = push(brace);
      stack.push(block);
      push({ type: 'open', value });
      continue;
    }

    /**
     * Right curly brace: '}'
     */

    if (value === CHAR_RIGHT_CURLY_BRACE) {
      if (block.type !== 'brace') {
        push({ type: 'text', value });
        continue;
      }

      const type = 'close';
      block = stack.pop();
      block.close = true;

      push({ type, value });
      depth--;

      block = stack[stack.length - 1];
      continue;
    }

    /**
     * Comma: ','
     */

    if (value === CHAR_COMMA && depth > 0) {
      if (block.ranges > 0) {
        block.ranges = 0;
        const open = block.nodes.shift();
        block.nodes = [open, { type: 'text', value: stringify(block) }];
      }

      push({ type: 'comma', value });
      block.commas++;
      continue;
    }

    /**
     * Dot: '.'
     */

    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {
      const siblings = block.nodes;

      if (depth === 0 || siblings.length === 0) {
        push({ type: 'text', value });
        continue;
      }

      if (prev.type === 'dot') {
        block.range = [];
        prev.value += value;
        prev.type = 'range';

        if (block.nodes.length !== 3 && block.nodes.length !== 5) {
          block.invalid = true;
          block.ranges = 0;
          prev.type = 'text';
          continue;
        }

        block.ranges++;
        block.args = [];
        continue;
      }

      if (prev.type === 'range') {
        siblings.pop();

        const before = siblings[siblings.length - 1];
        before.value += prev.value + value;
        prev = before;
        block.ranges--;
        continue;
      }

      push({ type: 'dot', value });
      continue;
    }

    /**
     * Text
     */

    push({ type: 'text', value });
  }

  // Mark imbalanced braces and brackets as invalid
  do {
    block = stack.pop();

    if (block.type !== 'root') {
      block.nodes.forEach(node => {
        if (!node.nodes) {
          if (node.type === 'open') node.isOpen = true;
          if (node.type === 'close') node.isClose = true;
          if (!node.nodes) node.type = 'text';
          node.invalid = true;
        }
      });

      // get the location of the block on parent.nodes (block's siblings)
      const parent = stack[stack.length - 1];
      const index = parent.nodes.indexOf(block);
      // replace the (invalid) block with it's nodes
      parent.nodes.splice(index, 1, ...block.nodes);
    }
  } while (stack.length > 0);

  push({ type: 'eos' });
  return ast;
};

module.exports = parse;


/***/ }),

/***/ "./node_modules/braces/lib/stringify.js":
/*!**********************************************!*\
  !*** ./node_modules/braces/lib/stringify.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const utils = __webpack_require__(/*! ./utils */ "./node_modules/braces/lib/utils.js");

module.exports = (ast, options = {}) => {
  const stringify = (node, parent = {}) => {
    const invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);
    const invalidNode = node.invalid === true && options.escapeInvalid === true;
    let output = '';

    if (node.value) {
      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {
        return '\\' + node.value;
      }
      return node.value;
    }

    if (node.value) {
      return node.value;
    }

    if (node.nodes) {
      for (const child of node.nodes) {
        output += stringify(child);
      }
    }
    return output;
  };

  return stringify(ast);
};



/***/ }),

/***/ "./node_modules/braces/lib/utils.js":
/*!******************************************!*\
  !*** ./node_modules/braces/lib/utils.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.isInteger = num => {
  if (typeof num === 'number') {
    return Number.isInteger(num);
  }
  if (typeof num === 'string' && num.trim() !== '') {
    return Number.isInteger(Number(num));
  }
  return false;
};

/**
 * Find a node of the given type
 */

exports.find = (node, type) => node.nodes.find(node => node.type === type);

/**
 * Find a node of the given type
 */

exports.exceedsLimit = (min, max, step = 1, limit) => {
  if (limit === false) return false;
  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;
  return ((Number(max) - Number(min)) / Number(step)) >= limit;
};

/**
 * Escape the given node with '\\' before node.value
 */

exports.escapeNode = (block, n = 0, type) => {
  const node = block.nodes[n];
  if (!node) return;

  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {
    if (node.escaped !== true) {
      node.value = '\\' + node.value;
      node.escaped = true;
    }
  }
};

/**
 * Returns true if the given brace node should be enclosed in literal braces
 */

exports.encloseBrace = node => {
  if (node.type !== 'brace') return false;
  if ((node.commas >> 0 + node.ranges >> 0) === 0) {
    node.invalid = true;
    return true;
  }
  return false;
};

/**
 * Returns true if a brace node is invalid.
 */

exports.isInvalidBrace = block => {
  if (block.type !== 'brace') return false;
  if (block.invalid === true || block.dollar) return true;
  if ((block.commas >> 0 + block.ranges >> 0) === 0) {
    block.invalid = true;
    return true;
  }
  if (block.open !== true || block.close !== true) {
    block.invalid = true;
    return true;
  }
  return false;
};

/**
 * Returns true if a node is an open or close node
 */

exports.isOpenOrClose = node => {
  if (node.type === 'open' || node.type === 'close') {
    return true;
  }
  return node.open === true || node.close === true;
};

/**
 * Reduce an array of text nodes.
 */

exports.reduce = nodes => nodes.reduce((acc, node) => {
  if (node.type === 'text') acc.push(node.value);
  if (node.type === 'range') node.type = 'text';
  return acc;
}, []);

/**
 * Flatten an array
 */

exports.flatten = (...args) => {
  const result = [];

  const flat = arr => {
    for (let i = 0; i < arr.length; i++) {
      const ele = arr[i];

      if (Array.isArray(ele)) {
        flat(ele);
        continue;
      }

      if (ele !== undefined) {
        result.push(ele);
      }
    }
    return result;
  };

  flat(args);
  return result;
};


/***/ }),

/***/ "./node_modules/chokidar/index.js":
/*!****************************************!*\
  !*** ./node_modules/chokidar/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const { EventEmitter } = __webpack_require__(/*! events */ "events");
const fs = __webpack_require__(/*! fs */ "fs");
const sysPath = __webpack_require__(/*! path */ "path");
const { promisify } = __webpack_require__(/*! util */ "util");
const readdirp = __webpack_require__(/*! readdirp */ "./node_modules/readdirp/index.js");
const anymatch = (__webpack_require__(/*! anymatch */ "./node_modules/anymatch/index.js")["default"]);
const globParent = __webpack_require__(/*! glob-parent */ "./node_modules/chokidar/node_modules/glob-parent/index.js");
const isGlob = __webpack_require__(/*! is-glob */ "./node_modules/is-glob/index.js");
const braces = __webpack_require__(/*! braces */ "./node_modules/braces/index.js");
const normalizePath = __webpack_require__(/*! normalize-path */ "./node_modules/normalize-path/index.js");

const NodeFsHandler = __webpack_require__(/*! ./lib/nodefs-handler */ "./node_modules/chokidar/lib/nodefs-handler.js");
const FsEventsHandler = __webpack_require__(/*! ./lib/fsevents-handler */ "./node_modules/chokidar/lib/fsevents-handler.js");
const {
  EV_ALL,
  EV_READY,
  EV_ADD,
  EV_CHANGE,
  EV_UNLINK,
  EV_ADD_DIR,
  EV_UNLINK_DIR,
  EV_RAW,
  EV_ERROR,

  STR_CLOSE,
  STR_END,

  BACK_SLASH_RE,
  DOUBLE_SLASH_RE,
  SLASH_OR_BACK_SLASH_RE,
  DOT_RE,
  REPLACER_RE,

  SLASH,
  SLASH_SLASH,
  BRACE_START,
  BANG,
  ONE_DOT,
  TWO_DOTS,
  GLOBSTAR,
  SLASH_GLOBSTAR,
  ANYMATCH_OPTS,
  STRING_TYPE,
  FUNCTION_TYPE,
  EMPTY_STR,
  EMPTY_FN,

  isWindows,
  isMacos,
  isIBMi
} = __webpack_require__(/*! ./lib/constants */ "./node_modules/chokidar/lib/constants.js");

const stat = promisify(fs.stat);
const readdir = promisify(fs.readdir);

/**
 * @typedef {String} Path
 * @typedef {'all'|'add'|'addDir'|'change'|'unlink'|'unlinkDir'|'raw'|'error'|'ready'} EventName
 * @typedef {'readdir'|'watch'|'add'|'remove'|'change'} ThrottleType
 */

/**
 *
 * @typedef {Object} WatchHelpers
 * @property {Boolean} followSymlinks
 * @property {'stat'|'lstat'} statMethod
 * @property {Path} path
 * @property {Path} watchPath
 * @property {Function} entryPath
 * @property {Boolean} hasGlob
 * @property {Object} globFilter
 * @property {Function} filterPath
 * @property {Function} filterDir
 */

const arrify = (value = []) => Array.isArray(value) ? value : [value];
const flatten = (list, result = []) => {
  list.forEach(item => {
    if (Array.isArray(item)) {
      flatten(item, result);
    } else {
      result.push(item);
    }
  });
  return result;
};

const unifyPaths = (paths_) => {
  /**
   * @type {Array<String>}
   */
  const paths = flatten(arrify(paths_));
  if (!paths.every(p => typeof p === STRING_TYPE)) {
    throw new TypeError(`Non-string provided as watch path: ${paths}`);
  }
  return paths.map(normalizePathToUnix);
};

// If SLASH_SLASH occurs at the beginning of path, it is not replaced
//     because "//StoragePC/DrivePool/Movies" is a valid network path
const toUnix = (string) => {
  let str = string.replace(BACK_SLASH_RE, SLASH);
  let prepend = false;
  if (str.startsWith(SLASH_SLASH)) {
    prepend = true;
  }
  while (str.match(DOUBLE_SLASH_RE)) {
    str = str.replace(DOUBLE_SLASH_RE, SLASH);
  }
  if (prepend) {
    str = SLASH + str;
  }
  return str;
};

// Our version of upath.normalize
// TODO: this is not equal to path-normalize module - investigate why
const normalizePathToUnix = (path) => toUnix(sysPath.normalize(toUnix(path)));

const normalizeIgnored = (cwd = EMPTY_STR) => (path) => {
  if (typeof path !== STRING_TYPE) return path;
  return normalizePathToUnix(sysPath.isAbsolute(path) ? path : sysPath.join(cwd, path));
};

const getAbsolutePath = (path, cwd) => {
  if (sysPath.isAbsolute(path)) {
    return path;
  }
  if (path.startsWith(BANG)) {
    return BANG + sysPath.join(cwd, path.slice(1));
  }
  return sysPath.join(cwd, path);
};

const undef = (opts, key) => opts[key] === undefined;

/**
 * Directory entry.
 * @property {Path} path
 * @property {Set<Path>} items
 */
class DirEntry {
  /**
   * @param {Path} dir
   * @param {Function} removeWatcher
   */
  constructor(dir, removeWatcher) {
    this.path = dir;
    this._removeWatcher = removeWatcher;
    /** @type {Set<Path>} */
    this.items = new Set();
  }

  add(item) {
    const {items} = this;
    if (!items) return;
    if (item !== ONE_DOT && item !== TWO_DOTS) items.add(item);
  }

  async remove(item) {
    const {items} = this;
    if (!items) return;
    items.delete(item);
    if (items.size > 0) return;

    const dir = this.path;
    try {
      await readdir(dir);
    } catch (err) {
      if (this._removeWatcher) {
        this._removeWatcher(sysPath.dirname(dir), sysPath.basename(dir));
      }
    }
  }

  has(item) {
    const {items} = this;
    if (!items) return;
    return items.has(item);
  }

  /**
   * @returns {Array<String>}
   */
  getChildren() {
    const {items} = this;
    if (!items) return;
    return [...items.values()];
  }

  dispose() {
    this.items.clear();
    delete this.path;
    delete this._removeWatcher;
    delete this.items;
    Object.freeze(this);
  }
}

const STAT_METHOD_F = 'stat';
const STAT_METHOD_L = 'lstat';
class WatchHelper {
  constructor(path, watchPath, follow, fsw) {
    this.fsw = fsw;
    this.path = path = path.replace(REPLACER_RE, EMPTY_STR);
    this.watchPath = watchPath;
    this.fullWatchPath = sysPath.resolve(watchPath);
    this.hasGlob = watchPath !== path;
    /** @type {object|boolean} */
    if (path === EMPTY_STR) this.hasGlob = false;
    this.globSymlink = this.hasGlob && follow ? undefined : false;
    this.globFilter = this.hasGlob ? anymatch(path, undefined, ANYMATCH_OPTS) : false;
    this.dirParts = this.getDirParts(path);
    this.dirParts.forEach((parts) => {
      if (parts.length > 1) parts.pop();
    });
    this.followSymlinks = follow;
    this.statMethod = follow ? STAT_METHOD_F : STAT_METHOD_L;
  }

  checkGlobSymlink(entry) {
    // only need to resolve once
    // first entry should always have entry.parentDir === EMPTY_STR
    if (this.globSymlink === undefined) {
      this.globSymlink = entry.fullParentDir === this.fullWatchPath ?
        false : {realPath: entry.fullParentDir, linkPath: this.fullWatchPath};
    }

    if (this.globSymlink) {
      return entry.fullPath.replace(this.globSymlink.realPath, this.globSymlink.linkPath);
    }

    return entry.fullPath;
  }

  entryPath(entry) {
    return sysPath.join(this.watchPath,
      sysPath.relative(this.watchPath, this.checkGlobSymlink(entry))
    );
  }

  filterPath(entry) {
    const {stats} = entry;
    if (stats && stats.isSymbolicLink()) return this.filterDir(entry);
    const resolvedPath = this.entryPath(entry);
    const matchesGlob = this.hasGlob && typeof this.globFilter === FUNCTION_TYPE ?
      this.globFilter(resolvedPath) : true;
    return matchesGlob &&
      this.fsw._isntIgnored(resolvedPath, stats) &&
      this.fsw._hasReadPermissions(stats);
  }

  getDirParts(path) {
    if (!this.hasGlob) return [];
    const parts = [];
    const expandedPath = path.includes(BRACE_START) ? braces.expand(path) : [path];
    expandedPath.forEach((path) => {
      parts.push(sysPath.relative(this.watchPath, path).split(SLASH_OR_BACK_SLASH_RE));
    });
    return parts;
  }

  filterDir(entry) {
    if (this.hasGlob) {
      const entryParts = this.getDirParts(this.checkGlobSymlink(entry));
      let globstar = false;
      this.unmatchedGlob = !this.dirParts.some((parts) => {
        return parts.every((part, i) => {
          if (part === GLOBSTAR) globstar = true;
          return globstar || !entryParts[0][i] || anymatch(part, entryParts[0][i], ANYMATCH_OPTS);
        });
      });
    }
    return !this.unmatchedGlob && this.fsw._isntIgnored(this.entryPath(entry), entry.stats);
  }
}

/**
 * Watches files & directories for changes. Emitted events:
 * `add`, `addDir`, `change`, `unlink`, `unlinkDir`, `all`, `error`
 *
 *     new FSWatcher()
 *       .add(directories)
 *       .on('add', path => log('File', path, 'was added'))
 */
class FSWatcher extends EventEmitter {
// Not indenting methods for history sake; for now.
constructor(_opts) {
  super();

  const opts = {};
  if (_opts) Object.assign(opts, _opts); // for frozen objects

  /** @type {Map<String, DirEntry>} */
  this._watched = new Map();
  /** @type {Map<String, Array>} */
  this._closers = new Map();
  /** @type {Set<String>} */
  this._ignoredPaths = new Set();

  /** @type {Map<ThrottleType, Map>} */
  this._throttled = new Map();

  /** @type {Map<Path, String|Boolean>} */
  this._symlinkPaths = new Map();

  this._streams = new Set();
  this.closed = false;

  // Set up default options.
  if (undef(opts, 'persistent')) opts.persistent = true;
  if (undef(opts, 'ignoreInitial')) opts.ignoreInitial = false;
  if (undef(opts, 'ignorePermissionErrors')) opts.ignorePermissionErrors = false;
  if (undef(opts, 'interval')) opts.interval = 100;
  if (undef(opts, 'binaryInterval')) opts.binaryInterval = 300;
  if (undef(opts, 'disableGlobbing')) opts.disableGlobbing = false;
  opts.enableBinaryInterval = opts.binaryInterval !== opts.interval;

  // Enable fsevents on OS X when polling isn't explicitly enabled.
  if (undef(opts, 'useFsEvents')) opts.useFsEvents = !opts.usePolling;

  // If we can't use fsevents, ensure the options reflect it's disabled.
  const canUseFsEvents = FsEventsHandler.canUse();
  if (!canUseFsEvents) opts.useFsEvents = false;

  // Use polling on Mac if not using fsevents.
  // Other platforms use non-polling fs_watch.
  if (undef(opts, 'usePolling') && !opts.useFsEvents) {
    opts.usePolling = isMacos;
  }

  // Always default to polling on IBM i because fs.watch() is not available on IBM i.
  if(isIBMi) {
    opts.usePolling = true;
  }

  // Global override (useful for end-developers that need to force polling for all
  // instances of chokidar, regardless of usage/dependency depth)
  const envPoll = process.env.CHOKIDAR_USEPOLLING;
  if (envPoll !== undefined) {
    const envLower = envPoll.toLowerCase();

    if (envLower === 'false' || envLower === '0') {
      opts.usePolling = false;
    } else if (envLower === 'true' || envLower === '1') {
      opts.usePolling = true;
    } else {
      opts.usePolling = !!envLower;
    }
  }
  const envInterval = process.env.CHOKIDAR_INTERVAL;
  if (envInterval) {
    opts.interval = Number.parseInt(envInterval, 10);
  }

  // Editor atomic write normalization enabled by default with fs.watch
  if (undef(opts, 'atomic')) opts.atomic = !opts.usePolling && !opts.useFsEvents;
  if (opts.atomic) this._pendingUnlinks = new Map();

  if (undef(opts, 'followSymlinks')) opts.followSymlinks = true;

  if (undef(opts, 'awaitWriteFinish')) opts.awaitWriteFinish = false;
  if (opts.awaitWriteFinish === true) opts.awaitWriteFinish = {};
  const awf = opts.awaitWriteFinish;
  if (awf) {
    if (!awf.stabilityThreshold) awf.stabilityThreshold = 2000;
    if (!awf.pollInterval) awf.pollInterval = 100;
    this._pendingWrites = new Map();
  }
  if (opts.ignored) opts.ignored = arrify(opts.ignored);

  let readyCalls = 0;
  this._emitReady = () => {
    readyCalls++;
    if (readyCalls >= this._readyCount) {
      this._emitReady = EMPTY_FN;
      this._readyEmitted = true;
      // use process.nextTick to allow time for listener to be bound
      process.nextTick(() => this.emit(EV_READY));
    }
  };
  this._emitRaw = (...args) => this.emit(EV_RAW, ...args);
  this._readyEmitted = false;
  this.options = opts;

  // Initialize with proper watcher.
  if (opts.useFsEvents) {
    this._fsEventsHandler = new FsEventsHandler(this);
  } else {
    this._nodeFsHandler = new NodeFsHandler(this);
  }

  // You’re frozen when your heart’s not open.
  Object.freeze(opts);
}

// Public methods

/**
 * Adds paths to be watched on an existing FSWatcher instance
 * @param {Path|Array<Path>} paths_
 * @param {String=} _origAdd private; for handling non-existent paths to be watched
 * @param {Boolean=} _internal private; indicates a non-user add
 * @returns {FSWatcher} for chaining
 */
add(paths_, _origAdd, _internal) {
  const {cwd, disableGlobbing} = this.options;
  this.closed = false;
  let paths = unifyPaths(paths_);
  if (cwd) {
    paths = paths.map((path) => {
      const absPath = getAbsolutePath(path, cwd);

      // Check `path` instead of `absPath` because the cwd portion can't be a glob
      if (disableGlobbing || !isGlob(path)) {
        return absPath;
      }
      return normalizePath(absPath);
    });
  }

  // set aside negated glob strings
  paths = paths.filter((path) => {
    if (path.startsWith(BANG)) {
      this._ignoredPaths.add(path.slice(1));
      return false;
    }

    // if a path is being added that was previously ignored, stop ignoring it
    this._ignoredPaths.delete(path);
    this._ignoredPaths.delete(path + SLASH_GLOBSTAR);

    // reset the cached userIgnored anymatch fn
    // to make ignoredPaths changes effective
    this._userIgnored = undefined;

    return true;
  });

  if (this.options.useFsEvents && this._fsEventsHandler) {
    if (!this._readyCount) this._readyCount = paths.length;
    if (this.options.persistent) this._readyCount += paths.length;
    paths.forEach((path) => this._fsEventsHandler._addToFsEvents(path));
  } else {
    if (!this._readyCount) this._readyCount = 0;
    this._readyCount += paths.length;
    Promise.all(
      paths.map(async path => {
        const res = await this._nodeFsHandler._addToNodeFs(path, !_internal, 0, 0, _origAdd);
        if (res) this._emitReady();
        return res;
      })
    ).then(results => {
      if (this.closed) return;
      results.filter(item => item).forEach(item => {
        this.add(sysPath.dirname(item), sysPath.basename(_origAdd || item));
      });
    });
  }

  return this;
}

/**
 * Close watchers or start ignoring events from specified paths.
 * @param {Path|Array<Path>} paths_ - string or array of strings, file/directory paths and/or globs
 * @returns {FSWatcher} for chaining
*/
unwatch(paths_) {
  if (this.closed) return this;
  const paths = unifyPaths(paths_);
  const {cwd} = this.options;

  paths.forEach((path) => {
    // convert to absolute path unless relative path already matches
    if (!sysPath.isAbsolute(path) && !this._closers.has(path)) {
      if (cwd) path = sysPath.join(cwd, path);
      path = sysPath.resolve(path);
    }

    this._closePath(path);

    this._ignoredPaths.add(path);
    if (this._watched.has(path)) {
      this._ignoredPaths.add(path + SLASH_GLOBSTAR);
    }

    // reset the cached userIgnored anymatch fn
    // to make ignoredPaths changes effective
    this._userIgnored = undefined;
  });

  return this;
}

/**
 * Close watchers and remove all listeners from watched paths.
 * @returns {Promise<void>}.
*/
close() {
  if (this.closed) return this._closePromise;
  this.closed = true;

  // Memory management.
  this.removeAllListeners();
  const closers = [];
  this._closers.forEach(closerList => closerList.forEach(closer => {
    const promise = closer();
    if (promise instanceof Promise) closers.push(promise);
  }));
  this._streams.forEach(stream => stream.destroy());
  this._userIgnored = undefined;
  this._readyCount = 0;
  this._readyEmitted = false;
  this._watched.forEach(dirent => dirent.dispose());
  ['closers', 'watched', 'streams', 'symlinkPaths', 'throttled'].forEach(key => {
    this[`_${key}`].clear();
  });

  this._closePromise = closers.length ? Promise.all(closers).then(() => undefined) : Promise.resolve();
  return this._closePromise;
}

/**
 * Expose list of watched paths
 * @returns {Object} for chaining
*/
getWatched() {
  const watchList = {};
  this._watched.forEach((entry, dir) => {
    const key = this.options.cwd ? sysPath.relative(this.options.cwd, dir) : dir;
    watchList[key || ONE_DOT] = entry.getChildren().sort();
  });
  return watchList;
}

emitWithAll(event, args) {
  this.emit(...args);
  if (event !== EV_ERROR) this.emit(EV_ALL, ...args);
}

// Common helpers
// --------------

/**
 * Normalize and emit events.
 * Calling _emit DOES NOT MEAN emit() would be called!
 * @param {EventName} event Type of event
 * @param {Path} path File or directory path
 * @param {*=} val1 arguments to be passed with event
 * @param {*=} val2
 * @param {*=} val3
 * @returns the error if defined, otherwise the value of the FSWatcher instance's `closed` flag
 */
async _emit(event, path, val1, val2, val3) {
  if (this.closed) return;

  const opts = this.options;
  if (isWindows) path = sysPath.normalize(path);
  if (opts.cwd) path = sysPath.relative(opts.cwd, path);
  /** @type Array<any> */
  const args = [event, path];
  if (val3 !== undefined) args.push(val1, val2, val3);
  else if (val2 !== undefined) args.push(val1, val2);
  else if (val1 !== undefined) args.push(val1);

  const awf = opts.awaitWriteFinish;
  let pw;
  if (awf && (pw = this._pendingWrites.get(path))) {
    pw.lastChange = new Date();
    return this;
  }

  if (opts.atomic) {
    if (event === EV_UNLINK) {
      this._pendingUnlinks.set(path, args);
      setTimeout(() => {
        this._pendingUnlinks.forEach((entry, path) => {
          this.emit(...entry);
          this.emit(EV_ALL, ...entry);
          this._pendingUnlinks.delete(path);
        });
      }, typeof opts.atomic === 'number' ? opts.atomic : 100);
      return this;
    }
    if (event === EV_ADD && this._pendingUnlinks.has(path)) {
      event = args[0] = EV_CHANGE;
      this._pendingUnlinks.delete(path);
    }
  }

  if (awf && (event === EV_ADD || event === EV_CHANGE) && this._readyEmitted) {
    const awfEmit = (err, stats) => {
      if (err) {
        event = args[0] = EV_ERROR;
        args[1] = err;
        this.emitWithAll(event, args);
      } else if (stats) {
        // if stats doesn't exist the file must have been deleted
        if (args.length > 2) {
          args[2] = stats;
        } else {
          args.push(stats);
        }
        this.emitWithAll(event, args);
      }
    };

    this._awaitWriteFinish(path, awf.stabilityThreshold, event, awfEmit);
    return this;
  }

  if (event === EV_CHANGE) {
    const isThrottled = !this._throttle(EV_CHANGE, path, 50);
    if (isThrottled) return this;
  }

  if (opts.alwaysStat && val1 === undefined &&
    (event === EV_ADD || event === EV_ADD_DIR || event === EV_CHANGE)
  ) {
    const fullPath = opts.cwd ? sysPath.join(opts.cwd, path) : path;
    let stats;
    try {
      stats = await stat(fullPath);
    } catch (err) {}
    // Suppress event when fs_stat fails, to avoid sending undefined 'stat'
    if (!stats || this.closed) return;
    args.push(stats);
  }
  this.emitWithAll(event, args);

  return this;
}

/**
 * Common handler for errors
 * @param {Error} error
 * @returns {Error|Boolean} The error if defined, otherwise the value of the FSWatcher instance's `closed` flag
 */
_handleError(error) {
  const code = error && error.code;
  if (error && code !== 'ENOENT' && code !== 'ENOTDIR' &&
    (!this.options.ignorePermissionErrors || (code !== 'EPERM' && code !== 'EACCES'))
  ) {
    this.emit(EV_ERROR, error);
  }
  return error || this.closed;
}

/**
 * Helper utility for throttling
 * @param {ThrottleType} actionType type being throttled
 * @param {Path} path being acted upon
 * @param {Number} timeout duration of time to suppress duplicate actions
 * @returns {Object|false} tracking object or false if action should be suppressed
 */
_throttle(actionType, path, timeout) {
  if (!this._throttled.has(actionType)) {
    this._throttled.set(actionType, new Map());
  }

  /** @type {Map<Path, Object>} */
  const action = this._throttled.get(actionType);
  /** @type {Object} */
  const actionPath = action.get(path);

  if (actionPath) {
    actionPath.count++;
    return false;
  }

  let timeoutObject;
  const clear = () => {
    const item = action.get(path);
    const count = item ? item.count : 0;
    action.delete(path);
    clearTimeout(timeoutObject);
    if (item) clearTimeout(item.timeoutObject);
    return count;
  };
  timeoutObject = setTimeout(clear, timeout);
  const thr = {timeoutObject, clear, count: 0};
  action.set(path, thr);
  return thr;
}

_incrReadyCount() {
  return this._readyCount++;
}

/**
 * Awaits write operation to finish.
 * Polls a newly created file for size variations. When files size does not change for 'threshold' milliseconds calls callback.
 * @param {Path} path being acted upon
 * @param {Number} threshold Time in milliseconds a file size must be fixed before acknowledging write OP is finished
 * @param {EventName} event
 * @param {Function} awfEmit Callback to be called when ready for event to be emitted.
 */
_awaitWriteFinish(path, threshold, event, awfEmit) {
  let timeoutHandler;

  let fullPath = path;
  if (this.options.cwd && !sysPath.isAbsolute(path)) {
    fullPath = sysPath.join(this.options.cwd, path);
  }

  const now = new Date();

  const awaitWriteFinish = (prevStat) => {
    fs.stat(fullPath, (err, curStat) => {
      if (err || !this._pendingWrites.has(path)) {
        if (err && err.code !== 'ENOENT') awfEmit(err);
        return;
      }

      const now = Number(new Date());

      if (prevStat && curStat.size !== prevStat.size) {
        this._pendingWrites.get(path).lastChange = now;
      }
      const pw = this._pendingWrites.get(path);
      const df = now - pw.lastChange;

      if (df >= threshold) {
        this._pendingWrites.delete(path);
        awfEmit(undefined, curStat);
      } else {
        timeoutHandler = setTimeout(
          awaitWriteFinish,
          this.options.awaitWriteFinish.pollInterval,
          curStat
        );
      }
    });
  };

  if (!this._pendingWrites.has(path)) {
    this._pendingWrites.set(path, {
      lastChange: now,
      cancelWait: () => {
        this._pendingWrites.delete(path);
        clearTimeout(timeoutHandler);
        return event;
      }
    });
    timeoutHandler = setTimeout(
      awaitWriteFinish,
      this.options.awaitWriteFinish.pollInterval
    );
  }
}

_getGlobIgnored() {
  return [...this._ignoredPaths.values()];
}

/**
 * Determines whether user has asked to ignore this path.
 * @param {Path} path filepath or dir
 * @param {fs.Stats=} stats result of fs.stat
 * @returns {Boolean}
 */
_isIgnored(path, stats) {
  if (this.options.atomic && DOT_RE.test(path)) return true;
  if (!this._userIgnored) {
    const {cwd} = this.options;
    const ign = this.options.ignored;

    const ignored = ign && ign.map(normalizeIgnored(cwd));
    const paths = arrify(ignored)
      .filter((path) => typeof path === STRING_TYPE && !isGlob(path))
      .map((path) => path + SLASH_GLOBSTAR);
    const list = this._getGlobIgnored().map(normalizeIgnored(cwd)).concat(ignored, paths);
    this._userIgnored = anymatch(list, undefined, ANYMATCH_OPTS);
  }

  return this._userIgnored([path, stats]);
}

_isntIgnored(path, stat) {
  return !this._isIgnored(path, stat);
}

/**
 * Provides a set of common helpers and properties relating to symlink and glob handling.
 * @param {Path} path file, directory, or glob pattern being watched
 * @param {Number=} depth at any depth > 0, this isn't a glob
 * @returns {WatchHelper} object containing helpers for this path
 */
_getWatchHelpers(path, depth) {
  const watchPath = depth || this.options.disableGlobbing || !isGlob(path) ? path : globParent(path);
  const follow = this.options.followSymlinks;

  return new WatchHelper(path, watchPath, follow, this);
}

// Directory helpers
// -----------------

/**
 * Provides directory tracking objects
 * @param {String} directory path of the directory
 * @returns {DirEntry} the directory's tracking object
 */
_getWatchedDir(directory) {
  if (!this._boundRemove) this._boundRemove = this._remove.bind(this);
  const dir = sysPath.resolve(directory);
  if (!this._watched.has(dir)) this._watched.set(dir, new DirEntry(dir, this._boundRemove));
  return this._watched.get(dir);
}

// File helpers
// ------------

/**
 * Check for read permissions.
 * Based on this answer on SO: https://stackoverflow.com/a/11781404/1358405
 * @param {fs.Stats} stats - object, result of fs_stat
 * @returns {Boolean} indicates whether the file can be read
*/
_hasReadPermissions(stats) {
  if (this.options.ignorePermissionErrors) return true;

  // stats.mode may be bigint
  const md = stats && Number.parseInt(stats.mode, 10);
  const st = md & 0o777;
  const it = Number.parseInt(st.toString(8)[0], 10);
  return Boolean(4 & it);
}

/**
 * Handles emitting unlink events for
 * files and directories, and via recursion, for
 * files and directories within directories that are unlinked
 * @param {String} directory within which the following item is located
 * @param {String} item      base path of item/directory
 * @returns {void}
*/
_remove(directory, item, isDirectory) {
  // if what is being deleted is a directory, get that directory's paths
  // for recursive deleting and cleaning of watched object
  // if it is not a directory, nestedDirectoryChildren will be empty array
  const path = sysPath.join(directory, item);
  const fullPath = sysPath.resolve(path);
  isDirectory = isDirectory != null
    ? isDirectory
    : this._watched.has(path) || this._watched.has(fullPath);

  // prevent duplicate handling in case of arriving here nearly simultaneously
  // via multiple paths (such as _handleFile and _handleDir)
  if (!this._throttle('remove', path, 100)) return;

  // if the only watched file is removed, watch for its return
  if (!isDirectory && !this.options.useFsEvents && this._watched.size === 1) {
    this.add(directory, item, true);
  }

  // This will create a new entry in the watched object in either case
  // so we got to do the directory check beforehand
  const wp = this._getWatchedDir(path);
  const nestedDirectoryChildren = wp.getChildren();

  // Recursively remove children directories / files.
  nestedDirectoryChildren.forEach(nested => this._remove(path, nested));

  // Check if item was on the watched list and remove it
  const parent = this._getWatchedDir(directory);
  const wasTracked = parent.has(item);
  parent.remove(item);

  // Fixes issue #1042 -> Relative paths were detected and added as symlinks
  // (https://github.com/paulmillr/chokidar/blob/e1753ddbc9571bdc33b4a4af172d52cb6e611c10/lib/nodefs-handler.js#L612),
  // but never removed from the map in case the path was deleted.
  // This leads to an incorrect state if the path was recreated:
  // https://github.com/paulmillr/chokidar/blob/e1753ddbc9571bdc33b4a4af172d52cb6e611c10/lib/nodefs-handler.js#L553
  if (this._symlinkPaths.has(fullPath)) {
    this._symlinkPaths.delete(fullPath);
  }

  // If we wait for this file to be fully written, cancel the wait.
  let relPath = path;
  if (this.options.cwd) relPath = sysPath.relative(this.options.cwd, path);
  if (this.options.awaitWriteFinish && this._pendingWrites.has(relPath)) {
    const event = this._pendingWrites.get(relPath).cancelWait();
    if (event === EV_ADD) return;
  }

  // The Entry will either be a directory that just got removed
  // or a bogus entry to a file, in either case we have to remove it
  this._watched.delete(path);
  this._watched.delete(fullPath);
  const eventName = isDirectory ? EV_UNLINK_DIR : EV_UNLINK;
  if (wasTracked && !this._isIgnored(path)) this._emit(eventName, path);

  // Avoid conflicts if we later create another file with the same name
  if (!this.options.useFsEvents) {
    this._closePath(path);
  }
}

/**
 * Closes all watchers for a path
 * @param {Path} path
 */
_closePath(path) {
  this._closeFile(path)
  const dir = sysPath.dirname(path);
  this._getWatchedDir(dir).remove(sysPath.basename(path));
}

/**
 * Closes only file-specific watchers
 * @param {Path} path
 */
_closeFile(path) {
  const closers = this._closers.get(path);
  if (!closers) return;
  closers.forEach(closer => closer());
  this._closers.delete(path);
}

/**
 *
 * @param {Path} path
 * @param {Function} closer
 */
_addPathCloser(path, closer) {
  if (!closer) return;
  let list = this._closers.get(path);
  if (!list) {
    list = [];
    this._closers.set(path, list);
  }
  list.push(closer);
}

_readdirp(root, opts) {
  if (this.closed) return;
  const options = {type: EV_ALL, alwaysStat: true, lstat: true, ...opts};
  let stream = readdirp(root, options);
  this._streams.add(stream);
  stream.once(STR_CLOSE, () => {
    stream = undefined;
  });
  stream.once(STR_END, () => {
    if (stream) {
      this._streams.delete(stream);
      stream = undefined;
    }
  });
  return stream;
}

}

// Export FSWatcher class
exports.FSWatcher = FSWatcher;

/**
 * Instantiates watcher with paths to be tracked.
 * @param {String|Array<String>} paths file/directory paths and/or globs
 * @param {Object=} options chokidar opts
 * @returns an instance of FSWatcher for chaining.
 */
const watch = (paths, options) => {
  const watcher = new FSWatcher(options);
  watcher.add(paths);
  return watcher;
};

exports.watch = watch;


/***/ }),

/***/ "./node_modules/chokidar/lib/constants.js":
/*!************************************************!*\
  !*** ./node_modules/chokidar/lib/constants.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const {sep} = __webpack_require__(/*! path */ "path");
const {platform} = process;
const os = __webpack_require__(/*! os */ "os");

exports.EV_ALL = 'all';
exports.EV_READY = 'ready';
exports.EV_ADD = 'add';
exports.EV_CHANGE = 'change';
exports.EV_ADD_DIR = 'addDir';
exports.EV_UNLINK = 'unlink';
exports.EV_UNLINK_DIR = 'unlinkDir';
exports.EV_RAW = 'raw';
exports.EV_ERROR = 'error';

exports.STR_DATA = 'data';
exports.STR_END = 'end';
exports.STR_CLOSE = 'close';

exports.FSEVENT_CREATED = 'created';
exports.FSEVENT_MODIFIED = 'modified';
exports.FSEVENT_DELETED = 'deleted';
exports.FSEVENT_MOVED = 'moved';
exports.FSEVENT_CLONED = 'cloned';
exports.FSEVENT_UNKNOWN = 'unknown';
exports.FSEVENT_FLAG_MUST_SCAN_SUBDIRS = 1;
exports.FSEVENT_TYPE_FILE = 'file';
exports.FSEVENT_TYPE_DIRECTORY = 'directory';
exports.FSEVENT_TYPE_SYMLINK = 'symlink';

exports.KEY_LISTENERS = 'listeners';
exports.KEY_ERR = 'errHandlers';
exports.KEY_RAW = 'rawEmitters';
exports.HANDLER_KEYS = [exports.KEY_LISTENERS, exports.KEY_ERR, exports.KEY_RAW];

exports.DOT_SLASH = `.${sep}`;

exports.BACK_SLASH_RE = /\\/g;
exports.DOUBLE_SLASH_RE = /\/\//;
exports.SLASH_OR_BACK_SLASH_RE = /[/\\]/;
exports.DOT_RE = /\..*\.(sw[px])$|~$|\.subl.*\.tmp/;
exports.REPLACER_RE = /^\.[/\\]/;

exports.SLASH = '/';
exports.SLASH_SLASH = '//';
exports.BRACE_START = '{';
exports.BANG = '!';
exports.ONE_DOT = '.';
exports.TWO_DOTS = '..';
exports.STAR = '*';
exports.GLOBSTAR = '**';
exports.ROOT_GLOBSTAR = '/**/*';
exports.SLASH_GLOBSTAR = '/**';
exports.DIR_SUFFIX = 'Dir';
exports.ANYMATCH_OPTS = {dot: true};
exports.STRING_TYPE = 'string';
exports.FUNCTION_TYPE = 'function';
exports.EMPTY_STR = '';
exports.EMPTY_FN = () => {};
exports.IDENTITY_FN = val => val;

exports.isWindows = platform === 'win32';
exports.isMacos = platform === 'darwin';
exports.isLinux = platform === 'linux';
exports.isIBMi = os.type() === 'OS400';


/***/ }),

/***/ "./node_modules/chokidar/lib/fsevents-handler.js":
/*!*******************************************************!*\
  !*** ./node_modules/chokidar/lib/fsevents-handler.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const fs = __webpack_require__(/*! fs */ "fs");
const sysPath = __webpack_require__(/*! path */ "path");
const { promisify } = __webpack_require__(/*! util */ "util");

let fsevents;
try {
  fsevents = __webpack_require__(Object(function webpackMissingModule() { var e = new Error("Cannot find module 'fsevents'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
} catch (error) {
  if (process.env.CHOKIDAR_PRINT_FSEVENTS_REQUIRE_ERROR) console.error(error);
}

if (fsevents) {
  // TODO: real check
  const mtch = process.version.match(/v(\d+)\.(\d+)/);
  if (mtch && mtch[1] && mtch[2]) {
    const maj = Number.parseInt(mtch[1], 10);
    const min = Number.parseInt(mtch[2], 10);
    if (maj === 8 && min < 16) {
      fsevents = undefined;
    }
  }
}

const {
  EV_ADD,
  EV_CHANGE,
  EV_ADD_DIR,
  EV_UNLINK,
  EV_ERROR,
  STR_DATA,
  STR_END,
  FSEVENT_CREATED,
  FSEVENT_MODIFIED,
  FSEVENT_DELETED,
  FSEVENT_MOVED,
  // FSEVENT_CLONED,
  FSEVENT_UNKNOWN,
  FSEVENT_FLAG_MUST_SCAN_SUBDIRS,
  FSEVENT_TYPE_FILE,
  FSEVENT_TYPE_DIRECTORY,
  FSEVENT_TYPE_SYMLINK,

  ROOT_GLOBSTAR,
  DIR_SUFFIX,
  DOT_SLASH,
  FUNCTION_TYPE,
  EMPTY_FN,
  IDENTITY_FN
} = __webpack_require__(/*! ./constants */ "./node_modules/chokidar/lib/constants.js");

const Depth = (value) => isNaN(value) ? {} : {depth: value};

const stat = promisify(fs.stat);
const lstat = promisify(fs.lstat);
const realpath = promisify(fs.realpath);

const statMethods = { stat, lstat };

/**
 * @typedef {String} Path
 */

/**
 * @typedef {Object} FsEventsWatchContainer
 * @property {Set<Function>} listeners
 * @property {Function} rawEmitter
 * @property {{stop: Function}} watcher
 */

// fsevents instance helper functions
/**
 * Object to hold per-process fsevents instances (may be shared across chokidar FSWatcher instances)
 * @type {Map<Path,FsEventsWatchContainer>}
 */
const FSEventsWatchers = new Map();

// Threshold of duplicate path prefixes at which to start
// consolidating going forward
const consolidateThreshhold = 10;

const wrongEventFlags = new Set([
  69888, 70400, 71424, 72704, 73472, 131328, 131840, 262912
]);

/**
 * Instantiates the fsevents interface
 * @param {Path} path path to be watched
 * @param {Function} callback called when fsevents is bound and ready
 * @returns {{stop: Function}} new fsevents instance
 */
const createFSEventsInstance = (path, callback) => {
  const stop = fsevents.watch(path, callback);
  return {stop};
};

/**
 * Instantiates the fsevents interface or binds listeners to an existing one covering
 * the same file tree.
 * @param {Path} path           - to be watched
 * @param {Path} realPath       - real path for symlinks
 * @param {Function} listener   - called when fsevents emits events
 * @param {Function} rawEmitter - passes data to listeners of the 'raw' event
 * @returns {Function} closer
 */
function setFSEventsListener(path, realPath, listener, rawEmitter) {
  let watchPath = sysPath.extname(realPath) ? sysPath.dirname(realPath) : realPath;

  const parentPath = sysPath.dirname(watchPath);
  let cont = FSEventsWatchers.get(watchPath);

  // If we've accumulated a substantial number of paths that
  // could have been consolidated by watching one directory
  // above the current one, create a watcher on the parent
  // path instead, so that we do consolidate going forward.
  if (couldConsolidate(parentPath)) {
    watchPath = parentPath;
  }

  const resolvedPath = sysPath.resolve(path);
  const hasSymlink = resolvedPath !== realPath;

  const filteredListener = (fullPath, flags, info) => {
    if (hasSymlink) fullPath = fullPath.replace(realPath, resolvedPath);
    if (
      fullPath === resolvedPath ||
      !fullPath.indexOf(resolvedPath + sysPath.sep)
    ) listener(fullPath, flags, info);
  };

  // check if there is already a watcher on a parent path
  // modifies `watchPath` to the parent path when it finds a match
  let watchedParent = false;
  for (const watchedPath of FSEventsWatchers.keys()) {
    if (realPath.indexOf(sysPath.resolve(watchedPath) + sysPath.sep) === 0) {
      watchPath = watchedPath;
      cont = FSEventsWatchers.get(watchPath);
      watchedParent = true;
      break;
    }
  }

  if (cont || watchedParent) {
    cont.listeners.add(filteredListener);
  } else {
    cont = {
      listeners: new Set([filteredListener]),
      rawEmitter,
      watcher: createFSEventsInstance(watchPath, (fullPath, flags) => {
        if (!cont.listeners.size) return;
        if (flags & FSEVENT_FLAG_MUST_SCAN_SUBDIRS) return;
        const info = fsevents.getInfo(fullPath, flags);
        cont.listeners.forEach(list => {
          list(fullPath, flags, info);
        });

        cont.rawEmitter(info.event, fullPath, info);
      })
    };
    FSEventsWatchers.set(watchPath, cont);
  }

  // removes this instance's listeners and closes the underlying fsevents
  // instance if there are no more listeners left
  return () => {
    const lst = cont.listeners;

    lst.delete(filteredListener);
    if (!lst.size) {
      FSEventsWatchers.delete(watchPath);
      if (cont.watcher) return cont.watcher.stop().then(() => {
        cont.rawEmitter = cont.watcher = undefined;
        Object.freeze(cont);
      });
    }
  };
}

// Decide whether or not we should start a new higher-level
// parent watcher
const couldConsolidate = (path) => {
  let count = 0;
  for (const watchPath of FSEventsWatchers.keys()) {
    if (watchPath.indexOf(path) === 0) {
      count++;
      if (count >= consolidateThreshhold) {
        return true;
      }
    }
  }

  return false;
};

// returns boolean indicating whether fsevents can be used
const canUse = () => fsevents && FSEventsWatchers.size < 128;

// determines subdirectory traversal levels from root to path
const calcDepth = (path, root) => {
  let i = 0;
  while (!path.indexOf(root) && (path = sysPath.dirname(path)) !== root) i++;
  return i;
};

// returns boolean indicating whether the fsevents' event info has the same type
// as the one returned by fs.stat
const sameTypes = (info, stats) => (
  info.type === FSEVENT_TYPE_DIRECTORY && stats.isDirectory() ||
  info.type === FSEVENT_TYPE_SYMLINK && stats.isSymbolicLink() ||
  info.type === FSEVENT_TYPE_FILE && stats.isFile()
)

/**
 * @mixin
 */
class FsEventsHandler {

/**
 * @param {import('../index').FSWatcher} fsw
 */
constructor(fsw) {
  this.fsw = fsw;
}
checkIgnored(path, stats) {
  const ipaths = this.fsw._ignoredPaths;
  if (this.fsw._isIgnored(path, stats)) {
    ipaths.add(path);
    if (stats && stats.isDirectory()) {
      ipaths.add(path + ROOT_GLOBSTAR);
    }
    return true;
  }

  ipaths.delete(path);
  ipaths.delete(path + ROOT_GLOBSTAR);
}

addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts) {
  const event = watchedDir.has(item) ? EV_CHANGE : EV_ADD;
  this.handleEvent(event, path, fullPath, realPath, parent, watchedDir, item, info, opts);
}

async checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts) {
  try {
    const stats = await stat(path)
    if (this.fsw.closed) return;
    if (sameTypes(info, stats)) {
      this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);
    } else {
      this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);
    }
  } catch (error) {
    if (error.code === 'EACCES') {
      this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);
    } else {
      this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);
    }
  }
}

handleEvent(event, path, fullPath, realPath, parent, watchedDir, item, info, opts) {
  if (this.fsw.closed || this.checkIgnored(path)) return;

  if (event === EV_UNLINK) {
    const isDirectory = info.type === FSEVENT_TYPE_DIRECTORY
    // suppress unlink events on never before seen files
    if (isDirectory || watchedDir.has(item)) {
      this.fsw._remove(parent, item, isDirectory);
    }
  } else {
    if (event === EV_ADD) {
      // track new directories
      if (info.type === FSEVENT_TYPE_DIRECTORY) this.fsw._getWatchedDir(path);

      if (info.type === FSEVENT_TYPE_SYMLINK && opts.followSymlinks) {
        // push symlinks back to the top of the stack to get handled
        const curDepth = opts.depth === undefined ?
          undefined : calcDepth(fullPath, realPath) + 1;
        return this._addToFsEvents(path, false, true, curDepth);
      }

      // track new paths
      // (other than symlinks being followed, which will be tracked soon)
      this.fsw._getWatchedDir(parent).add(item);
    }
    /**
     * @type {'add'|'addDir'|'unlink'|'unlinkDir'}
     */
    const eventName = info.type === FSEVENT_TYPE_DIRECTORY ? event + DIR_SUFFIX : event;
    this.fsw._emit(eventName, path);
    if (eventName === EV_ADD_DIR) this._addToFsEvents(path, false, true);
  }
}

/**
 * Handle symlinks encountered during directory scan
 * @param {String} watchPath  - file/dir path to be watched with fsevents
 * @param {String} realPath   - real path (in case of symlinks)
 * @param {Function} transform  - path transformer
 * @param {Function} globFilter - path filter in case a glob pattern was provided
 * @returns {Function} closer for the watcher instance
*/
_watchWithFsEvents(watchPath, realPath, transform, globFilter) {
  if (this.fsw.closed || this.fsw._isIgnored(watchPath)) return;
  const opts = this.fsw.options;
  const watchCallback = async (fullPath, flags, info) => {
    if (this.fsw.closed) return;
    if (
      opts.depth !== undefined &&
      calcDepth(fullPath, realPath) > opts.depth
    ) return;
    const path = transform(sysPath.join(
      watchPath, sysPath.relative(watchPath, fullPath)
    ));
    if (globFilter && !globFilter(path)) return;
    // ensure directories are tracked
    const parent = sysPath.dirname(path);
    const item = sysPath.basename(path);
    const watchedDir = this.fsw._getWatchedDir(
      info.type === FSEVENT_TYPE_DIRECTORY ? path : parent
    );

    // correct for wrong events emitted
    if (wrongEventFlags.has(flags) || info.event === FSEVENT_UNKNOWN) {
      if (typeof opts.ignored === FUNCTION_TYPE) {
        let stats;
        try {
          stats = await stat(path);
        } catch (error) {}
        if (this.fsw.closed) return;
        if (this.checkIgnored(path, stats)) return;
        if (sameTypes(info, stats)) {
          this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);
        } else {
          this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);
        }
      } else {
        this.checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts);
      }
    } else {
      switch (info.event) {
      case FSEVENT_CREATED:
      case FSEVENT_MODIFIED:
        return this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);
      case FSEVENT_DELETED:
      case FSEVENT_MOVED:
        return this.checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts);
      }
    }
  };

  const closer = setFSEventsListener(
    watchPath,
    realPath,
    watchCallback,
    this.fsw._emitRaw
  );

  this.fsw._emitReady();
  return closer;
}

/**
 * Handle symlinks encountered during directory scan
 * @param {String} linkPath path to symlink
 * @param {String} fullPath absolute path to the symlink
 * @param {Function} transform pre-existing path transformer
 * @param {Number} curDepth level of subdirectories traversed to where symlink is
 * @returns {Promise<void>}
 */
async _handleFsEventsSymlink(linkPath, fullPath, transform, curDepth) {
  // don't follow the same symlink more than once
  if (this.fsw.closed || this.fsw._symlinkPaths.has(fullPath)) return;

  this.fsw._symlinkPaths.set(fullPath, true);
  this.fsw._incrReadyCount();

  try {
    const linkTarget = await realpath(linkPath);
    if (this.fsw.closed) return;
    if (this.fsw._isIgnored(linkTarget)) {
      return this.fsw._emitReady();
    }

    this.fsw._incrReadyCount();

    // add the linkTarget for watching with a wrapper for transform
    // that causes emitted paths to incorporate the link's path
    this._addToFsEvents(linkTarget || linkPath, (path) => {
      let aliasedPath = linkPath;
      if (linkTarget && linkTarget !== DOT_SLASH) {
        aliasedPath = path.replace(linkTarget, linkPath);
      } else if (path !== DOT_SLASH) {
        aliasedPath = sysPath.join(linkPath, path);
      }
      return transform(aliasedPath);
    }, false, curDepth);
  } catch(error) {
    if (this.fsw._handleError(error)) {
      return this.fsw._emitReady();
    }
  }
}

/**
 *
 * @param {Path} newPath
 * @param {fs.Stats} stats
 */
emitAdd(newPath, stats, processPath, opts, forceAdd) {
  const pp = processPath(newPath);
  const isDir = stats.isDirectory();
  const dirObj = this.fsw._getWatchedDir(sysPath.dirname(pp));
  const base = sysPath.basename(pp);

  // ensure empty dirs get tracked
  if (isDir) this.fsw._getWatchedDir(pp);
  if (dirObj.has(base)) return;
  dirObj.add(base);

  if (!opts.ignoreInitial || forceAdd === true) {
    this.fsw._emit(isDir ? EV_ADD_DIR : EV_ADD, pp, stats);
  }
}

initWatch(realPath, path, wh, processPath) {
  if (this.fsw.closed) return;
  const closer = this._watchWithFsEvents(
    wh.watchPath,
    sysPath.resolve(realPath || wh.watchPath),
    processPath,
    wh.globFilter
  );
  this.fsw._addPathCloser(path, closer);
}

/**
 * Handle added path with fsevents
 * @param {String} path file/dir path or glob pattern
 * @param {Function|Boolean=} transform converts working path to what the user expects
 * @param {Boolean=} forceAdd ensure add is emitted
 * @param {Number=} priorDepth Level of subdirectories already traversed.
 * @returns {Promise<void>}
 */
async _addToFsEvents(path, transform, forceAdd, priorDepth) {
  if (this.fsw.closed) {
    return;
  }
  const opts = this.fsw.options;
  const processPath = typeof transform === FUNCTION_TYPE ? transform : IDENTITY_FN;

  const wh = this.fsw._getWatchHelpers(path);

  // evaluate what is at the path we're being asked to watch
  try {
    const stats = await statMethods[wh.statMethod](wh.watchPath);
    if (this.fsw.closed) return;
    if (this.fsw._isIgnored(wh.watchPath, stats)) {
      throw null;
    }
    if (stats.isDirectory()) {
      // emit addDir unless this is a glob parent
      if (!wh.globFilter) this.emitAdd(processPath(path), stats, processPath, opts, forceAdd);

      // don't recurse further if it would exceed depth setting
      if (priorDepth && priorDepth > opts.depth) return;

      // scan the contents of the dir
      this.fsw._readdirp(wh.watchPath, {
        fileFilter: entry => wh.filterPath(entry),
        directoryFilter: entry => wh.filterDir(entry),
        ...Depth(opts.depth - (priorDepth || 0))
      }).on(STR_DATA, (entry) => {
        // need to check filterPath on dirs b/c filterDir is less restrictive
        if (this.fsw.closed) {
          return;
        }
        if (entry.stats.isDirectory() && !wh.filterPath(entry)) return;

        const joinedPath = sysPath.join(wh.watchPath, entry.path);
        const {fullPath} = entry;

        if (wh.followSymlinks && entry.stats.isSymbolicLink()) {
          // preserve the current depth here since it can't be derived from
          // real paths past the symlink
          const curDepth = opts.depth === undefined ?
            undefined : calcDepth(joinedPath, sysPath.resolve(wh.watchPath)) + 1;

          this._handleFsEventsSymlink(joinedPath, fullPath, processPath, curDepth);
        } else {
          this.emitAdd(joinedPath, entry.stats, processPath, opts, forceAdd);
        }
      }).on(EV_ERROR, EMPTY_FN).on(STR_END, () => {
        this.fsw._emitReady();
      });
    } else {
      this.emitAdd(wh.watchPath, stats, processPath, opts, forceAdd);
      this.fsw._emitReady();
    }
  } catch (error) {
    if (!error || this.fsw._handleError(error)) {
      // TODO: Strange thing: "should not choke on an ignored watch path" will be failed without 2 ready calls -__-
      this.fsw._emitReady();
      this.fsw._emitReady();
    }
  }

  if (opts.persistent && forceAdd !== true) {
    if (typeof transform === FUNCTION_TYPE) {
      // realpath has already been resolved
      this.initWatch(undefined, path, wh, processPath);
    } else {
      let realPath;
      try {
        realPath = await realpath(wh.watchPath);
      } catch (e) {}
      this.initWatch(realPath, path, wh, processPath);
    }
  }
}

}

module.exports = FsEventsHandler;
module.exports.canUse = canUse;


/***/ }),

/***/ "./node_modules/chokidar/lib/nodefs-handler.js":
/*!*****************************************************!*\
  !*** ./node_modules/chokidar/lib/nodefs-handler.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const fs = __webpack_require__(/*! fs */ "fs");
const sysPath = __webpack_require__(/*! path */ "path");
const { promisify } = __webpack_require__(/*! util */ "util");
const isBinaryPath = __webpack_require__(/*! is-binary-path */ "./node_modules/is-binary-path/index.js");
const {
  isWindows,
  isLinux,
  EMPTY_FN,
  EMPTY_STR,
  KEY_LISTENERS,
  KEY_ERR,
  KEY_RAW,
  HANDLER_KEYS,
  EV_CHANGE,
  EV_ADD,
  EV_ADD_DIR,
  EV_ERROR,
  STR_DATA,
  STR_END,
  BRACE_START,
  STAR
} = __webpack_require__(/*! ./constants */ "./node_modules/chokidar/lib/constants.js");

const THROTTLE_MODE_WATCH = 'watch';

const open = promisify(fs.open);
const stat = promisify(fs.stat);
const lstat = promisify(fs.lstat);
const close = promisify(fs.close);
const fsrealpath = promisify(fs.realpath);

const statMethods = { lstat, stat };

// TODO: emit errors properly. Example: EMFILE on Macos.
const foreach = (val, fn) => {
  if (val instanceof Set) {
    val.forEach(fn);
  } else {
    fn(val);
  }
};

const addAndConvert = (main, prop, item) => {
  let container = main[prop];
  if (!(container instanceof Set)) {
    main[prop] = container = new Set([container]);
  }
  container.add(item);
};

const clearItem = cont => key => {
  const set = cont[key];
  if (set instanceof Set) {
    set.clear();
  } else {
    delete cont[key];
  }
};

const delFromSet = (main, prop, item) => {
  const container = main[prop];
  if (container instanceof Set) {
    container.delete(item);
  } else if (container === item) {
    delete main[prop];
  }
};

const isEmptySet = (val) => val instanceof Set ? val.size === 0 : !val;

/**
 * @typedef {String} Path
 */

// fs_watch helpers

// object to hold per-process fs_watch instances
// (may be shared across chokidar FSWatcher instances)

/**
 * @typedef {Object} FsWatchContainer
 * @property {Set} listeners
 * @property {Set} errHandlers
 * @property {Set} rawEmitters
 * @property {fs.FSWatcher=} watcher
 * @property {Boolean=} watcherUnusable
 */

/**
 * @type {Map<String,FsWatchContainer>}
 */
const FsWatchInstances = new Map();

/**
 * Instantiates the fs_watch interface
 * @param {String} path to be watched
 * @param {Object} options to be passed to fs_watch
 * @param {Function} listener main event handler
 * @param {Function} errHandler emits info about errors
 * @param {Function} emitRaw emits raw event data
 * @returns {fs.FSWatcher} new fsevents instance
 */
function createFsWatchInstance(path, options, listener, errHandler, emitRaw) {
  const handleEvent = (rawEvent, evPath) => {
    listener(path);
    emitRaw(rawEvent, evPath, {watchedPath: path});

    // emit based on events occurring for files from a directory's watcher in
    // case the file's watcher misses it (and rely on throttling to de-dupe)
    if (evPath && path !== evPath) {
      fsWatchBroadcast(
        sysPath.resolve(path, evPath), KEY_LISTENERS, sysPath.join(path, evPath)
      );
    }
  };
  try {
    return fs.watch(path, options, handleEvent);
  } catch (error) {
    errHandler(error);
  }
}

/**
 * Helper for passing fs_watch event data to a collection of listeners
 * @param {Path} fullPath absolute path bound to fs_watch instance
 * @param {String} type listener type
 * @param {*=} val1 arguments to be passed to listeners
 * @param {*=} val2
 * @param {*=} val3
 */
const fsWatchBroadcast = (fullPath, type, val1, val2, val3) => {
  const cont = FsWatchInstances.get(fullPath);
  if (!cont) return;
  foreach(cont[type], (listener) => {
    listener(val1, val2, val3);
  });
};

/**
 * Instantiates the fs_watch interface or binds listeners
 * to an existing one covering the same file system entry
 * @param {String} path
 * @param {String} fullPath absolute path
 * @param {Object} options to be passed to fs_watch
 * @param {Object} handlers container for event listener functions
 */
const setFsWatchListener = (path, fullPath, options, handlers) => {
  const {listener, errHandler, rawEmitter} = handlers;
  let cont = FsWatchInstances.get(fullPath);

  /** @type {fs.FSWatcher=} */
  let watcher;
  if (!options.persistent) {
    watcher = createFsWatchInstance(
      path, options, listener, errHandler, rawEmitter
    );
    return watcher.close.bind(watcher);
  }
  if (cont) {
    addAndConvert(cont, KEY_LISTENERS, listener);
    addAndConvert(cont, KEY_ERR, errHandler);
    addAndConvert(cont, KEY_RAW, rawEmitter);
  } else {
    watcher = createFsWatchInstance(
      path,
      options,
      fsWatchBroadcast.bind(null, fullPath, KEY_LISTENERS),
      errHandler, // no need to use broadcast here
      fsWatchBroadcast.bind(null, fullPath, KEY_RAW)
    );
    if (!watcher) return;
    watcher.on(EV_ERROR, async (error) => {
      const broadcastErr = fsWatchBroadcast.bind(null, fullPath, KEY_ERR);
      cont.watcherUnusable = true; // documented since Node 10.4.1
      // Workaround for https://github.com/joyent/node/issues/4337
      if (isWindows && error.code === 'EPERM') {
        try {
          const fd = await open(path, 'r');
          await close(fd);
          broadcastErr(error);
        } catch (err) {}
      } else {
        broadcastErr(error);
      }
    });
    cont = {
      listeners: listener,
      errHandlers: errHandler,
      rawEmitters: rawEmitter,
      watcher
    };
    FsWatchInstances.set(fullPath, cont);
  }
  // const index = cont.listeners.indexOf(listener);

  // removes this instance's listeners and closes the underlying fs_watch
  // instance if there are no more listeners left
  return () => {
    delFromSet(cont, KEY_LISTENERS, listener);
    delFromSet(cont, KEY_ERR, errHandler);
    delFromSet(cont, KEY_RAW, rawEmitter);
    if (isEmptySet(cont.listeners)) {
      // Check to protect against issue gh-730.
      // if (cont.watcherUnusable) {
      cont.watcher.close();
      // }
      FsWatchInstances.delete(fullPath);
      HANDLER_KEYS.forEach(clearItem(cont));
      cont.watcher = undefined;
      Object.freeze(cont);
    }
  };
};

// fs_watchFile helpers

// object to hold per-process fs_watchFile instances
// (may be shared across chokidar FSWatcher instances)
const FsWatchFileInstances = new Map();

/**
 * Instantiates the fs_watchFile interface or binds listeners
 * to an existing one covering the same file system entry
 * @param {String} path to be watched
 * @param {String} fullPath absolute path
 * @param {Object} options options to be passed to fs_watchFile
 * @param {Object} handlers container for event listener functions
 * @returns {Function} closer
 */
const setFsWatchFileListener = (path, fullPath, options, handlers) => {
  const {listener, rawEmitter} = handlers;
  let cont = FsWatchFileInstances.get(fullPath);

  /* eslint-disable no-unused-vars, prefer-destructuring */
  let listeners = new Set();
  let rawEmitters = new Set();

  const copts = cont && cont.options;
  if (copts && (copts.persistent < options.persistent || copts.interval > options.interval)) {
    // "Upgrade" the watcher to persistence or a quicker interval.
    // This creates some unlikely edge case issues if the user mixes
    // settings in a very weird way, but solving for those cases
    // doesn't seem worthwhile for the added complexity.
    listeners = cont.listeners;
    rawEmitters = cont.rawEmitters;
    fs.unwatchFile(fullPath);
    cont = undefined;
  }

  /* eslint-enable no-unused-vars, prefer-destructuring */

  if (cont) {
    addAndConvert(cont, KEY_LISTENERS, listener);
    addAndConvert(cont, KEY_RAW, rawEmitter);
  } else {
    // TODO
    // listeners.add(listener);
    // rawEmitters.add(rawEmitter);
    cont = {
      listeners: listener,
      rawEmitters: rawEmitter,
      options,
      watcher: fs.watchFile(fullPath, options, (curr, prev) => {
        foreach(cont.rawEmitters, (rawEmitter) => {
          rawEmitter(EV_CHANGE, fullPath, {curr, prev});
        });
        const currmtime = curr.mtimeMs;
        if (curr.size !== prev.size || currmtime > prev.mtimeMs || currmtime === 0) {
          foreach(cont.listeners, (listener) => listener(path, curr));
        }
      })
    };
    FsWatchFileInstances.set(fullPath, cont);
  }
  // const index = cont.listeners.indexOf(listener);

  // Removes this instance's listeners and closes the underlying fs_watchFile
  // instance if there are no more listeners left.
  return () => {
    delFromSet(cont, KEY_LISTENERS, listener);
    delFromSet(cont, KEY_RAW, rawEmitter);
    if (isEmptySet(cont.listeners)) {
      FsWatchFileInstances.delete(fullPath);
      fs.unwatchFile(fullPath);
      cont.options = cont.watcher = undefined;
      Object.freeze(cont);
    }
  };
};

/**
 * @mixin
 */
class NodeFsHandler {

/**
 * @param {import("../index").FSWatcher} fsW
 */
constructor(fsW) {
  this.fsw = fsW;
  this._boundHandleError = (error) => fsW._handleError(error);
}

/**
 * Watch file for changes with fs_watchFile or fs_watch.
 * @param {String} path to file or dir
 * @param {Function} listener on fs change
 * @returns {Function} closer for the watcher instance
 */
_watchWithNodeFs(path, listener) {
  const opts = this.fsw.options;
  const directory = sysPath.dirname(path);
  const basename = sysPath.basename(path);
  const parent = this.fsw._getWatchedDir(directory);
  parent.add(basename);
  const absolutePath = sysPath.resolve(path);
  const options = {persistent: opts.persistent};
  if (!listener) listener = EMPTY_FN;

  let closer;
  if (opts.usePolling) {
    options.interval = opts.enableBinaryInterval && isBinaryPath(basename) ?
      opts.binaryInterval : opts.interval;
    closer = setFsWatchFileListener(path, absolutePath, options, {
      listener,
      rawEmitter: this.fsw._emitRaw
    });
  } else {
    closer = setFsWatchListener(path, absolutePath, options, {
      listener,
      errHandler: this._boundHandleError,
      rawEmitter: this.fsw._emitRaw
    });
  }
  return closer;
}

/**
 * Watch a file and emit add event if warranted.
 * @param {Path} file Path
 * @param {fs.Stats} stats result of fs_stat
 * @param {Boolean} initialAdd was the file added at watch instantiation?
 * @returns {Function} closer for the watcher instance
 */
_handleFile(file, stats, initialAdd) {
  if (this.fsw.closed) {
    return;
  }
  const dirname = sysPath.dirname(file);
  const basename = sysPath.basename(file);
  const parent = this.fsw._getWatchedDir(dirname);
  // stats is always present
  let prevStats = stats;

  // if the file is already being watched, do nothing
  if (parent.has(basename)) return;

  const listener = async (path, newStats) => {
    if (!this.fsw._throttle(THROTTLE_MODE_WATCH, file, 5)) return;
    if (!newStats || newStats.mtimeMs === 0) {
      try {
        const newStats = await stat(file);
        if (this.fsw.closed) return;
        // Check that change event was not fired because of changed only accessTime.
        const at = newStats.atimeMs;
        const mt = newStats.mtimeMs;
        if (!at || at <= mt || mt !== prevStats.mtimeMs) {
          this.fsw._emit(EV_CHANGE, file, newStats);
        }
        if (isLinux && prevStats.ino !== newStats.ino) {
          this.fsw._closeFile(path)
          prevStats = newStats;
          this.fsw._addPathCloser(path, this._watchWithNodeFs(file, listener));
        } else {
          prevStats = newStats;
        }
      } catch (error) {
        // Fix issues where mtime is null but file is still present
        this.fsw._remove(dirname, basename);
      }
      // add is about to be emitted if file not already tracked in parent
    } else if (parent.has(basename)) {
      // Check that change event was not fired because of changed only accessTime.
      const at = newStats.atimeMs;
      const mt = newStats.mtimeMs;
      if (!at || at <= mt || mt !== prevStats.mtimeMs) {
        this.fsw._emit(EV_CHANGE, file, newStats);
      }
      prevStats = newStats;
    }
  }
  // kick off the watcher
  const closer = this._watchWithNodeFs(file, listener);

  // emit an add event if we're supposed to
  if (!(initialAdd && this.fsw.options.ignoreInitial) && this.fsw._isntIgnored(file)) {
    if (!this.fsw._throttle(EV_ADD, file, 0)) return;
    this.fsw._emit(EV_ADD, file, stats);
  }

  return closer;
}

/**
 * Handle symlinks encountered while reading a dir.
 * @param {Object} entry returned by readdirp
 * @param {String} directory path of dir being read
 * @param {String} path of this item
 * @param {String} item basename of this item
 * @returns {Promise<Boolean>} true if no more processing is needed for this entry.
 */
async _handleSymlink(entry, directory, path, item) {
  if (this.fsw.closed) {
    return;
  }
  const full = entry.fullPath;
  const dir = this.fsw._getWatchedDir(directory);

  if (!this.fsw.options.followSymlinks) {
    // watch symlink directly (don't follow) and detect changes
    this.fsw._incrReadyCount();

    let linkPath;
    try {
      linkPath = await fsrealpath(path);
    } catch (e) {
      this.fsw._emitReady();
      return true;
    }

    if (this.fsw.closed) return;
    if (dir.has(item)) {
      if (this.fsw._symlinkPaths.get(full) !== linkPath) {
        this.fsw._symlinkPaths.set(full, linkPath);
        this.fsw._emit(EV_CHANGE, path, entry.stats);
      }
    } else {
      dir.add(item);
      this.fsw._symlinkPaths.set(full, linkPath);
      this.fsw._emit(EV_ADD, path, entry.stats);
    }
    this.fsw._emitReady();
    return true;
  }

  // don't follow the same symlink more than once
  if (this.fsw._symlinkPaths.has(full)) {
    return true;
  }

  this.fsw._symlinkPaths.set(full, true);
}

_handleRead(directory, initialAdd, wh, target, dir, depth, throttler) {
  // Normalize the directory name on Windows
  directory = sysPath.join(directory, EMPTY_STR);

  if (!wh.hasGlob) {
    throttler = this.fsw._throttle('readdir', directory, 1000);
    if (!throttler) return;
  }

  const previous = this.fsw._getWatchedDir(wh.path);
  const current = new Set();

  let stream = this.fsw._readdirp(directory, {
    fileFilter: entry => wh.filterPath(entry),
    directoryFilter: entry => wh.filterDir(entry),
    depth: 0
  }).on(STR_DATA, async (entry) => {
    if (this.fsw.closed) {
      stream = undefined;
      return;
    }
    const item = entry.path;
    let path = sysPath.join(directory, item);
    current.add(item);

    if (entry.stats.isSymbolicLink() && await this._handleSymlink(entry, directory, path, item)) {
      return;
    }

    if (this.fsw.closed) {
      stream = undefined;
      return;
    }
    // Files that present in current directory snapshot
    // but absent in previous are added to watch list and
    // emit `add` event.
    if (item === target || !target && !previous.has(item)) {
      this.fsw._incrReadyCount();

      // ensure relativeness of path is preserved in case of watcher reuse
      path = sysPath.join(dir, sysPath.relative(dir, path));

      this._addToNodeFs(path, initialAdd, wh, depth + 1);
    }
  }).on(EV_ERROR, this._boundHandleError);

  return new Promise(resolve =>
    stream.once(STR_END, () => {
      if (this.fsw.closed) {
        stream = undefined;
        return;
      }
      const wasThrottled = throttler ? throttler.clear() : false;

      resolve();

      // Files that absent in current directory snapshot
      // but present in previous emit `remove` event
      // and are removed from @watched[directory].
      previous.getChildren().filter((item) => {
        return item !== directory &&
          !current.has(item) &&
          // in case of intersecting globs;
          // a path may have been filtered out of this readdir, but
          // shouldn't be removed because it matches a different glob
          (!wh.hasGlob || wh.filterPath({
            fullPath: sysPath.resolve(directory, item)
          }));
      }).forEach((item) => {
        this.fsw._remove(directory, item);
      });

      stream = undefined;

      // one more time for any missed in case changes came in extremely quickly
      if (wasThrottled) this._handleRead(directory, false, wh, target, dir, depth, throttler);
    })
  );
}

/**
 * Read directory to add / remove files from `@watched` list and re-read it on change.
 * @param {String} dir fs path
 * @param {fs.Stats} stats
 * @param {Boolean} initialAdd
 * @param {Number} depth relative to user-supplied path
 * @param {String} target child path targeted for watch
 * @param {Object} wh Common watch helpers for this path
 * @param {String} realpath
 * @returns {Promise<Function>} closer for the watcher instance.
 */
async _handleDir(dir, stats, initialAdd, depth, target, wh, realpath) {
  const parentDir = this.fsw._getWatchedDir(sysPath.dirname(dir));
  const tracked = parentDir.has(sysPath.basename(dir));
  if (!(initialAdd && this.fsw.options.ignoreInitial) && !target && !tracked) {
    if (!wh.hasGlob || wh.globFilter(dir)) this.fsw._emit(EV_ADD_DIR, dir, stats);
  }

  // ensure dir is tracked (harmless if redundant)
  parentDir.add(sysPath.basename(dir));
  this.fsw._getWatchedDir(dir);
  let throttler;
  let closer;

  const oDepth = this.fsw.options.depth;
  if ((oDepth == null || depth <= oDepth) && !this.fsw._symlinkPaths.has(realpath)) {
    if (!target) {
      await this._handleRead(dir, initialAdd, wh, target, dir, depth, throttler);
      if (this.fsw.closed) return;
    }

    closer = this._watchWithNodeFs(dir, (dirPath, stats) => {
      // if current directory is removed, do nothing
      if (stats && stats.mtimeMs === 0) return;

      this._handleRead(dirPath, false, wh, target, dir, depth, throttler);
    });
  }
  return closer;
}

/**
 * Handle added file, directory, or glob pattern.
 * Delegates call to _handleFile / _handleDir after checks.
 * @param {String} path to file or ir
 * @param {Boolean} initialAdd was the file added at watch instantiation?
 * @param {Object} priorWh depth relative to user-supplied path
 * @param {Number} depth Child path actually targeted for watch
 * @param {String=} target Child path actually targeted for watch
 * @returns {Promise}
 */
async _addToNodeFs(path, initialAdd, priorWh, depth, target) {
  const ready = this.fsw._emitReady;
  if (this.fsw._isIgnored(path) || this.fsw.closed) {
    ready();
    return false;
  }

  const wh = this.fsw._getWatchHelpers(path, depth);
  if (!wh.hasGlob && priorWh) {
    wh.hasGlob = priorWh.hasGlob;
    wh.globFilter = priorWh.globFilter;
    wh.filterPath = entry => priorWh.filterPath(entry);
    wh.filterDir = entry => priorWh.filterDir(entry);
  }

  // evaluate what is at the path we're being asked to watch
  try {
    const stats = await statMethods[wh.statMethod](wh.watchPath);
    if (this.fsw.closed) return;
    if (this.fsw._isIgnored(wh.watchPath, stats)) {
      ready();
      return false;
    }

    const follow = this.fsw.options.followSymlinks && !path.includes(STAR) && !path.includes(BRACE_START);
    let closer;
    if (stats.isDirectory()) {
      const absPath = sysPath.resolve(path);
      const targetPath = follow ? await fsrealpath(path) : path;
      if (this.fsw.closed) return;
      closer = await this._handleDir(wh.watchPath, stats, initialAdd, depth, target, wh, targetPath);
      if (this.fsw.closed) return;
      // preserve this symlink's target path
      if (absPath !== targetPath && targetPath !== undefined) {
        this.fsw._symlinkPaths.set(absPath, targetPath);
      }
    } else if (stats.isSymbolicLink()) {
      const targetPath = follow ? await fsrealpath(path) : path;
      if (this.fsw.closed) return;
      const parent = sysPath.dirname(wh.watchPath);
      this.fsw._getWatchedDir(parent).add(wh.watchPath);
      this.fsw._emit(EV_ADD, wh.watchPath, stats);
      closer = await this._handleDir(parent, stats, initialAdd, depth, path, wh, targetPath);
      if (this.fsw.closed) return;

      // preserve this symlink's target path
      if (targetPath !== undefined) {
        this.fsw._symlinkPaths.set(sysPath.resolve(path), targetPath);
      }
    } else {
      closer = this._handleFile(wh.watchPath, stats, initialAdd);
    }
    ready();

    this.fsw._addPathCloser(path, closer);
    return false;

  } catch (error) {
    if (this.fsw._handleError(error)) {
      ready();
      return path;
    }
  }
}

}

module.exports = NodeFsHandler;


/***/ }),

/***/ "./node_modules/chokidar/node_modules/glob-parent/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/chokidar/node_modules/glob-parent/index.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isGlob = __webpack_require__(/*! is-glob */ "./node_modules/is-glob/index.js");
var pathPosixDirname = (__webpack_require__(/*! path */ "path").posix).dirname;
var isWin32 = (__webpack_require__(/*! os */ "os").platform)() === 'win32';

var slash = '/';
var backslash = /\\/g;
var enclosure = /[\{\[].*[\}\]]$/;
var globby = /(^|[^\\])([\{\[]|\([^\)]+$)/;
var escaped = /\\([\!\*\?\|\[\]\(\)\{\}])/g;

/**
 * @param {string} str
 * @param {Object} opts
 * @param {boolean} [opts.flipBackslashes=true]
 * @returns {string}
 */
module.exports = function globParent(str, opts) {
  var options = Object.assign({ flipBackslashes: true }, opts);

  // flip windows path separators
  if (options.flipBackslashes && isWin32 && str.indexOf(slash) < 0) {
    str = str.replace(backslash, slash);
  }

  // special case for strings ending in enclosure containing path separator
  if (enclosure.test(str)) {
    str += slash;
  }

  // preserves full path in case of trailing path separator
  str += 'a';

  // remove path parts that are globby
  do {
    str = pathPosixDirname(str);
  } while (isGlob(str) || globby.test(str));

  // remove escape chars and return result
  return str.replace(escaped, '$1');
};


/***/ }),

/***/ "./node_modules/color-convert/conversions.js":
/*!***************************************************!*\
  !*** ./node_modules/color-convert/conversions.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* MIT license */
/* eslint-disable no-mixed-operators */
const cssKeywords = __webpack_require__(/*! color-name */ "./node_modules/color-name/index.js");

// NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)

const reverseKeywords = {};
for (const key of Object.keys(cssKeywords)) {
	reverseKeywords[cssKeywords[key]] = key;
}

const convert = {
	rgb: {channels: 3, labels: 'rgb'},
	hsl: {channels: 3, labels: 'hsl'},
	hsv: {channels: 3, labels: 'hsv'},
	hwb: {channels: 3, labels: 'hwb'},
	cmyk: {channels: 4, labels: 'cmyk'},
	xyz: {channels: 3, labels: 'xyz'},
	lab: {channels: 3, labels: 'lab'},
	lch: {channels: 3, labels: 'lch'},
	hex: {channels: 1, labels: ['hex']},
	keyword: {channels: 1, labels: ['keyword']},
	ansi16: {channels: 1, labels: ['ansi16']},
	ansi256: {channels: 1, labels: ['ansi256']},
	hcg: {channels: 3, labels: ['h', 'c', 'g']},
	apple: {channels: 3, labels: ['r16', 'g16', 'b16']},
	gray: {channels: 1, labels: ['gray']}
};

module.exports = convert;

// Hide .channels and .labels properties
for (const model of Object.keys(convert)) {
	if (!('channels' in convert[model])) {
		throw new Error('missing channels property: ' + model);
	}

	if (!('labels' in convert[model])) {
		throw new Error('missing channel labels property: ' + model);
	}

	if (convert[model].labels.length !== convert[model].channels) {
		throw new Error('channel and label counts mismatch: ' + model);
	}

	const {channels, labels} = convert[model];
	delete convert[model].channels;
	delete convert[model].labels;
	Object.defineProperty(convert[model], 'channels', {value: channels});
	Object.defineProperty(convert[model], 'labels', {value: labels});
}

convert.rgb.hsl = function (rgb) {
	const r = rgb[0] / 255;
	const g = rgb[1] / 255;
	const b = rgb[2] / 255;
	const min = Math.min(r, g, b);
	const max = Math.max(r, g, b);
	const delta = max - min;
	let h;
	let s;

	if (max === min) {
		h = 0;
	} else if (r === max) {
		h = (g - b) / delta;
	} else if (g === max) {
		h = 2 + (b - r) / delta;
	} else if (b === max) {
		h = 4 + (r - g) / delta;
	}

	h = Math.min(h * 60, 360);

	if (h < 0) {
		h += 360;
	}

	const l = (min + max) / 2;

	if (max === min) {
		s = 0;
	} else if (l <= 0.5) {
		s = delta / (max + min);
	} else {
		s = delta / (2 - max - min);
	}

	return [h, s * 100, l * 100];
};

convert.rgb.hsv = function (rgb) {
	let rdif;
	let gdif;
	let bdif;
	let h;
	let s;

	const r = rgb[0] / 255;
	const g = rgb[1] / 255;
	const b = rgb[2] / 255;
	const v = Math.max(r, g, b);
	const diff = v - Math.min(r, g, b);
	const diffc = function (c) {
		return (v - c) / 6 / diff + 1 / 2;
	};

	if (diff === 0) {
		h = 0;
		s = 0;
	} else {
		s = diff / v;
		rdif = diffc(r);
		gdif = diffc(g);
		bdif = diffc(b);

		if (r === v) {
			h = bdif - gdif;
		} else if (g === v) {
			h = (1 / 3) + rdif - bdif;
		} else if (b === v) {
			h = (2 / 3) + gdif - rdif;
		}

		if (h < 0) {
			h += 1;
		} else if (h > 1) {
			h -= 1;
		}
	}

	return [
		h * 360,
		s * 100,
		v * 100
	];
};

convert.rgb.hwb = function (rgb) {
	const r = rgb[0];
	const g = rgb[1];
	let b = rgb[2];
	const h = convert.rgb.hsl(rgb)[0];
	const w = 1 / 255 * Math.min(r, Math.min(g, b));

	b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));

	return [h, w * 100, b * 100];
};

convert.rgb.cmyk = function (rgb) {
	const r = rgb[0] / 255;
	const g = rgb[1] / 255;
	const b = rgb[2] / 255;

	const k = Math.min(1 - r, 1 - g, 1 - b);
	const c = (1 - r - k) / (1 - k) || 0;
	const m = (1 - g - k) / (1 - k) || 0;
	const y = (1 - b - k) / (1 - k) || 0;

	return [c * 100, m * 100, y * 100, k * 100];
};

function comparativeDistance(x, y) {
	/*
		See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
	*/
	return (
		((x[0] - y[0]) ** 2) +
		((x[1] - y[1]) ** 2) +
		((x[2] - y[2]) ** 2)
	);
}

convert.rgb.keyword = function (rgb) {
	const reversed = reverseKeywords[rgb];
	if (reversed) {
		return reversed;
	}

	let currentClosestDistance = Infinity;
	let currentClosestKeyword;

	for (const keyword of Object.keys(cssKeywords)) {
		const value = cssKeywords[keyword];

		// Compute comparative distance
		const distance = comparativeDistance(rgb, value);

		// Check if its less, if so set as closest
		if (distance < currentClosestDistance) {
			currentClosestDistance = distance;
			currentClosestKeyword = keyword;
		}
	}

	return currentClosestKeyword;
};

convert.keyword.rgb = function (keyword) {
	return cssKeywords[keyword];
};

convert.rgb.xyz = function (rgb) {
	let r = rgb[0] / 255;
	let g = rgb[1] / 255;
	let b = rgb[2] / 255;

	// Assume sRGB
	r = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);
	g = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);
	b = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);

	const x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
	const y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
	const z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

	return [x * 100, y * 100, z * 100];
};

convert.rgb.lab = function (rgb) {
	const xyz = convert.rgb.xyz(rgb);
	let x = xyz[0];
	let y = xyz[1];
	let z = xyz[2];

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);

	const l = (116 * y) - 16;
	const a = 500 * (x - y);
	const b = 200 * (y - z);

	return [l, a, b];
};

convert.hsl.rgb = function (hsl) {
	const h = hsl[0] / 360;
	const s = hsl[1] / 100;
	const l = hsl[2] / 100;
	let t2;
	let t3;
	let val;

	if (s === 0) {
		val = l * 255;
		return [val, val, val];
	}

	if (l < 0.5) {
		t2 = l * (1 + s);
	} else {
		t2 = l + s - l * s;
	}

	const t1 = 2 * l - t2;

	const rgb = [0, 0, 0];
	for (let i = 0; i < 3; i++) {
		t3 = h + 1 / 3 * -(i - 1);
		if (t3 < 0) {
			t3++;
		}

		if (t3 > 1) {
			t3--;
		}

		if (6 * t3 < 1) {
			val = t1 + (t2 - t1) * 6 * t3;
		} else if (2 * t3 < 1) {
			val = t2;
		} else if (3 * t3 < 2) {
			val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
		} else {
			val = t1;
		}

		rgb[i] = val * 255;
	}

	return rgb;
};

convert.hsl.hsv = function (hsl) {
	const h = hsl[0];
	let s = hsl[1] / 100;
	let l = hsl[2] / 100;
	let smin = s;
	const lmin = Math.max(l, 0.01);

	l *= 2;
	s *= (l <= 1) ? l : 2 - l;
	smin *= lmin <= 1 ? lmin : 2 - lmin;
	const v = (l + s) / 2;
	const sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);

	return [h, sv * 100, v * 100];
};

convert.hsv.rgb = function (hsv) {
	const h = hsv[0] / 60;
	const s = hsv[1] / 100;
	let v = hsv[2] / 100;
	const hi = Math.floor(h) % 6;

	const f = h - Math.floor(h);
	const p = 255 * v * (1 - s);
	const q = 255 * v * (1 - (s * f));
	const t = 255 * v * (1 - (s * (1 - f)));
	v *= 255;

	switch (hi) {
		case 0:
			return [v, t, p];
		case 1:
			return [q, v, p];
		case 2:
			return [p, v, t];
		case 3:
			return [p, q, v];
		case 4:
			return [t, p, v];
		case 5:
			return [v, p, q];
	}
};

convert.hsv.hsl = function (hsv) {
	const h = hsv[0];
	const s = hsv[1] / 100;
	const v = hsv[2] / 100;
	const vmin = Math.max(v, 0.01);
	let sl;
	let l;

	l = (2 - s) * v;
	const lmin = (2 - s) * vmin;
	sl = s * vmin;
	sl /= (lmin <= 1) ? lmin : 2 - lmin;
	sl = sl || 0;
	l /= 2;

	return [h, sl * 100, l * 100];
};

// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
convert.hwb.rgb = function (hwb) {
	const h = hwb[0] / 360;
	let wh = hwb[1] / 100;
	let bl = hwb[2] / 100;
	const ratio = wh + bl;
	let f;

	// Wh + bl cant be > 1
	if (ratio > 1) {
		wh /= ratio;
		bl /= ratio;
	}

	const i = Math.floor(6 * h);
	const v = 1 - bl;
	f = 6 * h - i;

	if ((i & 0x01) !== 0) {
		f = 1 - f;
	}

	const n = wh + f * (v - wh); // Linear interpolation

	let r;
	let g;
	let b;
	/* eslint-disable max-statements-per-line,no-multi-spaces */
	switch (i) {
		default:
		case 6:
		case 0: r = v;  g = n;  b = wh; break;
		case 1: r = n;  g = v;  b = wh; break;
		case 2: r = wh; g = v;  b = n; break;
		case 3: r = wh; g = n;  b = v; break;
		case 4: r = n;  g = wh; b = v; break;
		case 5: r = v;  g = wh; b = n; break;
	}
	/* eslint-enable max-statements-per-line,no-multi-spaces */

	return [r * 255, g * 255, b * 255];
};

convert.cmyk.rgb = function (cmyk) {
	const c = cmyk[0] / 100;
	const m = cmyk[1] / 100;
	const y = cmyk[2] / 100;
	const k = cmyk[3] / 100;

	const r = 1 - Math.min(1, c * (1 - k) + k);
	const g = 1 - Math.min(1, m * (1 - k) + k);
	const b = 1 - Math.min(1, y * (1 - k) + k);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.rgb = function (xyz) {
	const x = xyz[0] / 100;
	const y = xyz[1] / 100;
	const z = xyz[2] / 100;
	let r;
	let g;
	let b;

	r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
	g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
	b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

	// Assume sRGB
	r = r > 0.0031308
		? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)
		: r * 12.92;

	g = g > 0.0031308
		? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)
		: g * 12.92;

	b = b > 0.0031308
		? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)
		: b * 12.92;

	r = Math.min(Math.max(0, r), 1);
	g = Math.min(Math.max(0, g), 1);
	b = Math.min(Math.max(0, b), 1);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.lab = function (xyz) {
	let x = xyz[0];
	let y = xyz[1];
	let z = xyz[2];

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);

	const l = (116 * y) - 16;
	const a = 500 * (x - y);
	const b = 200 * (y - z);

	return [l, a, b];
};

convert.lab.xyz = function (lab) {
	const l = lab[0];
	const a = lab[1];
	const b = lab[2];
	let x;
	let y;
	let z;

	y = (l + 16) / 116;
	x = a / 500 + y;
	z = y - b / 200;

	const y2 = y ** 3;
	const x2 = x ** 3;
	const z2 = z ** 3;
	y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
	x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
	z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;

	x *= 95.047;
	y *= 100;
	z *= 108.883;

	return [x, y, z];
};

convert.lab.lch = function (lab) {
	const l = lab[0];
	const a = lab[1];
	const b = lab[2];
	let h;

	const hr = Math.atan2(b, a);
	h = hr * 360 / 2 / Math.PI;

	if (h < 0) {
		h += 360;
	}

	const c = Math.sqrt(a * a + b * b);

	return [l, c, h];
};

convert.lch.lab = function (lch) {
	const l = lch[0];
	const c = lch[1];
	const h = lch[2];

	const hr = h / 360 * 2 * Math.PI;
	const a = c * Math.cos(hr);
	const b = c * Math.sin(hr);

	return [l, a, b];
};

convert.rgb.ansi16 = function (args, saturation = null) {
	const [r, g, b] = args;
	let value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization

	value = Math.round(value / 50);

	if (value === 0) {
		return 30;
	}

	let ansi = 30
		+ ((Math.round(b / 255) << 2)
		| (Math.round(g / 255) << 1)
		| Math.round(r / 255));

	if (value === 2) {
		ansi += 60;
	}

	return ansi;
};

convert.hsv.ansi16 = function (args) {
	// Optimization here; we already know the value and don't need to get
	// it converted for us.
	return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
};

convert.rgb.ansi256 = function (args) {
	const r = args[0];
	const g = args[1];
	const b = args[2];

	// We use the extended greyscale palette here, with the exception of
	// black and white. normal palette only has 4 greyscale shades.
	if (r === g && g === b) {
		if (r < 8) {
			return 16;
		}

		if (r > 248) {
			return 231;
		}

		return Math.round(((r - 8) / 247) * 24) + 232;
	}

	const ansi = 16
		+ (36 * Math.round(r / 255 * 5))
		+ (6 * Math.round(g / 255 * 5))
		+ Math.round(b / 255 * 5);

	return ansi;
};

convert.ansi16.rgb = function (args) {
	let color = args % 10;

	// Handle greyscale
	if (color === 0 || color === 7) {
		if (args > 50) {
			color += 3.5;
		}

		color = color / 10.5 * 255;

		return [color, color, color];
	}

	const mult = (~~(args > 50) + 1) * 0.5;
	const r = ((color & 1) * mult) * 255;
	const g = (((color >> 1) & 1) * mult) * 255;
	const b = (((color >> 2) & 1) * mult) * 255;

	return [r, g, b];
};

convert.ansi256.rgb = function (args) {
	// Handle greyscale
	if (args >= 232) {
		const c = (args - 232) * 10 + 8;
		return [c, c, c];
	}

	args -= 16;

	let rem;
	const r = Math.floor(args / 36) / 5 * 255;
	const g = Math.floor((rem = args % 36) / 6) / 5 * 255;
	const b = (rem % 6) / 5 * 255;

	return [r, g, b];
};

convert.rgb.hex = function (args) {
	const integer = ((Math.round(args[0]) & 0xFF) << 16)
		+ ((Math.round(args[1]) & 0xFF) << 8)
		+ (Math.round(args[2]) & 0xFF);

	const string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.hex.rgb = function (args) {
	const match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
	if (!match) {
		return [0, 0, 0];
	}

	let colorString = match[0];

	if (match[0].length === 3) {
		colorString = colorString.split('').map(char => {
			return char + char;
		}).join('');
	}

	const integer = parseInt(colorString, 16);
	const r = (integer >> 16) & 0xFF;
	const g = (integer >> 8) & 0xFF;
	const b = integer & 0xFF;

	return [r, g, b];
};

convert.rgb.hcg = function (rgb) {
	const r = rgb[0] / 255;
	const g = rgb[1] / 255;
	const b = rgb[2] / 255;
	const max = Math.max(Math.max(r, g), b);
	const min = Math.min(Math.min(r, g), b);
	const chroma = (max - min);
	let grayscale;
	let hue;

	if (chroma < 1) {
		grayscale = min / (1 - chroma);
	} else {
		grayscale = 0;
	}

	if (chroma <= 0) {
		hue = 0;
	} else
	if (max === r) {
		hue = ((g - b) / chroma) % 6;
	} else
	if (max === g) {
		hue = 2 + (b - r) / chroma;
	} else {
		hue = 4 + (r - g) / chroma;
	}

	hue /= 6;
	hue %= 1;

	return [hue * 360, chroma * 100, grayscale * 100];
};

convert.hsl.hcg = function (hsl) {
	const s = hsl[1] / 100;
	const l = hsl[2] / 100;

	const c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));

	let f = 0;
	if (c < 1.0) {
		f = (l - 0.5 * c) / (1.0 - c);
	}

	return [hsl[0], c * 100, f * 100];
};

convert.hsv.hcg = function (hsv) {
	const s = hsv[1] / 100;
	const v = hsv[2] / 100;

	const c = s * v;
	let f = 0;

	if (c < 1.0) {
		f = (v - c) / (1 - c);
	}

	return [hsv[0], c * 100, f * 100];
};

convert.hcg.rgb = function (hcg) {
	const h = hcg[0] / 360;
	const c = hcg[1] / 100;
	const g = hcg[2] / 100;

	if (c === 0.0) {
		return [g * 255, g * 255, g * 255];
	}

	const pure = [0, 0, 0];
	const hi = (h % 1) * 6;
	const v = hi % 1;
	const w = 1 - v;
	let mg = 0;

	/* eslint-disable max-statements-per-line */
	switch (Math.floor(hi)) {
		case 0:
			pure[0] = 1; pure[1] = v; pure[2] = 0; break;
		case 1:
			pure[0] = w; pure[1] = 1; pure[2] = 0; break;
		case 2:
			pure[0] = 0; pure[1] = 1; pure[2] = v; break;
		case 3:
			pure[0] = 0; pure[1] = w; pure[2] = 1; break;
		case 4:
			pure[0] = v; pure[1] = 0; pure[2] = 1; break;
		default:
			pure[0] = 1; pure[1] = 0; pure[2] = w;
	}
	/* eslint-enable max-statements-per-line */

	mg = (1.0 - c) * g;

	return [
		(c * pure[0] + mg) * 255,
		(c * pure[1] + mg) * 255,
		(c * pure[2] + mg) * 255
	];
};

convert.hcg.hsv = function (hcg) {
	const c = hcg[1] / 100;
	const g = hcg[2] / 100;

	const v = c + g * (1.0 - c);
	let f = 0;

	if (v > 0.0) {
		f = c / v;
	}

	return [hcg[0], f * 100, v * 100];
};

convert.hcg.hsl = function (hcg) {
	const c = hcg[1] / 100;
	const g = hcg[2] / 100;

	const l = g * (1.0 - c) + 0.5 * c;
	let s = 0;

	if (l > 0.0 && l < 0.5) {
		s = c / (2 * l);
	} else
	if (l >= 0.5 && l < 1.0) {
		s = c / (2 * (1 - l));
	}

	return [hcg[0], s * 100, l * 100];
};

convert.hcg.hwb = function (hcg) {
	const c = hcg[1] / 100;
	const g = hcg[2] / 100;
	const v = c + g * (1.0 - c);
	return [hcg[0], (v - c) * 100, (1 - v) * 100];
};

convert.hwb.hcg = function (hwb) {
	const w = hwb[1] / 100;
	const b = hwb[2] / 100;
	const v = 1 - b;
	const c = v - w;
	let g = 0;

	if (c < 1) {
		g = (v - c) / (1 - c);
	}

	return [hwb[0], c * 100, g * 100];
};

convert.apple.rgb = function (apple) {
	return [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];
};

convert.rgb.apple = function (rgb) {
	return [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];
};

convert.gray.rgb = function (args) {
	return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
};

convert.gray.hsl = function (args) {
	return [0, 0, args[0]];
};

convert.gray.hsv = convert.gray.hsl;

convert.gray.hwb = function (gray) {
	return [0, 100, gray[0]];
};

convert.gray.cmyk = function (gray) {
	return [0, 0, 0, gray[0]];
};

convert.gray.lab = function (gray) {
	return [gray[0], 0, 0];
};

convert.gray.hex = function (gray) {
	const val = Math.round(gray[0] / 100 * 255) & 0xFF;
	const integer = (val << 16) + (val << 8) + val;

	const string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.rgb.gray = function (rgb) {
	const val = (rgb[0] + rgb[1] + rgb[2]) / 3;
	return [val / 255 * 100];
};


/***/ }),

/***/ "./node_modules/color-convert/index.js":
/*!*********************************************!*\
  !*** ./node_modules/color-convert/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const conversions = __webpack_require__(/*! ./conversions */ "./node_modules/color-convert/conversions.js");
const route = __webpack_require__(/*! ./route */ "./node_modules/color-convert/route.js");

const convert = {};

const models = Object.keys(conversions);

function wrapRaw(fn) {
	const wrappedFn = function (...args) {
		const arg0 = args[0];
		if (arg0 === undefined || arg0 === null) {
			return arg0;
		}

		if (arg0.length > 1) {
			args = arg0;
		}

		return fn(args);
	};

	// Preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

function wrapRounded(fn) {
	const wrappedFn = function (...args) {
		const arg0 = args[0];

		if (arg0 === undefined || arg0 === null) {
			return arg0;
		}

		if (arg0.length > 1) {
			args = arg0;
		}

		const result = fn(args);

		// We're assuming the result is an array here.
		// see notice in conversions.js; don't use box types
		// in conversion functions.
		if (typeof result === 'object') {
			for (let len = result.length, i = 0; i < len; i++) {
				result[i] = Math.round(result[i]);
			}
		}

		return result;
	};

	// Preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

models.forEach(fromModel => {
	convert[fromModel] = {};

	Object.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});
	Object.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});

	const routes = route(fromModel);
	const routeModels = Object.keys(routes);

	routeModels.forEach(toModel => {
		const fn = routes[toModel];

		convert[fromModel][toModel] = wrapRounded(fn);
		convert[fromModel][toModel].raw = wrapRaw(fn);
	});
});

module.exports = convert;


/***/ }),

/***/ "./node_modules/color-convert/route.js":
/*!*********************************************!*\
  !*** ./node_modules/color-convert/route.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const conversions = __webpack_require__(/*! ./conversions */ "./node_modules/color-convert/conversions.js");

/*
	This function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/

function buildGraph() {
	const graph = {};
	// https://jsperf.com/object-keys-vs-for-in-with-closure/3
	const models = Object.keys(conversions);

	for (let len = models.length, i = 0; i < len; i++) {
		graph[models[i]] = {
			// http://jsperf.com/1-vs-infinity
			// micro-opt, but this is simple.
			distance: -1,
			parent: null
		};
	}

	return graph;
}

// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(fromModel) {
	const graph = buildGraph();
	const queue = [fromModel]; // Unshift -> queue -> pop

	graph[fromModel].distance = 0;

	while (queue.length) {
		const current = queue.pop();
		const adjacents = Object.keys(conversions[current]);

		for (let len = adjacents.length, i = 0; i < len; i++) {
			const adjacent = adjacents[i];
			const node = graph[adjacent];

			if (node.distance === -1) {
				node.distance = graph[current].distance + 1;
				node.parent = current;
				queue.unshift(adjacent);
			}
		}
	}

	return graph;
}

function link(from, to) {
	return function (args) {
		return to(from(args));
	};
}

function wrapConversion(toModel, graph) {
	const path = [graph[toModel].parent, toModel];
	let fn = conversions[graph[toModel].parent][toModel];

	let cur = graph[toModel].parent;
	while (graph[cur].parent) {
		path.unshift(graph[cur].parent);
		fn = link(conversions[graph[cur].parent][cur], fn);
		cur = graph[cur].parent;
	}

	fn.conversion = path;
	return fn;
}

module.exports = function (fromModel) {
	const graph = deriveBFS(fromModel);
	const conversion = {};

	const models = Object.keys(graph);
	for (let len = models.length, i = 0; i < len; i++) {
		const toModel = models[i];
		const node = graph[toModel];

		if (node.parent === null) {
			// No possible conversion, or this node is the source model.
			continue;
		}

		conversion[toModel] = wrapConversion(toModel, graph);
	}

	return conversion;
};



/***/ }),

/***/ "./node_modules/color-name/index.js":
/*!******************************************!*\
  !*** ./node_modules/color-name/index.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";


module.exports = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};


/***/ }),

/***/ "./node_modules/emoji-regex/index.js":
/*!*******************************************!*\
  !*** ./node_modules/emoji-regex/index.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";


module.exports = function () {
  // https://mths.be/emoji
  return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
};


/***/ }),

/***/ "./node_modules/escalade/sync/index.js":
/*!*********************************************!*\
  !*** ./node_modules/escalade/sync/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const { dirname, resolve } = __webpack_require__(/*! path */ "path");
const { readdirSync, statSync } = __webpack_require__(/*! fs */ "fs");

module.exports = function (start, callback) {
	let dir = resolve('.', start);
	let tmp, stats = statSync(dir);

	if (!stats.isDirectory()) {
		dir = dirname(dir);
	}

	while (true) {
		tmp = callback(dir, readdirSync(dir));
		if (tmp) return resolve(dir, tmp);
		dir = dirname(tmp = dir);
		if (tmp === dir) break;
	}
}


/***/ }),

/***/ "./node_modules/fill-range/index.js":
/*!******************************************!*\
  !*** ./node_modules/fill-range/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/*!
 * fill-range <https://github.com/jonschlinkert/fill-range>
 *
 * Copyright (c) 2014-present, Jon Schlinkert.
 * Licensed under the MIT License.
 */



const util = __webpack_require__(/*! util */ "util");
const toRegexRange = __webpack_require__(/*! to-regex-range */ "./node_modules/to-regex-range/index.js");

const isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);

const transform = toNumber => {
  return value => toNumber === true ? Number(value) : String(value);
};

const isValidValue = value => {
  return typeof value === 'number' || (typeof value === 'string' && value !== '');
};

const isNumber = num => Number.isInteger(+num);

const zeros = input => {
  let value = `${input}`;
  let index = -1;
  if (value[0] === '-') value = value.slice(1);
  if (value === '0') return false;
  while (value[++index] === '0');
  return index > 0;
};

const stringify = (start, end, options) => {
  if (typeof start === 'string' || typeof end === 'string') {
    return true;
  }
  return options.stringify === true;
};

const pad = (input, maxLength, toNumber) => {
  if (maxLength > 0) {
    let dash = input[0] === '-' ? '-' : '';
    if (dash) input = input.slice(1);
    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));
  }
  if (toNumber === false) {
    return String(input);
  }
  return input;
};

const toMaxLen = (input, maxLength) => {
  let negative = input[0] === '-' ? '-' : '';
  if (negative) {
    input = input.slice(1);
    maxLength--;
  }
  while (input.length < maxLength) input = '0' + input;
  return negative ? ('-' + input) : input;
};

const toSequence = (parts, options, maxLen) => {
  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);
  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);

  let prefix = options.capture ? '' : '?:';
  let positives = '';
  let negatives = '';
  let result;

  if (parts.positives.length) {
    positives = parts.positives.map(v => toMaxLen(String(v), maxLen)).join('|');
  }

  if (parts.negatives.length) {
    negatives = `-(${prefix}${parts.negatives.map(v => toMaxLen(String(v), maxLen)).join('|')})`;
  }

  if (positives && negatives) {
    result = `${positives}|${negatives}`;
  } else {
    result = positives || negatives;
  }

  if (options.wrap) {
    return `(${prefix}${result})`;
  }

  return result;
};

const toRange = (a, b, isNumbers, options) => {
  if (isNumbers) {
    return toRegexRange(a, b, { wrap: false, ...options });
  }

  let start = String.fromCharCode(a);
  if (a === b) return start;

  let stop = String.fromCharCode(b);
  return `[${start}-${stop}]`;
};

const toRegex = (start, end, options) => {
  if (Array.isArray(start)) {
    let wrap = options.wrap === true;
    let prefix = options.capture ? '' : '?:';
    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');
  }
  return toRegexRange(start, end, options);
};

const rangeError = (...args) => {
  return new RangeError('Invalid range arguments: ' + util.inspect(...args));
};

const invalidRange = (start, end, options) => {
  if (options.strictRanges === true) throw rangeError([start, end]);
  return [];
};

const invalidStep = (step, options) => {
  if (options.strictRanges === true) {
    throw new TypeError(`Expected step "${step}" to be a number`);
  }
  return [];
};

const fillNumbers = (start, end, step = 1, options = {}) => {
  let a = Number(start);
  let b = Number(end);

  if (!Number.isInteger(a) || !Number.isInteger(b)) {
    if (options.strictRanges === true) throw rangeError([start, end]);
    return [];
  }

  // fix negative zero
  if (a === 0) a = 0;
  if (b === 0) b = 0;

  let descending = a > b;
  let startString = String(start);
  let endString = String(end);
  let stepString = String(step);
  step = Math.max(Math.abs(step), 1);

  let padded = zeros(startString) || zeros(endString) || zeros(stepString);
  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;
  let toNumber = padded === false && stringify(start, end, options) === false;
  let format = options.transform || transform(toNumber);

  if (options.toRegex && step === 1) {
    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);
  }

  let parts = { negatives: [], positives: [] };
  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));
  let range = [];
  let index = 0;

  while (descending ? a >= b : a <= b) {
    if (options.toRegex === true && step > 1) {
      push(a);
    } else {
      range.push(pad(format(a, index), maxLen, toNumber));
    }
    a = descending ? a - step : a + step;
    index++;
  }

  if (options.toRegex === true) {
    return step > 1
      ? toSequence(parts, options, maxLen)
      : toRegex(range, null, { wrap: false, ...options });
  }

  return range;
};

const fillLetters = (start, end, step = 1, options = {}) => {
  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {
    return invalidRange(start, end, options);
  }

  let format = options.transform || (val => String.fromCharCode(val));
  let a = `${start}`.charCodeAt(0);
  let b = `${end}`.charCodeAt(0);

  let descending = a > b;
  let min = Math.min(a, b);
  let max = Math.max(a, b);

  if (options.toRegex && step === 1) {
    return toRange(min, max, false, options);
  }

  let range = [];
  let index = 0;

  while (descending ? a >= b : a <= b) {
    range.push(format(a, index));
    a = descending ? a - step : a + step;
    index++;
  }

  if (options.toRegex === true) {
    return toRegex(range, null, { wrap: false, options });
  }

  return range;
};

const fill = (start, end, step, options = {}) => {
  if (end == null && isValidValue(start)) {
    return [start];
  }

  if (!isValidValue(start) || !isValidValue(end)) {
    return invalidRange(start, end, options);
  }

  if (typeof step === 'function') {
    return fill(start, end, 1, { transform: step });
  }

  if (isObject(step)) {
    return fill(start, end, 0, step);
  }

  let opts = { ...options };
  if (opts.capture === true) opts.wrap = true;
  step = step || opts.step || 1;

  if (!isNumber(step)) {
    if (step != null && !isObject(step)) return invalidStep(step, opts);
    return fill(start, end, 1, step);
  }

  if (isNumber(start) && isNumber(end)) {
    return fillNumbers(start, end, step, opts);
  }

  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);
};

module.exports = fill;


/***/ }),

/***/ "./node_modules/get-caller-file/index.js":
/*!***********************************************!*\
  !*** ./node_modules/get-caller-file/index.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";

// Call this function in a another function to find out the file from
// which that function was called from. (Inspects the v8 stack trace)
//
// Inspired by http://stackoverflow.com/questions/13227489
module.exports = function getCallerFile(position) {
    if (position === void 0) { position = 2; }
    if (position >= Error.stackTraceLimit) {
        throw new TypeError('getCallerFile(position) requires position be less then Error.stackTraceLimit but position was: `' + position + '` and Error.stackTraceLimit was: `' + Error.stackTraceLimit + '`');
    }
    var oldPrepareStackTrace = Error.prepareStackTrace;
    Error.prepareStackTrace = function (_, stack) { return stack; };
    var stack = new Error().stack;
    Error.prepareStackTrace = oldPrepareStackTrace;
    if (stack !== null && typeof stack === 'object') {
        // stack[0] holds this file
        // stack[1] holds where this function was called
        // stack[2] holds the file we're interested in
        return stack[position] ? stack[position].getFileName() : undefined;
    }
};
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/is-binary-path/index.js":
/*!**********************************************!*\
  !*** ./node_modules/is-binary-path/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

const path = __webpack_require__(/*! path */ "path");
const binaryExtensions = __webpack_require__(/*! binary-extensions */ "./node_modules/binary-extensions/index.js");

const extensions = new Set(binaryExtensions);

module.exports = filePath => extensions.has(path.extname(filePath).slice(1).toLowerCase());


/***/ }),

/***/ "./node_modules/is-extglob/index.js":
/*!******************************************!*\
  !*** ./node_modules/is-extglob/index.js ***!
  \******************************************/
/***/ ((module) => {

/*!
 * is-extglob <https://github.com/jonschlinkert/is-extglob>
 *
 * Copyright (c) 2014-2016, Jon Schlinkert.
 * Licensed under the MIT License.
 */

module.exports = function isExtglob(str) {
  if (typeof str !== 'string' || str === '') {
    return false;
  }

  var match;
  while ((match = /(\\).|([@?!+*]\(.*\))/g.exec(str))) {
    if (match[2]) return true;
    str = str.slice(match.index + match[0].length);
  }

  return false;
};


/***/ }),

/***/ "./node_modules/is-fullwidth-code-point/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/is-fullwidth-code-point/index.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
/* eslint-disable yoda */


const isFullwidthCodePoint = codePoint => {
	if (Number.isNaN(codePoint)) {
		return false;
	}

	// Code points are derived from:
	// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt
	if (
		codePoint >= 0x1100 && (
			codePoint <= 0x115F || // Hangul Jamo
			codePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET
			codePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET
			// CJK Radicals Supplement .. Enclosed CJK Letters and Months
			(0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F) ||
			// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A
			(0x3250 <= codePoint && codePoint <= 0x4DBF) ||
			// CJK Unified Ideographs .. Yi Radicals
			(0x4E00 <= codePoint && codePoint <= 0xA4C6) ||
			// Hangul Jamo Extended-A
			(0xA960 <= codePoint && codePoint <= 0xA97C) ||
			// Hangul Syllables
			(0xAC00 <= codePoint && codePoint <= 0xD7A3) ||
			// CJK Compatibility Ideographs
			(0xF900 <= codePoint && codePoint <= 0xFAFF) ||
			// Vertical Forms
			(0xFE10 <= codePoint && codePoint <= 0xFE19) ||
			// CJK Compatibility Forms .. Small Form Variants
			(0xFE30 <= codePoint && codePoint <= 0xFE6B) ||
			// Halfwidth and Fullwidth Forms
			(0xFF01 <= codePoint && codePoint <= 0xFF60) ||
			(0xFFE0 <= codePoint && codePoint <= 0xFFE6) ||
			// Kana Supplement
			(0x1B000 <= codePoint && codePoint <= 0x1B001) ||
			// Enclosed Ideographic Supplement
			(0x1F200 <= codePoint && codePoint <= 0x1F251) ||
			// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane
			(0x20000 <= codePoint && codePoint <= 0x3FFFD)
		)
	) {
		return true;
	}

	return false;
};

module.exports = isFullwidthCodePoint;
module.exports["default"] = isFullwidthCodePoint;


/***/ }),

/***/ "./node_modules/is-glob/index.js":
/*!***************************************!*\
  !*** ./node_modules/is-glob/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*!
 * is-glob <https://github.com/jonschlinkert/is-glob>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */

var isExtglob = __webpack_require__(/*! is-extglob */ "./node_modules/is-extglob/index.js");
var chars = { '{': '}', '(': ')', '[': ']'};
var strictCheck = function(str) {
  if (str[0] === '!') {
    return true;
  }
  var index = 0;
  var pipeIndex = -2;
  var closeSquareIndex = -2;
  var closeCurlyIndex = -2;
  var closeParenIndex = -2;
  var backSlashIndex = -2;
  while (index < str.length) {
    if (str[index] === '*') {
      return true;
    }

    if (str[index + 1] === '?' && /[\].+)]/.test(str[index])) {
      return true;
    }

    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {
      if (closeSquareIndex < index) {
        closeSquareIndex = str.indexOf(']', index);
      }
      if (closeSquareIndex > index) {
        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {
          return true;
        }
        backSlashIndex = str.indexOf('\\', index);
        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {
          return true;
        }
      }
    }

    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {
      closeCurlyIndex = str.indexOf('}', index);
      if (closeCurlyIndex > index) {
        backSlashIndex = str.indexOf('\\', index);
        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {
          return true;
        }
      }
    }

    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {
      closeParenIndex = str.indexOf(')', index);
      if (closeParenIndex > index) {
        backSlashIndex = str.indexOf('\\', index);
        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {
          return true;
        }
      }
    }

    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {
      if (pipeIndex < index) {
        pipeIndex = str.indexOf('|', index);
      }
      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {
        closeParenIndex = str.indexOf(')', pipeIndex);
        if (closeParenIndex > pipeIndex) {
          backSlashIndex = str.indexOf('\\', pipeIndex);
          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {
            return true;
          }
        }
      }
    }

    if (str[index] === '\\') {
      var open = str[index + 1];
      index += 2;
      var close = chars[open];

      if (close) {
        var n = str.indexOf(close, index);
        if (n !== -1) {
          index = n + 1;
        }
      }

      if (str[index] === '!') {
        return true;
      }
    } else {
      index++;
    }
  }
  return false;
};

var relaxedCheck = function(str) {
  if (str[0] === '!') {
    return true;
  }
  var index = 0;
  while (index < str.length) {
    if (/[*?{}()[\]]/.test(str[index])) {
      return true;
    }

    if (str[index] === '\\') {
      var open = str[index + 1];
      index += 2;
      var close = chars[open];

      if (close) {
        var n = str.indexOf(close, index);
        if (n !== -1) {
          index = n + 1;
        }
      }

      if (str[index] === '!') {
        return true;
      }
    } else {
      index++;
    }
  }
  return false;
};

module.exports = function isGlob(str, options) {
  if (typeof str !== 'string' || str === '') {
    return false;
  }

  if (isExtglob(str)) {
    return true;
  }

  var check = strictCheck;

  // optionally relax check
  if (options && options.strict === false) {
    check = relaxedCheck;
  }

  return check(str);
};


/***/ }),

/***/ "./node_modules/is-number/index.js":
/*!*****************************************!*\
  !*** ./node_modules/is-number/index.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
/*!
 * is-number <https://github.com/jonschlinkert/is-number>
 *
 * Copyright (c) 2014-present, Jon Schlinkert.
 * Released under the MIT License.
 */



module.exports = function(num) {
  if (typeof num === 'number') {
    return num - num === 0;
  }
  if (typeof num === 'string' && num.trim() !== '') {
    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);
  }
  return false;
};


/***/ }),

/***/ "./node_modules/isexe/index.js":
/*!*************************************!*\
  !*** ./node_modules/isexe/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fs = __webpack_require__(/*! fs */ "fs")
var core
if (process.platform === 'win32' || global.TESTING_WINDOWS) {
  core = __webpack_require__(/*! ./windows.js */ "./node_modules/isexe/windows.js")
} else {
  core = __webpack_require__(/*! ./mode.js */ "./node_modules/isexe/mode.js")
}

module.exports = isexe
isexe.sync = sync

function isexe (path, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  if (!cb) {
    if (typeof Promise !== 'function') {
      throw new TypeError('callback not provided')
    }

    return new Promise(function (resolve, reject) {
      isexe(path, options || {}, function (er, is) {
        if (er) {
          reject(er)
        } else {
          resolve(is)
        }
      })
    })
  }

  core(path, options || {}, function (er, is) {
    // ignore EACCES because that just means we aren't allowed to run it
    if (er) {
      if (er.code === 'EACCES' || options && options.ignoreErrors) {
        er = null
        is = false
      }
    }
    cb(er, is)
  })
}

function sync (path, options) {
  // my kingdom for a filtered catch
  try {
    return core.sync(path, options || {})
  } catch (er) {
    if (options && options.ignoreErrors || er.code === 'EACCES') {
      return false
    } else {
      throw er
    }
  }
}


/***/ }),

/***/ "./node_modules/isexe/mode.js":
/*!************************************!*\
  !*** ./node_modules/isexe/mode.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = isexe
isexe.sync = sync

var fs = __webpack_require__(/*! fs */ "fs")

function isexe (path, options, cb) {
  fs.stat(path, function (er, stat) {
    cb(er, er ? false : checkStat(stat, options))
  })
}

function sync (path, options) {
  return checkStat(fs.statSync(path), options)
}

function checkStat (stat, options) {
  return stat.isFile() && checkMode(stat, options)
}

function checkMode (stat, options) {
  var mod = stat.mode
  var uid = stat.uid
  var gid = stat.gid

  var myUid = options.uid !== undefined ?
    options.uid : process.getuid && process.getuid()
  var myGid = options.gid !== undefined ?
    options.gid : process.getgid && process.getgid()

  var u = parseInt('100', 8)
  var g = parseInt('010', 8)
  var o = parseInt('001', 8)
  var ug = u | g

  var ret = (mod & o) ||
    (mod & g) && gid === myGid ||
    (mod & u) && uid === myUid ||
    (mod & ug) && myUid === 0

  return ret
}


/***/ }),

/***/ "./node_modules/isexe/windows.js":
/*!***************************************!*\
  !*** ./node_modules/isexe/windows.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = isexe
isexe.sync = sync

var fs = __webpack_require__(/*! fs */ "fs")

function checkPathExt (path, options) {
  var pathext = options.pathExt !== undefined ?
    options.pathExt : process.env.PATHEXT

  if (!pathext) {
    return true
  }

  pathext = pathext.split(';')
  if (pathext.indexOf('') !== -1) {
    return true
  }
  for (var i = 0; i < pathext.length; i++) {
    var p = pathext[i].toLowerCase()
    if (p && path.substr(-p.length).toLowerCase() === p) {
      return true
    }
  }
  return false
}

function checkStat (stat, path, options) {
  if (!stat.isSymbolicLink() && !stat.isFile()) {
    return false
  }
  return checkPathExt(path, options)
}

function isexe (path, options, cb) {
  fs.stat(path, function (er, stat) {
    cb(er, er ? false : checkStat(stat, path, options))
  })
}

function sync (path, options) {
  return checkStat(fs.statSync(path), path, options)
}


/***/ }),

/***/ "./node_modules/normalize-path/index.js":
/*!**********************************************!*\
  !*** ./node_modules/normalize-path/index.js ***!
  \**********************************************/
/***/ ((module) => {

/*!
 * normalize-path <https://github.com/jonschlinkert/normalize-path>
 *
 * Copyright (c) 2014-2018, Jon Schlinkert.
 * Released under the MIT License.
 */

module.exports = function(path, stripTrailing) {
  if (typeof path !== 'string') {
    throw new TypeError('expected path to be a string');
  }

  if (path === '\\' || path === '/') return '/';

  var len = path.length;
  if (len <= 1) return path;

  // ensure that win32 namespaces has two leading slashes, so that the path is
  // handled properly by the win32 version of path.parse() after being normalized
  // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces
  var prefix = '';
  if (len > 4 && path[3] === '\\') {
    var ch = path[2];
    if ((ch === '?' || ch === '.') && path.slice(0, 2) === '\\\\') {
      path = path.slice(2);
      prefix = '//';
    }
  }

  var segs = path.split(/[/\\]+/);
  if (stripTrailing !== false && segs[segs.length - 1] === '') {
    segs.pop();
  }
  return prefix + segs.join('/');
};


/***/ }),

/***/ "./node_modules/picomatch/index.js":
/*!*****************************************!*\
  !*** ./node_modules/picomatch/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


module.exports = __webpack_require__(/*! ./lib/picomatch */ "./node_modules/picomatch/lib/picomatch.js");


/***/ }),

/***/ "./node_modules/picomatch/lib/constants.js":
/*!*************************************************!*\
  !*** ./node_modules/picomatch/lib/constants.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const path = __webpack_require__(/*! path */ "path");
const WIN_SLASH = '\\\\/';
const WIN_NO_SLASH = `[^${WIN_SLASH}]`;

/**
 * Posix glob regex
 */

const DOT_LITERAL = '\\.';
const PLUS_LITERAL = '\\+';
const QMARK_LITERAL = '\\?';
const SLASH_LITERAL = '\\/';
const ONE_CHAR = '(?=.)';
const QMARK = '[^/]';
const END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;
const START_ANCHOR = `(?:^|${SLASH_LITERAL})`;
const DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;
const NO_DOT = `(?!${DOT_LITERAL})`;
const NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;
const NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;
const NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;
const QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;
const STAR = `${QMARK}*?`;

const POSIX_CHARS = {
  DOT_LITERAL,
  PLUS_LITERAL,
  QMARK_LITERAL,
  SLASH_LITERAL,
  ONE_CHAR,
  QMARK,
  END_ANCHOR,
  DOTS_SLASH,
  NO_DOT,
  NO_DOTS,
  NO_DOT_SLASH,
  NO_DOTS_SLASH,
  QMARK_NO_DOT,
  STAR,
  START_ANCHOR
};

/**
 * Windows glob regex
 */

const WINDOWS_CHARS = {
  ...POSIX_CHARS,

  SLASH_LITERAL: `[${WIN_SLASH}]`,
  QMARK: WIN_NO_SLASH,
  STAR: `${WIN_NO_SLASH}*?`,
  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,
  NO_DOT: `(?!${DOT_LITERAL})`,
  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,
  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,
  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,
  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,
  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,
  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`
};

/**
 * POSIX Bracket Regex
 */

const POSIX_REGEX_SOURCE = {
  alnum: 'a-zA-Z0-9',
  alpha: 'a-zA-Z',
  ascii: '\\x00-\\x7F',
  blank: ' \\t',
  cntrl: '\\x00-\\x1F\\x7F',
  digit: '0-9',
  graph: '\\x21-\\x7E',
  lower: 'a-z',
  print: '\\x20-\\x7E ',
  punct: '\\-!"#$%&\'()\\*+,./:;<=>?@[\\]^_`{|}~',
  space: ' \\t\\r\\n\\v\\f',
  upper: 'A-Z',
  word: 'A-Za-z0-9_',
  xdigit: 'A-Fa-f0-9'
};

module.exports = {
  MAX_LENGTH: 1024 * 64,
  POSIX_REGEX_SOURCE,

  // regular expressions
  REGEX_BACKSLASH: /\\(?![*+?^${}(|)[\]])/g,
  REGEX_NON_SPECIAL_CHARS: /^[^@![\].,$*+?^{}()|\\/]+/,
  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\]]/,
  REGEX_SPECIAL_CHARS_BACKREF: /(\\?)((\W)(\3*))/g,
  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\]])/g,
  REGEX_REMOVE_BACKSLASH: /(?:\[.*?[^\\]\]|\\(?=.))/g,

  // Replace globs with equivalent patterns to reduce parsing time.
  REPLACEMENTS: {
    '***': '*',
    '**/**': '**',
    '**/**/**': '**'
  },

  // Digits
  CHAR_0: 48, /* 0 */
  CHAR_9: 57, /* 9 */

  // Alphabet chars.
  CHAR_UPPERCASE_A: 65, /* A */
  CHAR_LOWERCASE_A: 97, /* a */
  CHAR_UPPERCASE_Z: 90, /* Z */
  CHAR_LOWERCASE_Z: 122, /* z */

  CHAR_LEFT_PARENTHESES: 40, /* ( */
  CHAR_RIGHT_PARENTHESES: 41, /* ) */

  CHAR_ASTERISK: 42, /* * */

  // Non-alphabetic chars.
  CHAR_AMPERSAND: 38, /* & */
  CHAR_AT: 64, /* @ */
  CHAR_BACKWARD_SLASH: 92, /* \ */
  CHAR_CARRIAGE_RETURN: 13, /* \r */
  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */
  CHAR_COLON: 58, /* : */
  CHAR_COMMA: 44, /* , */
  CHAR_DOT: 46, /* . */
  CHAR_DOUBLE_QUOTE: 34, /* " */
  CHAR_EQUAL: 61, /* = */
  CHAR_EXCLAMATION_MARK: 33, /* ! */
  CHAR_FORM_FEED: 12, /* \f */
  CHAR_FORWARD_SLASH: 47, /* / */
  CHAR_GRAVE_ACCENT: 96, /* ` */
  CHAR_HASH: 35, /* # */
  CHAR_HYPHEN_MINUS: 45, /* - */
  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */
  CHAR_LEFT_CURLY_BRACE: 123, /* { */
  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */
  CHAR_LINE_FEED: 10, /* \n */
  CHAR_NO_BREAK_SPACE: 160, /* \u00A0 */
  CHAR_PERCENT: 37, /* % */
  CHAR_PLUS: 43, /* + */
  CHAR_QUESTION_MARK: 63, /* ? */
  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */
  CHAR_RIGHT_CURLY_BRACE: 125, /* } */
  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */
  CHAR_SEMICOLON: 59, /* ; */
  CHAR_SINGLE_QUOTE: 39, /* ' */
  CHAR_SPACE: 32, /*   */
  CHAR_TAB: 9, /* \t */
  CHAR_UNDERSCORE: 95, /* _ */
  CHAR_VERTICAL_LINE: 124, /* | */
  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \uFEFF */

  SEP: path.sep,

  /**
   * Create EXTGLOB_CHARS
   */

  extglobChars(chars) {
    return {
      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },
      '?': { type: 'qmark', open: '(?:', close: ')?' },
      '+': { type: 'plus', open: '(?:', close: ')+' },
      '*': { type: 'star', open: '(?:', close: ')*' },
      '@': { type: 'at', open: '(?:', close: ')' }
    };
  },

  /**
   * Create GLOB_CHARS
   */

  globChars(win32) {
    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;
  }
};


/***/ }),

/***/ "./node_modules/picomatch/lib/parse.js":
/*!*********************************************!*\
  !*** ./node_modules/picomatch/lib/parse.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const constants = __webpack_require__(/*! ./constants */ "./node_modules/picomatch/lib/constants.js");
const utils = __webpack_require__(/*! ./utils */ "./node_modules/picomatch/lib/utils.js");

/**
 * Constants
 */

const {
  MAX_LENGTH,
  POSIX_REGEX_SOURCE,
  REGEX_NON_SPECIAL_CHARS,
  REGEX_SPECIAL_CHARS_BACKREF,
  REPLACEMENTS
} = constants;

/**
 * Helpers
 */

const expandRange = (args, options) => {
  if (typeof options.expandRange === 'function') {
    return options.expandRange(...args, options);
  }

  args.sort();
  const value = `[${args.join('-')}]`;

  try {
    /* eslint-disable-next-line no-new */
    new RegExp(value);
  } catch (ex) {
    return args.map(v => utils.escapeRegex(v)).join('..');
  }

  return value;
};

/**
 * Create the message for a syntax error
 */

const syntaxError = (type, char) => {
  return `Missing ${type}: "${char}" - use "\\\\${char}" to match literal characters`;
};

/**
 * Parse the given input string.
 * @param {String} input
 * @param {Object} options
 * @return {Object}
 */

const parse = (input, options) => {
  if (typeof input !== 'string') {
    throw new TypeError('Expected a string');
  }

  input = REPLACEMENTS[input] || input;

  const opts = { ...options };
  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;

  let len = input.length;
  if (len > max) {
    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);
  }

  const bos = { type: 'bos', value: '', output: opts.prepend || '' };
  const tokens = [bos];

  const capture = opts.capture ? '' : '?:';
  const win32 = utils.isWindows(options);

  // create constants based on platform, for windows or posix
  const PLATFORM_CHARS = constants.globChars(win32);
  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);

  const {
    DOT_LITERAL,
    PLUS_LITERAL,
    SLASH_LITERAL,
    ONE_CHAR,
    DOTS_SLASH,
    NO_DOT,
    NO_DOT_SLASH,
    NO_DOTS_SLASH,
    QMARK,
    QMARK_NO_DOT,
    STAR,
    START_ANCHOR
  } = PLATFORM_CHARS;

  const globstar = opts => {
    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;
  };

  const nodot = opts.dot ? '' : NO_DOT;
  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;
  let star = opts.bash === true ? globstar(opts) : STAR;

  if (opts.capture) {
    star = `(${star})`;
  }

  // minimatch options support
  if (typeof opts.noext === 'boolean') {
    opts.noextglob = opts.noext;
  }

  const state = {
    input,
    index: -1,
    start: 0,
    dot: opts.dot === true,
    consumed: '',
    output: '',
    prefix: '',
    backtrack: false,
    negated: false,
    brackets: 0,
    braces: 0,
    parens: 0,
    quotes: 0,
    globstar: false,
    tokens
  };

  input = utils.removePrefix(input, state);
  len = input.length;

  const extglobs = [];
  const braces = [];
  const stack = [];
  let prev = bos;
  let value;

  /**
   * Tokenizing helpers
   */

  const eos = () => state.index === len - 1;
  const peek = state.peek = (n = 1) => input[state.index + n];
  const advance = state.advance = () => input[++state.index] || '';
  const remaining = () => input.slice(state.index + 1);
  const consume = (value = '', num = 0) => {
    state.consumed += value;
    state.index += num;
  };

  const append = token => {
    state.output += token.output != null ? token.output : token.value;
    consume(token.value);
  };

  const negate = () => {
    let count = 1;

    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {
      advance();
      state.start++;
      count++;
    }

    if (count % 2 === 0) {
      return false;
    }

    state.negated = true;
    state.start++;
    return true;
  };

  const increment = type => {
    state[type]++;
    stack.push(type);
  };

  const decrement = type => {
    state[type]--;
    stack.pop();
  };

  /**
   * Push tokens onto the tokens array. This helper speeds up
   * tokenizing by 1) helping us avoid backtracking as much as possible,
   * and 2) helping us avoid creating extra tokens when consecutive
   * characters are plain text. This improves performance and simplifies
   * lookbehinds.
   */

  const push = tok => {
    if (prev.type === 'globstar') {
      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');
      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));

      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {
        state.output = state.output.slice(0, -prev.output.length);
        prev.type = 'star';
        prev.value = '*';
        prev.output = star;
        state.output += prev.output;
      }
    }

    if (extglobs.length && tok.type !== 'paren') {
      extglobs[extglobs.length - 1].inner += tok.value;
    }

    if (tok.value || tok.output) append(tok);
    if (prev && prev.type === 'text' && tok.type === 'text') {
      prev.value += tok.value;
      prev.output = (prev.output || '') + tok.value;
      return;
    }

    tok.prev = prev;
    tokens.push(tok);
    prev = tok;
  };

  const extglobOpen = (type, value) => {
    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };

    token.prev = prev;
    token.parens = state.parens;
    token.output = state.output;
    const output = (opts.capture ? '(' : '') + token.open;

    increment('parens');
    push({ type, value, output: state.output ? '' : ONE_CHAR });
    push({ type: 'paren', extglob: true, value: advance(), output });
    extglobs.push(token);
  };

  const extglobClose = token => {
    let output = token.close + (opts.capture ? ')' : '');
    let rest;

    if (token.type === 'negate') {
      let extglobStar = star;

      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {
        extglobStar = globstar(opts);
      }

      if (extglobStar !== star || eos() || /^\)+$/.test(remaining())) {
        output = token.close = `)$))${extglobStar}`;
      }

      if (token.inner.includes('*') && (rest = remaining()) && /^\.[^\\/.]+$/.test(rest)) {
        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.
        // In this case, we need to parse the string and use it in the output of the original pattern.
        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.
        //
        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.
        const expression = parse(rest, { ...options, fastpaths: false }).output;

        output = token.close = `)${expression})${extglobStar})`;
      }

      if (token.prev.type === 'bos') {
        state.negatedExtglob = true;
      }
    }

    push({ type: 'paren', extglob: true, value, output });
    decrement('parens');
  };

  /**
   * Fast paths
   */

  if (opts.fastpaths !== false && !/(^[*!]|[/()[\]{}"])/.test(input)) {
    let backslashes = false;

    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {
      if (first === '\\') {
        backslashes = true;
        return m;
      }

      if (first === '?') {
        if (esc) {
          return esc + first + (rest ? QMARK.repeat(rest.length) : '');
        }
        if (index === 0) {
          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');
        }
        return QMARK.repeat(chars.length);
      }

      if (first === '.') {
        return DOT_LITERAL.repeat(chars.length);
      }

      if (first === '*') {
        if (esc) {
          return esc + first + (rest ? star : '');
        }
        return star;
      }
      return esc ? m : `\\${m}`;
    });

    if (backslashes === true) {
      if (opts.unescape === true) {
        output = output.replace(/\\/g, '');
      } else {
        output = output.replace(/\\+/g, m => {
          return m.length % 2 === 0 ? '\\\\' : (m ? '\\' : '');
        });
      }
    }

    if (output === input && opts.contains === true) {
      state.output = input;
      return state;
    }

    state.output = utils.wrapOutput(output, state, options);
    return state;
  }

  /**
   * Tokenize input until we reach end-of-string
   */

  while (!eos()) {
    value = advance();

    if (value === '\u0000') {
      continue;
    }

    /**
     * Escaped characters
     */

    if (value === '\\') {
      const next = peek();

      if (next === '/' && opts.bash !== true) {
        continue;
      }

      if (next === '.' || next === ';') {
        continue;
      }

      if (!next) {
        value += '\\';
        push({ type: 'text', value });
        continue;
      }

      // collapse slashes to reduce potential for exploits
      const match = /^\\+/.exec(remaining());
      let slashes = 0;

      if (match && match[0].length > 2) {
        slashes = match[0].length;
        state.index += slashes;
        if (slashes % 2 !== 0) {
          value += '\\';
        }
      }

      if (opts.unescape === true) {
        value = advance();
      } else {
        value += advance();
      }

      if (state.brackets === 0) {
        push({ type: 'text', value });
        continue;
      }
    }

    /**
     * If we're inside a regex character class, continue
     * until we reach the closing bracket.
     */

    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {
      if (opts.posix !== false && value === ':') {
        const inner = prev.value.slice(1);
        if (inner.includes('[')) {
          prev.posix = true;

          if (inner.includes(':')) {
            const idx = prev.value.lastIndexOf('[');
            const pre = prev.value.slice(0, idx);
            const rest = prev.value.slice(idx + 2);
            const posix = POSIX_REGEX_SOURCE[rest];
            if (posix) {
              prev.value = pre + posix;
              state.backtrack = true;
              advance();

              if (!bos.output && tokens.indexOf(prev) === 1) {
                bos.output = ONE_CHAR;
              }
              continue;
            }
          }
        }
      }

      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {
        value = `\\${value}`;
      }

      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {
        value = `\\${value}`;
      }

      if (opts.posix === true && value === '!' && prev.value === '[') {
        value = '^';
      }

      prev.value += value;
      append({ value });
      continue;
    }

    /**
     * If we're inside a quoted string, continue
     * until we reach the closing double quote.
     */

    if (state.quotes === 1 && value !== '"') {
      value = utils.escapeRegex(value);
      prev.value += value;
      append({ value });
      continue;
    }

    /**
     * Double quotes
     */

    if (value === '"') {
      state.quotes = state.quotes === 1 ? 0 : 1;
      if (opts.keepQuotes === true) {
        push({ type: 'text', value });
      }
      continue;
    }

    /**
     * Parentheses
     */

    if (value === '(') {
      increment('parens');
      push({ type: 'paren', value });
      continue;
    }

    if (value === ')') {
      if (state.parens === 0 && opts.strictBrackets === true) {
        throw new SyntaxError(syntaxError('opening', '('));
      }

      const extglob = extglobs[extglobs.length - 1];
      if (extglob && state.parens === extglob.parens + 1) {
        extglobClose(extglobs.pop());
        continue;
      }

      push({ type: 'paren', value, output: state.parens ? ')' : '\\)' });
      decrement('parens');
      continue;
    }

    /**
     * Square brackets
     */

    if (value === '[') {
      if (opts.nobracket === true || !remaining().includes(']')) {
        if (opts.nobracket !== true && opts.strictBrackets === true) {
          throw new SyntaxError(syntaxError('closing', ']'));
        }

        value = `\\${value}`;
      } else {
        increment('brackets');
      }

      push({ type: 'bracket', value });
      continue;
    }

    if (value === ']') {
      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {
        push({ type: 'text', value, output: `\\${value}` });
        continue;
      }

      if (state.brackets === 0) {
        if (opts.strictBrackets === true) {
          throw new SyntaxError(syntaxError('opening', '['));
        }

        push({ type: 'text', value, output: `\\${value}` });
        continue;
      }

      decrement('brackets');

      const prevValue = prev.value.slice(1);
      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {
        value = `/${value}`;
      }

      prev.value += value;
      append({ value });

      // when literal brackets are explicitly disabled
      // assume we should match with a regex character class
      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {
        continue;
      }

      const escaped = utils.escapeRegex(prev.value);
      state.output = state.output.slice(0, -prev.value.length);

      // when literal brackets are explicitly enabled
      // assume we should escape the brackets to match literal characters
      if (opts.literalBrackets === true) {
        state.output += escaped;
        prev.value = escaped;
        continue;
      }

      // when the user specifies nothing, try to match both
      prev.value = `(${capture}${escaped}|${prev.value})`;
      state.output += prev.value;
      continue;
    }

    /**
     * Braces
     */

    if (value === '{' && opts.nobrace !== true) {
      increment('braces');

      const open = {
        type: 'brace',
        value,
        output: '(',
        outputIndex: state.output.length,
        tokensIndex: state.tokens.length
      };

      braces.push(open);
      push(open);
      continue;
    }

    if (value === '}') {
      const brace = braces[braces.length - 1];

      if (opts.nobrace === true || !brace) {
        push({ type: 'text', value, output: value });
        continue;
      }

      let output = ')';

      if (brace.dots === true) {
        const arr = tokens.slice();
        const range = [];

        for (let i = arr.length - 1; i >= 0; i--) {
          tokens.pop();
          if (arr[i].type === 'brace') {
            break;
          }
          if (arr[i].type !== 'dots') {
            range.unshift(arr[i].value);
          }
        }

        output = expandRange(range, opts);
        state.backtrack = true;
      }

      if (brace.comma !== true && brace.dots !== true) {
        const out = state.output.slice(0, brace.outputIndex);
        const toks = state.tokens.slice(brace.tokensIndex);
        brace.value = brace.output = '\\{';
        value = output = '\\}';
        state.output = out;
        for (const t of toks) {
          state.output += (t.output || t.value);
        }
      }

      push({ type: 'brace', value, output });
      decrement('braces');
      braces.pop();
      continue;
    }

    /**
     * Pipes
     */

    if (value === '|') {
      if (extglobs.length > 0) {
        extglobs[extglobs.length - 1].conditions++;
      }
      push({ type: 'text', value });
      continue;
    }

    /**
     * Commas
     */

    if (value === ',') {
      let output = value;

      const brace = braces[braces.length - 1];
      if (brace && stack[stack.length - 1] === 'braces') {
        brace.comma = true;
        output = '|';
      }

      push({ type: 'comma', value, output });
      continue;
    }

    /**
     * Slashes
     */

    if (value === '/') {
      // if the beginning of the glob is "./", advance the start
      // to the current index, and don't add the "./" characters
      // to the state. This greatly simplifies lookbehinds when
      // checking for BOS characters like "!" and "." (not "./")
      if (prev.type === 'dot' && state.index === state.start + 1) {
        state.start = state.index + 1;
        state.consumed = '';
        state.output = '';
        tokens.pop();
        prev = bos; // reset "prev" to the first token
        continue;
      }

      push({ type: 'slash', value, output: SLASH_LITERAL });
      continue;
    }

    /**
     * Dots
     */

    if (value === '.') {
      if (state.braces > 0 && prev.type === 'dot') {
        if (prev.value === '.') prev.output = DOT_LITERAL;
        const brace = braces[braces.length - 1];
        prev.type = 'dots';
        prev.output += value;
        prev.value += value;
        brace.dots = true;
        continue;
      }

      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {
        push({ type: 'text', value, output: DOT_LITERAL });
        continue;
      }

      push({ type: 'dot', value, output: DOT_LITERAL });
      continue;
    }

    /**
     * Question marks
     */

    if (value === '?') {
      const isGroup = prev && prev.value === '(';
      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {
        extglobOpen('qmark', value);
        continue;
      }

      if (prev && prev.type === 'paren') {
        const next = peek();
        let output = value;

        if (next === '<' && !utils.supportsLookbehinds()) {
          throw new Error('Node.js v10 or higher is required for regex lookbehinds');
        }

        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\w+>)/.test(remaining()))) {
          output = `\\${value}`;
        }

        push({ type: 'text', value, output });
        continue;
      }

      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {
        push({ type: 'qmark', value, output: QMARK_NO_DOT });
        continue;
      }

      push({ type: 'qmark', value, output: QMARK });
      continue;
    }

    /**
     * Exclamation
     */

    if (value === '!') {
      if (opts.noextglob !== true && peek() === '(') {
        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {
          extglobOpen('negate', value);
          continue;
        }
      }

      if (opts.nonegate !== true && state.index === 0) {
        negate();
        continue;
      }
    }

    /**
     * Plus
     */

    if (value === '+') {
      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {
        extglobOpen('plus', value);
        continue;
      }

      if ((prev && prev.value === '(') || opts.regex === false) {
        push({ type: 'plus', value, output: PLUS_LITERAL });
        continue;
      }

      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {
        push({ type: 'plus', value });
        continue;
      }

      push({ type: 'plus', value: PLUS_LITERAL });
      continue;
    }

    /**
     * Plain text
     */

    if (value === '@') {
      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {
        push({ type: 'at', extglob: true, value, output: '' });
        continue;
      }

      push({ type: 'text', value });
      continue;
    }

    /**
     * Plain text
     */

    if (value !== '*') {
      if (value === '$' || value === '^') {
        value = `\\${value}`;
      }

      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());
      if (match) {
        value += match[0];
        state.index += match[0].length;
      }

      push({ type: 'text', value });
      continue;
    }

    /**
     * Stars
     */

    if (prev && (prev.type === 'globstar' || prev.star === true)) {
      prev.type = 'star';
      prev.star = true;
      prev.value += value;
      prev.output = star;
      state.backtrack = true;
      state.globstar = true;
      consume(value);
      continue;
    }

    let rest = remaining();
    if (opts.noextglob !== true && /^\([^?]/.test(rest)) {
      extglobOpen('star', value);
      continue;
    }

    if (prev.type === 'star') {
      if (opts.noglobstar === true) {
        consume(value);
        continue;
      }

      const prior = prev.prev;
      const before = prior.prev;
      const isStart = prior.type === 'slash' || prior.type === 'bos';
      const afterStar = before && (before.type === 'star' || before.type === 'globstar');

      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {
        push({ type: 'star', value, output: '' });
        continue;
      }

      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');
      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');
      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {
        push({ type: 'star', value, output: '' });
        continue;
      }

      // strip consecutive `/**/`
      while (rest.slice(0, 3) === '/**') {
        const after = input[state.index + 4];
        if (after && after !== '/') {
          break;
        }
        rest = rest.slice(3);
        consume('/**', 3);
      }

      if (prior.type === 'bos' && eos()) {
        prev.type = 'globstar';
        prev.value += value;
        prev.output = globstar(opts);
        state.output = prev.output;
        state.globstar = true;
        consume(value);
        continue;
      }

      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {
        state.output = state.output.slice(0, -(prior.output + prev.output).length);
        prior.output = `(?:${prior.output}`;

        prev.type = 'globstar';
        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');
        prev.value += value;
        state.globstar = true;
        state.output += prior.output + prev.output;
        consume(value);
        continue;
      }

      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {
        const end = rest[1] !== void 0 ? '|$' : '';

        state.output = state.output.slice(0, -(prior.output + prev.output).length);
        prior.output = `(?:${prior.output}`;

        prev.type = 'globstar';
        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;
        prev.value += value;

        state.output += prior.output + prev.output;
        state.globstar = true;

        consume(value + advance());

        push({ type: 'slash', value: '/', output: '' });
        continue;
      }

      if (prior.type === 'bos' && rest[0] === '/') {
        prev.type = 'globstar';
        prev.value += value;
        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;
        state.output = prev.output;
        state.globstar = true;
        consume(value + advance());
        push({ type: 'slash', value: '/', output: '' });
        continue;
      }

      // remove single star from output
      state.output = state.output.slice(0, -prev.output.length);

      // reset previous token to globstar
      prev.type = 'globstar';
      prev.output = globstar(opts);
      prev.value += value;

      // reset output with globstar
      state.output += prev.output;
      state.globstar = true;
      consume(value);
      continue;
    }

    const token = { type: 'star', value, output: star };

    if (opts.bash === true) {
      token.output = '.*?';
      if (prev.type === 'bos' || prev.type === 'slash') {
        token.output = nodot + token.output;
      }
      push(token);
      continue;
    }

    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {
      token.output = value;
      push(token);
      continue;
    }

    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {
      if (prev.type === 'dot') {
        state.output += NO_DOT_SLASH;
        prev.output += NO_DOT_SLASH;

      } else if (opts.dot === true) {
        state.output += NO_DOTS_SLASH;
        prev.output += NO_DOTS_SLASH;

      } else {
        state.output += nodot;
        prev.output += nodot;
      }

      if (peek() !== '*') {
        state.output += ONE_CHAR;
        prev.output += ONE_CHAR;
      }
    }

    push(token);
  }

  while (state.brackets > 0) {
    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));
    state.output = utils.escapeLast(state.output, '[');
    decrement('brackets');
  }

  while (state.parens > 0) {
    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));
    state.output = utils.escapeLast(state.output, '(');
    decrement('parens');
  }

  while (state.braces > 0) {
    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));
    state.output = utils.escapeLast(state.output, '{');
    decrement('braces');
  }

  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {
    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });
  }

  // rebuild the output if we had to backtrack at any point
  if (state.backtrack === true) {
    state.output = '';

    for (const token of state.tokens) {
      state.output += token.output != null ? token.output : token.value;

      if (token.suffix) {
        state.output += token.suffix;
      }
    }
  }

  return state;
};

/**
 * Fast paths for creating regular expressions for common glob patterns.
 * This can significantly speed up processing and has very little downside
 * impact when none of the fast paths match.
 */

parse.fastpaths = (input, options) => {
  const opts = { ...options };
  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;
  const len = input.length;
  if (len > max) {
    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);
  }

  input = REPLACEMENTS[input] || input;
  const win32 = utils.isWindows(options);

  // create constants based on platform, for windows or posix
  const {
    DOT_LITERAL,
    SLASH_LITERAL,
    ONE_CHAR,
    DOTS_SLASH,
    NO_DOT,
    NO_DOTS,
    NO_DOTS_SLASH,
    STAR,
    START_ANCHOR
  } = constants.globChars(win32);

  const nodot = opts.dot ? NO_DOTS : NO_DOT;
  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;
  const capture = opts.capture ? '' : '?:';
  const state = { negated: false, prefix: '' };
  let star = opts.bash === true ? '.*?' : STAR;

  if (opts.capture) {
    star = `(${star})`;
  }

  const globstar = opts => {
    if (opts.noglobstar === true) return star;
    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;
  };

  const create = str => {
    switch (str) {
      case '*':
        return `${nodot}${ONE_CHAR}${star}`;

      case '.*':
        return `${DOT_LITERAL}${ONE_CHAR}${star}`;

      case '*.*':
        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;

      case '*/*':
        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;

      case '**':
        return nodot + globstar(opts);

      case '**/*':
        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;

      case '**/*.*':
        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;

      case '**/.*':
        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;

      default: {
        const match = /^(.*?)\.(\w+)$/.exec(str);
        if (!match) return;

        const source = create(match[1]);
        if (!source) return;

        return source + DOT_LITERAL + match[2];
      }
    }
  };

  const output = utils.removePrefix(input, state);
  let source = create(output);

  if (source && opts.strictSlashes !== true) {
    source += `${SLASH_LITERAL}?`;
  }

  return source;
};

module.exports = parse;


/***/ }),

/***/ "./node_modules/picomatch/lib/picomatch.js":
/*!*************************************************!*\
  !*** ./node_modules/picomatch/lib/picomatch.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const path = __webpack_require__(/*! path */ "path");
const scan = __webpack_require__(/*! ./scan */ "./node_modules/picomatch/lib/scan.js");
const parse = __webpack_require__(/*! ./parse */ "./node_modules/picomatch/lib/parse.js");
const utils = __webpack_require__(/*! ./utils */ "./node_modules/picomatch/lib/utils.js");
const constants = __webpack_require__(/*! ./constants */ "./node_modules/picomatch/lib/constants.js");
const isObject = val => val && typeof val === 'object' && !Array.isArray(val);

/**
 * Creates a matcher function from one or more glob patterns. The
 * returned function takes a string to match as its first argument,
 * and returns true if the string is a match. The returned matcher
 * function also takes a boolean as the second argument that, when true,
 * returns an object with additional information.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch(glob[, options]);
 *
 * const isMatch = picomatch('*.!(*a)');
 * console.log(isMatch('a.a')); //=> false
 * console.log(isMatch('a.b')); //=> true
 * ```
 * @name picomatch
 * @param {String|Array} `globs` One or more glob patterns.
 * @param {Object=} `options`
 * @return {Function=} Returns a matcher function.
 * @api public
 */

const picomatch = (glob, options, returnState = false) => {
  if (Array.isArray(glob)) {
    const fns = glob.map(input => picomatch(input, options, returnState));
    const arrayMatcher = str => {
      for (const isMatch of fns) {
        const state = isMatch(str);
        if (state) return state;
      }
      return false;
    };
    return arrayMatcher;
  }

  const isState = isObject(glob) && glob.tokens && glob.input;

  if (glob === '' || (typeof glob !== 'string' && !isState)) {
    throw new TypeError('Expected pattern to be a non-empty string');
  }

  const opts = options || {};
  const posix = utils.isWindows(options);
  const regex = isState
    ? picomatch.compileRe(glob, options)
    : picomatch.makeRe(glob, options, false, true);

  const state = regex.state;
  delete regex.state;

  let isIgnored = () => false;
  if (opts.ignore) {
    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };
    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);
  }

  const matcher = (input, returnObject = false) => {
    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });
    const result = { glob, state, regex, posix, input, output, match, isMatch };

    if (typeof opts.onResult === 'function') {
      opts.onResult(result);
    }

    if (isMatch === false) {
      result.isMatch = false;
      return returnObject ? result : false;
    }

    if (isIgnored(input)) {
      if (typeof opts.onIgnore === 'function') {
        opts.onIgnore(result);
      }
      result.isMatch = false;
      return returnObject ? result : false;
    }

    if (typeof opts.onMatch === 'function') {
      opts.onMatch(result);
    }
    return returnObject ? result : true;
  };

  if (returnState) {
    matcher.state = state;
  }

  return matcher;
};

/**
 * Test `input` with the given `regex`. This is used by the main
 * `picomatch()` function to test the input string.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.test(input, regex[, options]);
 *
 * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\/([^/]*?))$/));
 * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }
 * ```
 * @param {String} `input` String to test.
 * @param {RegExp} `regex`
 * @return {Object} Returns an object with matching info.
 * @api public
 */

picomatch.test = (input, regex, options, { glob, posix } = {}) => {
  if (typeof input !== 'string') {
    throw new TypeError('Expected input to be a string');
  }

  if (input === '') {
    return { isMatch: false, output: '' };
  }

  const opts = options || {};
  const format = opts.format || (posix ? utils.toPosixSlashes : null);
  let match = input === glob;
  let output = (match && format) ? format(input) : input;

  if (match === false) {
    output = format ? format(input) : input;
    match = output === glob;
  }

  if (match === false || opts.capture === true) {
    if (opts.matchBase === true || opts.basename === true) {
      match = picomatch.matchBase(input, regex, options, posix);
    } else {
      match = regex.exec(output);
    }
  }

  return { isMatch: Boolean(match), match, output };
};

/**
 * Match the basename of a filepath.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.matchBase(input, glob[, options]);
 * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true
 * ```
 * @param {String} `input` String to test.
 * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).
 * @return {Boolean}
 * @api public
 */

picomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {
  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);
  return regex.test(path.basename(input));
};

/**
 * Returns true if **any** of the given glob `patterns` match the specified `string`.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.isMatch(string, patterns[, options]);
 *
 * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true
 * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false
 * ```
 * @param {String|Array} str The string to test.
 * @param {String|Array} patterns One or more glob patterns to use for matching.
 * @param {Object} [options] See available [options](#options).
 * @return {Boolean} Returns true if any patterns match `str`
 * @api public
 */

picomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);

/**
 * Parse a glob pattern to create the source string for a regular
 * expression.
 *
 * ```js
 * const picomatch = require('picomatch');
 * const result = picomatch.parse(pattern[, options]);
 * ```
 * @param {String} `pattern`
 * @param {Object} `options`
 * @return {Object} Returns an object with useful properties and output to be used as a regex source string.
 * @api public
 */

picomatch.parse = (pattern, options) => {
  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));
  return parse(pattern, { ...options, fastpaths: false });
};

/**
 * Scan a glob pattern to separate the pattern into segments.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.scan(input[, options]);
 *
 * const result = picomatch.scan('!./foo/*.js');
 * console.log(result);
 * { prefix: '!./',
 *   input: '!./foo/*.js',
 *   start: 3,
 *   base: 'foo',
 *   glob: '*.js',
 *   isBrace: false,
 *   isBracket: false,
 *   isGlob: true,
 *   isExtglob: false,
 *   isGlobstar: false,
 *   negated: true }
 * ```
 * @param {String} `input` Glob pattern to scan.
 * @param {Object} `options`
 * @return {Object} Returns an object with
 * @api public
 */

picomatch.scan = (input, options) => scan(input, options);

/**
 * Compile a regular expression from the `state` object returned by the
 * [parse()](#parse) method.
 *
 * @param {Object} `state`
 * @param {Object} `options`
 * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.
 * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.
 * @return {RegExp}
 * @api public
 */

picomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {
  if (returnOutput === true) {
    return state.output;
  }

  const opts = options || {};
  const prepend = opts.contains ? '' : '^';
  const append = opts.contains ? '' : '$';

  let source = `${prepend}(?:${state.output})${append}`;
  if (state && state.negated === true) {
    source = `^(?!${source}).*$`;
  }

  const regex = picomatch.toRegex(source, options);
  if (returnState === true) {
    regex.state = state;
  }

  return regex;
};

/**
 * Create a regular expression from a parsed glob pattern.
 *
 * ```js
 * const picomatch = require('picomatch');
 * const state = picomatch.parse('*.js');
 * // picomatch.compileRe(state[, options]);
 *
 * console.log(picomatch.compileRe(state));
 * //=> /^(?:(?!\.)(?=.)[^/]*?\.js)$/
 * ```
 * @param {String} `state` The object returned from the `.parse` method.
 * @param {Object} `options`
 * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.
 * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.
 * @return {RegExp} Returns a regex created from the given pattern.
 * @api public
 */

picomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {
  if (!input || typeof input !== 'string') {
    throw new TypeError('Expected a non-empty string');
  }

  let parsed = { negated: false, fastpaths: true };

  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {
    parsed.output = parse.fastpaths(input, options);
  }

  if (!parsed.output) {
    parsed = parse(input, options);
  }

  return picomatch.compileRe(parsed, options, returnOutput, returnState);
};

/**
 * Create a regular expression from the given regex source string.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.toRegex(source[, options]);
 *
 * const { output } = picomatch.parse('*.js');
 * console.log(picomatch.toRegex(output));
 * //=> /^(?:(?!\.)(?=.)[^/]*?\.js)$/
 * ```
 * @param {String} `source` Regular expression source string.
 * @param {Object} `options`
 * @return {RegExp}
 * @api public
 */

picomatch.toRegex = (source, options) => {
  try {
    const opts = options || {};
    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));
  } catch (err) {
    if (options && options.debug === true) throw err;
    return /$^/;
  }
};

/**
 * Picomatch constants.
 * @return {Object}
 */

picomatch.constants = constants;

/**
 * Expose "picomatch"
 */

module.exports = picomatch;


/***/ }),

/***/ "./node_modules/picomatch/lib/scan.js":
/*!********************************************!*\
  !*** ./node_modules/picomatch/lib/scan.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const utils = __webpack_require__(/*! ./utils */ "./node_modules/picomatch/lib/utils.js");
const {
  CHAR_ASTERISK,             /* * */
  CHAR_AT,                   /* @ */
  CHAR_BACKWARD_SLASH,       /* \ */
  CHAR_COMMA,                /* , */
  CHAR_DOT,                  /* . */
  CHAR_EXCLAMATION_MARK,     /* ! */
  CHAR_FORWARD_SLASH,        /* / */
  CHAR_LEFT_CURLY_BRACE,     /* { */
  CHAR_LEFT_PARENTHESES,     /* ( */
  CHAR_LEFT_SQUARE_BRACKET,  /* [ */
  CHAR_PLUS,                 /* + */
  CHAR_QUESTION_MARK,        /* ? */
  CHAR_RIGHT_CURLY_BRACE,    /* } */
  CHAR_RIGHT_PARENTHESES,    /* ) */
  CHAR_RIGHT_SQUARE_BRACKET  /* ] */
} = __webpack_require__(/*! ./constants */ "./node_modules/picomatch/lib/constants.js");

const isPathSeparator = code => {
  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;
};

const depth = token => {
  if (token.isPrefix !== true) {
    token.depth = token.isGlobstar ? Infinity : 1;
  }
};

/**
 * Quickly scans a glob pattern and returns an object with a handful of
 * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),
 * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not
 * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).
 *
 * ```js
 * const pm = require('picomatch');
 * console.log(pm.scan('foo/bar/*.js'));
 * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }
 * ```
 * @param {String} `str`
 * @param {Object} `options`
 * @return {Object} Returns an object with tokens and regex source string.
 * @api public
 */

const scan = (input, options) => {
  const opts = options || {};

  const length = input.length - 1;
  const scanToEnd = opts.parts === true || opts.scanToEnd === true;
  const slashes = [];
  const tokens = [];
  const parts = [];

  let str = input;
  let index = -1;
  let start = 0;
  let lastIndex = 0;
  let isBrace = false;
  let isBracket = false;
  let isGlob = false;
  let isExtglob = false;
  let isGlobstar = false;
  let braceEscaped = false;
  let backslashes = false;
  let negated = false;
  let negatedExtglob = false;
  let finished = false;
  let braces = 0;
  let prev;
  let code;
  let token = { value: '', depth: 0, isGlob: false };

  const eos = () => index >= length;
  const peek = () => str.charCodeAt(index + 1);
  const advance = () => {
    prev = code;
    return str.charCodeAt(++index);
  };

  while (index < length) {
    code = advance();
    let next;

    if (code === CHAR_BACKWARD_SLASH) {
      backslashes = token.backslashes = true;
      code = advance();

      if (code === CHAR_LEFT_CURLY_BRACE) {
        braceEscaped = true;
      }
      continue;
    }

    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {
      braces++;

      while (eos() !== true && (code = advance())) {
        if (code === CHAR_BACKWARD_SLASH) {
          backslashes = token.backslashes = true;
          advance();
          continue;
        }

        if (code === CHAR_LEFT_CURLY_BRACE) {
          braces++;
          continue;
        }

        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {
          isBrace = token.isBrace = true;
          isGlob = token.isGlob = true;
          finished = true;

          if (scanToEnd === true) {
            continue;
          }

          break;
        }

        if (braceEscaped !== true && code === CHAR_COMMA) {
          isBrace = token.isBrace = true;
          isGlob = token.isGlob = true;
          finished = true;

          if (scanToEnd === true) {
            continue;
          }

          break;
        }

        if (code === CHAR_RIGHT_CURLY_BRACE) {
          braces--;

          if (braces === 0) {
            braceEscaped = false;
            isBrace = token.isBrace = true;
            finished = true;
            break;
          }
        }
      }

      if (scanToEnd === true) {
        continue;
      }

      break;
    }

    if (code === CHAR_FORWARD_SLASH) {
      slashes.push(index);
      tokens.push(token);
      token = { value: '', depth: 0, isGlob: false };

      if (finished === true) continue;
      if (prev === CHAR_DOT && index === (start + 1)) {
        start += 2;
        continue;
      }

      lastIndex = index + 1;
      continue;
    }

    if (opts.noext !== true) {
      const isExtglobChar = code === CHAR_PLUS
        || code === CHAR_AT
        || code === CHAR_ASTERISK
        || code === CHAR_QUESTION_MARK
        || code === CHAR_EXCLAMATION_MARK;

      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {
        isGlob = token.isGlob = true;
        isExtglob = token.isExtglob = true;
        finished = true;
        if (code === CHAR_EXCLAMATION_MARK && index === start) {
          negatedExtglob = true;
        }

        if (scanToEnd === true) {
          while (eos() !== true && (code = advance())) {
            if (code === CHAR_BACKWARD_SLASH) {
              backslashes = token.backslashes = true;
              code = advance();
              continue;
            }

            if (code === CHAR_RIGHT_PARENTHESES) {
              isGlob = token.isGlob = true;
              finished = true;
              break;
            }
          }
          continue;
        }
        break;
      }
    }

    if (code === CHAR_ASTERISK) {
      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;
      isGlob = token.isGlob = true;
      finished = true;

      if (scanToEnd === true) {
        continue;
      }
      break;
    }

    if (code === CHAR_QUESTION_MARK) {
      isGlob = token.isGlob = true;
      finished = true;

      if (scanToEnd === true) {
        continue;
      }
      break;
    }

    if (code === CHAR_LEFT_SQUARE_BRACKET) {
      while (eos() !== true && (next = advance())) {
        if (next === CHAR_BACKWARD_SLASH) {
          backslashes = token.backslashes = true;
          advance();
          continue;
        }

        if (next === CHAR_RIGHT_SQUARE_BRACKET) {
          isBracket = token.isBracket = true;
          isGlob = token.isGlob = true;
          finished = true;
          break;
        }
      }

      if (scanToEnd === true) {
        continue;
      }

      break;
    }

    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {
      negated = token.negated = true;
      start++;
      continue;
    }

    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {
      isGlob = token.isGlob = true;

      if (scanToEnd === true) {
        while (eos() !== true && (code = advance())) {
          if (code === CHAR_LEFT_PARENTHESES) {
            backslashes = token.backslashes = true;
            code = advance();
            continue;
          }

          if (code === CHAR_RIGHT_PARENTHESES) {
            finished = true;
            break;
          }
        }
        continue;
      }
      break;
    }

    if (isGlob === true) {
      finished = true;

      if (scanToEnd === true) {
        continue;
      }

      break;
    }
  }

  if (opts.noext === true) {
    isExtglob = false;
    isGlob = false;
  }

  let base = str;
  let prefix = '';
  let glob = '';

  if (start > 0) {
    prefix = str.slice(0, start);
    str = str.slice(start);
    lastIndex -= start;
  }

  if (base && isGlob === true && lastIndex > 0) {
    base = str.slice(0, lastIndex);
    glob = str.slice(lastIndex);
  } else if (isGlob === true) {
    base = '';
    glob = str;
  } else {
    base = str;
  }

  if (base && base !== '' && base !== '/' && base !== str) {
    if (isPathSeparator(base.charCodeAt(base.length - 1))) {
      base = base.slice(0, -1);
    }
  }

  if (opts.unescape === true) {
    if (glob) glob = utils.removeBackslashes(glob);

    if (base && backslashes === true) {
      base = utils.removeBackslashes(base);
    }
  }

  const state = {
    prefix,
    input,
    start,
    base,
    glob,
    isBrace,
    isBracket,
    isGlob,
    isExtglob,
    isGlobstar,
    negated,
    negatedExtglob
  };

  if (opts.tokens === true) {
    state.maxDepth = 0;
    if (!isPathSeparator(code)) {
      tokens.push(token);
    }
    state.tokens = tokens;
  }

  if (opts.parts === true || opts.tokens === true) {
    let prevIndex;

    for (let idx = 0; idx < slashes.length; idx++) {
      const n = prevIndex ? prevIndex + 1 : start;
      const i = slashes[idx];
      const value = input.slice(n, i);
      if (opts.tokens) {
        if (idx === 0 && start !== 0) {
          tokens[idx].isPrefix = true;
          tokens[idx].value = prefix;
        } else {
          tokens[idx].value = value;
        }
        depth(tokens[idx]);
        state.maxDepth += tokens[idx].depth;
      }
      if (idx !== 0 || value !== '') {
        parts.push(value);
      }
      prevIndex = i;
    }

    if (prevIndex && prevIndex + 1 < input.length) {
      const value = input.slice(prevIndex + 1);
      parts.push(value);

      if (opts.tokens) {
        tokens[tokens.length - 1].value = value;
        depth(tokens[tokens.length - 1]);
        state.maxDepth += tokens[tokens.length - 1].depth;
      }
    }

    state.slashes = slashes;
    state.parts = parts;
  }

  return state;
};

module.exports = scan;


/***/ }),

/***/ "./node_modules/picomatch/lib/utils.js":
/*!*********************************************!*\
  !*** ./node_modules/picomatch/lib/utils.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const path = __webpack_require__(/*! path */ "path");
const win32 = process.platform === 'win32';
const {
  REGEX_BACKSLASH,
  REGEX_REMOVE_BACKSLASH,
  REGEX_SPECIAL_CHARS,
  REGEX_SPECIAL_CHARS_GLOBAL
} = __webpack_require__(/*! ./constants */ "./node_modules/picomatch/lib/constants.js");

exports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);
exports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);
exports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);
exports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\$1');
exports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');

exports.removeBackslashes = str => {
  return str.replace(REGEX_REMOVE_BACKSLASH, match => {
    return match === '\\' ? '' : match;
  });
};

exports.supportsLookbehinds = () => {
  const segs = process.version.slice(1).split('.').map(Number);
  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {
    return true;
  }
  return false;
};

exports.isWindows = options => {
  if (options && typeof options.windows === 'boolean') {
    return options.windows;
  }
  return win32 === true || path.sep === '\\';
};

exports.escapeLast = (input, char, lastIdx) => {
  const idx = input.lastIndexOf(char, lastIdx);
  if (idx === -1) return input;
  if (input[idx - 1] === '\\') return exports.escapeLast(input, char, idx - 1);
  return `${input.slice(0, idx)}\\${input.slice(idx)}`;
};

exports.removePrefix = (input, state = {}) => {
  let output = input;
  if (output.startsWith('./')) {
    output = output.slice(2);
    state.prefix = './';
  }
  return output;
};

exports.wrapOutput = (input, state = {}, options = {}) => {
  const prepend = options.contains ? '' : '^';
  const append = options.contains ? '' : '$';

  let output = `${prepend}(?:${input})${append}`;
  if (state.negated === true) {
    output = `(?:^(?!${output}).*$)`;
  }
  return output;
};


/***/ }),

/***/ "./node_modules/readdirp/index.js":
/*!****************************************!*\
  !*** ./node_modules/readdirp/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const fs = __webpack_require__(/*! fs */ "fs");
const { Readable } = __webpack_require__(/*! stream */ "stream");
const sysPath = __webpack_require__(/*! path */ "path");
const { promisify } = __webpack_require__(/*! util */ "util");
const picomatch = __webpack_require__(/*! picomatch */ "./node_modules/picomatch/index.js");

const readdir = promisify(fs.readdir);
const stat = promisify(fs.stat);
const lstat = promisify(fs.lstat);
const realpath = promisify(fs.realpath);

/**
 * @typedef {Object} EntryInfo
 * @property {String} path
 * @property {String} fullPath
 * @property {fs.Stats=} stats
 * @property {fs.Dirent=} dirent
 * @property {String} basename
 */

const BANG = '!';
const RECURSIVE_ERROR_CODE = 'READDIRP_RECURSIVE_ERROR';
const NORMAL_FLOW_ERRORS = new Set(['ENOENT', 'EPERM', 'EACCES', 'ELOOP', RECURSIVE_ERROR_CODE]);
const FILE_TYPE = 'files';
const DIR_TYPE = 'directories';
const FILE_DIR_TYPE = 'files_directories';
const EVERYTHING_TYPE = 'all';
const ALL_TYPES = [FILE_TYPE, DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE];

const isNormalFlowError = error => NORMAL_FLOW_ERRORS.has(error.code);
const [maj, min] = process.versions.node.split('.').slice(0, 2).map(n => Number.parseInt(n, 10));
const wantBigintFsStats = process.platform === 'win32' && (maj > 10 || (maj === 10 && min >= 5));

const normalizeFilter = filter => {
  if (filter === undefined) return;
  if (typeof filter === 'function') return filter;

  if (typeof filter === 'string') {
    const glob = picomatch(filter.trim());
    return entry => glob(entry.basename);
  }

  if (Array.isArray(filter)) {
    const positive = [];
    const negative = [];
    for (const item of filter) {
      const trimmed = item.trim();
      if (trimmed.charAt(0) === BANG) {
        negative.push(picomatch(trimmed.slice(1)));
      } else {
        positive.push(picomatch(trimmed));
      }
    }

    if (negative.length > 0) {
      if (positive.length > 0) {
        return entry =>
          positive.some(f => f(entry.basename)) && !negative.some(f => f(entry.basename));
      }
      return entry => !negative.some(f => f(entry.basename));
    }
    return entry => positive.some(f => f(entry.basename));
  }
};

class ReaddirpStream extends Readable {
  static get defaultOptions() {
    return {
      root: '.',
      /* eslint-disable no-unused-vars */
      fileFilter: (path) => true,
      directoryFilter: (path) => true,
      /* eslint-enable no-unused-vars */
      type: FILE_TYPE,
      lstat: false,
      depth: 2147483648,
      alwaysStat: false
    };
  }

  constructor(options = {}) {
    super({
      objectMode: true,
      autoDestroy: true,
      highWaterMark: options.highWaterMark || 4096
    });
    const opts = { ...ReaddirpStream.defaultOptions, ...options };
    const { root, type } = opts;

    this._fileFilter = normalizeFilter(opts.fileFilter);
    this._directoryFilter = normalizeFilter(opts.directoryFilter);

    const statMethod = opts.lstat ? lstat : stat;
    // Use bigint stats if it's windows and stat() supports options (node 10+).
    if (wantBigintFsStats) {
      this._stat = path => statMethod(path, { bigint: true });
    } else {
      this._stat = statMethod;
    }

    this._maxDepth = opts.depth;
    this._wantsDir = [DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);
    this._wantsFile = [FILE_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);
    this._wantsEverything = type === EVERYTHING_TYPE;
    this._root = sysPath.resolve(root);
    this._isDirent = ('Dirent' in fs) && !opts.alwaysStat;
    this._statsProp = this._isDirent ? 'dirent' : 'stats';
    this._rdOptions = { encoding: 'utf8', withFileTypes: this._isDirent };

    // Launch stream with one parent, the root dir.
    this.parents = [this._exploreDir(root, 1)];
    this.reading = false;
    this.parent = undefined;
  }

  async _read(batch) {
    if (this.reading) return;
    this.reading = true;

    try {
      while (!this.destroyed && batch > 0) {
        const { path, depth, files = [] } = this.parent || {};

        if (files.length > 0) {
          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));
          for (const entry of await Promise.all(slice)) {
            if (this.destroyed) return;

            const entryType = await this._getEntryType(entry);
            if (entryType === 'directory' && this._directoryFilter(entry)) {
              if (depth <= this._maxDepth) {
                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));
              }

              if (this._wantsDir) {
                this.push(entry);
                batch--;
              }
            } else if ((entryType === 'file' || this._includeAsFile(entry)) && this._fileFilter(entry)) {
              if (this._wantsFile) {
                this.push(entry);
                batch--;
              }
            }
          }
        } else {
          const parent = this.parents.pop();
          if (!parent) {
            this.push(null);
            break;
          }
          this.parent = await parent;
          if (this.destroyed) return;
        }
      }
    } catch (error) {
      this.destroy(error);
    } finally {
      this.reading = false;
    }
  }

  async _exploreDir(path, depth) {
    let files;
    try {
      files = await readdir(path, this._rdOptions);
    } catch (error) {
      this._onError(error);
    }
    return { files, depth, path };
  }

  async _formatEntry(dirent, path) {
    let entry;
    try {
      const basename = this._isDirent ? dirent.name : dirent;
      const fullPath = sysPath.resolve(sysPath.join(path, basename));
      entry = { path: sysPath.relative(this._root, fullPath), fullPath, basename };
      entry[this._statsProp] = this._isDirent ? dirent : await this._stat(fullPath);
    } catch (err) {
      this._onError(err);
    }
    return entry;
  }

  _onError(err) {
    if (isNormalFlowError(err) && !this.destroyed) {
      this.emit('warn', err);
    } else {
      this.destroy(err);
    }
  }

  async _getEntryType(entry) {
    // entry may be undefined, because a warning or an error were emitted
    // and the statsProp is undefined
    const stats = entry && entry[this._statsProp];
    if (!stats) {
      return;
    }
    if (stats.isFile()) {
      return 'file';
    }
    if (stats.isDirectory()) {
      return 'directory';
    }
    if (stats && stats.isSymbolicLink()) {
      const full = entry.fullPath;
      try {
        const entryRealPath = await realpath(full);
        const entryRealPathStats = await lstat(entryRealPath);
        if (entryRealPathStats.isFile()) {
          return 'file';
        }
        if (entryRealPathStats.isDirectory()) {
          const len = entryRealPath.length;
          if (full.startsWith(entryRealPath) && full.substr(len, 1) === sysPath.sep) {
            const recursiveError = new Error(
              `Circular symlink detected: "${full}" points to "${entryRealPath}"`
            );
            recursiveError.code = RECURSIVE_ERROR_CODE;
            return this._onError(recursiveError);
          }
          return 'directory';
        }
      } catch (error) {
        this._onError(error);
      }
    }
  }

  _includeAsFile(entry) {
    const stats = entry && entry[this._statsProp];

    return stats && this._wantsEverything && !stats.isDirectory();
  }
}

/**
 * @typedef {Object} ReaddirpArguments
 * @property {Function=} fileFilter
 * @property {Function=} directoryFilter
 * @property {String=} type
 * @property {Number=} depth
 * @property {String=} root
 * @property {Boolean=} lstat
 * @property {Boolean=} bigint
 */

/**
 * Main function which ends up calling readdirRec and reads all files and directories in given root recursively.
 * @param {String} root Root directory
 * @param {ReaddirpArguments=} options Options to specify root (start directory), filters and recursion depth
 */
const readdirp = (root, options = {}) => {
  let type = options.entryType || options.type;
  if (type === 'both') type = FILE_DIR_TYPE; // backwards-compatibility
  if (type) options.type = type;
  if (!root) {
    throw new Error('readdirp: root argument is required. Usage: readdirp(root, options)');
  } else if (typeof root !== 'string') {
    throw new TypeError('readdirp: root argument must be a string. Usage: readdirp(root, options)');
  } else if (type && !ALL_TYPES.includes(type)) {
    throw new Error(`readdirp: Invalid type passed. Use one of ${ALL_TYPES.join(', ')}`);
  }

  options.root = root;
  return new ReaddirpStream(options);
};

const readdirpPromise = (root, options = {}) => {
  return new Promise((resolve, reject) => {
    const files = [];
    readdirp(root, options)
      .on('data', entry => files.push(entry))
      .on('end', () => resolve(files))
      .on('error', error => reject(error));
  });
};

readdirp.promise = readdirpPromise;
readdirp.ReaddirpStream = ReaddirpStream;
readdirp.default = readdirp;

module.exports = readdirp;


/***/ }),

/***/ "./node_modules/require-directory/index.js":
/*!*************************************************!*\
  !*** ./node_modules/require-directory/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var fs = __webpack_require__(/*! fs */ "fs"),
  join = (__webpack_require__(/*! path */ "path").join),
  resolve = (__webpack_require__(/*! path */ "path").resolve),
  dirname = (__webpack_require__(/*! path */ "path").dirname),
  defaultOptions = {
    extensions: ['js', 'json', 'coffee'],
    recurse: true,
    rename: function (name) {
      return name;
    },
    visit: function (obj) {
      return obj;
    }
  };

function checkFileInclusion(path, filename, options) {
  return (
    // verify file has valid extension
    (new RegExp('\\.(' + options.extensions.join('|') + ')$', 'i').test(filename)) &&

    // if options.include is a RegExp, evaluate it and make sure the path passes
    !(options.include && options.include instanceof RegExp && !options.include.test(path)) &&

    // if options.include is a function, evaluate it and make sure the path passes
    !(options.include && typeof options.include === 'function' && !options.include(path, filename)) &&

    // if options.exclude is a RegExp, evaluate it and make sure the path doesn't pass
    !(options.exclude && options.exclude instanceof RegExp && options.exclude.test(path)) &&

    // if options.exclude is a function, evaluate it and make sure the path doesn't pass
    !(options.exclude && typeof options.exclude === 'function' && options.exclude(path, filename))
  );
}

function requireDirectory(m, path, options) {
  var retval = {};

  // path is optional
  if (path && !options && typeof path !== 'string') {
    options = path;
    path = null;
  }

  // default options
  options = options || {};
  for (var prop in defaultOptions) {
    if (typeof options[prop] === 'undefined') {
      options[prop] = defaultOptions[prop];
    }
  }

  // if no path was passed in, assume the equivelant of __dirname from caller
  // otherwise, resolve path relative to the equivalent of __dirname
  path = !path ? dirname(m.filename) : resolve(dirname(m.filename), path);

  // get the path of each file in specified directory, append to current tree node, recurse
  fs.readdirSync(path).forEach(function (filename) {
    var joined = join(path, filename),
      files,
      key,
      obj;

    if (fs.statSync(joined).isDirectory() && options.recurse) {
      // this node is a directory; recurse
      files = requireDirectory(m, joined, options);
      // exclude empty directories
      if (Object.keys(files).length) {
        retval[options.rename(filename, joined, filename)] = files;
      }
    } else {
      if (joined !== m.filename && checkFileInclusion(joined, filename, options)) {
        // hash node key shouldn't include file extension
        key = filename.substring(0, filename.lastIndexOf('.'));
        obj = m.require(joined);
        retval[options.rename(key, joined, filename)] = options.visit(obj, joined, filename) || obj;
      }
    }
  });

  return retval;
}

module.exports = requireDirectory;
module.exports.defaults = defaultOptions;


/***/ }),

/***/ "./node_modules/string-width/index.js":
/*!********************************************!*\
  !*** ./node_modules/string-width/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

const stripAnsi = __webpack_require__(/*! strip-ansi */ "./node_modules/strip-ansi/index.js");
const isFullwidthCodePoint = __webpack_require__(/*! is-fullwidth-code-point */ "./node_modules/is-fullwidth-code-point/index.js");
const emojiRegex = __webpack_require__(/*! emoji-regex */ "./node_modules/emoji-regex/index.js");

const stringWidth = string => {
	if (typeof string !== 'string' || string.length === 0) {
		return 0;
	}

	string = stripAnsi(string);

	if (string.length === 0) {
		return 0;
	}

	string = string.replace(emojiRegex(), '  ');

	let width = 0;

	for (let i = 0; i < string.length; i++) {
		const code = string.codePointAt(i);

		// Ignore control characters
		if (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {
			continue;
		}

		// Ignore combining characters
		if (code >= 0x300 && code <= 0x36F) {
			continue;
		}

		// Surrogates
		if (code > 0xFFFF) {
			i++;
		}

		width += isFullwidthCodePoint(code) ? 2 : 1;
	}

	return width;
};

module.exports = stringWidth;
// TODO: remove this in the next major version
module.exports["default"] = stringWidth;


/***/ }),

/***/ "./node_modules/strip-ansi/index.js":
/*!******************************************!*\
  !*** ./node_modules/strip-ansi/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

const ansiRegex = __webpack_require__(/*! ansi-regex */ "./node_modules/ansi-regex/index.js");

module.exports = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;


/***/ }),

/***/ "./node_modules/to-regex-range/index.js":
/*!**********************************************!*\
  !*** ./node_modules/to-regex-range/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/*!
 * to-regex-range <https://github.com/micromatch/to-regex-range>
 *
 * Copyright (c) 2015-present, Jon Schlinkert.
 * Released under the MIT License.
 */



const isNumber = __webpack_require__(/*! is-number */ "./node_modules/is-number/index.js");

const toRegexRange = (min, max, options) => {
  if (isNumber(min) === false) {
    throw new TypeError('toRegexRange: expected the first argument to be a number');
  }

  if (max === void 0 || min === max) {
    return String(min);
  }

  if (isNumber(max) === false) {
    throw new TypeError('toRegexRange: expected the second argument to be a number.');
  }

  let opts = { relaxZeros: true, ...options };
  if (typeof opts.strictZeros === 'boolean') {
    opts.relaxZeros = opts.strictZeros === false;
  }

  let relax = String(opts.relaxZeros);
  let shorthand = String(opts.shorthand);
  let capture = String(opts.capture);
  let wrap = String(opts.wrap);
  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;

  if (toRegexRange.cache.hasOwnProperty(cacheKey)) {
    return toRegexRange.cache[cacheKey].result;
  }

  let a = Math.min(min, max);
  let b = Math.max(min, max);

  if (Math.abs(a - b) === 1) {
    let result = min + '|' + max;
    if (opts.capture) {
      return `(${result})`;
    }
    if (opts.wrap === false) {
      return result;
    }
    return `(?:${result})`;
  }

  let isPadded = hasPadding(min) || hasPadding(max);
  let state = { min, max, a, b };
  let positives = [];
  let negatives = [];

  if (isPadded) {
    state.isPadded = isPadded;
    state.maxLen = String(state.max).length;
  }

  if (a < 0) {
    let newMin = b < 0 ? Math.abs(b) : 1;
    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);
    a = state.a = 0;
  }

  if (b >= 0) {
    positives = splitToPatterns(a, b, state, opts);
  }

  state.negatives = negatives;
  state.positives = positives;
  state.result = collatePatterns(negatives, positives, opts);

  if (opts.capture === true) {
    state.result = `(${state.result})`;
  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {
    state.result = `(?:${state.result})`;
  }

  toRegexRange.cache[cacheKey] = state;
  return state.result;
};

function collatePatterns(neg, pos, options) {
  let onlyNegative = filterPatterns(neg, pos, '-', false, options) || [];
  let onlyPositive = filterPatterns(pos, neg, '', false, options) || [];
  let intersected = filterPatterns(neg, pos, '-?', true, options) || [];
  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);
  return subpatterns.join('|');
}

function splitToRanges(min, max) {
  let nines = 1;
  let zeros = 1;

  let stop = countNines(min, nines);
  let stops = new Set([max]);

  while (min <= stop && stop <= max) {
    stops.add(stop);
    nines += 1;
    stop = countNines(min, nines);
  }

  stop = countZeros(max + 1, zeros) - 1;

  while (min < stop && stop <= max) {
    stops.add(stop);
    zeros += 1;
    stop = countZeros(max + 1, zeros) - 1;
  }

  stops = [...stops];
  stops.sort(compare);
  return stops;
}

/**
 * Convert a range to a regex pattern
 * @param {Number} `start`
 * @param {Number} `stop`
 * @return {String}
 */

function rangeToPattern(start, stop, options) {
  if (start === stop) {
    return { pattern: start, count: [], digits: 0 };
  }

  let zipped = zip(start, stop);
  let digits = zipped.length;
  let pattern = '';
  let count = 0;

  for (let i = 0; i < digits; i++) {
    let [startDigit, stopDigit] = zipped[i];

    if (startDigit === stopDigit) {
      pattern += startDigit;

    } else if (startDigit !== '0' || stopDigit !== '9') {
      pattern += toCharacterClass(startDigit, stopDigit, options);

    } else {
      count++;
    }
  }

  if (count) {
    pattern += options.shorthand === true ? '\\d' : '[0-9]';
  }

  return { pattern, count: [count], digits };
}

function splitToPatterns(min, max, tok, options) {
  let ranges = splitToRanges(min, max);
  let tokens = [];
  let start = min;
  let prev;

  for (let i = 0; i < ranges.length; i++) {
    let max = ranges[i];
    let obj = rangeToPattern(String(start), String(max), options);
    let zeros = '';

    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {
      if (prev.count.length > 1) {
        prev.count.pop();
      }

      prev.count.push(obj.count[0]);
      prev.string = prev.pattern + toQuantifier(prev.count);
      start = max + 1;
      continue;
    }

    if (tok.isPadded) {
      zeros = padZeros(max, tok, options);
    }

    obj.string = zeros + obj.pattern + toQuantifier(obj.count);
    tokens.push(obj);
    start = max + 1;
    prev = obj;
  }

  return tokens;
}

function filterPatterns(arr, comparison, prefix, intersection, options) {
  let result = [];

  for (let ele of arr) {
    let { string } = ele;

    // only push if _both_ are negative...
    if (!intersection && !contains(comparison, 'string', string)) {
      result.push(prefix + string);
    }

    // or _both_ are positive
    if (intersection && contains(comparison, 'string', string)) {
      result.push(prefix + string);
    }
  }
  return result;
}

/**
 * Zip strings
 */

function zip(a, b) {
  let arr = [];
  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);
  return arr;
}

function compare(a, b) {
  return a > b ? 1 : b > a ? -1 : 0;
}

function contains(arr, key, val) {
  return arr.some(ele => ele[key] === val);
}

function countNines(min, len) {
  return Number(String(min).slice(0, -len) + '9'.repeat(len));
}

function countZeros(integer, zeros) {
  return integer - (integer % Math.pow(10, zeros));
}

function toQuantifier(digits) {
  let [start = 0, stop = ''] = digits;
  if (stop || start > 1) {
    return `{${start + (stop ? ',' + stop : '')}}`;
  }
  return '';
}

function toCharacterClass(a, b, options) {
  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;
}

function hasPadding(str) {
  return /^-?(0+)\d/.test(str);
}

function padZeros(value, tok, options) {
  if (!tok.isPadded) {
    return value;
  }

  let diff = Math.abs(tok.maxLen - String(value).length);
  let relax = options.relaxZeros !== false;

  switch (diff) {
    case 0:
      return '';
    case 1:
      return relax ? '0?' : '0';
    case 2:
      return relax ? '0{0,2}' : '00';
    default: {
      return relax ? `0{0,${diff}}` : `0{${diff}}`;
    }
  }
}

/**
 * Cache
 */

toRegexRange.cache = {};
toRegexRange.clearCache = () => (toRegexRange.cache = {});

/**
 * Expose `toRegexRange`
 */

module.exports = toRegexRange;


/***/ }),

/***/ "./src/ClientConnection.ts":
/*!*********************************!*\
  !*** ./src/ClientConnection.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
// Copyright 2024 The MathWorks, Inc.
const node_1 = __webpack_require__(/*! vscode-languageserver/node */ "./node_modules/vscode-languageserver/node.js");
class ClientConnection {
    /**
     * Retrieves the connection to the client. If no connection currently exists,
     * a new connection is created.
     *
     * @returns The connection to the client
     */
    static getConnection() {
        if (ClientConnection.connection == null) {
            ClientConnection.connection = (0, node_1.createConnection)(node_1.ProposedFeatures.all);
        }
        return ClientConnection.connection;
    }
    /**
     * Sets the ClientConnection to a given object.
     * This API is primarily meant for testing purposes.
     *
     * @param connection The connection object to set
     */
    static _setConnection(connection) {
        ClientConnection.connection = connection;
    }
    /**
     * Clears the current connection.
     * This API is primarily meant for testing purposes.
     */
    static _clearConnection() {
        ClientConnection.connection = undefined;
    }
}
exports["default"] = ClientConnection;


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
// Start up the LSP server
const ClientConnection_1 = __importDefault(__webpack_require__(/*! ./ClientConnection */ "./src/ClientConnection.ts"));
const server = __importStar(__webpack_require__(/*! ./server */ "./src/server.ts"));
// Start up the language server
server.startServer();
// Listen on the client connection
ClientConnection_1.default.getConnection().listen();


/***/ }),

/***/ "./src/indexing/DocumentIndexer.ts":
/*!*****************************************!*\
  !*** ./src/indexing/DocumentIndexer.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const FileInfoIndex_1 = __importDefault(__webpack_require__(/*! ./FileInfoIndex */ "./src/indexing/FileInfoIndex.ts"));
const INDEXING_DELAY = 500; // Delay (in ms) after keystroke before attempting to re-index the document
/**
 * Handles indexing a currently open document to gather data about classes,
 * functions, and variables.
 */
class DocumentIndexer {
    constructor(indexer) {
        this.indexer = indexer;
        this.pendingFilesToIndex = new Map();
    }
    /**
     * Queues a document to be indexed. This handles debouncing so that
     * indexing is not performed on every keystroke.
     *
     * @param textDocument The document to be indexed
     */
    queueIndexingForDocument(textDocument) {
        const uri = textDocument.uri;
        this.clearTimerForDocumentUri(uri);
        this.pendingFilesToIndex.set(uri, setTimeout(() => {
            this.indexDocument(textDocument);
        }, INDEXING_DELAY) // Specify timeout for debouncing, to avoid re-indexing every keystroke while a user types
        );
    }
    /**
     * Indexes the document and caches the data.
     *
     * @param textDocument The document being indexed
     */
    indexDocument(textDocument) {
        void this.indexer.indexDocument(textDocument);
    }
    /**
     * Clears any active indexing timers for the provided document URI.
     *
     * @param uri The document URI
     */
    clearTimerForDocumentUri(uri) {
        const timerId = this.pendingFilesToIndex.get(uri);
        if (timerId != null) {
            clearTimeout(timerId);
            this.pendingFilesToIndex.delete(uri);
        }
    }
    /**
     * Ensure that @param textDocument is fully indexed and up to date by flushing any pending indexing tasks
     * and then forcing an index. This is intended to service requests like documentSymbols where returning
     * stale info could be confusing.
     *
     * @param textDocument The document to index
     */
    ensureDocumentIndexIsUpdated(textDocument) {
        return __awaiter(this, void 0, void 0, function* () {
            const uri = textDocument.uri;
            if (this.pendingFilesToIndex.has(uri)) {
                this.clearTimerForDocumentUri(uri);
                yield this.indexer.indexDocument(textDocument);
            }
            if (!FileInfoIndex_1.default.codeDataCache.has(uri)) {
                yield this.indexer.indexDocument(textDocument);
            }
        });
    }
}
exports["default"] = DocumentIndexer;


/***/ }),

/***/ "./src/indexing/FileInfoIndex.ts":
/*!***************************************!*\
  !*** ./src/indexing/FileInfoIndex.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MatlabCodeData = exports.MatlabFunctionInfo = exports.MatlabClassMemberInfo = exports.MatlabClassInfo = exports.FunctionVisibility = void 0;
const vscode_languageserver_1 = __webpack_require__(/*! vscode-languageserver */ "./node_modules/vscode-languageserver/lib/node/main.js");
const PositionUtils_1 = __webpack_require__(/*! ../utils/PositionUtils */ "./src/utils/PositionUtils.ts");
var FunctionVisibility;
(function (FunctionVisibility) {
    FunctionVisibility[FunctionVisibility["Public"] = 0] = "Public";
    FunctionVisibility[FunctionVisibility["Private"] = 1] = "Private";
})(FunctionVisibility = exports.FunctionVisibility || (exports.FunctionVisibility = {}));
/**
 * Serves as an cache of data extracted from files
 */
class FileInfoIndex {
    constructor() {
        /**
         * Maps document URI to the code data
         */
        this.codeDataCache = new Map();
        /**
         * Maps class name to class info
         */
        this.classInfoCache = new Map();
    }
    static getInstance() {
        if (FileInfoIndex.instance == null) {
            FileInfoIndex.instance = new FileInfoIndex();
        }
        return FileInfoIndex.instance;
    }
    /**
     * Parses the raw data into a more usable form. Caches the resulting data
     * in the code data index.
     *
     * @param uri The uri of the document from which the data was extracted
     * @param rawCodeData The raw data
     * @returns An object containing the parsed data
     */
    parseAndStoreCodeData(uri, rawCodeData) {
        let parsedCodeData;
        if (rawCodeData.classInfo.hasClassInfo) {
            let classInfo = this.classInfoCache.get(rawCodeData.classInfo.name);
            if (classInfo == null) {
                // Class not discovered yet - need to create info object
                classInfo = new MatlabClassInfo(rawCodeData.classInfo, uri);
                this.classInfoCache.set(classInfo.name, classInfo);
            }
            else {
                // Class already known - update data
                classInfo.appendClassData(rawCodeData.classInfo, uri);
            }
            parsedCodeData = new MatlabCodeData(uri, rawCodeData, classInfo);
        }
        else {
            parsedCodeData = new MatlabCodeData(uri, rawCodeData);
        }
        // Store in cache
        this.codeDataCache.set(uri, parsedCodeData);
        return parsedCodeData;
    }
}
/**
 * Class to contain info about a class
 */
class MatlabClassInfo {
    constructor(rawClassInfo, uri) {
        this.uri = uri;
        this.methods = new Map();
        this.properties = new Map();
        this.enumerations = new Map();
        this.name = rawClassInfo.name;
        this.baseClasses = rawClassInfo.baseClasses;
        this.classDefFolder = rawClassInfo.classDefFolder;
        if (rawClassInfo.isClassDef) {
            this.range = convertRange(rawClassInfo.range);
            this.declaration = convertRange(rawClassInfo.declaration);
        }
        this.parsePropertiesAndEnums(rawClassInfo);
    }
    /**
     * Appends the new data to the existing class data.
     *
     * Specifically, when the new data represents the classdef file, information about
     * the URI, base classes, and range/declaration are added to the existing data.
     *
     * @param rawClassInfo The raw class data being appended
     * @param uri The document URI corresponding to the class data
     */
    appendClassData(rawClassInfo, uri) {
        if (rawClassInfo.isClassDef) {
            // Data contains class definition
            this.uri = uri;
            this.baseClasses = rawClassInfo.baseClasses;
            this.range = convertRange(rawClassInfo.range);
            this.declaration = convertRange(rawClassInfo.declaration);
            // Since this is the classdef, we'll update all members. Clear them out here.
            this.enumerations.clear();
            this.properties.clear();
            this.methods.clear();
            this.parsePropertiesAndEnums(rawClassInfo);
        }
        else {
            // Data contains supplementary class info - nothing to do in this situation
        }
    }
    /**
     * Appends info about a method to the class's info.
     *
     * This will not replace info about a method's implementation with info about a method prototype.
     *
     * @param functionInfo The method's information
     */
    addMethod(functionInfo) {
        var _a, _b;
        // Only store the method if a non-prototype version of it is not
        // already stored, as that will contain better information.
        const name = functionInfo.name;
        const shouldStoreMethod = !functionInfo.isPrototype || ((_b = (_a = this.methods.get(name)) === null || _a === void 0 ? void 0 : _a.isPrototype) !== null && _b !== void 0 ? _b : true);
        if (shouldStoreMethod) {
            this.methods.set(name, functionInfo);
        }
    }
    /**
     * Parses information about the class's properties and enums from the raw data.
     *
     * @param rawClassInfo The raw class info
     */
    parsePropertiesAndEnums(rawClassInfo) {
        rawClassInfo.properties.forEach(propertyInfo => {
            const name = propertyInfo.name;
            this.properties.set(name, new MatlabClassMemberInfo(propertyInfo));
        });
        rawClassInfo.enumerations.forEach(enumerationInfo => {
            const name = enumerationInfo.name;
            this.enumerations.set(name, new MatlabClassMemberInfo(enumerationInfo));
        });
    }
}
exports.MatlabClassInfo = MatlabClassInfo;
/**
 * Class to contain info about members of a class (e.g. Properties or Enumerations)
 */
class MatlabClassMemberInfo {
    constructor(rawPropertyInfo) {
        this.name = rawPropertyInfo.name;
        this.range = convertRange(rawPropertyInfo.range);
        this.parentClass = rawPropertyInfo.parentClass;
    }
}
exports.MatlabClassMemberInfo = MatlabClassMemberInfo;
/**
 * Class to contain info about functions
 */
class MatlabFunctionInfo {
    constructor(rawFunctionInfo, uri) {
        this.uri = uri;
        this.name = rawFunctionInfo.name;
        this.range = convertRange(rawFunctionInfo.range);
        this.declaration = rawFunctionInfo.declaration != null ? convertRange(rawFunctionInfo.declaration) : null;
        this.isPrototype = rawFunctionInfo.isPrototype;
        this.parentClass = rawFunctionInfo.parentClass;
        this.isClassMethod = this.parentClass !== '';
        this.visibility = rawFunctionInfo.isPublic ? FunctionVisibility.Public : FunctionVisibility.Private;
        this.variableInfo = new Map();
        this.parseVariableInfo(rawFunctionInfo);
    }
    /**
     * Parses information about variables within the function from the raw data.
     *
     * @param rawFunctionInfo The raw function info
     */
    parseVariableInfo(rawFunctionInfo) {
        const variableInfo = rawFunctionInfo.variableInfo;
        const globals = rawFunctionInfo.globals;
        variableInfo.definitions.forEach(varDefinition => {
            const name = varDefinition[0];
            const range = convertRange(varDefinition[1]);
            const varInfo = this.getOrCreateVariableInfo(name, globals);
            varInfo.addDefinition(range);
        });
        variableInfo.references.forEach(varReference => {
            const name = varReference[0];
            const range = convertRange(varReference[1]);
            const varInfo = this.getOrCreateVariableInfo(name, globals);
            varInfo.addReference(range);
        });
    }
    /**
     * Attempts to retrieve an existing MatlabVariableInfo object for the requested variable.
     * Creates a new instance if one does not already exist.
     *
     * @param name The variable's name
     * @param globals The list of global variables
     * @returns The MatlabVariableInfo object for the variable
     */
    getOrCreateVariableInfo(name, globals) {
        let variableInfo = this.variableInfo.get(name);
        if (variableInfo == null) {
            const isGlobal = globals.includes(name);
            variableInfo = new MatlabVariableInfo(name, isGlobal);
            this.variableInfo.set(name, variableInfo);
        }
        return variableInfo;
    }
}
exports.MatlabFunctionInfo = MatlabFunctionInfo;
/**
 * Class to contain info about variables
 */
class MatlabVariableInfo {
    constructor(name, isGlobal) {
        this.name = name;
        this.isGlobal = isGlobal;
        this.definitions = [];
        this.references = [];
    }
    /**
     * Add a definition for the variable
     *
     * @param range The range of the definition
     */
    addDefinition(range) {
        this.definitions.push(range);
    }
    /**
     * Add a reference for the variable
     *
     * @param range The range of the reference
     */
    addReference(range) {
        this.references.push(range);
    }
}
/**
 * Class to contain info about an entire file
 */
class MatlabCodeData {
    constructor(uri, rawCodeData, classInfo) {
        this.uri = uri;
        this.classInfo = classInfo;
        this.functions = new Map();
        this.references = new Map();
        this.sections = new Map();
        this.packageName = rawCodeData.packageName;
        this.parseFunctions(rawCodeData.functionInfo);
        this.parseReferences(rawCodeData.references);
        this.parseSectionInfo(rawCodeData.sections);
    }
    /**
     * Whether or not the code data represents a class definition
     */
    get isClassDef() {
        return this.classInfo != null;
    }
    /**
     * Whether or not the code data represents a main classdef file.
     * For @aclass/aclass.m this returns true
     * For @aclass/amethod.m this returns false.
     */
    get isMainClassDefDocument() {
        var _a;
        return this.isClassDef && this.uri === ((_a = this.classInfo) === null || _a === void 0 ? void 0 : _a.uri);
    }
    /**
     * Finds the info for the function containing the given position.
     *
     * @param position A position in the document
     * @returns The info for the function containing the position, or null if no function contains that position.
     */
    findContainingFunction(position) {
        let containingFunction = null;
        for (const functionInfo of this.functions.values()) {
            const start = functionInfo.range.start;
            const end = functionInfo.range.end;
            // Check if position is within range
            if ((0, PositionUtils_1.isPositionLessThanOrEqualTo)(start, position) && (0, PositionUtils_1.isPositionGreaterThan)(end, position)) {
                if (containingFunction == null) {
                    containingFunction = functionInfo;
                }
                else {
                    // Prefer a narrower function if we already have a match (e.g. nested functions)
                    if ((0, PositionUtils_1.isPositionGreaterThan)(start, containingFunction.range.start)) {
                        containingFunction = functionInfo;
                    }
                }
            }
        }
        return containingFunction;
    }
    /**
     * Parses information about the file's functions.
     *
     * @param functionInfos The raw information about the functions in the file
     */
    parseFunctions(functionInfos) {
        functionInfos.forEach(functionInfo => {
            var _a;
            const fcnInfo = new MatlabFunctionInfo(functionInfo, this.uri);
            this.functions.set(fcnInfo.name, fcnInfo);
            if (fcnInfo.isClassMethod) {
                // Store the function info with the class as well
                (_a = this.classInfo) === null || _a === void 0 ? void 0 : _a.addMethod(fcnInfo);
            }
        });
    }
    /**
     * Parses information about the file's variable and function references.
     *
     * @param references The raw information about the references in the file
     */
    parseReferences(references) {
        references.forEach(reference => {
            var _a;
            const funcName = reference[0];
            const range = convertRange(reference[1]);
            if (!this.references.has(funcName)) {
                // First time seeing this reference
                this.references.set(funcName, [range]);
            }
            else {
                (_a = this.references.get(funcName)) === null || _a === void 0 ? void 0 : _a.push(range);
            }
        });
    }
    /**
     * Parse raw section info to the section and set to this.sections
     * @param sectionsInfo Array of the section information of the file retrieved from MATLAB
     */
    parseSectionInfo(sectionsInfo) {
        sectionsInfo.forEach((sectionInfo) => {
            var _a;
            const { title, range: rangeSectionInfo } = sectionInfo;
            const range = convertRange(rangeSectionInfo);
            if (!this.sections.has(title)) {
                this.sections.set(title, [range]);
            }
            else {
                (_a = this.sections.get(title)) === null || _a === void 0 ? void 0 : _a.push(range);
            }
        });
    }
}
exports.MatlabCodeData = MatlabCodeData;
/**
 * Converts from a CodeDataRange to a Range as expected by the language server APIs.
 *
 * @param codeDataRange The CodeDataRange
 * @returns A Range corresponding to the inputted range
 */
function convertRange(codeDataRange) {
    // When converting, need to change value from 1-based to 0-based
    return vscode_languageserver_1.Range.create(codeDataRange.lineStart - 1, codeDataRange.charStart - 1, codeDataRange.lineEnd - 1, codeDataRange.charEnd - 1);
}
exports["default"] = FileInfoIndex.getInstance();


/***/ }),

/***/ "./src/indexing/Indexer.ts":
/*!*********************************!*\
  !*** ./src/indexing/Indexer.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const vscode_uri_1 = __webpack_require__(/*! vscode-uri */ "./node_modules/vscode-uri/lib/esm/index.js");
const FileInfoIndex_1 = __importDefault(__webpack_require__(/*! ./FileInfoIndex */ "./src/indexing/FileInfoIndex.ts"));
const fs = __importStar(__webpack_require__(/*! fs/promises */ "fs/promises"));
class Indexer {
    constructor(matlabLifecycleManager, pathResolver) {
        this.matlabLifecycleManager = matlabLifecycleManager;
        this.pathResolver = pathResolver;
        this.INDEX_DOCUMENT_REQUEST_CHANNEL = '/matlabls/indexDocument/request';
        this.INDEX_DOCUMENT_RESPONSE_CHANNEL = '/matlabls/indexDocument/response';
        this.INDEX_FOLDERS_REQUEST_CHANNEL = '/matlabls/indexFolders/request';
        this.INDEX_FOLDERS_RESPONSE_CHANNEL = '/matlabls/indexFolders/response';
    }
    /**
     * Indexes the given TextDocument and caches the data.
     *
     * @param textDocument The document being indexed
     */
    indexDocument(textDocument) {
        return __awaiter(this, void 0, void 0, function* () {
            const matlabConnection = yield this.matlabLifecycleManager.getMatlabConnection();
            if (matlabConnection == null) {
                return;
            }
            const rawCodeData = yield this.getCodeData(textDocument.getText(), textDocument.uri, matlabConnection);
            const parsedCodeData = FileInfoIndex_1.default.parseAndStoreCodeData(textDocument.uri, rawCodeData);
            void this.indexAdditionalClassData(parsedCodeData, matlabConnection, textDocument.uri);
        });
    }
    /**
     * Indexes all M files within the given list of folders.
     *
     * @param folders A list of folder URIs to be indexed
     */
    indexFolders(folders) {
        return __awaiter(this, void 0, void 0, function* () {
            const matlabConnection = yield this.matlabLifecycleManager.getMatlabConnection();
            if (matlabConnection == null) {
                return;
            }
            const channelId = matlabConnection.getChannelId();
            const channel = `${this.INDEX_FOLDERS_RESPONSE_CHANNEL}/${channelId}`;
            const responseSub = matlabConnection.subscribe(channel, message => {
                const fileResults = message;
                if (fileResults.isDone) {
                    // No more files being indexed - safe to unsubscribe
                    matlabConnection.unsubscribe(responseSub);
                }
                // Convert file path to URI, which is used as an index when storing the code data
                const fileUri = vscode_uri_1.URI.file(fileResults.filePath).toString();
                FileInfoIndex_1.default.parseAndStoreCodeData(fileUri, fileResults.codeData);
            });
            matlabConnection.publish(this.INDEX_FOLDERS_REQUEST_CHANNEL, {
                folders,
                channelId
            });
        });
    }
    /**
     * Indexes the file for the given URI and caches the data.
     *
     * @param uri The URI for the file being indexed
     */
    indexFile(uri) {
        return __awaiter(this, void 0, void 0, function* () {
            const matlabConnection = yield this.matlabLifecycleManager.getMatlabConnection();
            if (matlabConnection == null) {
                return;
            }
            const fileContentBuffer = yield fs.readFile(vscode_uri_1.URI.parse(uri).fsPath);
            const code = fileContentBuffer.toString();
            const rawCodeData = yield this.getCodeData(code, uri, matlabConnection);
            FileInfoIndex_1.default.parseAndStoreCodeData(uri, rawCodeData);
        });
    }
    /**
     * Retrieves data about classes, functions, and variables from the given document.
     *
     * @param code The code being parsed
     * @param uri The URI associated with the code
     * @param matlabConnection The connection to MATLAB®
     *
     * @returns The raw data extracted from the document
     */
    getCodeData(code, uri, matlabConnection) {
        return __awaiter(this, void 0, void 0, function* () {
            const filePath = vscode_uri_1.URI.parse(uri).fsPath;
            return yield new Promise(resolve => {
                const channelId = matlabConnection.getChannelId();
                const channel = `${this.INDEX_DOCUMENT_RESPONSE_CHANNEL}/${channelId}`;
                const responseSub = matlabConnection.subscribe(channel, message => {
                    matlabConnection.unsubscribe(responseSub);
                    resolve(message);
                });
                matlabConnection.publish(this.INDEX_DOCUMENT_REQUEST_CHANNEL, {
                    code,
                    filePath,
                    channelId
                });
            });
        });
    }
    /**
     * Indexes any supplemental files if the parsed code data represents a class.
     * This will index any other files in a @ directory, as well as any direct base classes.
     *
     * @param parsedCodeData The parsed code data
     * @param matlabConnection The connection to MATLAB
     * @param uri The document's URI
     */
    indexAdditionalClassData(parsedCodeData, matlabConnection, uri) {
        return __awaiter(this, void 0, void 0, function* () {
            if (parsedCodeData.classInfo == null) {
                return;
            }
            // Queue indexing for other files in @ class directory
            const classDefFolder = parsedCodeData.classInfo.classDefFolder;
            if (classDefFolder !== '') {
                this.indexFolders([classDefFolder]);
            }
            // Find and queue indexing for parent classes
            const baseClasses = parsedCodeData.classInfo.baseClasses;
            const resolvedBaseClasses = yield this.pathResolver.resolvePaths(baseClasses, uri, matlabConnection);
            resolvedBaseClasses.forEach(resolvedBaseClass => {
                const uri = resolvedBaseClass.uri;
                if (uri !== '') {
                    void this.indexFile(uri);
                }
            });
        });
    }
}
exports["default"] = Indexer;


/***/ }),

/***/ "./src/indexing/SymbolSearchService.ts":
/*!*********************************************!*\
  !*** ./src/indexing/SymbolSearchService.ts ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.reportTelemetry = exports.RequestType = void 0;
const vscode_languageserver_1 = __webpack_require__(/*! vscode-languageserver */ "./node_modules/vscode-languageserver/lib/node/main.js");
const FileInfoIndex_1 = __importStar(__webpack_require__(/*! ./FileInfoIndex */ "./src/indexing/FileInfoIndex.ts"));
const TelemetryUtils_1 = __webpack_require__(/*! ../logging/TelemetryUtils */ "./src/logging/TelemetryUtils.ts");
const TextDocumentUtils_1 = __webpack_require__(/*! ../utils/TextDocumentUtils */ "./src/utils/TextDocumentUtils.ts");
const fs = __importStar(__webpack_require__(/*! fs/promises */ "fs/promises"));
const vscode_uri_1 = __webpack_require__(/*! vscode-uri */ "./node_modules/vscode-uri/lib/esm/index.js");
var RequestType;
(function (RequestType) {
    RequestType[RequestType["Definition"] = 0] = "Definition";
    RequestType[RequestType["References"] = 1] = "References";
    RequestType[RequestType["DocumentSymbol"] = 2] = "DocumentSymbol";
    RequestType[RequestType["RenameSymbol"] = 3] = "RenameSymbol";
})(RequestType = exports.RequestType || (exports.RequestType = {}));
function reportTelemetry(type, errorCondition = '') {
    let action;
    switch (type) {
        case RequestType.Definition:
            action = TelemetryUtils_1.Actions.GoToDefinition;
            break;
        case RequestType.References:
            action = TelemetryUtils_1.Actions.GoToReference;
            break;
        case RequestType.DocumentSymbol:
            action = TelemetryUtils_1.Actions.DocumentSymbol;
            break;
        case RequestType.RenameSymbol:
            action = TelemetryUtils_1.Actions.RenameSymbol;
            break;
    }
    (0, TelemetryUtils_1.reportTelemetryAction)(action, errorCondition);
}
exports.reportTelemetry = reportTelemetry;
class SymbolSearchService {
    constructor() {
        this.DOTTED_IDENTIFIER_REGEX = /[\w.]+/;
    }
    static getInstance() {
        if (SymbolSearchService.instance == null) {
            SymbolSearchService.instance = new SymbolSearchService();
        }
        return SymbolSearchService.instance;
    }
    /**
     * Finds references of an expression.
     *
     * @param uri The URI of the document containing the expression
     * @param position The position of the expression
     * @param expression The expression for which we are looking for references
     * @param documentManager The text document manager
     * @param requestType The type of request (definition, references, or rename)
     * @returns The references' locations
     */
    findReferences(uri, position, expression, documentManager, requestType) {
        // Get code data for current file
        const codeData = FileInfoIndex_1.default.codeDataCache.get(uri);
        if (codeData == null) {
            // File not indexed - unable to look for references
            reportTelemetry(requestType, 'File not indexed');
            return [];
        }
        const textDocument = documentManager.get(uri);
        if (textDocument == null) {
            reportTelemetry(requestType, 'No document');
            return [];
        }
        const line = (0, TextDocumentUtils_1.getTextOnLine)(textDocument, position.line);
        const commentStart = line.indexOf('%');
        if (commentStart > -1 && commentStart < position.character) {
            // Current expression is in a comment - no references should be returned
            return [];
        }
        const referencesInCodeData = this.findReferencesInCodeData(uri, position, expression, codeData);
        reportTelemetry(requestType);
        if (referencesInCodeData != null) {
            return referencesInCodeData;
        }
        return [];
    }
    /**
     * Searches for references, starting within the given code data. If the expression does not correspond to a local variable,
     *  the search is broadened to other indexed files in the user's workspace.
     *
     * @param uri The URI corresponding to the provided code data
     * @param position The position of the expression
     * @param expression The expression for which we are looking for references
     * @param codeData The code data which is being searched
     * @returns The references' locations, or null if no reference was found
     */
    findReferencesInCodeData(uri, position, expression, codeData) {
        var _a, _b, _c;
        // If first part of expression is targeted - look for a local variable
        if (expression.selectedComponent === 0) {
            const containingFunction = codeData.findContainingFunction(position);
            if (containingFunction != null) {
                const varRefs = this.getVariableDefsOrRefs(containingFunction, expression.unqualifiedTarget, uri, RequestType.References);
                if (varRefs != null) {
                    return varRefs;
                }
            }
        }
        // Check for functions in file
        const functionDeclaration = this.getFunctionDeclaration(codeData, expression.fullExpression);
        if (functionDeclaration != null && functionDeclaration.visibility === FileInfoIndex_1.FunctionVisibility.Private) {
            // Found a local function. Look through this file's references
            return (_b = (_a = codeData.references.get(functionDeclaration.name)) === null || _a === void 0 ? void 0 : _a.map(range => vscode_languageserver_1.Location.create(uri, range))) !== null && _b !== void 0 ? _b : [];
        }
        // Check other files
        const refs = [];
        for (const [, fileCodeData] of FileInfoIndex_1.default.codeDataCache) {
            if (((_c = fileCodeData.functions.get(expression.fullExpression)) === null || _c === void 0 ? void 0 : _c.visibility) === FileInfoIndex_1.FunctionVisibility.Private) {
                // Skip files with other local functions
                continue;
            }
            const varRefs = fileCodeData.references.get(expression.fullExpression);
            if (varRefs != null) {
                varRefs.forEach(range => refs.push(vscode_languageserver_1.Location.create(fileCodeData.uri, range)));
            }
        }
        return refs;
    }
    /**
     * Gets the definition/references of a variable within a function.
     *
     * @param containingFunction Info about a function
     * @param variableName The variable name for which we are looking for definitions or references
     * @param uri The URI of the file
     * @param requestType The type of request (definition or references)
     * @returns The locations of the definition(s) or references of the given variable name within the given function info, or null if none can be found
     */
    getVariableDefsOrRefs(containingFunction, variableName, uri, requestType) {
        const variableInfo = containingFunction.variableInfo.get(variableName);
        if (variableInfo == null) {
            return null;
        }
        const varInfoRanges = requestType === RequestType.Definition ? variableInfo.definitions : variableInfo.references;
        return varInfoRanges.map(range => {
            return vscode_languageserver_1.Location.create(uri, range);
        });
    }
    /**
     * Searches for info about a function within the given code data.
     *
     * @param codeData The code data being searched
     * @param functionName The name of the function being searched for
     * @returns The info about the desired function, or null if it cannot be found
     */
    getFunctionDeclaration(codeData, functionName) {
        var _a, _b;
        let functionDecl = codeData.functions.get(functionName);
        if (codeData.isClassDef && (functionDecl == null || functionDecl.isPrototype)) {
            // For classes, look in the methods list to better handle @folders
            functionDecl = (_b = (_a = codeData.classInfo) === null || _a === void 0 ? void 0 : _a.methods.get(functionName)) !== null && _b !== void 0 ? _b : functionDecl;
        }
        return functionDecl !== null && functionDecl !== void 0 ? functionDecl : null;
    }
    /**
     * Searches for info about a property within the given code data.
     *
     * @param codeData The code data being searched
     * @param propertyName The name of the property being searched for
     * @returns The info about the desired property, or null if it cannot be found
     */
    getPropertyDeclaration(codeData, propertyName) {
        var _a;
        if (codeData.classInfo == null) {
            return null;
        }
        return (_a = codeData.classInfo.properties.get(propertyName)) !== null && _a !== void 0 ? _a : null;
    }
    /**
     * Finds the definition(s) of an expression.
     *
     * @param uri The URI of the document containing the expression
     * @param position The position of the expression
     * @param expression The expression for which we are looking for the definition
     * @param matlabConnection The connection to MATLAB®
     * @param pathResolver The path resolver
     * @param indexer The workspace indexer
     * @returns The definition location(s)
     */
    findDefinition(uri, position, expression, matlabConnection, pathResolver, indexer) {
        return __awaiter(this, void 0, void 0, function* () {
            // Get code data for current file
            const codeData = FileInfoIndex_1.default.codeDataCache.get(uri);
            if (codeData == null) {
                // File not indexed - unable to look for definition
                reportTelemetry(RequestType.Definition, 'File not indexed');
                return [];
            }
            // First check within the current file's code data
            const definitionInCodeData = this.findDefinitionInCodeData(uri, position, expression, codeData);
            if (definitionInCodeData != null) {
                reportTelemetry(RequestType.Definition);
                return definitionInCodeData;
            }
            // Check the MATLAB path
            const definitionOnPath = yield this.findDefinitionOnPath(uri, position, expression, matlabConnection, pathResolver, indexer);
            if (definitionOnPath != null) {
                reportTelemetry(RequestType.Definition);
                return definitionOnPath;
            }
            // If not on path, may be in user's workspace
            reportTelemetry(RequestType.Definition);
            return this.findDefinitionInWorkspace(uri, expression);
        });
    }
    /**
     * Searches the given code data for the definition(s) of the given expression
     *
     * @param uri The URI corresponding to the provided code data
     * @param position The position of the expression
     * @param expression The expression for which we are looking for the definition
     * @param codeData The code data which is being searched
     * @returns The definition location(s), or null if no definition was found
     */
    findDefinitionInCodeData(uri, position, expression, codeData) {
        // If first part of expression targeted - look for a local variable
        if (expression.selectedComponent === 0) {
            const containingFunction = codeData.findContainingFunction(position);
            if (containingFunction != null) {
                const varDefs = this.getVariableDefsOrRefs(containingFunction, expression.unqualifiedTarget, uri, RequestType.Definition);
                if (varDefs != null) {
                    return varDefs;
                }
            }
        }
        // Check for functions in file
        let functionDeclaration = this.getFunctionDeclaration(codeData, expression.fullExpression);
        if (functionDeclaration != null) {
            return [this.getLocationForFunctionDeclaration(functionDeclaration)];
        }
        // Check for definitions within classes
        if (codeData.isClassDef && codeData.classInfo != null) {
            // Look for methods/properties within class definitions (e.g. obj.foo)
            functionDeclaration = this.getFunctionDeclaration(codeData, expression.last);
            if (functionDeclaration != null) {
                return [this.getLocationForFunctionDeclaration(functionDeclaration)];
            }
            // Look for possible properties
            if (expression.selectedComponent === 1) {
                const propertyDeclaration = this.getPropertyDeclaration(codeData, expression.last);
                if (propertyDeclaration != null) {
                    const propertyRange = vscode_languageserver_1.Range.create(propertyDeclaration.range.start, propertyDeclaration.range.end);
                    const uri = codeData.classInfo.uri;
                    if (uri != null) {
                        return [vscode_languageserver_1.Location.create(uri, propertyRange)];
                    }
                }
            }
        }
        return null;
    }
    /**
     * Gets the location of the given function's declaration. If the function does not have
     * a definite declaration, provides a location at the beginning of the file. For example,
     * this may be the case for built-in functions like 'plot'.
     *
     * @param functionInfo Info about the function
     * @returns The location of the function declaration
     */
    getLocationForFunctionDeclaration(functionInfo) {
        var _a;
        const range = (_a = functionInfo.declaration) !== null && _a !== void 0 ? _a : vscode_languageserver_1.Range.create(0, 0, 0, 0);
        return vscode_languageserver_1.Location.create(functionInfo.uri, range);
    }
    /**
     * Searches the MATLAB path for the definition of the given expression
     *
     * @param uri The URI of the file containing the expression
     * @param position The position of the expression
     * @param expression The expression for which we are looking for the definition
     * @param matlabConnection The connection to MATLAB
     * @param pathResolver The path resolver
     * @param indexer The workspace indexer
     * @returns The definition location(s), or null if no definition was found
     */
    findDefinitionOnPath(uri, position, expression, matlabConnection, pathResolver, indexer) {
        return __awaiter(this, void 0, void 0, function* () {
            const resolvedPath = yield pathResolver.resolvePaths([expression.targetExpression], uri, matlabConnection);
            const resolvedUri = resolvedPath[0].uri;
            if (resolvedUri === '') {
                // Not found
                return null;
            }
            // Ensure URI is not a directory. This can occur with some packages.
            const fileStats = yield fs.stat(vscode_uri_1.URI.parse(resolvedUri).fsPath);
            if (fileStats.isDirectory()) {
                return null;
            }
            if (!FileInfoIndex_1.default.codeDataCache.has(resolvedUri)) {
                // Index target file, if necessary
                yield indexer.indexFile(resolvedUri);
            }
            const codeData = FileInfoIndex_1.default.codeDataCache.get(resolvedUri);
            // Find definition location within determined file
            if (codeData != null) {
                const definition = this.findDefinitionInCodeData(resolvedUri, position, expression, codeData);
                if (definition != null) {
                    return definition;
                }
            }
            // If a definition location cannot be identified, default to the beginning of the file.
            // This could be the case for builtin functions which don't actually have a definition in a .m file (e.g. plot).
            return [vscode_languageserver_1.Location.create(resolvedUri, vscode_languageserver_1.Range.create(0, 0, 0, 0))];
        });
    }
    /**
     * Searches the (indexed) workspace for the definition of the given expression. These files may not be on the MATLAB path.
     *
     * @param uri The URI of the file containing the expression
     * @param expression The expression for which we are looking for the definition
     * @returns The definition location(s). Returns an empty array if no definitions found.
     */
    findDefinitionInWorkspace(uri, expression) {
        var _a, _b;
        const expressionToMatch = expression.fullExpression;
        for (const [fileUri, fileCodeData] of FileInfoIndex_1.default.codeDataCache) {
            if (uri === fileUri)
                continue; // Already looked in the current file
            let match = fileCodeData.packageName === '' ? '' : fileCodeData.packageName + '.';
            if (fileCodeData.classInfo != null) {
                const classUri = fileCodeData.classInfo.uri;
                if (classUri == null)
                    continue;
                // Check class name
                match += fileCodeData.classInfo.name;
                if (expressionToMatch === match) {
                    const range = (_a = fileCodeData.classInfo.declaration) !== null && _a !== void 0 ? _a : vscode_languageserver_1.Range.create(0, 0, 0, 0);
                    return [vscode_languageserver_1.Location.create(classUri, range)];
                }
                // Check properties
                const matchedProperty = this.findMatchingClassMember(expressionToMatch, match, classUri, fileCodeData.classInfo.properties);
                if (matchedProperty != null) {
                    return matchedProperty;
                }
                // Check enums
                const matchedEnum = this.findMatchingClassMember(expressionToMatch, match, classUri, fileCodeData.classInfo.enumerations);
                if (matchedEnum != null) {
                    return matchedEnum;
                }
            }
            // Check functions
            for (const [funcName, funcData] of fileCodeData.functions) {
                const funcMatch = (match === '') ? funcName : match + '.' + funcName;
                // Need to ensure that a function with a matching name should also be visible from the current file.
                if (expressionToMatch === funcMatch && this.isFunctionVisibleFromUri(uri, funcData)) {
                    const range = (_b = funcData.declaration) !== null && _b !== void 0 ? _b : vscode_languageserver_1.Range.create(0, 0, 0, 0);
                    return [vscode_languageserver_1.Location.create(funcData.uri, range)];
                }
            }
        }
        return [];
    }
    /**
     * Finds the class member (property or enumeration) in the given map which matches to given expression.
     *
     * @param expressionToMatch The expression being compared against
     * @param matchPrefix The prefix which should be attached to the class members before comparison
     * @param classUri The URI for the current class
     * @param classMemberMap The map of class members
     * @returns An array containing the location of the matched class member, or null if one was not found
     */
    findMatchingClassMember(expressionToMatch, matchPrefix, classUri, classMemberMap) {
        for (const [memberName, memberData] of classMemberMap) {
            const match = matchPrefix + '.' + memberName;
            if (expressionToMatch === match) {
                return [vscode_languageserver_1.Location.create(classUri, memberData.range)];
            }
        }
        return null;
    }
    /**
     * Determines whether the given function should be visible from the given file URI.
     * The function is visible if it is contained within the same file, or is public.
     *
     * @param uri The file's URI
     * @param funcData The function data
     * @returns true if the function should be visible from the given URI; false otherwise
     */
    isFunctionVisibleFromUri(uri, funcData) {
        return uri === funcData.uri || funcData.visibility === FileInfoIndex_1.FunctionVisibility.Public;
    }
}
exports["default"] = SymbolSearchService.getInstance();


/***/ }),

/***/ "./src/indexing/WorkspaceIndexer.ts":
/*!******************************************!*\
  !*** ./src/indexing/WorkspaceIndexer.ts ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const ConfigurationManager_1 = __importDefault(__webpack_require__(/*! ../lifecycle/ConfigurationManager */ "./src/lifecycle/ConfigurationManager.ts"));
const ClientConnection_1 = __importDefault(__webpack_require__(/*! ../ClientConnection */ "./src/ClientConnection.ts"));
/**
 * Handles indexing files in the user's workspace to gather data about classes,
 * functions, and variables.
 */
class WorkspaceIndexer {
    constructor(indexer) {
        this.indexer = indexer;
        this.isWorkspaceIndexingSupported = false;
    }
    /**
     * Sets up workspace change listeners, if supported.
     *
     * @param capabilities The client capabilities, which contains information about
     * whether the client supports workspaces.
     */
    setupCallbacks(capabilities) {
        var _a, _b;
        this.isWorkspaceIndexingSupported = (_b = (_a = capabilities.workspace) === null || _a === void 0 ? void 0 : _a.workspaceFolders) !== null && _b !== void 0 ? _b : false;
        if (!this.isWorkspaceIndexingSupported) {
            // Workspace indexing not supported
            return;
        }
        ClientConnection_1.default.getConnection().workspace.onDidChangeWorkspaceFolders((params) => {
            void this.handleWorkspaceFoldersAdded(params.added);
        });
    }
    /**
     * Attempts to index the files in the user's workspace.
     */
    indexWorkspace() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!(yield this.shouldIndexWorkspace())) {
                return;
            }
            const folders = yield ClientConnection_1.default.getConnection().workspace.getWorkspaceFolders();
            if (folders == null) {
                return;
            }
            void this.indexer.indexFolders(folders.map(folder => folder.uri));
        });
    }
    /**
     * Handles when new folders are added to the user's workspace by indexing them.
     *
     * @param folders The list of folders added to the workspace
     */
    handleWorkspaceFoldersAdded(folders) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!(yield this.shouldIndexWorkspace())) {
                return;
            }
            void this.indexer.indexFolders(folders.map(folder => folder.uri));
        });
    }
    /**
     * Determines whether or not the workspace should be indexed.
     * The workspace should be indexed if the client supports workspaces, and if the
     * workspace indexing setting is true.
     *
     * @returns True if workspace indexing should occurr, false otherwise.
     */
    shouldIndexWorkspace() {
        return __awaiter(this, void 0, void 0, function* () {
            const shouldIndexWorkspace = (yield ConfigurationManager_1.default.getConfiguration()).indexWorkspace;
            return this.isWorkspaceIndexingSupported && shouldIndexWorkspace;
        });
    }
}
exports["default"] = WorkspaceIndexer;


/***/ }),

/***/ "./src/lifecycle/ConfigurationManager.ts":
/*!***********************************************!*\
  !*** ./src/lifecycle/ConfigurationManager.ts ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ConnectionTiming = exports.Argument = void 0;
const vscode_languageserver_1 = __webpack_require__(/*! vscode-languageserver */ "./node_modules/vscode-languageserver/lib/node/main.js");
const TelemetryUtils_1 = __webpack_require__(/*! ../logging/TelemetryUtils */ "./src/logging/TelemetryUtils.ts");
const CliUtils_1 = __webpack_require__(/*! ../utils/CliUtils */ "./src/utils/CliUtils.ts");
const ClientConnection_1 = __importDefault(__webpack_require__(/*! ../ClientConnection */ "./src/ClientConnection.ts"));
var Argument;
(function (Argument) {
    // Basic arguments
    Argument["MatlabLaunchCommandArguments"] = "matlabLaunchCommandArgs";
    Argument["MatlabInstallationPath"] = "matlabInstallPath";
    Argument["MatlabConnectionTiming"] = "matlabConnectionTiming";
    Argument["ShouldIndexWorkspace"] = "indexWorkspace";
    // Advanced arguments
    Argument["MatlabUrl"] = "matlabUrl";
})(Argument = exports.Argument || (exports.Argument = {}));
var ConnectionTiming;
(function (ConnectionTiming) {
    ConnectionTiming["OnStart"] = "onStart";
    ConnectionTiming["OnDemand"] = "onDemand";
    ConnectionTiming["Never"] = "never";
})(ConnectionTiming = exports.ConnectionTiming || (exports.ConnectionTiming = {}));
const SETTING_NAMES = [
    'installPath',
    'matlabConnectionTiming',
    'indexWorkspace',
    'telemetry'
];
class ConfigurationManager {
    constructor() {
        var _a, _b, _c, _d, _e;
        this.configuration = null;
        this.hasConfigurationCapability = false;
        const cliArgs = (0, CliUtils_1.getCliArgs)();
        this.defaultConfiguration = {
            installPath: '',
            matlabConnectionTiming: ConnectionTiming.OnStart,
            indexWorkspace: false,
            telemetry: true
        };
        this.globalSettings = {
            installPath: (_a = cliArgs[Argument.MatlabInstallationPath]) !== null && _a !== void 0 ? _a : this.defaultConfiguration.installPath,
            matlabConnectionTiming: (_b = cliArgs[Argument.MatlabConnectionTiming]) !== null && _b !== void 0 ? _b : this.defaultConfiguration.matlabConnectionTiming,
            indexWorkspace: (_c = cliArgs[Argument.ShouldIndexWorkspace]) !== null && _c !== void 0 ? _c : this.defaultConfiguration.indexWorkspace,
            telemetry: this.defaultConfiguration.telemetry
        };
        this.additionalArguments = {
            [Argument.MatlabLaunchCommandArguments]: (_d = cliArgs[Argument.MatlabLaunchCommandArguments]) !== null && _d !== void 0 ? _d : '',
            [Argument.MatlabUrl]: (_e = cliArgs[Argument.MatlabUrl]) !== null && _e !== void 0 ? _e : ''
        };
    }
    static getInstance() {
        if (ConfigurationManager.instance == null) {
            ConfigurationManager.instance = new ConfigurationManager;
        }
        return ConfigurationManager.instance;
    }
    /**
     * Sets up the configuration manager
     *
     * @param capabilities The client capabilities
     */
    setup(capabilities) {
        var _a;
        const connection = ClientConnection_1.default.getConnection();
        this.hasConfigurationCapability = ((_a = capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) != null;
        if (this.hasConfigurationCapability) {
            // Register for configuration changes
            void connection.client.register(vscode_languageserver_1.DidChangeConfigurationNotification.type);
        }
        connection.onDidChangeConfiguration(params => { void this.handleConfigurationChanged(params); });
    }
    /**
     * Gets the configuration for the langauge server
     *
     * @returns The current configuration
     */
    getConfiguration() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.hasConfigurationCapability) {
                if (this.configuration == null) {
                    const connection = ClientConnection_1.default.getConnection();
                    this.configuration = (yield connection.workspace.getConfiguration('MATLAB'));
                }
                return this.configuration;
            }
            return this.globalSettings;
        });
    }
    /**
     * Gets the value of the given argument
     *
     * @param argument The argument
     * @returns The argument's value
     */
    getArgument(argument) {
        return this.additionalArguments[argument];
    }
    /**
     * Handles a change in the configuration
     * @param params The configuration changed params
     */
    handleConfigurationChanged(params) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function* () {
            let oldConfig;
            let newConfig;
            if (this.hasConfigurationCapability) {
                oldConfig = this.configuration;
                // Clear cached configuration
                this.configuration = null;
                // Force load new configuration
                newConfig = yield this.getConfiguration();
            }
            else {
                oldConfig = this.globalSettings;
                this.globalSettings = (_b = (_a = params.settings) === null || _a === void 0 ? void 0 : _a.matlab) !== null && _b !== void 0 ? _b : this.defaultConfiguration;
                newConfig = this.globalSettings;
            }
            this.compareSettingChanges(oldConfig, newConfig);
        });
    }
    compareSettingChanges(oldConfiguration, newConfiguration) {
        if (oldConfiguration == null) {
            // Not yet initialized
            return;
        }
        for (let i = 0; i < SETTING_NAMES.length; i++) {
            const settingName = SETTING_NAMES[i];
            const oldValue = oldConfiguration[settingName];
            const newValue = newConfiguration[settingName];
            if (oldValue !== newValue) {
                (0, TelemetryUtils_1.reportTelemetrySettingsChange)(settingName, newValue.toString(), oldValue.toString());
            }
        }
    }
}
exports["default"] = ConfigurationManager.getInstance();


/***/ }),

/***/ "./src/lifecycle/LifecycleNotificationHelper.ts":
/*!******************************************************!*\
  !*** ./src/lifecycle/LifecycleNotificationHelper.ts ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const NotificationService_1 = __importStar(__webpack_require__(/*! ../notifications/NotificationService */ "./src/notifications/NotificationService.ts"));
class LifecycleNotificationHelper {
    constructor() {
        this.didMatlabLaunchFail = false;
    }
    static getInstance() {
        if (LifecycleNotificationHelper.instance == null) {
            LifecycleNotificationHelper.instance = new LifecycleNotificationHelper();
        }
        return LifecycleNotificationHelper.instance;
    }
    /**
     * Sends notification to the language client of a change in the MATLAB® connection state.
     *
     * @param connectionStatus The connection state
     */
    notifyConnectionStatusChange(connectionStatus) {
        NotificationService_1.default.sendNotification(NotificationService_1.Notification.MatlabConnectionServerUpdate, {
            connectionStatus
        });
    }
    /**
     * Sends notification to the language client to inform user that MATLAB is required for an action.
     */
    notifyMatlabRequirement() {
        // Indicate different messages if MATLAB failed to launch (i.e. could not be found)
        const notification = this.didMatlabLaunchFail ? NotificationService_1.Notification.MatlabFeatureUnavailableNoMatlab : NotificationService_1.Notification.MatlabFeatureUnavailable;
        NotificationService_1.default.sendNotification(notification);
    }
}
exports["default"] = LifecycleNotificationHelper.getInstance();


/***/ }),

/***/ "./src/lifecycle/MatlabLifecycleManager.ts":
/*!*************************************************!*\
  !*** ./src/lifecycle/MatlabLifecycleManager.ts ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const events_1 = __webpack_require__(/*! events */ "events");
const ConfigurationManager_1 = __importStar(__webpack_require__(/*! ./ConfigurationManager */ "./src/lifecycle/ConfigurationManager.ts"));
const MatlabSession_1 = __webpack_require__(/*! ./MatlabSession */ "./src/lifecycle/MatlabSession.ts");
class MatlabLifecycleManager {
    constructor() {
        this.eventEmitter = new events_1.EventEmitter();
        this.matlabSession = null;
        this.connectionPromise = null;
    }
    /**
     * Gets the current connection to MATLAB.
     *
     * @param startMatlab If no existing MATLAB connection exists, this determines whether
     * a new connection should be established. If true, this will attempt to establish a
     * new connection. If false, it will not and will return null.
     *
     * @returns The MATLAB connection object, or null if no connection exists.
     */
    getMatlabConnection(startMatlab = false) {
        return __awaiter(this, void 0, void 0, function* () {
            // If MATLAB is already connected, return the current connection
            if (this.matlabSession != null) {
                return this.matlabSession.getConnection();
            }
            // If MATLAB is actively connecting, wait for the connection to be established
            if (this.connectionPromise != null) {
                return new Promise(resolve => {
                    this.connectionPromise.then(matlabSession => {
                        resolve(matlabSession.getConnection());
                    }).catch(() => {
                        resolve(null);
                    });
                });
            }
            // No connection currently established or establishing. Attempt to connect to MATLAB if desired.
            const matlabConnectionTiming = (yield ConfigurationManager_1.default.getConfiguration()).matlabConnectionTiming;
            const shouldStartMatlab = startMatlab && matlabConnectionTiming !== ConfigurationManager_1.ConnectionTiming.Never;
            if (shouldStartMatlab) {
                try {
                    const matlabSession = yield this.connectToMatlab();
                    return matlabSession.getConnection();
                }
                catch (err) {
                    return null;
                }
            }
            else {
                return null;
            }
        });
    }
    /**
     * Attempt to connect to MATLAB. This will not create a second connection to MATLAB
     * if a session already exists.
     *
     * @returns The active MATLAB session
     */
    connectToMatlab() {
        return __awaiter(this, void 0, void 0, function* () {
            // If MATLAB is already connected, do not try to connect again
            if (this.matlabSession != null) {
                return this.matlabSession;
            }
            // If MATLAB is actively connecting, wait and return that session
            if (this.connectionPromise != null) {
                // MATLAB is actively connecting
                return new Promise((resolve, reject) => {
                    this.connectionPromise.then(matlabSession => {
                        resolve(matlabSession);
                    }).catch(reason => {
                        reject(reason);
                    });
                });
            }
            // Start a new session
            if (shouldConnectToRemoteMatlab()) {
                return this.connectToRemoteMatlab();
            }
            else {
                return this.connectToLocalMatlab();
            }
        });
    }
    /**
     * Terminate the current MATLAB session.
     *
     * Emits a 'disconnected' event.
     */
    disconnectFromMatlab() {
        if (this.matlabSession == null) {
            return;
        }
        this.matlabSession.shutdown();
        this.matlabSession = null;
        this.eventEmitter.emit('disconnected');
    }
    /**
     * Determine if MATLAB is connected.
     *
     * @returns True if there is an active MATLAB session, false otherwise
     */
    isMatlabConnected() {
        return this.matlabSession != null || this.connectionPromise != null;
    }
    /**
     * Gets the release of the currently connected MATLAB.
     *
     * @returns The MATLAB release (e.g. "R2023b") of the active session, or null if unknown
     */
    getMatlabRelease() {
        return this.matlabSession == null ? null : this.matlabSession.getMatlabRelease();
    }
    /**
     * Starts a new session with a locally installed MATLAB instance.
     *
     * @returns The new MATLAB session
     */
    connectToLocalMatlab() {
        return __awaiter(this, void 0, void 0, function* () {
            this.connectionPromise = (0, MatlabSession_1.launchNewMatlab)();
            return new Promise((resolve, reject) => {
                var _a;
                (_a = this.connectionPromise) === null || _a === void 0 ? void 0 : _a.then(matlabSession => {
                    this.matlabSession = matlabSession;
                    this.matlabSession.eventEmitter.on('shutdown', () => {
                        this.matlabSession = null;
                        this.eventEmitter.emit('disconnected');
                    });
                    this.eventEmitter.emit('connected');
                    resolve(matlabSession);
                }).catch(reason => {
                    reject(reason);
                }).finally(() => {
                    this.connectionPromise = null;
                });
            });
        });
    }
    /**
     * Starts a new session with a MATLAB instance over a URL.
     *
     * @returns The new MATLAB session
     */
    connectToRemoteMatlab() {
        return __awaiter(this, void 0, void 0, function* () {
            const url = ConfigurationManager_1.default.getArgument(ConfigurationManager_1.Argument.MatlabUrl);
            this.connectionPromise = (0, MatlabSession_1.connectToMatlab)(url);
            return new Promise((resolve, reject) => {
                var _a;
                (_a = this.connectionPromise) === null || _a === void 0 ? void 0 : _a.then(matlabSession => {
                    this.matlabSession = matlabSession;
                    this.matlabSession.eventEmitter.on('shutdown', () => {
                        this.matlabSession = null;
                        this.eventEmitter.emit('disconnected');
                    });
                    this.eventEmitter.emit('connected');
                    resolve(matlabSession);
                }).catch(reason => {
                    reject(reason);
                }).finally(() => {
                    this.connectionPromise = null;
                });
            });
        });
    }
}
exports["default"] = MatlabLifecycleManager;
/**
 * Whether or not the language server should attempt to connect to an existing
 * MATLAB instance.
 *
 * @returns True if the language server should attempt to connect to an
 * already-running instance of MATLAB. False otherwise.
 */
function shouldConnectToRemoteMatlab() {
    // Assume we should connect to existing MATLAB if the matlabUrl startup flag has been provided
    return Boolean(ConfigurationManager_1.default.getArgument(ConfigurationManager_1.Argument.MatlabUrl));
}


/***/ }),

/***/ "./src/lifecycle/MatlabSession.ts":
/*!****************************************!*\
  !*** ./src/lifecycle/MatlabSession.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.connectToMatlab = exports.launchNewMatlab = exports.ConnectionState = void 0;
const Logger_1 = __importDefault(__webpack_require__(/*! ../logging/Logger */ "./src/logging/Logger.ts"));
const TelemetryUtils_1 = __webpack_require__(/*! ../logging/TelemetryUtils */ "./src/logging/TelemetryUtils.ts");
const NotificationService_1 = __importStar(__webpack_require__(/*! ../notifications/NotificationService */ "./src/notifications/NotificationService.ts"));
const ConfigurationManager_1 = __importStar(__webpack_require__(/*! ./ConfigurationManager */ "./src/lifecycle/ConfigurationManager.ts"));
const LifecycleNotificationHelper_1 = __importDefault(__webpack_require__(/*! ./LifecycleNotificationHelper */ "./src/lifecycle/LifecycleNotificationHelper.ts"));
const MatlabCommunicationManager_1 = __importStar(__webpack_require__(/*! ./MatlabCommunicationManager */ "./src/lifecycle/MatlabCommunicationManager.js"));
const chokidar = __importStar(__webpack_require__(/*! chokidar */ "./node_modules/chokidar/index.js"));
const fsPromises = __importStar(__webpack_require__(/*! fs/promises */ "fs/promises"));
const os = __importStar(__webpack_require__(/*! os */ "os"));
const path = __importStar(__webpack_require__(/*! path */ "path"));
const events_1 = __webpack_require__(/*! events */ "events");
const DeprecationUtils_1 = __webpack_require__(/*! ../utils/DeprecationUtils */ "./src/utils/DeprecationUtils.ts");
const ProxyUtils_1 = __webpack_require__(/*! ../utils/ProxyUtils */ "./src/utils/ProxyUtils.ts");
var ConnectionState;
(function (ConnectionState) {
    ConnectionState["CONNECTING"] = "connecting";
    ConnectionState["CONNECTED"] = "connected";
    ConnectionState["DISCONNECTED"] = "disconnected";
})(ConnectionState = exports.ConnectionState || (exports.ConnectionState = {}));
/**
 * Launches and connects to a new MATLAB instance.
 *
 * @returns The MATLAB session
 */
function launchNewMatlab() {
    return __awaiter(this, void 0, void 0, function* () {
        LifecycleNotificationHelper_1.default.didMatlabLaunchFail = false;
        LifecycleNotificationHelper_1.default.notifyConnectionStatusChange(ConnectionState.CONNECTING);
        const matlabSession = new LocalMatlabSession();
        return yield new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
            // Setup file watch for MATLAB starting
            const outFile = path.join(Logger_1.default.logDir, 'matlabls_conn.json');
            const watcher = chokidar.watch(outFile, {
                persistent: true,
                useFsEvents: false
            });
            // This callback will be triggered when MATLAB has launched and writes the watched file.
            watcher.on('add', () => __awaiter(this, void 0, void 0, function* () {
                Logger_1.default.log(`Started MATLAB (session ${matlabSession.sessionId})`);
                // First change detected - close watcher
                watcher.close();
                // Read startup info from file
                const connectionInfo = yield readStartupInfo(outFile);
                const { pid, release, port, certFile, sessionKey } = connectionInfo;
                // Check if the launched MATLAB is supported. We do not abort the connection, as this may
                // be the user's desire and some functionality may work (althought it is not guaranteed).
                (0, DeprecationUtils_1.checkIfMatlabDeprecated)(release);
                matlabSession.startConnection(port, certFile, pid, release).then(() => {
                    LifecycleNotificationHelper_1.default.notifyConnectionStatusChange(ConnectionState.CONNECTED);
                    Logger_1.default.log(`MATLAB session ${matlabSession.sessionId} connected to ${release}`);
                    (0, TelemetryUtils_1.reportTelemetryAction)(TelemetryUtils_1.Actions.StartMatlab, release);
                    (0, TelemetryUtils_1.reportTelemetryAction)(TelemetryUtils_1.Actions.MatlabSessionKey, sessionKey);
                    resolve(matlabSession);
                }).catch(reason => {
                    Logger_1.default.error(`MATLAB session ${matlabSession.sessionId} failed to connect`);
                    matlabSession.shutdown();
                    (0, TelemetryUtils_1.reportTelemetryAction)(TelemetryUtils_1.Actions.StartMatlab, 'Failed to connect to MATLAB');
                    reject(reason);
                });
                // outFile is no longer needed - delete
                void fsPromises.rm(outFile, { force: true });
            }));
            // Launch MATLAB process
            Logger_1.default.log('Launching MATLAB...');
            const { command, args } = yield getMatlabLaunchCommand(outFile);
            const envVars = Object.assign({}, (0, ProxyUtils_1.getProxyEnvironmentVariables)());
            const matlabProcessInfo = MatlabCommunicationManager_1.default.launchNewMatlab(command, args, Logger_1.default.logDir, envVars);
            if (matlabProcessInfo == null) {
                // Error occurred while spawning MATLAB process
                matlabSession.shutdown('Error spawning MATLAB process');
                watcher.close();
                Logger_1.default.error(`Error launching MATLAB with command: ${command}`);
                LifecycleNotificationHelper_1.default.didMatlabLaunchFail = true;
                NotificationService_1.default.sendNotification(NotificationService_1.Notification.MatlabLaunchFailed);
                reject('Failed to launch local MATLAB');
                return;
            }
            // Initialize the new session
            const { matlabConnection, matlabProcess } = matlabProcessInfo;
            matlabSession.initialize(matlabConnection, matlabProcess);
            // Handles additional errors with launching the MATLAB process
            matlabProcess.on('error', error => {
                // Error occurred in child process
                reject('Error from MATLAB child process');
                matlabSession.shutdown('Error launching MATLAB');
                watcher.close();
                Logger_1.default.error(`Error launching MATLAB: (${error.name}) ${error.message}`);
                if (error.stack != null) {
                    Logger_1.default.error(`Error stack:\n${error.stack}`);
                }
                LifecycleNotificationHelper_1.default.didMatlabLaunchFail = true;
                NotificationService_1.default.sendNotification(NotificationService_1.Notification.MatlabLaunchFailed);
            });
            // Handles the MATLAB process being terminated unexpectedly/externally.
            // This could include the user killing the process.
            matlabProcess.on('close', () => {
                // Close connection
                reject('MATLAB process terminated unexpectedly');
                Logger_1.default.log(`MATLAB proces (session ${matlabSession.sessionId}) terminated`);
                matlabSession.shutdown();
            });
        }));
    });
}
exports.launchNewMatlab = launchNewMatlab;
/**
 * Connects to a MATLAB instance over the given URL.
 *
 * @param url The URL at which to find MATLAB
 *
 * @returns The MATLAB session
 */
function connectToMatlab(url) {
    return __awaiter(this, void 0, void 0, function* () {
        LifecycleNotificationHelper_1.default.notifyConnectionStatusChange(ConnectionState.CONNECTING);
        const matlabSession = new RemoteMatlabSession();
        const matlabConnection = yield MatlabCommunicationManager_1.default.connectToExistingMatlab(url);
        matlabSession.initialize(matlabConnection);
        yield matlabSession.startConnection();
        return matlabSession;
    });
}
exports.connectToMatlab = connectToMatlab;
let sessionIdCt = 1;
class AbstractMatlabSession {
    constructor() {
        this.sessionId = sessionIdCt++;
        this.eventEmitter = new events_1.EventEmitter();
        this.isValid = true;
    }
    getConnection() {
        var _a;
        return (_a = this.matlabConnection) !== null && _a !== void 0 ? _a : null;
    }
    getMatlabRelease() {
        var _a;
        return (_a = this.matlabRelease) !== null && _a !== void 0 ? _a : null;
    }
    notifyConnectionStatusChange(status) {
        if (this.isValid) {
            // Only sent notifications about status changes for valid
            // sessions, to avoid potential poor interactions between
            // a session shutting down and a new session starting.
            LifecycleNotificationHelper_1.default.notifyConnectionStatusChange(status);
        }
    }
}
/**
 * Represents a session with a locally installed MATLAB.
 */
class LocalMatlabSession extends AbstractMatlabSession {
    initialize(matlabConnection, matlabProcess) {
        this.matlabConnection = matlabConnection;
        this.matlabProcess = matlabProcess;
        this.setupListeners();
    }
    /**
     * Instantiates the connection with MATLAB.
     *
     * @param port MATLAB's secure port number
     * @param certFile The file location for MATLAB's self-signed certificate
     * @param matlabPid MATLAB's process ID
     * @param matlabRelease The MATLAB release
     */
    startConnection(port, certFile, matlabPid, matlabRelease) {
        return __awaiter(this, void 0, void 0, function* () {
            this.matlabPid = matlabPid;
            this.matlabRelease = matlabRelease;
            if (this.matlabConnection == null) {
                Logger_1.default.error('Attempting to start connection to MATLAB without first initializing');
                return Promise.reject('LocalMatlabSession not initialized');
            }
            return this.matlabConnection.initialize(port, certFile);
        });
    }
    shutdown(shutdownMessage) {
        var _a, _b;
        if (!this.isValid) {
            // Don't attempt to shut down more than once
            return;
        }
        Logger_1.default.log(`Shutting down MATLAB session ${this.sessionId}`);
        // Report shutdown
        this.notifyConnectionStatusChange(ConnectionState.DISCONNECTED);
        (0, TelemetryUtils_1.reportTelemetryAction)(TelemetryUtils_1.Actions.ShutdownMatlab, shutdownMessage);
        this.eventEmitter.emit('shutdown');
        this.isValid = false;
        // Close the connection and kill MATLAB process
        if (os.platform() === 'win32' && this.matlabPid != null) {
            // Need to kill MATLAB's child process which is launched on Windows
            try {
                process.kill(this.matlabPid, 'SIGTERM');
            }
            catch (_c) {
                Logger_1.default.warn('Unable to kill MATLAB child process - child process already killed');
            }
        }
        (_a = this.matlabConnection) === null || _a === void 0 ? void 0 : _a.close();
        try {
            (_b = this.matlabProcess) === null || _b === void 0 ? void 0 : _b.kill('SIGTERM');
        }
        catch (_d) {
            Logger_1.default.warn('Unable to kill MATLAB process - process already killed');
        }
    }
    setupListeners() {
        var _a, _b, _c;
        // Handle messages from MATLAB's standard err channel. Because MATLAB is launched
        // with the -log flag, all of MATLAB's output is pushed through stderr. Write this
        // to a log file
        (_b = (_a = this.matlabProcess) === null || _a === void 0 ? void 0 : _a.stderr) === null || _b === void 0 ? void 0 : _b.on('data', data => {
            const stderrStr = data.toString().trim();
            Logger_1.default.writeMatlabLog(stderrStr);
        });
        // Set up lifecycle listener
        (_c = this.matlabConnection) === null || _c === void 0 ? void 0 : _c.setLifecycleListener(lifecycleEvent => {
            if (lifecycleEvent === MatlabCommunicationManager_1.LifecycleEventType.DISCONNECTED) {
                Logger_1.default.warn('Error while communicating with MATLAB - disconnecting');
                this.shutdown('Error while communicating with MATLAB');
            }
        });
    }
}
/**
 * Represents a session with a (potentially) remote MATLAB instance over a URL.
 */
class RemoteMatlabSession extends AbstractMatlabSession {
    initialize(matlabConnection) {
        this.matlabConnection = matlabConnection;
        this.setupListeners();
    }
    /**
     * Instantiates the connection with MATLAB.
     */
    startConnection() {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            if (this.matlabConnection == null) {
                Logger_1.default.error('Attempting to start connection to MATLAB without first initializing');
                return Promise.reject('RemoteMatlabSession not initialized');
            }
            return (_a = this.matlabConnection) === null || _a === void 0 ? void 0 : _a.initialize();
        });
    }
    shutdown(shutdownMessage) {
        var _a;
        if (!this.isValid) {
            // Don't attempt to shut down more than once
            return;
        }
        // Report shutdown
        this.notifyConnectionStatusChange(ConnectionState.DISCONNECTED);
        (0, TelemetryUtils_1.reportTelemetryAction)(TelemetryUtils_1.Actions.ShutdownMatlab, shutdownMessage);
        this.eventEmitter.emit('shutdown');
        this.isValid = false;
        // Close the connection
        (_a = this.matlabConnection) === null || _a === void 0 ? void 0 : _a.close();
    }
    setupListeners() {
        var _a;
        (_a = this.matlabConnection) === null || _a === void 0 ? void 0 : _a.setLifecycleListener(lifecycleEvent => {
            if (lifecycleEvent === MatlabCommunicationManager_1.LifecycleEventType.CONNECTED) {
                this.notifyConnectionStatusChange(ConnectionState.CONNECTED);
            }
            else if (lifecycleEvent === MatlabCommunicationManager_1.LifecycleEventType.DISCONNECTED) {
                this.shutdown('Remote MATLAB disconnected');
            }
        });
    }
}
/**
 * Reads the startup info generated by MATLAB when it is launched.
 *
 * @param file The file from which to read
 * @returns The MATLAB startup info
 */
function readStartupInfo(file) {
    return __awaiter(this, void 0, void 0, function* () {
        const data = yield fsPromises.readFile(file);
        return JSON.parse(data.toString());
    });
}
/**
 * Gets the command with which MATLAB should be launched.
 *
 * @param outFile The file in which MATLAB should output connection details
 * @returns The MATLAB launch command and arguments
 */
function getMatlabLaunchCommand(outFile) {
    var _a;
    return __awaiter(this, void 0, void 0, function* () {
        const matlabInstallPath = (yield ConfigurationManager_1.default.getConfiguration()).installPath;
        let command = 'matlab';
        if (matlabInstallPath !== '') {
            command = path.normalize(path.join(matlabInstallPath.trim(), 'bin', 'matlab'));
        }
        const args = [
            '-log',
            '-memmgr', 'release',
            '-noAppIcon',
            '-nosplash',
            '-r', getMatlabStartupCommand(outFile),
            '-useStartupFolderPref',
            '-nodesktop' // Hide the MATLAB desktop
        ];
        if (os.platform() === 'win32') {
            args.push('-noDisplayDesktop'); // Workaround for '-nodesktop' on Windows until a better solution is implemented
            args.push('-wait');
        }
        const argsFromSettings = (_a = ConfigurationManager_1.default.getArgument(ConfigurationManager_1.Argument.MatlabLaunchCommandArguments)) !== null && _a !== void 0 ? _a : null;
        if (argsFromSettings != null) {
            args.push(argsFromSettings);
        }
        return {
            command,
            args
        };
    });
}
/**
 * Gets the MATLAB command which the MATLAB application should run at startup.
 *
 * Note: This will sanitize the file paths so that they can be safely used within
 * character vectors in MATLAB. This is done by replacing all single-quote characters
 * with double single-quotes.
 *
 * @param outFile The file in which MATLAB should output connection details
 * @returns The MATLAB startup command
 */
function getMatlabStartupCommand(outFile) {
    // Sanitize file paths for MATLAB:
    // Replace single-quotes in the file path with double single-quotes 
    // to preserve the quote when used within a MATLAB character vector.
    const extensionInstallationDir = __dirname.replace(/'/g, "''");
    const outFilePath = outFile.replace(/'/g, "''");
    return `addpath(fullfile('${extensionInstallationDir}', '..', 'matlab')); initmatlabls('${outFilePath}')`;
}


/***/ }),

/***/ "./src/logging/Logger.ts":
/*!*******************************!*\
  !*** ./src/logging/Logger.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const fs = __importStar(__webpack_require__(/*! fs */ "fs"));
const os = __importStar(__webpack_require__(/*! os */ "os"));
const path = __importStar(__webpack_require__(/*! path */ "path"));
const SERVER_LOG = 'languageServerLog.txt';
const MATLAB_LOG = 'matlabLog.txt';
class Logger {
    constructor() {
        // Create Log Directory
        const pid = process.pid;
        this.logDir = path.join(os.tmpdir(), `matlabls_${pid}`);
        if (fs.existsSync(this.logDir)) {
            let i = 1;
            while (fs.existsSync(`${this.logDir}_${i}`)) {
                i++;
            }
            this.logDir = `${this.logDir}_${i}`;
        }
        fs.mkdirSync(this.logDir);
        // Get name of log file
        this.languageServerLogFile = path.join(this.logDir, SERVER_LOG);
        this.matlabLogFile = path.join(this.logDir, MATLAB_LOG);
    }
    initialize(console) {
        this.console = console;
        this.log(`Log Directory: ${this.logDir}`);
    }
    static getInstance() {
        if (Logger.instance == null) {
            Logger.instance = new Logger();
        }
        return Logger.instance;
    }
    /**
     * Logs an informational message to both the console and the log file.
     *
     * @param message The message
     */
    log(message) {
        var _a;
        const msg = `(${getCurrentTimeString()}) matlabls: ${message}`;
        (_a = this.console) === null || _a === void 0 ? void 0 : _a.log(msg);
        this._writeToLogFile(msg, this.languageServerLogFile);
    }
    /**
     * Logs a warning message to both the console and the log file.
     *
     * @param message The warning message
     */
    warn(message) {
        var _a;
        const msg = `(${getCurrentTimeString()}) matlabls - WARNING: ${message}`;
        (_a = this.console) === null || _a === void 0 ? void 0 : _a.warn(msg);
        this._writeToLogFile(msg, this.languageServerLogFile);
    }
    /**
     * Logs an error message to both the console and the log file.
     *
     * @param message The error message
     */
    error(message) {
        var _a;
        const msg = `(${getCurrentTimeString()}) matlabls - ERROR: ${message}`;
        (_a = this.console) === null || _a === void 0 ? void 0 : _a.error(msg);
        this._writeToLogFile(msg, this.languageServerLogFile);
    }
    /**
     * Log MATLAB application output to a log file on disk, separate from
     * the language server logs.
     *
     * @param message The message
     */
    writeMatlabLog(message) {
        this._writeToLogFile(message, this.matlabLogFile);
    }
    _writeToLogFile(message, filePath) {
        // Log to file
        fs.writeFile(filePath, `${message}\n`, { flag: 'a+' }, err => {
            var _a;
            if (err !== null) {
                (_a = this.console) === null || _a === void 0 ? void 0 : _a.error('Failed to write to log file');
            }
        });
    }
}
function getCurrentTimeString() {
    const d = new Date();
    const strFormatter = (x) => x.toString().padStart(2, '0');
    return `${strFormatter(d.getHours())}:${strFormatter(d.getMinutes())}:${strFormatter(d.getSeconds())}`;
}
exports["default"] = Logger.getInstance();


/***/ }),

/***/ "./src/logging/TelemetryUtils.ts":
/*!***************************************!*\
  !*** ./src/logging/TelemetryUtils.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2023-2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.reportTelemetrySettingsChange = exports.reportTelemetryAction = exports.ActionErrorConditions = exports.Actions = void 0;
const NotificationService_1 = __importStar(__webpack_require__(/*! ../notifications/NotificationService */ "./src/notifications/NotificationService.ts"));
var EventKeys;
(function (EventKeys) {
    EventKeys["Action"] = "ACTIONS";
    EventKeys["SettingChange"] = "SETTING_CHANGE";
})(EventKeys || (EventKeys = {}));
var Actions;
(function (Actions) {
    Actions["OpenFile"] = "openFile";
    Actions["StartMatlab"] = "startMATLAB";
    Actions["ShutdownMatlab"] = "shutdownMATLAB";
    Actions["MatlabSessionKey"] = "getMATLABSession";
    Actions["FormatDocument"] = "formatDocument";
    Actions["GoToReference"] = "goToReference";
    Actions["GoToDefinition"] = "goToDefinition";
    Actions["DocumentSymbol"] = "documentSymbol";
    Actions["RenameSymbol"] = "renameSymbol";
})(Actions = exports.Actions || (exports.Actions = {}));
var ActionErrorConditions;
(function (ActionErrorConditions) {
    ActionErrorConditions["MatlabUnavailable"] = "MATLAB unavailable";
})(ActionErrorConditions = exports.ActionErrorConditions || (exports.ActionErrorConditions = {}));
/**
 * Reports a telemetry event to the client
 *
 * @param eventKey The event key
 * @param data The event's data
 */
function reportTelemetry(eventKey, data) {
    NotificationService_1.default.sendNotification(NotificationService_1.Notification.LogTelemetryData, {
        eventKey,
        data
    });
}
/**
 * Reports telemetry about a simple action
 *
 * @param actionType The action's type
 * @param data The action's data
 */
function reportTelemetryAction(actionType, data = '') {
    reportTelemetry(EventKeys.Action, {
        action_type: actionType,
        result: data
    });
}
exports.reportTelemetryAction = reportTelemetryAction;
/**
 * Reports telemetry about a settings change
 *
 * @param settingName The setting's name
 * @param newValue The new value
 * @param oldValue The old value
 */
function reportTelemetrySettingsChange(settingName, newValue, oldValue) {
    reportTelemetry(EventKeys.SettingChange, {
        setting_name: settingName,
        new_value: newValue,
        old_value: oldValue
    });
}
exports.reportTelemetrySettingsChange = reportTelemetrySettingsChange;


/***/ }),

/***/ "./src/notifications/NotificationService.ts":
/*!**************************************************!*\
  !*** ./src/notifications/NotificationService.ts ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Notification = void 0;
const ClientConnection_1 = __importDefault(__webpack_require__(/*! ../ClientConnection */ "./src/ClientConnection.ts"));
var Notification;
(function (Notification) {
    // Connection Status Updates
    Notification["MatlabConnectionClientUpdate"] = "matlab/connection/update/client";
    Notification["MatlabConnectionServerUpdate"] = "matlab/connection/update/server";
    // Execution
    Notification["MatlabRequestInstance"] = "matlab/request";
    Notification["MVMEvalRequest"] = "evalRequest";
    Notification["MVMEvalComplete"] = "evalRequest";
    Notification["MVMFevalRequest"] = "fevalRequest";
    Notification["MVMFevalComplete"] = "fevalRequest";
    Notification["MVMText"] = "text";
    Notification["MVMClc"] = "clc";
    Notification["MVMInterruptRequest"] = "interruptRequest";
    Notification["MVMStateChange"] = "mvmStateChange";
    // Errors
    Notification["MatlabLaunchFailed"] = "matlab/launchfailed";
    Notification["MatlabFeatureUnavailable"] = "feature/needsmatlab";
    Notification["MatlabFeatureUnavailableNoMatlab"] = "feature/needsmatlab/nomatlab";
    // MATLAB Version Deprecation
    Notification["MatlabVersionDeprecation"] = "matlab/version/deprecation";
    // Telemetry
    Notification["LogTelemetryData"] = "telemetry/logdata";
})(Notification = exports.Notification || (exports.Notification = {}));
class NotificationService {
    static getInstance() {
        if (NotificationService.instance == null) {
            NotificationService.instance = new NotificationService();
        }
        return NotificationService.instance;
    }
    /**
     * Sends a notification to the language client
     *
     * @param name The name of the notification
     * @param params Any parameters to send with the notification
     */
    sendNotification(name, params) {
        void ClientConnection_1.default.getConnection().sendNotification(name, params);
    }
    /**
     * Sets up a listener for notifications from the language client
     *
     * @param name The name of the notification
     * @param callback The callback
     */
    registerNotificationListener(name, callback) {
        ClientConnection_1.default.getConnection().onNotification(name, callback);
    }
}
exports["default"] = NotificationService.getInstance();


/***/ }),

/***/ "./src/providers/completion/CompletionSupportProvider.ts":
/*!***************************************************************!*\
  !*** ./src/providers/completion/CompletionSupportProvider.ts ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const vscode_languageserver_1 = __webpack_require__(/*! vscode-languageserver */ "./node_modules/vscode-languageserver/lib/node/main.js");
const vscode_uri_1 = __webpack_require__(/*! vscode-uri */ "./node_modules/vscode-uri/lib/esm/index.js");
// Maps the completion type, as returned by MATLAB®, to the corresponding CompletionItemKind
const MatlabCompletionToKind = {
    literal: vscode_languageserver_1.CompletionItemKind.Text,
    unknown: vscode_languageserver_1.CompletionItemKind.Function,
    pathItem: vscode_languageserver_1.CompletionItemKind.File,
    mFile: vscode_languageserver_1.CompletionItemKind.Function,
    pFile: vscode_languageserver_1.CompletionItemKind.Function,
    mlxFile: vscode_languageserver_1.CompletionItemKind.Function,
    mlappFile: vscode_languageserver_1.CompletionItemKind.Function,
    mex: vscode_languageserver_1.CompletionItemKind.Function,
    mdlFile: vscode_languageserver_1.CompletionItemKind.Function,
    slxFile: vscode_languageserver_1.CompletionItemKind.Function,
    slxpFile: vscode_languageserver_1.CompletionItemKind.Function,
    sscFile: vscode_languageserver_1.CompletionItemKind.Function,
    sscpFile: vscode_languageserver_1.CompletionItemKind.Function,
    sfxFile: vscode_languageserver_1.CompletionItemKind.Class,
    folder: vscode_languageserver_1.CompletionItemKind.Folder,
    logical: vscode_languageserver_1.CompletionItemKind.Value,
    function: vscode_languageserver_1.CompletionItemKind.Function,
    filename: vscode_languageserver_1.CompletionItemKind.File,
    localFunction: vscode_languageserver_1.CompletionItemKind.Function,
    fieldname: vscode_languageserver_1.CompletionItemKind.Field,
    username: vscode_languageserver_1.CompletionItemKind.Text,
    variable: vscode_languageserver_1.CompletionItemKind.Variable,
    feature: vscode_languageserver_1.CompletionItemKind.Text,
    cellString: vscode_languageserver_1.CompletionItemKind.Value,
    class: vscode_languageserver_1.CompletionItemKind.Class,
    package: vscode_languageserver_1.CompletionItemKind.Module,
    property: vscode_languageserver_1.CompletionItemKind.Property,
    method: vscode_languageserver_1.CompletionItemKind.Method,
    enumeration: vscode_languageserver_1.CompletionItemKind.EnumMember,
    messageId: vscode_languageserver_1.CompletionItemKind.Text,
    keyword: vscode_languageserver_1.CompletionItemKind.Keyword,
    attribute: vscode_languageserver_1.CompletionItemKind.Keyword
};
/**
 * Handles requests for completion-related features.
 * Currently, this handles auto-completion as well as function signature help.
 */
class CompletionSupportProvider {
    constructor(matlabLifecycleManager) {
        this.matlabLifecycleManager = matlabLifecycleManager;
        this.REQUEST_CHANNEL = '/matlabls/completions/request';
        this.RESPONSE_CHANNEL = '/matlabls/completions/response';
    }
    /**
     * Handles a request for auto-completion choices.
     *
     * @param params Parameters from the onCompletion request
     * @param documentManager The text document manager
     * @returns An array of possible completions
     */
    handleCompletionRequest(params, documentManager) {
        return __awaiter(this, void 0, void 0, function* () {
            const doc = documentManager.get(params.textDocument.uri);
            if (doc == null) {
                return vscode_languageserver_1.CompletionList.create();
            }
            const completionData = yield this.retrieveCompletionData(doc, params.position);
            return this.parseCompletionItems(completionData);
        });
    }
    /**
     * Handles a request for function signature help.
     *
     * @param params Parameters from the onSignatureHelp request
     * @param documentManager The text document manager
     * @returns The signature help, or null if no signature help is available
     */
    handleSignatureHelpRequest(params, documentManager) {
        return __awaiter(this, void 0, void 0, function* () {
            const doc = documentManager.get(params.textDocument.uri);
            if (doc == null) {
                return null;
            }
            const completionData = yield this.retrieveCompletionData(doc, params.position);
            return this.parseSignatureHelp(completionData);
        });
    }
    /**
     * Retrieves raw completion data from MATLAB.
     *
     * @param doc The text document
     * @param position The cursor position in the document
     * @returns The raw completion data
     */
    retrieveCompletionData(doc, position) {
        return __awaiter(this, void 0, void 0, function* () {
            const docUri = doc.uri;
            const code = doc.getText();
            const fileName = vscode_uri_1.URI.parse(docUri).fsPath;
            const cursorPosition = doc.offsetAt(position);
            const matlabConnection = yield this.matlabLifecycleManager.getMatlabConnection();
            if (matlabConnection == null) {
                return {};
            }
            return yield new Promise(resolve => {
                const channelId = matlabConnection.getChannelId();
                const channel = `${this.RESPONSE_CHANNEL}/${channelId}`;
                const responseSub = matlabConnection.subscribe(channel, message => {
                    matlabConnection.unsubscribe(responseSub);
                    resolve(message);
                });
                matlabConnection.publish(this.REQUEST_CHANNEL, {
                    code,
                    fileName,
                    cursorPosition,
                    channelId
                });
            });
        });
    }
    /**
     * Parses the raw completion data to extract possible auto-completions.
     *
     * @param completionData The raw completion data
     * @returns A list of completion items
     */
    parseCompletionItems(completionData) {
        var _a, _b;
        const completionItems = [];
        const completionsMap = new Map();
        // Gather completions from top-level object. This should find function completions.
        this.gatherCompletions(completionData, completionsMap);
        // Gather completions from each signature. This should find function argument completions.
        let signatures = completionData.signatures;
        if (signatures != null) {
            signatures = Array.isArray(signatures) ? signatures : [signatures];
            signatures.forEach(signature => {
                let inputArguments = signature.inputArguments;
                if (inputArguments == null) {
                    return;
                }
                inputArguments = Array.isArray(inputArguments) ? inputArguments : [inputArguments];
                inputArguments.forEach(inputArgument => {
                    this.gatherCompletions(inputArgument, completionsMap);
                });
            });
        }
        let index = 0;
        completionsMap.forEach((completionData, completionName) => {
            // Preserve the sorting from MATLAB
            const sortText = String(index).padStart(10, '0');
            const completionItem = vscode_languageserver_1.CompletionItem.create(completionName);
            completionItem.kind = completionData.kind;
            completionItem.detail = completionData.doc;
            completionItem.data = index++;
            completionItem.sortText = sortText;
            completionItems.push(completionItem);
        });
        return vscode_languageserver_1.CompletionList.create(completionItems, (_b = (_a = completionData.widgetData) === null || _a === void 0 ? void 0 : _a.truncated) !== null && _b !== void 0 ? _b : false);
    }
    /**
     * Parses raw completion and argument data and stores info about possible completions in the provided map.
     *
     * @param completionDataObj Raw completion or argument data
     * @param completionMap A map in which to store info about possible completions
     */
    gatherCompletions(completionDataObj, completionMap) {
        var _a;
        let choices = (_a = completionDataObj.widgetData) === null || _a === void 0 ? void 0 : _a.choices;
        if (choices == null) {
            return;
        }
        choices = Array.isArray(choices) ? choices : [choices];
        choices.forEach(choice => {
            var _a, _b, _c;
            let completion = choice.completion;
            let isPath = false;
            switch (choice.matchType) {
                case 'folder':
                case 'filename':
                    // For files and folders, the completion is the full path whereas the displayString is the path to be added
                    completion = (_a = choice.displayString) !== null && _a !== void 0 ? _a : '';
                    isPath = true;
                    break;
                case 'messageId':
                    // Remove quotes from completion
                    completion = ((_b = choice.displayString) !== null && _b !== void 0 ? _b : '').replace(/['"]/g, '');
                    break;
            }
            const dotIdx = choice.completion.lastIndexOf('.');
            if (dotIdx > 0 && !isPath) {
                completion = completion.slice(dotIdx + 1);
            }
            completionMap.set(completion, {
                kind: (_c = MatlabCompletionToKind[choice.matchType]) !== null && _c !== void 0 ? _c : vscode_languageserver_1.CompletionItemKind.Function,
                doc: choice.purpose
            });
        });
    }
    /**
     * Parses the raw completion data to extract function signature help.
     *
     * @param completionData The raw completion data
     * @returns The signature help, or null if no signature help is available
     */
    parseSignatureHelp(completionData) {
        let signatureData = completionData.signatures;
        if (signatureData == null) {
            return null;
        }
        signatureData = Array.isArray(signatureData) ? signatureData : [signatureData];
        const signatureHelp = {
            activeParameter: 0,
            activeSignature: 0,
            signatures: []
        };
        // Parse each signature
        signatureData.forEach(sigData => {
            const params = [];
            // Handle function inputs
            const argNames = [];
            let inputArguments = sigData.inputArguments;
            if (inputArguments == null) {
                return;
            }
            inputArguments = Array.isArray(inputArguments) ? inputArguments : [inputArguments];
            inputArguments.forEach((inputArg, index) => {
                let paramDoc = '';
                if (inputArg.purpose != null) {
                    paramDoc += inputArg.purpose;
                }
                if (inputArg.valueSummary != null) {
                    paramDoc += (paramDoc.length > 0 ? '\n' : '') + inputArg.valueSummary;
                }
                const paramDocArgs = paramDoc.length > 0 ? [paramDoc] : [];
                params.push(vscode_languageserver_1.ParameterInformation.create(inputArg.name, ...paramDocArgs));
                argNames.push(inputArg.name);
                if (inputArg.status === 'presenting') {
                    signatureHelp.activeParameter = index;
                }
            });
            let argStr = '';
            if (argNames.length === 1) {
                argStr = argNames[0];
            }
            else if (argNames.length > 1) {
                argStr = argNames.join(', ');
            }
            // Handle function outputs
            let outStr = '';
            let outputArguments = sigData.outputArguments;
            if (outputArguments != null) {
                outputArguments = Array.isArray(outputArguments) ? outputArguments : [outputArguments];
                outStr = outputArguments.length === 1
                    ? outputArguments[0].name
                    : `[${outputArguments.map(output => output.name).join(', ')}]`;
                outStr += ' = ';
            }
            const id = `${outStr}${sigData.functionName}(${argStr})`;
            signatureHelp.signatures.push(vscode_languageserver_1.SignatureInformation.create(id, undefined, ...params));
        });
        return signatureHelp;
    }
}
exports["default"] = CompletionSupportProvider;


/***/ }),

/***/ "./src/providers/folding/FoldingSupportProvider.ts":
/*!*********************************************************!*\
  !*** ./src/providers/folding/FoldingSupportProvider.ts ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2024 The MathWorks, Inc.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const vscode_languageserver_1 = __webpack_require__(/*! vscode-languageserver */ "./node_modules/vscode-languageserver/lib/node/main.js");
const vscode_uri_1 = __webpack_require__(/*! vscode-uri */ "./node_modules/vscode-uri/lib/esm/index.js");
class FoldingSupportProvider {
    constructor(matlabLifecycleManager) {
        this.matlabLifecycleManager = matlabLifecycleManager;
        this.REQUEST_CHANNEL = '/matlabls/foldDocument/request';
        this.RESPONSE_CHANNEL = '/matlabls/foldDocument/response';
    }
    handleFoldingRangeRequest(params, documentManager) {
        return __awaiter(this, void 0, void 0, function* () {
            const docToFold = documentManager.get(params.textDocument.uri);
            if (docToFold == null) {
                return null;
            }
            const matlabConnection = yield this.matlabLifecycleManager.getMatlabConnection();
            const isMatlabAvailable = (matlabConnection != null);
            const matlabRelease = this.matlabLifecycleManager.getMatlabRelease();
            // check for connection and release
            if (!isMatlabAvailable || (matlabRelease == null) || (matlabRelease < 'R2024b')) {
                return null;
            }
            const fileName = vscode_uri_1.URI.parse(docToFold.uri).fsPath;
            const code = docToFold.getText();
            const frArray = yield this.getFoldingRangesFromMatlab(code, fileName, matlabConnection);
            const foldingRanges = this.processFoldingRanges(frArray);
            return foldingRanges;
        });
    }
    /**
     * Gets folding ranges from MATLAB.
     *
     * @param code The code in the file
     * @param fileName The file's name
     * @param matlabConnection The connection to MATLAB
     * @returns An array of line numbers
     */
    getFoldingRangesFromMatlab(code, fileName, matlabConnection) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield new Promise(resolve => {
                const channelId = matlabConnection.getChannelId();
                const channel = `${this.RESPONSE_CHANNEL}/${channelId}`;
                const responseSub = matlabConnection.subscribe(channel, message => {
                    matlabConnection.unsubscribe(responseSub);
                    resolve(message);
                });
                matlabConnection.publish(this.REQUEST_CHANNEL, {
                    code,
                    fileName,
                    channelId
                });
            });
        });
    }
    /**
     * Processes folding range data from MATLAB.
     *
     * @param frArray An array of line numbers from MATLAB
     * @returns An array of FoldingRanges
     */
    processFoldingRanges(frArray) {
        let fRangeArray = [];
        for (let i = 0; i < frArray.length; i = i + 2) {
            let fRange = vscode_languageserver_1.FoldingRange.create(frArray[i] - 1, frArray[i + 1] - 1);
            fRangeArray.push(fRange);
        }
        return fRangeArray;
    }
}
exports["default"] = FoldingSupportProvider;


/***/ }),

/***/ "./src/providers/formatting/FormatSupportProvider.ts":
/*!***********************************************************!*\
  !*** ./src/providers/formatting/FormatSupportProvider.ts ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const vscode_languageserver_1 = __webpack_require__(/*! vscode-languageserver */ "./node_modules/vscode-languageserver/lib/node/main.js");
const LifecycleNotificationHelper_1 = __importDefault(__webpack_require__(/*! ../../lifecycle/LifecycleNotificationHelper */ "./src/lifecycle/LifecycleNotificationHelper.ts"));
const TelemetryUtils_1 = __webpack_require__(/*! ../../logging/TelemetryUtils */ "./src/logging/TelemetryUtils.ts");
const TextDocumentUtils = __importStar(__webpack_require__(/*! ../../utils/TextDocumentUtils */ "./src/utils/TextDocumentUtils.ts"));
/**
 * Handles requests for format-related features.
 * Currently, this handles formatting the entire document. In the future, this may be expanded to
 * include formatting a range witin the documemt.
 */
class FormatSupportProvider {
    constructor(matlabLifecycleManager) {
        this.matlabLifecycleManager = matlabLifecycleManager;
        this.REQUEST_CHANNEL = '/matlabls/formatDocument/request';
        this.RESPONSE_CHANNEL = '/matlabls/formatDocument/response';
    }
    /**
     * Handles a request for document formatting.
     *
     * @param params Parameters from the onDocumentFormatting request
     * @param documentManager The text document manager
     * @param connection The language server connection
     * @returns An array of text edits required for the formatting operation, or null if the operation cannot be performed
     */
    handleDocumentFormatRequest(params, documentManager) {
        return __awaiter(this, void 0, void 0, function* () {
            const docToFormat = documentManager.get(params.textDocument.uri);
            if (docToFormat == null) {
                return null;
            }
            return yield this.formatDocument(docToFormat, params.options);
        });
    }
    /**
     * Determines the edits required to format the given document.
     *
     * @param doc The document being formatted
     * @param options The formatting options
     * @returns An array of text edits required to format the document
     */
    formatDocument(doc, options) {
        return __awaiter(this, void 0, void 0, function* () {
            // For format, we try to instantiate MATLAB® if it is not already running
            const matlabConnection = yield this.matlabLifecycleManager.getMatlabConnection(true);
            // If MATLAB is not available, no-op
            if (matlabConnection == null) {
                LifecycleNotificationHelper_1.default.notifyMatlabRequirement();
                (0, TelemetryUtils_1.reportTelemetryAction)(TelemetryUtils_1.Actions.FormatDocument, TelemetryUtils_1.ActionErrorConditions.MatlabUnavailable);
                return [];
            }
            return yield new Promise(resolve => {
                const channelId = matlabConnection.getChannelId();
                const channel = `${this.RESPONSE_CHANNEL}/${channelId}`;
                const responseSub = matlabConnection.subscribe(channel, message => {
                    matlabConnection.unsubscribe(responseSub);
                    const newCode = message.data;
                    const endRange = TextDocumentUtils.getRangeUntilLineEnd(doc, doc.lineCount - 1, 0);
                    const edit = vscode_languageserver_1.TextEdit.replace(vscode_languageserver_1.Range.create(vscode_languageserver_1.Position.create(0, 0), endRange.end), newCode);
                    (0, TelemetryUtils_1.reportTelemetryAction)(TelemetryUtils_1.Actions.FormatDocument);
                    resolve([edit]);
                });
                matlabConnection.publish(this.REQUEST_CHANNEL, {
                    data: doc.getText(),
                    insertSpaces: options.insertSpaces,
                    tabSize: options.tabSize,
                    channelId
                });
            });
        });
    }
}
exports["default"] = FormatSupportProvider;


/***/ }),

/***/ "./src/providers/linting/LintingSupportProvider.ts":
/*!*********************************************************!*\
  !*** ./src/providers/linting/LintingSupportProvider.ts ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const child_process_1 = __webpack_require__(/*! child_process */ "child_process");
const vscode_languageserver_1 = __webpack_require__(/*! vscode-languageserver */ "./node_modules/vscode-languageserver/lib/node/main.js");
const vscode_uri_1 = __webpack_require__(/*! vscode-uri */ "./node_modules/vscode-uri/lib/esm/index.js");
const ConfigurationManager_1 = __importDefault(__webpack_require__(/*! ../../lifecycle/ConfigurationManager */ "./src/lifecycle/ConfigurationManager.ts"));
const Logger_1 = __importDefault(__webpack_require__(/*! ../../logging/Logger */ "./src/logging/Logger.ts"));
const fs = __importStar(__webpack_require__(/*! fs/promises */ "fs/promises"));
const path = __importStar(__webpack_require__(/*! path */ "path"));
const which = __webpack_require__(/*! which */ "./node_modules/which/which.js");
const ExecuteCommandProvider_1 = __webpack_require__(/*! ../lspCommands/ExecuteCommandProvider */ "./src/providers/lspCommands/ExecuteCommandProvider.ts");
const ClientConnection_1 = __importDefault(__webpack_require__(/*! ../../ClientConnection */ "./src/ClientConnection.ts"));
const LINT_DELAY = 500; // Delay (in ms) after keystroke before attempting to lint the document
// Lint result parsing constants
const LINT_MESSAGE_REGEX = /L (\d+) \(C (\d+)-?(\d*)\): ([\dA-Za-z]+): ML(\d): (.*)/;
const FIX_FLAG_REGEX = /\(CAN FIX\)/;
const FIX_MESSAGE_REGEX = /----FIX MESSAGE<\w+>\s+<([^>]*)>/;
const FIX_CHANGE_REGEX = /----CHANGE MESSAGE L (\d+) \(C (\d+)\);\s+L (\d+) \(C (\d+)\):\s+<([^>]*)>/;
/**
 * Handles requests for linting-related features.
 * Currently, this handles displaying diagnostics, providing quick-fixes,
 * and suppressing diagnostics.
 *
 * Note: When MATLAB® is not connected, diagnostics are only updated when
 * the file is saved and suppressing warnings is not available.
 */
class LintingSupportProvider {
    constructor(matlabLifecycleManager) {
        this.matlabLifecycleManager = matlabLifecycleManager;
        this.LINTING_REQUEST_CHANNEL = '/matlabls/linting/request';
        this.LINTING_RESPONSE_CHANNEL = '/matlabls/linting/response';
        this.SUPPRESS_DIAGNOSTIC_REQUEST_CHANNEL = '/matlabls/linting/suppressdiagnostic/request';
        this.SUPPRESS_DIAGNOSTIC_RESPONSE_CHANNEL = '/matlabls/linting/suppressdiagnostic/response';
        this.SEVERITY_MAP = {
            0: vscode_languageserver_1.DiagnosticSeverity.Information,
            1: vscode_languageserver_1.DiagnosticSeverity.Warning,
            2: vscode_languageserver_1.DiagnosticSeverity.Error,
            3: vscode_languageserver_1.DiagnosticSeverity.Error,
            4: vscode_languageserver_1.DiagnosticSeverity.Error
        };
        this._pendingFilesToLint = new Map();
        this._availableCodeActions = new Map();
    }
    /**
     * Queues a document to be linted. This handles debouncing so
     * that linting is not performed on every keystroke.
     *
     * @param textDocument The document to be linted
     * @param connection The language server connection
     */
    queueLintingForDocument(textDocument) {
        const uri = textDocument.uri;
        this.clearTimerForDocumentUri(uri);
        this._pendingFilesToLint.set(uri, setTimeout(() => {
            void this.lintDocument(textDocument);
        }, LINT_DELAY) // Specify timeout for debouncing, to avoid re-linting every keystroke while a user types
        );
    }
    /**
     * Lints the document and displays diagnostics.
     *
     * @param textDocument The document being linted
     * @param connection The language server connection
     */
    lintDocument(textDocument) {
        return __awaiter(this, void 0, void 0, function* () {
            const uri = textDocument.uri;
            this.clearTimerForDocumentUri(uri);
            this.clearCodeActionsForDocumentUri(uri);
            const matlabConnection = yield this.matlabLifecycleManager.getMatlabConnection();
            const isMatlabAvailable = matlabConnection != null;
            const fileName = vscode_uri_1.URI.parse(uri).fsPath;
            let lintData = [];
            if (isMatlabAvailable) {
                // Use MATLAB-based linting for better results and fixes
                const code = textDocument.getText();
                lintData = yield this.getLintResultsFromMatlab(code, fileName, matlabConnection);
            }
            else {
                // Try to use mlint executable for basic linting
                lintData = yield this.getLintResultsFromExecutable(fileName);
            }
            const lintResults = this.processLintResults(uri, lintData);
            const diagnostics = lintResults.diagnostics;
            // Store code actions
            this._availableCodeActions.set(uri, lintResults.codeActions);
            // Report diagnostics
            void ClientConnection_1.default.getConnection().sendDiagnostics({
                uri,
                diagnostics
            });
        });
    }
    clearDiagnosticsForDocument(textDocument) {
        void ClientConnection_1.default.getConnection().sendDiagnostics({
            uri: textDocument.uri,
            diagnostics: []
        });
    }
    /**
     * Handles a request for code actions.
     *
     * @param params Parameters from the onCodeAction request
     */
    handleCodeActionRequest(params) {
        var _a;
        const uri = params.textDocument.uri;
        const actions = (_a = this._availableCodeActions.get(uri)) !== null && _a !== void 0 ? _a : [];
        let codeActions = [...actions];
        // Filter to find unique diagnostics
        codeActions = codeActions.filter(action => {
            var _a;
            const diagnostic = (_a = action.diagnostics) === null || _a === void 0 ? void 0 : _a[0];
            if (diagnostic == null) {
                return false;
            }
            return params.context.diagnostics.some(diag => this.isSameDiagnostic(diagnostic, diag));
        });
        if (!this.matlabLifecycleManager.isMatlabConnected()) {
            // Cannot suppress warnings without MATLAB
            return codeActions;
        }
        // Add suppression commands
        const diagnostics = params.context.diagnostics;
        const commands = [];
        diagnostics.forEach(diagnostic => {
            // Don't allow suppressing errors
            if (diagnostic.severity === vscode_languageserver_1.DiagnosticSeverity.Error) {
                return;
            }
            const diagnosticCode = diagnostic.code;
            // Add suppress-on-line option
            commands.push(vscode_languageserver_1.Command.create(`Suppress message ${diagnosticCode} on this line`, ExecuteCommandProvider_1.MatlabLSCommands.MLINT_SUPPRESS_ON_LINE, {
                id: diagnosticCode,
                range: diagnostic.range,
                uri
            }));
            // Add suppress-in-file option
            commands.push(vscode_languageserver_1.Command.create(`Suppress message ${diagnosticCode} in this file`, ExecuteCommandProvider_1.MatlabLSCommands.MLINT_SUPPRESS_IN_FILE, {
                id: diagnosticCode,
                range: diagnostic.range,
                uri
            }));
        });
        commands.forEach(command => {
            // Add suppression actions as Commands to be processed later.
            codeActions.push(vscode_languageserver_1.CodeAction.create(command.title, command, vscode_languageserver_1.CodeActionKind.QuickFix));
        });
        return codeActions;
    }
    /**
     * Attempt to suppress a diagnostic.
     *
     * @param textDocument The document
     * @param range The range of the diagnostic being suppress
     * @param id The diagnostic's ID
     * @param shouldSuppressThroughoutFile Whether or not to suppress the diagnostic throughout the entire file
     */
    suppressDiagnostic(textDocument, range, id, shouldSuppressThroughoutFile) {
        return __awaiter(this, void 0, void 0, function* () {
            const matlabConnection = yield this.matlabLifecycleManager.getMatlabConnection();
            if (matlabConnection == null) {
                return;
            }
            const channelId = matlabConnection.getChannelId();
            const channel = `${this.SUPPRESS_DIAGNOSTIC_RESPONSE_CHANNEL}/${channelId}`;
            const responseSub = matlabConnection.subscribe(channel, message => {
                matlabConnection.unsubscribe(responseSub);
                const suppressionEdits = message.suppressionEdits;
                const edit = {
                    changes: {
                        [textDocument.uri]: suppressionEdits
                    },
                    documentChanges: [
                        vscode_languageserver_1.TextDocumentEdit.create(vscode_languageserver_1.VersionedTextDocumentIdentifier.create(textDocument.uri, textDocument.version), suppressionEdits)
                    ]
                };
                void ClientConnection_1.default.getConnection().workspace.applyEdit(edit);
            });
            matlabConnection.publish(this.SUPPRESS_DIAGNOSTIC_REQUEST_CHANNEL, {
                code: textDocument.getText(),
                diagnosticId: id,
                line: range.start.line + 1,
                suppressInFile: shouldSuppressThroughoutFile,
                channelId
            });
        });
    }
    /**
     * Clears any active linting timers for the provided document URI.
     *
     * @param uri The document URI
     */
    clearTimerForDocumentUri(uri) {
        const timerId = this._pendingFilesToLint.get(uri);
        if (timerId != null) {
            clearTimeout(timerId);
            this._pendingFilesToLint.delete(uri);
        }
    }
    /**
     * Clears any cached code actions for the provided document URI.
     *
     * @param uri The document URI
     */
    clearCodeActionsForDocumentUri(uri) {
        this._availableCodeActions.set(uri, []);
    }
    /**
     * Gets raw linting data from MATLAB.
     *
     * @param code The code to be linted
     * @param fileName The file's name
     * @param matlabConnection The connection to MATLAB
     * @returns Raw lint data for the code
     */
    getLintResultsFromMatlab(code, fileName, matlabConnection) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield new Promise(resolve => {
                const channelId = matlabConnection.getChannelId();
                const channel = `${this.LINTING_RESPONSE_CHANNEL}/${channelId}`;
                const responseSub = matlabConnection.subscribe(channel, message => {
                    matlabConnection.unsubscribe(responseSub);
                    resolve(message.lintData);
                });
                matlabConnection.publish(this.LINTING_REQUEST_CHANNEL, {
                    code,
                    fileName,
                    channelId
                });
            });
        });
    }
    /**
     * Gets raw linting data using the mlint executable.
     *
     * @param fileName The file's name
     * @returns Raw lint data for the file
     */
    getLintResultsFromExecutable(fileName) {
        return __awaiter(this, void 0, void 0, function* () {
            const mlintExecutable = yield this.getMlintExecutable();
            if (mlintExecutable == null) {
                // Unable to locate executable
                return [];
            }
            const mlintArgs = [
                fileName,
                '-id',
                '-severity',
                '-fix'
            ];
            return yield new Promise(resolve => {
                try {
                    (0, child_process_1.execFile)(mlintExecutable, mlintArgs, (error, stdout, stderr) => {
                        var _a;
                        if (error != null) {
                            Logger_1.default.error(`Error from mlint executable: ${error.message}\n${(_a = error.stack) !== null && _a !== void 0 ? _a : ''}`);
                            resolve([]);
                        }
                        resolve(stderr.split('\n')); // For some reason, mlint appears to output on stderr instead of stdout
                    });
                }
                catch (e) {
                    Logger_1.default.error(`Error executing mlint executable at ${mlintExecutable}`);
                }
            });
        });
    }
    /**
     * Attempts to determine the path to the mlint executable.
     *
     * @returns The path to the mlint executable, or null if it cannot be determined
     */
    getMlintExecutable() {
        return __awaiter(this, void 0, void 0, function* () {
            const platformDirs = this.getBinDirectoriesForPlatform();
            if (platformDirs == null) {
                // Unable to determine platform
                return null;
            }
            const matlabInstallPath = (yield ConfigurationManager_1.default.getConfiguration()).installPath.trim();
            let binPath = '';
            if (matlabInstallPath !== '') {
                // Find the executable from the root installation directory
                binPath = path.normalize(path.join(matlabInstallPath, 'bin'));
            }
            else {
                // Try to find the executable based on the location of the `matlab` executable
                try {
                    let resolvedPath = yield which('matlab');
                    if (resolvedPath !== '') {
                        resolvedPath = yield fs.realpath(resolvedPath);
                        binPath = path.dirname(resolvedPath);
                    }
                }
                catch (_a) {
                    // `matlab` not found on path - no action
                }
            }
            if (binPath === '') {
                return null;
            }
            for (const platformDir of platformDirs) {
                const mlintExecutablePath = path.normalize(path.join(binPath, platformDir, process.platform === 'win32' ? 'mlint.exe' : 'mlint'));
                try {
                    yield fs.access(mlintExecutablePath);
                    return mlintExecutablePath; // return the first existing path
                }
                catch (_b) {
                    // continue to the next iteration
                }
            }
            Logger_1.default.error(`Error finding mlint executable in ${binPath}`);
            return null;
        });
    }
    /**
     * Gets the name of platform-specific binary directory.
     *
     * @returns The binary directory name, or null if the platform is not recognized
     */
    getBinDirectoriesForPlatform() {
        switch (process.platform) {
            case 'win32':
                return ['win64'];
            case 'darwin':
                return ['maci64', 'maca64'];
            case 'linux':
                return ['glnxa64'];
            default:
                return null;
        }
    }
    /**
     * Parses diagnostics and code actions from the raw lint data.
     *
     * @param uri THe linted document's URI
     * @param lintData The lint data for the document
     * @returns Parsed diagnostics and code actions
     */
    processLintResults(uri, lintData) {
        const diagnostics = [];
        const codeActions = [];
        let dataIndex = 0;
        while (dataIndex < lintData.length) {
            const message = lintData[dataIndex++];
            if (message === '') {
                continue;
            }
            // Parse lint message
            // Diagnostics will be reported with a line like the following:
            //     L {lineNumber} (C {columnNumber}): {diagnosticId}: ML{severity}: {diagnosticMessage} (CAN FIX)
            // If the diagnostic cannot be fixed, the '(CAN FIX)' will not be present
            const parsedLine = message.match(LINT_MESSAGE_REGEX);
            if (parsedLine == null) {
                continue;
            }
            const line = Math.max(parseInt(parsedLine[1]) - 1, 0);
            const startColumn = Math.max(parseInt(parsedLine[2]) - 1, 0);
            const endColumn = (parsedLine[3] !== '') ? parseInt(parsedLine[3]) : startColumn + 1; // +1 for open interval
            const id = parsedLine[4];
            const severity = this.SEVERITY_MAP[parsedLine[5]];
            let lintMessage = parsedLine[6];
            // Check if there are available fixes for this diagnostic
            const fixMatch = lintMessage.match(FIX_FLAG_REGEX);
            if (fixMatch != null) {
                lintMessage = lintMessage.replace(FIX_FLAG_REGEX, '').trim();
            }
            const diagnostic = vscode_languageserver_1.Diagnostic.create(vscode_languageserver_1.Range.create(line, startColumn, line, endColumn), lintMessage, severity, id, 'MATLAB');
            diagnostics.push(diagnostic);
            // Parse fix data for this diagnostic, if it exists
            if (fixMatch == null) {
                continue;
            }
            const fixInfo = lintData[dataIndex++];
            // Parse fix message
            // Diagnostic fixes will be reported with lines like the following:
            //     ----FIX MESSAGE<{diagnosticFixId}> <{message}>
            //     ----CHANGE MESSAGE L {lineNumber} (C {columnNumber});  L {lineNumber} (C {columnNumber}):  <{text}>
            const fixMsgMatch = fixInfo.match(FIX_MESSAGE_REGEX);
            if (fixMsgMatch == null) {
                continue;
            }
            const fixMsg = fixMsgMatch[1];
            // Gather fixes
            const changes = {
                [uri]: []
            };
            const wsEdit = {
                changes
            };
            while (dataIndex < lintData.length) {
                const actionMsg = lintData[dataIndex];
                const actionMsgMatch = actionMsg.match(FIX_CHANGE_REGEX);
                if (actionMsgMatch == null) {
                    break;
                }
                // Consume, since we matched
                dataIndex++;
                const startLine = parseInt(actionMsgMatch[1]) - 1;
                const startColumn = parseInt(actionMsgMatch[2]) - 1;
                const endLine = parseInt(actionMsgMatch[3]) - 1;
                const endColumn = parseInt(actionMsgMatch[4]);
                const replaceText = actionMsgMatch[5];
                // Translate data into edits
                let edit;
                if (startLine === endLine && startColumn === endColumn) {
                    // 1. Insert
                    edit = vscode_languageserver_1.TextEdit.insert(vscode_languageserver_1.Position.create(startLine, startColumn + 1), replaceText);
                }
                else if (replaceText.length === 0) {
                    // 2. Delete
                    edit = vscode_languageserver_1.TextEdit.del(vscode_languageserver_1.Range.create(startLine, startColumn, endLine, endColumn));
                }
                else {
                    // 3. Replace
                    edit = vscode_languageserver_1.TextEdit.replace(vscode_languageserver_1.Range.create(startLine, startColumn, endLine, endColumn), replaceText);
                }
                changes[uri].push(edit);
            }
            // If a fix has been processed, create a code action
            if (changes[uri].length > 0) {
                const action = vscode_languageserver_1.CodeAction.create(fixMsg, wsEdit, vscode_languageserver_1.CodeActionKind.QuickFix);
                action.diagnostics = [diagnostics[diagnostics.length - 1]];
                codeActions.push(action);
            }
        }
        return {
            diagnostics,
            codeActions
        };
    }
    /**
     * Determines whether two diagnostics are equivalent.
     *
     * @param a The first diagnostic
     * @param b The second diagnostic
     * @returns True if the diagnostics are the same. False otherwise.
     */
    isSameDiagnostic(a, b) {
        return a.code === b.code &&
            a.message === b.message &&
            a.range.start.character === b.range.start.character &&
            a.range.start.line === b.range.start.line &&
            a.range.end.character === b.range.end.character &&
            a.range.end.line === b.range.end.line &&
            a.severity === b.severity &&
            a.source === b.source;
    }
}
exports["default"] = LintingSupportProvider;


/***/ }),

/***/ "./src/providers/lspCommands/ExecuteCommandProvider.ts":
/*!*************************************************************!*\
  !*** ./src/providers/lspCommands/ExecuteCommandProvider.ts ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MatlabLSCommands = void 0;
exports.MatlabLSCommands = {
    MLINT_SUPPRESS_ON_LINE: 'matlabls.lint.suppress.line',
    MLINT_SUPPRESS_IN_FILE: 'matlabls.lint.suppress.file'
};
/**
 * Handles requests to execute commands
 */
class ExecuteCommandProvider {
    constructor(lintingSupportProvider) {
        this.lintingSupportProvider = lintingSupportProvider;
    }
    /**
     * Handles command execution requests.
     *
     * @param params Parameters from the onExecuteCommand request
     * @param documentManager The text document manager
     * @param connection The language server connection
     */
    handleExecuteCommand(params, documentManager) {
        return __awaiter(this, void 0, void 0, function* () {
            switch (params.command) {
                case exports.MatlabLSCommands.MLINT_SUPPRESS_ON_LINE:
                case exports.MatlabLSCommands.MLINT_SUPPRESS_IN_FILE:
                    void this.handleLintingSuppression(params, documentManager);
            }
        });
    }
    /**
     * Handles command to suppress a linting diagnostic.
     *
     * @param params Parameters from the onExecuteCommand request
     * @param documentManager The text document manager
     * @param connection The language server connection
     */
    handleLintingSuppression(params, documentManager) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const args = (_a = params.arguments) === null || _a === void 0 ? void 0 : _a[0];
            const range = args.range;
            const uri = args.uri;
            const doc = documentManager.get(uri);
            if (doc == null) {
                return;
            }
            const shouldSuppressThroughoutFile = params.command === exports.MatlabLSCommands.MLINT_SUPPRESS_IN_FILE;
            void this.lintingSupportProvider.suppressDiagnostic(doc, range, args.id, shouldSuppressThroughoutFile);
        });
    }
}
exports["default"] = ExecuteCommandProvider;


/***/ }),

/***/ "./src/providers/navigation/NavigationSupportProvider.ts":
/*!***************************************************************!*\
  !*** ./src/providers/navigation/NavigationSupportProvider.ts ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const vscode_languageserver_1 = __webpack_require__(/*! vscode-languageserver */ "./node_modules/vscode-languageserver/lib/node/main.js");
const FileInfoIndex_1 = __importDefault(__webpack_require__(/*! ../../indexing/FileInfoIndex */ "./src/indexing/FileInfoIndex.ts"));
const LifecycleNotificationHelper_1 = __importDefault(__webpack_require__(/*! ../../lifecycle/LifecycleNotificationHelper */ "./src/lifecycle/LifecycleNotificationHelper.ts"));
const TelemetryUtils_1 = __webpack_require__(/*! ../../logging/TelemetryUtils */ "./src/logging/TelemetryUtils.ts");
const ExpressionUtils_1 = __webpack_require__(/*! ../../utils/ExpressionUtils */ "./src/utils/ExpressionUtils.ts");
const SymbolSearchService_1 = __importStar(__webpack_require__(/*! ../../indexing/SymbolSearchService */ "./src/indexing/SymbolSearchService.ts"));
class NavigationSupportProvider {
    constructor(matlabLifecycleManager, indexer, documentIndexer, pathResolver) {
        this.matlabLifecycleManager = matlabLifecycleManager;
        this.indexer = indexer;
        this.documentIndexer = documentIndexer;
        this.pathResolver = pathResolver;
        /**
         * Caches document symbols for URIs to deal with the case when indexing
         * temporarily fails while the user is in the middle of an edit. We might
         * consider moving logic like this into the indexer logic later as clearing
         * out index data in the middle of an edit will have other ill effects.
         */
        this._documentSymbolCache = new Map();
    }
    /**
     * Handles requests for definitions or references.
     *
     * @param params Parameters for the definition or references request
     * @param documentManager The text document manager
     * @param requestType The type of request (definition or references)
     * @returns An array of locations
     */
    handleDefOrRefRequest(params, documentManager, requestType) {
        return __awaiter(this, void 0, void 0, function* () {
            const matlabConnection = yield this.matlabLifecycleManager.getMatlabConnection(true);
            if (matlabConnection == null) {
                LifecycleNotificationHelper_1.default.notifyMatlabRequirement();
                (0, SymbolSearchService_1.reportTelemetry)(requestType, TelemetryUtils_1.ActionErrorConditions.MatlabUnavailable);
                return [];
            }
            const uri = params.textDocument.uri;
            const textDocument = documentManager.get(uri);
            if (textDocument == null) {
                (0, SymbolSearchService_1.reportTelemetry)(requestType, 'No document');
                return [];
            }
            // Find ID for which to find the definition or references
            const expression = (0, ExpressionUtils_1.getExpressionAtPosition)(textDocument, params.position);
            if (expression == null) {
                // No target found
                (0, SymbolSearchService_1.reportTelemetry)(requestType, 'No navigation target');
                return [];
            }
            if (requestType === SymbolSearchService_1.RequestType.Definition) {
                return yield SymbolSearchService_1.default.findDefinition(uri, params.position, expression, matlabConnection, this.pathResolver, this.indexer);
            }
            else {
                return SymbolSearchService_1.default.findReferences(uri, params.position, expression, documentManager, requestType);
            }
        });
    }
    /**
     *
     * @param params Parameters for the document symbol request
     * @param documentManager The text document manager
     * @param requestType The type of request
     * @returns Array of symbols found in the document
     */
    handleDocumentSymbol(params, documentManager, requestType) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            // Get or wait for the MATLAB connection to handle files opened before MATLAB is ready.
            // We do not want to trigger MATLAB to launch due to the frequency of this callback.
            // However, simply returning [] in this case could cause a delay between MATLAB started
            // and the symbols being identified.
            const matlabConnection = yield new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
                if (this.matlabLifecycleManager.isMatlabConnected()) {
                    resolve(yield this.matlabLifecycleManager.getMatlabConnection());
                }
                else {
                    // MATLAB is not already connected, so wait until it has connected to
                    // resolve the connection.
                    this.matlabLifecycleManager.eventEmitter.once('connected', () => __awaiter(this, void 0, void 0, function* () {
                        resolve(yield this.matlabLifecycleManager.getMatlabConnection());
                    }));
                }
            }));
            if (matlabConnection == null) {
                (0, SymbolSearchService_1.reportTelemetry)(requestType, TelemetryUtils_1.ActionErrorConditions.MatlabUnavailable);
                return [];
            }
            const uri = params.textDocument.uri;
            const textDocument = documentManager.get(uri);
            if (textDocument == null) {
                (0, SymbolSearchService_1.reportTelemetry)(requestType, 'No document');
                return [];
            }
            // Ensure document index is up to date
            yield this.documentIndexer.ensureDocumentIndexIsUpdated(textDocument);
            const codeData = FileInfoIndex_1.default.codeDataCache.get(uri);
            if (codeData == null) {
                (0, SymbolSearchService_1.reportTelemetry)(requestType, 'No code data');
                return [];
            }
            // Result symbols in documented
            const result = [];
            // Avoid duplicates coming from different data sources
            const visitedRanges = new Set();
            /**
             * Push symbol info to result set
             */
            function pushSymbol(name, kind, symbolRange) {
                if (!visitedRanges.has(symbolRange)) {
                    result.push(vscode_languageserver_1.SymbolInformation.create(name, kind, symbolRange, uri));
                    visitedRanges.add(symbolRange);
                }
            }
            if (codeData.isMainClassDefDocument && codeData.classInfo != null) {
                const classInfo = codeData.classInfo;
                if (codeData.classInfo.range != null) {
                    pushSymbol(classInfo.name, vscode_languageserver_1.SymbolKind.Class, codeData.classInfo.range);
                }
                classInfo.methods.forEach((info, name) => pushSymbol(name, vscode_languageserver_1.SymbolKind.Method, info.range));
                classInfo.enumerations.forEach((info, name) => pushSymbol(name, vscode_languageserver_1.SymbolKind.EnumMember, info.range));
                classInfo.properties.forEach((info, name) => pushSymbol(name, vscode_languageserver_1.SymbolKind.Property, info.range));
            }
            codeData.functions.forEach((info, name) => pushSymbol(name, info.isClassMethod ? vscode_languageserver_1.SymbolKind.Method : vscode_languageserver_1.SymbolKind.Function, info.range));
            codeData.sections.forEach((range, title) => {
                range.forEach(range => {
                    pushSymbol(title, vscode_languageserver_1.SymbolKind.Module, range);
                });
            });
            /**
             * Handle a case when the indexer fails due to the user being in the middle of an edit.
             * Here the documentSymbol cache has some symbols but the codeData cache has none. So we
             * assume that the user will soon fix their code and just fall back to what we knew for now.
             */
            if (result.length === 0) {
                const cached = (_a = this._documentSymbolCache.get(uri)) !== null && _a !== void 0 ? _a : result;
                if (cached.length > 0) {
                    return cached;
                }
            }
            this._documentSymbolCache.set(uri, result);
            return result;
        });
    }
}
exports["default"] = NavigationSupportProvider;


/***/ }),

/***/ "./src/providers/navigation/PathResolver.ts":
/*!**************************************************!*\
  !*** ./src/providers/navigation/PathResolver.ts ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const vscode_uri_1 = __webpack_require__(/*! vscode-uri */ "./node_modules/vscode-uri/lib/esm/index.js");
class PathResolver {
    constructor() {
        this.REQUEST_CHANNEL = '/matlabls/navigation/resolvePath/request';
        this.RESPONSE_CHANNEL = '/matlabls/navigation/resolvePath/response';
    }
    /**
     * Attempts to resolve the given names to the files in which the names are defined.
     * For example, 'MyClass' may be resolved to 'file:///path/to/MyClass.m'.
     *
     * @param names The names which should be resolved to paths
     * @param contextFileUri The file from which the context of the path resolution should be made
     * @param matlabConnection The connection to MATLAB®
     *
     * @returns The resolved URIs. Any URIs which could not be determiend are denoted by empty strings.
     */
    resolvePaths(names, contextFileUri, matlabConnection) {
        return __awaiter(this, void 0, void 0, function* () {
            const contextFile = vscode_uri_1.URI.parse(contextFileUri).fsPath;
            return yield new Promise(resolve => {
                const channelId = matlabConnection.getChannelId();
                const channel = `${this.RESPONSE_CHANNEL}/${channelId}`;
                const responseSub = matlabConnection.subscribe(channel, message => {
                    matlabConnection.unsubscribe(responseSub);
                    const resolvedPaths = message.data;
                    // Convert file system paths from MATLAB to URIs
                    const resolvedUris = resolvedPaths.map(resolvedPath => {
                        const filePath = resolvedPath.path;
                        const uri = (filePath === '') ? '' : vscode_uri_1.URI.file(filePath).toString();
                        return {
                            name: resolvedPath.name,
                            uri
                        };
                    });
                    resolve(resolvedUris);
                });
                matlabConnection.publish(this.REQUEST_CHANNEL, {
                    names,
                    contextFile,
                    channelId
                });
            });
        });
    }
}
exports["default"] = PathResolver;


/***/ }),

/***/ "./src/providers/rename/RenameSymbolProvider.ts":
/*!******************************************************!*\
  !*** ./src/providers/rename/RenameSymbolProvider.ts ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const vscode_languageserver_1 = __webpack_require__(/*! vscode-languageserver */ "./node_modules/vscode-languageserver/lib/node/main.js");
const LifecycleNotificationHelper_1 = __importDefault(__webpack_require__(/*! ../../lifecycle/LifecycleNotificationHelper */ "./src/lifecycle/LifecycleNotificationHelper.ts"));
const TextDocumentUtils_1 = __webpack_require__(/*! ../../utils/TextDocumentUtils */ "./src/utils/TextDocumentUtils.ts");
const FileInfoIndex_1 = __importDefault(__webpack_require__(/*! ../../indexing/FileInfoIndex */ "./src/indexing/FileInfoIndex.ts"));
const TelemetryUtils_1 = __webpack_require__(/*! ../../logging/TelemetryUtils */ "./src/logging/TelemetryUtils.ts");
const ExpressionUtils_1 = __webpack_require__(/*! ../../utils/ExpressionUtils */ "./src/utils/ExpressionUtils.ts");
const SymbolSearchService_1 = __importStar(__webpack_require__(/*! ../../indexing/SymbolSearchService */ "./src/indexing/SymbolSearchService.ts"));
class RenameSymbolProvider {
    constructor(matlabLifecycleManager, documentIndexer) {
        this.matlabLifecycleManager = matlabLifecycleManager;
        this.documentIndexer = documentIndexer;
    }
    /**
     * Determines if a symbol that can be renamed exists at the specified position.
     *
     * @param params Parameters for the prepare rename request
     * @param documentManager The text document manager
     * @returns A range and placeholder text
     */
    prepareRename(params, documentManager) {
        return __awaiter(this, void 0, void 0, function* () {
            const matlabConnection = yield this.matlabLifecycleManager.getMatlabConnection(true);
            if (matlabConnection == null) {
                LifecycleNotificationHelper_1.default.notifyMatlabRequirement();
                (0, SymbolSearchService_1.reportTelemetry)(SymbolSearchService_1.RequestType.RenameSymbol, TelemetryUtils_1.ActionErrorConditions.MatlabUnavailable);
                return null;
            }
            const uri = params.textDocument.uri;
            const textDocument = documentManager.get(uri);
            if (textDocument == null) {
                (0, SymbolSearchService_1.reportTelemetry)(SymbolSearchService_1.RequestType.RenameSymbol, 'No document');
                return null;
            }
            const text = textDocument.getText();
            const offset = textDocument.offsetAt(params.position);
            // Find the start of the expression
            let startOffset = offset;
            while (startOffset > 0 && /\w/.test(text.charAt(startOffset - 1))) {
                startOffset--;
            }
            // Find the end of the expression
            let endOffset = offset;
            while (endOffset < text.length && /\w/.test(text.charAt(endOffset))) {
                endOffset++;
            }
            // Check if an expression exists at the given position
            if (startOffset === endOffset) {
                return null;
            }
            const startPosition = textDocument.positionAt(startOffset);
            const endPosition = textDocument.positionAt(endOffset);
            const range = vscode_languageserver_1.Range.create(startPosition, endPosition);
            // Find ID for which to find the definition or references
            const expression = (0, ExpressionUtils_1.getExpressionAtPosition)(textDocument, params.position);
            if (expression == null) {
                (0, SymbolSearchService_1.reportTelemetry)(SymbolSearchService_1.RequestType.RenameSymbol, 'No rename target');
                return null;
            }
            // Check if expression contains only whitespace
            if (expression.fullExpression.trim().length === 0) {
                return null;
            }
            // Check if references exist
            if (SymbolSearchService_1.default.findReferences(uri, params.position, expression, documentManager, SymbolSearchService_1.RequestType.RenameSymbol).length === 0) {
                return null;
            }
            return { range, placeholder: expression.unqualifiedTarget };
        });
    }
    /**
     * Handles requests for renaming.
     *
     * @param params Parameters for the rename request
     * @param documentManager The text document manager
     * @returns A WorkspaceEdit object
     */
    handleRenameRequest(params, documentManager) {
        return __awaiter(this, void 0, void 0, function* () {
            const matlabConnection = yield this.matlabLifecycleManager.getMatlabConnection(true);
            if (matlabConnection == null) {
                LifecycleNotificationHelper_1.default.notifyMatlabRequirement();
                (0, SymbolSearchService_1.reportTelemetry)(SymbolSearchService_1.RequestType.RenameSymbol, TelemetryUtils_1.ActionErrorConditions.MatlabUnavailable);
                return null;
            }
            const uri = params.textDocument.uri;
            const textDocument = documentManager.get(uri);
            if (textDocument == null) {
                (0, SymbolSearchService_1.reportTelemetry)(SymbolSearchService_1.RequestType.RenameSymbol, 'No document');
                return null;
            }
            // Find ID for which to find the definition or references
            const expression = (0, ExpressionUtils_1.getExpressionAtPosition)(textDocument, params.position);
            if (expression == null) {
                (0, SymbolSearchService_1.reportTelemetry)(SymbolSearchService_1.RequestType.RenameSymbol, 'No rename target');
                return null;
            }
            // Ensure document index is up to date
            yield this.documentIndexer.ensureDocumentIndexIsUpdated(textDocument);
            const codeData = FileInfoIndex_1.default.codeDataCache.get(uri);
            if (codeData == null) {
                (0, SymbolSearchService_1.reportTelemetry)(SymbolSearchService_1.RequestType.RenameSymbol, 'No code data');
                return null;
            }
            const refs = SymbolSearchService_1.default.findReferences(uri, params.position, expression, documentManager, SymbolSearchService_1.RequestType.RenameSymbol);
            const workspaceEdit = {
                changes: {
                    [uri]: []
                }
            };
            refs.forEach(location => {
                const range = {
                    start: {
                        line: location.range.start.line,
                        character: location.range.start.character
                    },
                    end: {
                        line: location.range.end.line,
                        character: location.range.end.character
                    }
                };
                if (expression.components.length > 1 && expression.selectedComponent !== 0) {
                    let newName = expression.components.slice();
                    newName[expression.selectedComponent] = params.newName;
                    const newEdit = {
                        range: range,
                        newText: newName.join('.')
                    };
                    if (location.uri === uri && workspaceEdit.changes) {
                        workspaceEdit.changes[uri].push(newEdit);
                    }
                }
                else {
                    const newEdit = {
                        range: range,
                        newText: params.newName
                    };
                    if (location.uri === uri && workspaceEdit.changes) {
                        workspaceEdit.changes[uri].push(newEdit);
                    }
                }
            });
            // Check if there is a class definition and rename as necessary
            if (codeData.isClassDef && codeData.classInfo && codeData.classInfo.declaration) {
                const lineNumber = codeData.classInfo.declaration.start.line;
                const declaration = (0, TextDocumentUtils_1.getTextOnLine)(textDocument, lineNumber);
                if (declaration.split(/\s+/).includes(expression.unqualifiedTarget)) {
                    const range = {
                        start: {
                            line: lineNumber,
                            character: 9 // Offset by 9 to get past classdef_
                        },
                        end: {
                            line: lineNumber,
                            character: 9 + expression.unqualifiedTarget.length
                        }
                    };
                    const newEdit = {
                        range: range,
                        newText: params.newName
                    };
                    if (workspaceEdit.changes) {
                        workspaceEdit.changes[uri].push(newEdit);
                    }
                }
            }
            // Checks if properties need to be renamed
            let propertyInfo = SymbolSearchService_1.default.getPropertyDeclaration(codeData, expression.unqualifiedTarget);
            if (propertyInfo != null && expression.components.length > 1) {
                const newEdit = {
                    range: propertyInfo.range,
                    newText: params.newName
                };
                if (workspaceEdit.changes) {
                    workspaceEdit.changes[uri].push(newEdit);
                }
            }
            return workspaceEdit;
        });
    }
}
exports["default"] = RenameSymbolProvider;


/***/ }),

/***/ "./src/server.ts":
/*!***********************!*\
  !*** ./src/server.ts ***!
  \***********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.startServer = void 0;
const vscode_languageserver_textdocument_1 = __webpack_require__(/*! vscode-languageserver-textdocument */ "./node_modules/vscode-languageserver-textdocument/lib/esm/main.js");
const node_1 = __webpack_require__(/*! vscode-languageserver/node */ "./node_modules/vscode-languageserver/node.js");
const DocumentIndexer_1 = __importDefault(__webpack_require__(/*! ./indexing/DocumentIndexer */ "./src/indexing/DocumentIndexer.ts"));
const WorkspaceIndexer_1 = __importDefault(__webpack_require__(/*! ./indexing/WorkspaceIndexer */ "./src/indexing/WorkspaceIndexer.ts"));
const ConfigurationManager_1 = __importStar(__webpack_require__(/*! ./lifecycle/ConfigurationManager */ "./src/lifecycle/ConfigurationManager.ts"));
const MatlabLifecycleManager_1 = __importDefault(__webpack_require__(/*! ./lifecycle/MatlabLifecycleManager */ "./src/lifecycle/MatlabLifecycleManager.ts"));
const Logger_1 = __importDefault(__webpack_require__(/*! ./logging/Logger */ "./src/logging/Logger.ts"));
const TelemetryUtils_1 = __webpack_require__(/*! ./logging/TelemetryUtils */ "./src/logging/TelemetryUtils.ts");
const NotificationService_1 = __importStar(__webpack_require__(/*! ./notifications/NotificationService */ "./src/notifications/NotificationService.ts"));
const CompletionSupportProvider_1 = __importDefault(__webpack_require__(/*! ./providers/completion/CompletionSupportProvider */ "./src/providers/completion/CompletionSupportProvider.ts"));
const FormatSupportProvider_1 = __importDefault(__webpack_require__(/*! ./providers/formatting/FormatSupportProvider */ "./src/providers/formatting/FormatSupportProvider.ts"));
const LintingSupportProvider_1 = __importDefault(__webpack_require__(/*! ./providers/linting/LintingSupportProvider */ "./src/providers/linting/LintingSupportProvider.ts"));
const ExecuteCommandProvider_1 = __importStar(__webpack_require__(/*! ./providers/lspCommands/ExecuteCommandProvider */ "./src/providers/lspCommands/ExecuteCommandProvider.ts"));
const NavigationSupportProvider_1 = __importDefault(__webpack_require__(/*! ./providers/navigation/NavigationSupportProvider */ "./src/providers/navigation/NavigationSupportProvider.ts"));
const LifecycleNotificationHelper_1 = __importDefault(__webpack_require__(/*! ./lifecycle/LifecycleNotificationHelper */ "./src/lifecycle/LifecycleNotificationHelper.ts"));
const MVM_1 = __importDefault(__webpack_require__(/*! ./mvm/MVM */ "./src/mvm/MVM.js"));
const FoldingSupportProvider_1 = __importDefault(__webpack_require__(/*! ./providers/folding/FoldingSupportProvider */ "./src/providers/folding/FoldingSupportProvider.ts"));
const ClientConnection_1 = __importDefault(__webpack_require__(/*! ./ClientConnection */ "./src/ClientConnection.ts"));
const PathResolver_1 = __importDefault(__webpack_require__(/*! ./providers/navigation/PathResolver */ "./src/providers/navigation/PathResolver.ts"));
const Indexer_1 = __importDefault(__webpack_require__(/*! ./indexing/Indexer */ "./src/indexing/Indexer.ts"));
const RenameSymbolProvider_1 = __importDefault(__webpack_require__(/*! ./providers/rename/RenameSymbolProvider */ "./src/providers/rename/RenameSymbolProvider.ts"));
const SymbolSearchService_1 = __webpack_require__(/*! ./indexing/SymbolSearchService */ "./src/indexing/SymbolSearchService.ts");
const ProxyUtils_1 = __webpack_require__(/*! ./utils/ProxyUtils */ "./src/utils/ProxyUtils.ts");
function startServer() {
    return __awaiter(this, void 0, void 0, function* () {
        (0, ProxyUtils_1.cacheAndClearProxyEnvironmentVariables)();
        // Create a connection for the server
        const connection = ClientConnection_1.default.getConnection();
        // Initialize Logger
        Logger_1.default.initialize(connection.console);
        // Instantiate services
        const pathResolver = new PathResolver_1.default();
        const matlabLifecycleManager = new MatlabLifecycleManager_1.default();
        const indexer = new Indexer_1.default(matlabLifecycleManager, pathResolver);
        const workspaceIndexer = new WorkspaceIndexer_1.default(indexer);
        const documentIndexer = new DocumentIndexer_1.default(indexer);
        const formatSupportProvider = new FormatSupportProvider_1.default(matlabLifecycleManager);
        const foldingSupportProvider = new FoldingSupportProvider_1.default(matlabLifecycleManager);
        const lintingSupportProvider = new LintingSupportProvider_1.default(matlabLifecycleManager);
        const executeCommandProvider = new ExecuteCommandProvider_1.default(lintingSupportProvider);
        const completionSupportProvider = new CompletionSupportProvider_1.default(matlabLifecycleManager);
        const navigationSupportProvider = new NavigationSupportProvider_1.default(matlabLifecycleManager, indexer, documentIndexer, pathResolver);
        const renameSymbolProvider = new RenameSymbolProvider_1.default(matlabLifecycleManager, documentIndexer);
        // Create basic text document manager
        const documentManager = new node_1.TextDocuments(vscode_languageserver_textdocument_1.TextDocument);
        let mvm;
        matlabLifecycleManager.eventEmitter.on('connected', () => {
            // Handle things after MATLAB® has launched
            // Initiate workspace indexing
            void workspaceIndexer.indexWorkspace();
            documentManager.all().forEach(textDocument => {
                // Lint the open documents
                void lintingSupportProvider.lintDocument(textDocument);
                // Index the open document
                void documentIndexer.indexDocument(textDocument);
            });
        });
        let capabilities;
        // Handles an initialization request
        connection.onInitialize((params) => {
            capabilities = params.capabilities;
            // Defines the capabilities supported by this language server
            const initResult = {
                capabilities: {
                    codeActionProvider: true,
                    completionProvider: {
                        triggerCharacters: [
                            '.',
                            '(',
                            ' ',
                            ',',
                            '/',
                            '\\' // File path
                        ]
                    },
                    definitionProvider: true,
                    documentFormattingProvider: true,
                    executeCommandProvider: {
                        commands: Object.values(ExecuteCommandProvider_1.MatlabLSCommands)
                    },
                    foldingRangeProvider: true,
                    referencesProvider: true,
                    signatureHelpProvider: {
                        triggerCharacters: ['(', ',']
                    },
                    documentSymbolProvider: true,
                    renameProvider: {
                        prepareProvider: true
                    },
                }
            };
            return initResult;
        });
        // Handles the initialized notification
        connection.onInitialized(() => {
            ConfigurationManager_1.default.setup(capabilities);
            workspaceIndexer.setupCallbacks(capabilities);
            mvm = new MVM_1.default(NotificationService_1.default, matlabLifecycleManager);
            void startMatlabIfOnStartLaunch();
        });
        function startMatlabIfOnStartLaunch() {
            return __awaiter(this, void 0, void 0, function* () {
                // Launch MATLAB if it should be launched early
                const connectionTiming = (yield ConfigurationManager_1.default.getConfiguration()).matlabConnectionTiming;
                if (connectionTiming === ConfigurationManager_1.ConnectionTiming.OnStart) {
                    void matlabLifecycleManager.connectToMatlab().catch(reason => {
                        Logger_1.default.error(`MATLAB onStart connection failed: ${reason}`);
                    });
                }
            });
        }
        // Handles a shutdown request
        connection.onShutdown(() => {
            // Shut down MATLAB
            matlabLifecycleManager.disconnectFromMatlab();
        });
        // Set up connection notification listeners
        NotificationService_1.default.registerNotificationListener(NotificationService_1.Notification.MatlabConnectionClientUpdate, (data) => {
            switch (data.connectionAction) {
                case 'connect':
                    void matlabLifecycleManager.connectToMatlab().catch(reason => {
                        Logger_1.default.error(`Connection request failed: ${reason}`);
                    });
                    break;
                case 'disconnect':
                    matlabLifecycleManager.disconnectFromMatlab();
            }
        });
        // Set up MATLAB startup request listener
        NotificationService_1.default.registerNotificationListener(NotificationService_1.Notification.MatlabRequestInstance, () => __awaiter(this, void 0, void 0, function* () {
            const matlabConnection = yield matlabLifecycleManager.getMatlabConnection(true);
            if (matlabConnection === null) {
                LifecycleNotificationHelper_1.default.notifyMatlabRequirement();
            }
        }));
        // Handles files opened
        documentManager.onDidOpen(params => {
            reportFileOpened(params.document);
            void lintingSupportProvider.lintDocument(params.document);
            void documentIndexer.indexDocument(params.document);
        });
        documentManager.onDidClose(params => {
            lintingSupportProvider.clearDiagnosticsForDocument(params.document);
        });
        // Handles files saved
        documentManager.onDidSave(params => {
            void lintingSupportProvider.lintDocument(params.document);
        });
        // Handles changes to the text document
        documentManager.onDidChangeContent(params => {
            if (matlabLifecycleManager.isMatlabConnected()) {
                // Only want to lint on content changes when linting is being backed by MATLAB
                lintingSupportProvider.queueLintingForDocument(params.document);
                documentIndexer.queueIndexingForDocument(params.document);
            }
        });
        // Handle execute command requests
        connection.onExecuteCommand(params => {
            void executeCommandProvider.handleExecuteCommand(params, documentManager);
        });
        /** -------------------- COMPLETION SUPPORT -------------------- **/
        connection.onCompletion((params) => __awaiter(this, void 0, void 0, function* () {
            // Gather a list of possible completions to be displayed by the IDE
            return yield completionSupportProvider.handleCompletionRequest(params, documentManager);
        }));
        connection.onSignatureHelp((params) => __awaiter(this, void 0, void 0, function* () {
            // Gather a list of possible function signatures to be displayed by the IDE
            return yield completionSupportProvider.handleSignatureHelpRequest(params, documentManager);
        }));
        /** -------------------- FOLDING SUPPORT -------------------- **/
        connection.onFoldingRanges((params) => __awaiter(this, void 0, void 0, function* () {
            // Retrieve the folding ranges
            // If there are valid folding ranges, hand them back to the IDE
            // Else, return null, so the IDE falls back to indent-based folding
            return yield foldingSupportProvider.handleFoldingRangeRequest(params, documentManager);
        }));
        /** -------------------- FORMATTING SUPPORT -------------------- **/
        connection.onDocumentFormatting((params) => __awaiter(this, void 0, void 0, function* () {
            // Gather a set of document edits required for formatting, which the IDE will execute
            return yield formatSupportProvider.handleDocumentFormatRequest(params, documentManager);
        }));
        /** --------------------  LINTING SUPPORT   -------------------- **/
        connection.onCodeAction(params => {
            // Retrieve a list of possible code actions to be displayed by the IDE
            return lintingSupportProvider.handleCodeActionRequest(params);
        });
        /** --------------------  NAVIGATION SUPPORT   -------------------- **/
        connection.onDefinition((params) => __awaiter(this, void 0, void 0, function* () {
            return yield navigationSupportProvider.handleDefOrRefRequest(params, documentManager, SymbolSearchService_1.RequestType.Definition);
        }));
        connection.onReferences((params) => __awaiter(this, void 0, void 0, function* () {
            return yield navigationSupportProvider.handleDefOrRefRequest(params, documentManager, SymbolSearchService_1.RequestType.References);
        }));
        connection.onDocumentSymbol((params) => __awaiter(this, void 0, void 0, function* () {
            return yield navigationSupportProvider.handleDocumentSymbol(params, documentManager, SymbolSearchService_1.RequestType.DocumentSymbol);
        }));
        // Start listening to open/change/close text document events
        documentManager.listen(connection);
        /** --------------------  RENAME SUPPORT   -------------------- **/
        connection.onPrepareRename((params) => __awaiter(this, void 0, void 0, function* () {
            return yield renameSymbolProvider.prepareRename(params, documentManager);
        }));
        connection.onRenameRequest((params) => __awaiter(this, void 0, void 0, function* () {
            return yield renameSymbolProvider.handleRenameRequest(params, documentManager);
        }));
    });
}
exports.startServer = startServer;
/** -------------------- Helper Functions -------------------- **/
function reportFileOpened(document) {
    const roughSize = Math.ceil(document.getText().length / 1024); // in KB
    (0, TelemetryUtils_1.reportTelemetryAction)(TelemetryUtils_1.Actions.OpenFile, roughSize.toString());
}


/***/ }),

/***/ "./src/utils/CliUtils.ts":
/*!*******************************!*\
  !*** ./src/utils/CliUtils.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2022 - 2023 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getCliArgs = void 0;
const yargs = __importStar(__webpack_require__(/*! yargs */ "./node_modules/yargs/index.cjs"));
const ConfigurationManager_1 = __webpack_require__(/*! ../lifecycle/ConfigurationManager */ "./src/lifecycle/ConfigurationManager.ts");
/**
 * Creates a yargs parser to extract command line arguments.
 *
 * @returns The parsed command line arguments
 */
function makeParser() {
    const argParser = yargs.option(ConfigurationManager_1.Argument.MatlabLaunchCommandArguments, {
        description: 'Arguments passed to MATLAB when launching',
        type: 'string',
        requiresArg: true
    }).option(ConfigurationManager_1.Argument.MatlabInstallationPath, {
        description: 'The full path to the top-level directory of the MATLAB installation. If not specified, the environment path will be checked for the location of the `matlab` executable.',
        type: 'string',
        default: ''
    }).option(ConfigurationManager_1.Argument.MatlabConnectionTiming, {
        description: 'When the language server should attempt to connect to MATLAB.',
        type: 'string',
        default: 'onStart',
        choices: ['onStart', 'onDemand', 'never']
    }).option(ConfigurationManager_1.Argument.ShouldIndexWorkspace, {
        boolean: true,
        default: false,
        description: 'Whether or not the user\'s workspace should be indexed.',
        requiresArg: false
    }).option(ConfigurationManager_1.Argument.MatlabUrl, {
        type: 'string',
        description: 'URL for communicating with an existing MATLAB instance',
        requiresArg: true
    }).usage('Usage: $0 {--node-ipc | --stdio | --socket=socket} options\n' +
        '\n' +
        '\tAn LSP server for MATLAB. This is meant to be invoked from an editor or IDE.\n').group(['node-ipc', 'stdio', 'socket'], 'Required IPC flag').option('node-ipc', {
        description: 'Use Node IPC'
    }).option('stdio', {
        description: 'Use stdio for IPC'
    }).option('socket', {
        description: 'Use specified socket for IPC',
        requiresArg: true
    }).help('help').alias('h', 'help');
    return argParser;
}
/**
 * Parse the command line arguments.
 *
 * @param args If provided, these are the arguments to parse. Otherwise, the true
 * command line arguments will be parsed. This is primarily meant for testing.
 * @returns The parsed CLI arguments
 */
function getCliArgs(args) {
    const cliParser = makeParser();
    return (args != null) ? cliParser.parseSync(args) : cliParser.parseSync();
}
exports.getCliArgs = getCliArgs;


/***/ }),

/***/ "./src/utils/DeprecationUtils.ts":
/*!***************************************!*\
  !*** ./src/utils/DeprecationUtils.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

// Copyright 2024 The MathWorks, Inc.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkIfMatlabDeprecated = void 0;
const Logger_1 = __importDefault(__webpack_require__(/*! ../logging/Logger */ "./src/logging/Logger.ts"));
const NotificationService_1 = __importStar(__webpack_require__(/*! ../notifications/NotificationService */ "./src/notifications/NotificationService.ts"));
const ORIGINAL_MIN_RELEASE = 'R2021a';
const CURRENT_MIN_RELEASE = 'R2021a';
const FUTURE_MIN_RELEASE = 'R2021b';
var DeprecationType;
(function (DeprecationType) {
    DeprecationType[DeprecationType["NEVER_SUPPORTED"] = 1] = "NEVER_SUPPORTED";
    DeprecationType[DeprecationType["DEPRECATED"] = 2] = "DEPRECATED";
    DeprecationType[DeprecationType["TO_BE_DEPRECATED"] = 3] = "TO_BE_DEPRECATED";
})(DeprecationType || (DeprecationType = {}));
/**
 * Checks if the given MATLAB release is unsupported, has been deprecated, or is planned
 * for deprecation in a future release. If it falls under one of these categories, a
 * notification is sent to the client, which may display a message to the user.
 *
 * @param matlabRelease The MATLAB release (e.g. "R2021a") which is being checked
 */
function checkIfMatlabDeprecated(matlabRelease) {
    let deprecationType;
    if (matlabRelease < ORIGINAL_MIN_RELEASE) {
        // The launched MATLAB version has never been supported
        deprecationType = DeprecationType.NEVER_SUPPORTED;
        Logger_1.default.error(`MATLAB ${matlabRelease} is not supported`);
    }
    else if (matlabRelease >= ORIGINAL_MIN_RELEASE && matlabRelease < CURRENT_MIN_RELEASE) {
        // The launched MATLAB version is no longer supported
        deprecationType = DeprecationType.DEPRECATED;
        Logger_1.default.error(`MATLAB ${matlabRelease} is no longer supported`);
    }
    else if (matlabRelease >= CURRENT_MIN_RELEASE && matlabRelease < FUTURE_MIN_RELEASE) {
        // Support for the launched MATLAB version will end in an upcoming release
        deprecationType = DeprecationType.TO_BE_DEPRECATED;
        Logger_1.default.warn(`Support for MATLAB ${matlabRelease} will end in a future update`);
    }
    else {
        // Support for the launched MATLAB version is not yet planned to end
        return;
    }
    let message = {
        deprecationType: deprecationType,
        deprecationInfo: {
            matlabVersion: matlabRelease,
            minVersion: CURRENT_MIN_RELEASE,
            futureMinVersion: FUTURE_MIN_RELEASE
        }
    };
    NotificationService_1.default.sendNotification(NotificationService_1.Notification.MatlabVersionDeprecation, message);
}
exports.checkIfMatlabDeprecated = checkIfMatlabDeprecated;


/***/ }),

/***/ "./src/utils/ExpressionUtils.ts":
/*!**************************************!*\
  !*** ./src/utils/ExpressionUtils.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// Copyright 2024 The MathWorks, Inc.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getExpressionAtPosition = void 0;
const TextDocumentUtils_1 = __webpack_require__(/*! ./TextDocumentUtils */ "./src/utils/TextDocumentUtils.ts");
const DOTTED_IDENTIFIER_REGEX = /\b(?:[a-zA-Z][\w]*)(?:\.[a-zA-Z][\w]*)*\b/; // Matches a word followed by optional dotted words
/**
 * Represents a code expression, either a single identifier or a dotted expression.
 * For example, "plot" or "pkg.Class.func".
 */
class Expression {
    constructor(components, selectedComponent) {
        this.components = components;
        this.selectedComponent = selectedComponent;
    }
    /**
     * The full, dotted expression
     */
    get fullExpression() {
        return this.components.join('.');
    }
    /**
     * The dotted expression up to and including the selected component
     */
    get targetExpression() {
        return this.components.slice(0, this.selectedComponent + 1).join('.');
    }
    /**
     * Only the selected component of the expression
     */
    get unqualifiedTarget() {
        return this.components[this.selectedComponent];
    }
    /**
     * The first component of the expression
     */
    get first() {
        return this.components[0];
    }
    /**
     * The last component of the expression
     */
    get last() {
        return this.components[this.components.length - 1];
    }
}
/**
 * Gets the definition/references request target expression.
 *
 * @param textDocument The text document
 * @param position The position in the document
 * @returns The expression at the given position, or null if no expression is found
 */
function getExpressionAtPosition(textDocument, position) {
    const idAtPosition = getIdentifierAtPosition(textDocument, position);
    if (idAtPosition.identifier === '') {
        return null;
    }
    const idComponents = idAtPosition.identifier.split('.');
    // Determine what component was targeted
    let length = 0;
    let i = 0;
    while (i < idComponents.length && length <= position.character - idAtPosition.start) {
        length += idComponents[i].length + 1; // +1 for '.'
        i++;
    }
    return new Expression(idComponents, i - 1); // Compensate for extra increment in loop
}
exports.getExpressionAtPosition = getExpressionAtPosition;
/**
 * Determines the identifier (or dotted expression) at the given position in the document.
 *
 * @param textDocument The text document
 * @param position The position in the document
 * @returns An object containing the string identifier at the position, as well as the column number at which the identifier starts.
 */
function getIdentifierAtPosition(textDocument, position) {
    let lineText = (0, TextDocumentUtils_1.getTextOnLine)(textDocument, position.line);
    const result = {
        identifier: '',
        start: -1
    };
    let matchResults = lineText.match(DOTTED_IDENTIFIER_REGEX);
    let offset = 0;
    while (matchResults != null) {
        if (matchResults.index == null) {
            // No result found
            break;
        }
        const startChar = offset + matchResults.index;
        if (startChar > position.character) {
            // Passed the cursor - no match found
            break;
        }
        if (startChar + matchResults[0].length >= position.character) {
            // Found overlapping identifier
            result.identifier = matchResults[0];
            result.start = startChar;
            break;
        }
        // Match found too early in line - check for following matches
        lineText = lineText.substring(matchResults.index + matchResults[0].length);
        offset = startChar + matchResults[0].length;
        matchResults = lineText.match(DOTTED_IDENTIFIER_REGEX);
    }
    return result;
}
exports["default"] = Expression;


/***/ }),

/***/ "./src/utils/PositionUtils.ts":
/*!************************************!*\
  !*** ./src/utils/PositionUtils.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2022 - 2023 The MathWorks, Inc.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isPositionGreaterThanOrEqualTo = exports.isPositionGreaterThan = exports.isPositionLessThanOrEqualTo = exports.isPositionLessThan = void 0;
/**
 * Determines whether a position is less than another position.
 *
 * @param a The first position
 * @param b The second position
 * @returns true if position A is before position B
 */
function isPositionLessThan(a, b) {
    return checkLessThan(a, b);
}
exports.isPositionLessThan = isPositionLessThan;
/**
 * Determines whether a position is less than or equal to another position.
 *
 * @param a The first position
 * @param b The second position
 * @returns true if position A is before position B, or the same position
 */
function isPositionLessThanOrEqualTo(a, b) {
    return checkLessThan(a, b, true);
}
exports.isPositionLessThanOrEqualTo = isPositionLessThanOrEqualTo;
/**
 * Determines whether a position is greater than another position.
 *
 * @param a The first position
 * @param b The second position
 * @returns True if position A is after position B
 */
function isPositionGreaterThan(a, b) {
    return checkGreaterThan(a, b);
}
exports.isPositionGreaterThan = isPositionGreaterThan;
/**
 * Determines whether a position is greater than or equal to another position.
 *
 * @param a The first position
 * @param b The second position
 * @returns True if position A is after position B, or the same position
 */
function isPositionGreaterThanOrEqualTo(a, b) {
    return checkGreaterThan(a, b, true);
}
exports.isPositionGreaterThanOrEqualTo = isPositionGreaterThanOrEqualTo;
/**
 * Performs a "less than (or equal to)" check on two positions.
 *
 * @param a The first position
 * @param b The second position
 * @param orEqual Whether or not an "or equal to" check should be performed
 * @returns true if position A is before position B
 */
function checkLessThan(a, b, orEqual = false) {
    if (a.line < b.line) {
        return true;
    }
    if (a.line === b.line) {
        return orEqual
            ? a.character <= b.character
            : a.character < b.character;
    }
    return false;
}
/**
 * Performs a "greater than (or equal to)" check on two positions.
 *
 * @param a The first position
 * @param b The second position
 * @param orEqual Whether or not an "or equal to" check should be performed
 * @returns true if position A is after position B
 */
function checkGreaterThan(a, b, orEqual = false) {
    if (a.line > b.line) {
        return true;
    }
    if (a.line === b.line) {
        return orEqual
            ? a.character >= b.character
            : a.character > b.character;
    }
    return false;
}


/***/ }),

/***/ "./src/utils/ProxyUtils.ts":
/*!*********************************!*\
  !*** ./src/utils/ProxyUtils.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// Copyright 2024 The MathWorks, Inc.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getProxyEnvironmentVariables = exports.isProxyEnvironment = exports.cacheAndClearProxyEnvironmentVariables = void 0;
const proxyEnvironmentVariables = {};
/**
 * Workaround for connection issue with proxy environments: cache values for HTTP_PROXY,
 * HTTPS_PROXY, and NO_PROXY environment variables, then delete variables from environment.
 */
function cacheAndClearProxyEnvironmentVariables() {
    var _a, _b, _c;
    const http_proxy = (_a = process.env.HTTP_PROXY) !== null && _a !== void 0 ? _a : process.env.http_proxy;
    const https_proxy = (_b = process.env.HTTPS_PROXY) !== null && _b !== void 0 ? _b : process.env.https_proxy;
    const no_proxy = (_c = process.env.NO_PROXY) !== null && _c !== void 0 ? _c : process.env.no_proxy;
    delete process.env.HTTP_PROXY;
    delete process.env.http_proxy;
    delete process.env.HTTPS_PROXY;
    delete process.env.https_proxy;
    delete process.env.NO_PROXY;
    delete process.env.no_proxy;
    if (http_proxy != null) {
        proxyEnvironmentVariables.HTTP_PROXY = http_proxy;
    }
    if (https_proxy != null) {
        proxyEnvironmentVariables.HTTPS_PROXY = https_proxy;
    }
    if (no_proxy != null) {
        proxyEnvironmentVariables.NO_PROXY = no_proxy;
    }
}
exports.cacheAndClearProxyEnvironmentVariables = cacheAndClearProxyEnvironmentVariables;
/**
 * Determines if running within a proxy environment.
 *
 * @returns True if within a proxy environment, false otherwise
 */
function isProxyEnvironment() {
    return Object.keys(proxyEnvironmentVariables).length > 0;
}
exports.isProxyEnvironment = isProxyEnvironment;
/**
 * Gets any proxy environment variables and their values that had been set prior to
 * `cacheAndClearProxyEnvironmentVariables` being called.
 *
 * @returns An object containing any proxy-related environment variables and their values
 */
function getProxyEnvironmentVariables() {
    return proxyEnvironmentVariables;
}
exports.getProxyEnvironmentVariables = getProxyEnvironmentVariables;


/***/ }),

/***/ "./src/utils/TextDocumentUtils.ts":
/*!****************************************!*\
  !*** ./src/utils/TextDocumentUtils.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// Copyright 2022 - 2023 The MathWorks, Inc.
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getTextOnLine = exports.getRangeUntilLineEnd = void 0;
const vscode_languageserver_1 = __webpack_require__(/*! vscode-languageserver */ "./node_modules/vscode-languageserver/lib/node/main.js");
/**
 * Gets a Range within a text document from the given line/column position to
 * the end of the provided line.
 *
 * @param doc The text document
 * @param line The line number
 * @param char The character number on the line
 * @returns A range
 */
function getRangeUntilLineEnd(doc, line, char) {
    const lineText = getTextOnLine(doc, line);
    const endChar = lineText.length;
    // Note: Range will throw when provided a negative character number,
    // so we do not need to explicitly capture that case ourselves
    if (char > endChar) {
        throw new Error(`Start character exceeds line length (${char} > ${endChar})`);
    }
    return vscode_languageserver_1.Range.create(line, char, line, lineText.length);
}
exports.getRangeUntilLineEnd = getRangeUntilLineEnd;
/**
 * Gets the text on the given line of the document.
 *
 * @param doc The text document
 * @param line The line number
 * @returns The text on the line
 */
function getTextOnLine(doc, line) {
    const textLines = doc.getText().split('\n');
    if (line < 0 || line >= textLines.length) {
        throw new Error('Cannot get text for nonexistent line');
    }
    return textLines[line];
}
exports.getTextOnLine = getTextOnLine;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/api.js":
/*!*******************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/api.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
/// <reference path="../../typings/thenable.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProgressType = exports.ProgressToken = exports.createMessageConnection = exports.NullLogger = exports.ConnectionOptions = exports.ConnectionStrategy = exports.AbstractMessageBuffer = exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = exports.CancellationToken = exports.CancellationTokenSource = exports.Emitter = exports.Event = exports.Disposable = exports.LRUCache = exports.Touch = exports.LinkedMap = exports.ParameterStructures = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.ErrorCodes = exports.ResponseError = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType0 = exports.RequestType = exports.Message = exports.RAL = void 0;
exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-jsonrpc/lib/common/messages.js");
Object.defineProperty(exports, "Message", ({ enumerable: true, get: function () { return messages_1.Message; } }));
Object.defineProperty(exports, "RequestType", ({ enumerable: true, get: function () { return messages_1.RequestType; } }));
Object.defineProperty(exports, "RequestType0", ({ enumerable: true, get: function () { return messages_1.RequestType0; } }));
Object.defineProperty(exports, "RequestType1", ({ enumerable: true, get: function () { return messages_1.RequestType1; } }));
Object.defineProperty(exports, "RequestType2", ({ enumerable: true, get: function () { return messages_1.RequestType2; } }));
Object.defineProperty(exports, "RequestType3", ({ enumerable: true, get: function () { return messages_1.RequestType3; } }));
Object.defineProperty(exports, "RequestType4", ({ enumerable: true, get: function () { return messages_1.RequestType4; } }));
Object.defineProperty(exports, "RequestType5", ({ enumerable: true, get: function () { return messages_1.RequestType5; } }));
Object.defineProperty(exports, "RequestType6", ({ enumerable: true, get: function () { return messages_1.RequestType6; } }));
Object.defineProperty(exports, "RequestType7", ({ enumerable: true, get: function () { return messages_1.RequestType7; } }));
Object.defineProperty(exports, "RequestType8", ({ enumerable: true, get: function () { return messages_1.RequestType8; } }));
Object.defineProperty(exports, "RequestType9", ({ enumerable: true, get: function () { return messages_1.RequestType9; } }));
Object.defineProperty(exports, "ResponseError", ({ enumerable: true, get: function () { return messages_1.ResponseError; } }));
Object.defineProperty(exports, "ErrorCodes", ({ enumerable: true, get: function () { return messages_1.ErrorCodes; } }));
Object.defineProperty(exports, "NotificationType", ({ enumerable: true, get: function () { return messages_1.NotificationType; } }));
Object.defineProperty(exports, "NotificationType0", ({ enumerable: true, get: function () { return messages_1.NotificationType0; } }));
Object.defineProperty(exports, "NotificationType1", ({ enumerable: true, get: function () { return messages_1.NotificationType1; } }));
Object.defineProperty(exports, "NotificationType2", ({ enumerable: true, get: function () { return messages_1.NotificationType2; } }));
Object.defineProperty(exports, "NotificationType3", ({ enumerable: true, get: function () { return messages_1.NotificationType3; } }));
Object.defineProperty(exports, "NotificationType4", ({ enumerable: true, get: function () { return messages_1.NotificationType4; } }));
Object.defineProperty(exports, "NotificationType5", ({ enumerable: true, get: function () { return messages_1.NotificationType5; } }));
Object.defineProperty(exports, "NotificationType6", ({ enumerable: true, get: function () { return messages_1.NotificationType6; } }));
Object.defineProperty(exports, "NotificationType7", ({ enumerable: true, get: function () { return messages_1.NotificationType7; } }));
Object.defineProperty(exports, "NotificationType8", ({ enumerable: true, get: function () { return messages_1.NotificationType8; } }));
Object.defineProperty(exports, "NotificationType9", ({ enumerable: true, get: function () { return messages_1.NotificationType9; } }));
Object.defineProperty(exports, "ParameterStructures", ({ enumerable: true, get: function () { return messages_1.ParameterStructures; } }));
const linkedMap_1 = __webpack_require__(/*! ./linkedMap */ "./node_modules/vscode-jsonrpc/lib/common/linkedMap.js");
Object.defineProperty(exports, "LinkedMap", ({ enumerable: true, get: function () { return linkedMap_1.LinkedMap; } }));
Object.defineProperty(exports, "LRUCache", ({ enumerable: true, get: function () { return linkedMap_1.LRUCache; } }));
Object.defineProperty(exports, "Touch", ({ enumerable: true, get: function () { return linkedMap_1.Touch; } }));
const disposable_1 = __webpack_require__(/*! ./disposable */ "./node_modules/vscode-jsonrpc/lib/common/disposable.js");
Object.defineProperty(exports, "Disposable", ({ enumerable: true, get: function () { return disposable_1.Disposable; } }));
const events_1 = __webpack_require__(/*! ./events */ "./node_modules/vscode-jsonrpc/lib/common/events.js");
Object.defineProperty(exports, "Event", ({ enumerable: true, get: function () { return events_1.Event; } }));
Object.defineProperty(exports, "Emitter", ({ enumerable: true, get: function () { return events_1.Emitter; } }));
const cancellation_1 = __webpack_require__(/*! ./cancellation */ "./node_modules/vscode-jsonrpc/lib/common/cancellation.js");
Object.defineProperty(exports, "CancellationTokenSource", ({ enumerable: true, get: function () { return cancellation_1.CancellationTokenSource; } }));
Object.defineProperty(exports, "CancellationToken", ({ enumerable: true, get: function () { return cancellation_1.CancellationToken; } }));
const sharedArrayCancellation_1 = __webpack_require__(/*! ./sharedArrayCancellation */ "./node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js");
Object.defineProperty(exports, "SharedArraySenderStrategy", ({ enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArraySenderStrategy; } }));
Object.defineProperty(exports, "SharedArrayReceiverStrategy", ({ enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArrayReceiverStrategy; } }));
const messageReader_1 = __webpack_require__(/*! ./messageReader */ "./node_modules/vscode-jsonrpc/lib/common/messageReader.js");
Object.defineProperty(exports, "MessageReader", ({ enumerable: true, get: function () { return messageReader_1.MessageReader; } }));
Object.defineProperty(exports, "AbstractMessageReader", ({ enumerable: true, get: function () { return messageReader_1.AbstractMessageReader; } }));
Object.defineProperty(exports, "ReadableStreamMessageReader", ({ enumerable: true, get: function () { return messageReader_1.ReadableStreamMessageReader; } }));
const messageWriter_1 = __webpack_require__(/*! ./messageWriter */ "./node_modules/vscode-jsonrpc/lib/common/messageWriter.js");
Object.defineProperty(exports, "MessageWriter", ({ enumerable: true, get: function () { return messageWriter_1.MessageWriter; } }));
Object.defineProperty(exports, "AbstractMessageWriter", ({ enumerable: true, get: function () { return messageWriter_1.AbstractMessageWriter; } }));
Object.defineProperty(exports, "WriteableStreamMessageWriter", ({ enumerable: true, get: function () { return messageWriter_1.WriteableStreamMessageWriter; } }));
const messageBuffer_1 = __webpack_require__(/*! ./messageBuffer */ "./node_modules/vscode-jsonrpc/lib/common/messageBuffer.js");
Object.defineProperty(exports, "AbstractMessageBuffer", ({ enumerable: true, get: function () { return messageBuffer_1.AbstractMessageBuffer; } }));
const connection_1 = __webpack_require__(/*! ./connection */ "./node_modules/vscode-jsonrpc/lib/common/connection.js");
Object.defineProperty(exports, "ConnectionStrategy", ({ enumerable: true, get: function () { return connection_1.ConnectionStrategy; } }));
Object.defineProperty(exports, "ConnectionOptions", ({ enumerable: true, get: function () { return connection_1.ConnectionOptions; } }));
Object.defineProperty(exports, "NullLogger", ({ enumerable: true, get: function () { return connection_1.NullLogger; } }));
Object.defineProperty(exports, "createMessageConnection", ({ enumerable: true, get: function () { return connection_1.createMessageConnection; } }));
Object.defineProperty(exports, "ProgressToken", ({ enumerable: true, get: function () { return connection_1.ProgressToken; } }));
Object.defineProperty(exports, "ProgressType", ({ enumerable: true, get: function () { return connection_1.ProgressType; } }));
Object.defineProperty(exports, "Trace", ({ enumerable: true, get: function () { return connection_1.Trace; } }));
Object.defineProperty(exports, "TraceValues", ({ enumerable: true, get: function () { return connection_1.TraceValues; } }));
Object.defineProperty(exports, "TraceFormat", ({ enumerable: true, get: function () { return connection_1.TraceFormat; } }));
Object.defineProperty(exports, "SetTraceNotification", ({ enumerable: true, get: function () { return connection_1.SetTraceNotification; } }));
Object.defineProperty(exports, "LogTraceNotification", ({ enumerable: true, get: function () { return connection_1.LogTraceNotification; } }));
Object.defineProperty(exports, "ConnectionErrors", ({ enumerable: true, get: function () { return connection_1.ConnectionErrors; } }));
Object.defineProperty(exports, "ConnectionError", ({ enumerable: true, get: function () { return connection_1.ConnectionError; } }));
Object.defineProperty(exports, "CancellationReceiverStrategy", ({ enumerable: true, get: function () { return connection_1.CancellationReceiverStrategy; } }));
Object.defineProperty(exports, "CancellationSenderStrategy", ({ enumerable: true, get: function () { return connection_1.CancellationSenderStrategy; } }));
Object.defineProperty(exports, "CancellationStrategy", ({ enumerable: true, get: function () { return connection_1.CancellationStrategy; } }));
Object.defineProperty(exports, "MessageStrategy", ({ enumerable: true, get: function () { return connection_1.MessageStrategy; } }));
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
exports.RAL = ral_1.default;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/cancellation.js":
/*!****************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/cancellation.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CancellationTokenSource = exports.CancellationToken = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
const Is = __webpack_require__(/*! ./is */ "./node_modules/vscode-jsonrpc/lib/common/is.js");
const events_1 = __webpack_require__(/*! ./events */ "./node_modules/vscode-jsonrpc/lib/common/events.js");
var CancellationToken;
(function (CancellationToken) {
    CancellationToken.None = Object.freeze({
        isCancellationRequested: false,
        onCancellationRequested: events_1.Event.None
    });
    CancellationToken.Cancelled = Object.freeze({
        isCancellationRequested: true,
        onCancellationRequested: events_1.Event.None
    });
    function is(value) {
        const candidate = value;
        return candidate && (candidate === CancellationToken.None
            || candidate === CancellationToken.Cancelled
            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));
    }
    CancellationToken.is = is;
})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));
const shortcutEvent = Object.freeze(function (callback, context) {
    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);
    return { dispose() { handle.dispose(); } };
});
class MutableToken {
    constructor() {
        this._isCancelled = false;
    }
    cancel() {
        if (!this._isCancelled) {
            this._isCancelled = true;
            if (this._emitter) {
                this._emitter.fire(undefined);
                this.dispose();
            }
        }
    }
    get isCancellationRequested() {
        return this._isCancelled;
    }
    get onCancellationRequested() {
        if (this._isCancelled) {
            return shortcutEvent;
        }
        if (!this._emitter) {
            this._emitter = new events_1.Emitter();
        }
        return this._emitter.event;
    }
    dispose() {
        if (this._emitter) {
            this._emitter.dispose();
            this._emitter = undefined;
        }
    }
}
class CancellationTokenSource {
    get token() {
        if (!this._token) {
            // be lazy and create the token only when
            // actually needed
            this._token = new MutableToken();
        }
        return this._token;
    }
    cancel() {
        if (!this._token) {
            // save an object by returning the default
            // cancelled token when cancellation happens
            // before someone asks for the token
            this._token = CancellationToken.Cancelled;
        }
        else {
            this._token.cancel();
        }
    }
    dispose() {
        if (!this._token) {
            // ensure to initialize with an empty token if we had none
            this._token = CancellationToken.None;
        }
        else if (this._token instanceof MutableToken) {
            // actually dispose
            this._token.dispose();
        }
    }
}
exports.CancellationTokenSource = CancellationTokenSource;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/connection.js":
/*!**************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/connection.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createMessageConnection = exports.ConnectionOptions = exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy = exports.ConnectionStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = exports.NullLogger = exports.ProgressType = exports.ProgressToken = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
const Is = __webpack_require__(/*! ./is */ "./node_modules/vscode-jsonrpc/lib/common/is.js");
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-jsonrpc/lib/common/messages.js");
const linkedMap_1 = __webpack_require__(/*! ./linkedMap */ "./node_modules/vscode-jsonrpc/lib/common/linkedMap.js");
const events_1 = __webpack_require__(/*! ./events */ "./node_modules/vscode-jsonrpc/lib/common/events.js");
const cancellation_1 = __webpack_require__(/*! ./cancellation */ "./node_modules/vscode-jsonrpc/lib/common/cancellation.js");
var CancelNotification;
(function (CancelNotification) {
    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');
})(CancelNotification || (CancelNotification = {}));
var ProgressToken;
(function (ProgressToken) {
    function is(value) {
        return typeof value === 'string' || typeof value === 'number';
    }
    ProgressToken.is = is;
})(ProgressToken = exports.ProgressToken || (exports.ProgressToken = {}));
var ProgressNotification;
(function (ProgressNotification) {
    ProgressNotification.type = new messages_1.NotificationType('$/progress');
})(ProgressNotification || (ProgressNotification = {}));
class ProgressType {
    constructor() {
    }
}
exports.ProgressType = ProgressType;
var StarRequestHandler;
(function (StarRequestHandler) {
    function is(value) {
        return Is.func(value);
    }
    StarRequestHandler.is = is;
})(StarRequestHandler || (StarRequestHandler = {}));
exports.NullLogger = Object.freeze({
    error: () => { },
    warn: () => { },
    info: () => { },
    log: () => { }
});
var Trace;
(function (Trace) {
    Trace[Trace["Off"] = 0] = "Off";
    Trace[Trace["Messages"] = 1] = "Messages";
    Trace[Trace["Compact"] = 2] = "Compact";
    Trace[Trace["Verbose"] = 3] = "Verbose";
})(Trace = exports.Trace || (exports.Trace = {}));
var TraceValues;
(function (TraceValues) {
    /**
     * Turn tracing off.
     */
    TraceValues.Off = 'off';
    /**
     * Trace messages only.
     */
    TraceValues.Messages = 'messages';
    /**
     * Compact message tracing.
     */
    TraceValues.Compact = 'compact';
    /**
     * Verbose message tracing.
     */
    TraceValues.Verbose = 'verbose';
})(TraceValues = exports.TraceValues || (exports.TraceValues = {}));
(function (Trace) {
    function fromString(value) {
        if (!Is.string(value)) {
            return Trace.Off;
        }
        value = value.toLowerCase();
        switch (value) {
            case 'off':
                return Trace.Off;
            case 'messages':
                return Trace.Messages;
            case 'compact':
                return Trace.Compact;
            case 'verbose':
                return Trace.Verbose;
            default:
                return Trace.Off;
        }
    }
    Trace.fromString = fromString;
    function toString(value) {
        switch (value) {
            case Trace.Off:
                return 'off';
            case Trace.Messages:
                return 'messages';
            case Trace.Compact:
                return 'compact';
            case Trace.Verbose:
                return 'verbose';
            default:
                return 'off';
        }
    }
    Trace.toString = toString;
})(Trace = exports.Trace || (exports.Trace = {}));
var TraceFormat;
(function (TraceFormat) {
    TraceFormat["Text"] = "text";
    TraceFormat["JSON"] = "json";
})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));
(function (TraceFormat) {
    function fromString(value) {
        if (!Is.string(value)) {
            return TraceFormat.Text;
        }
        value = value.toLowerCase();
        if (value === 'json') {
            return TraceFormat.JSON;
        }
        else {
            return TraceFormat.Text;
        }
    }
    TraceFormat.fromString = fromString;
})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));
var SetTraceNotification;
(function (SetTraceNotification) {
    SetTraceNotification.type = new messages_1.NotificationType('$/setTrace');
})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));
var LogTraceNotification;
(function (LogTraceNotification) {
    LogTraceNotification.type = new messages_1.NotificationType('$/logTrace');
})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));
var ConnectionErrors;
(function (ConnectionErrors) {
    /**
     * The connection is closed.
     */
    ConnectionErrors[ConnectionErrors["Closed"] = 1] = "Closed";
    /**
     * The connection got disposed.
     */
    ConnectionErrors[ConnectionErrors["Disposed"] = 2] = "Disposed";
    /**
     * The connection is already in listening mode.
     */
    ConnectionErrors[ConnectionErrors["AlreadyListening"] = 3] = "AlreadyListening";
})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));
class ConnectionError extends Error {
    constructor(code, message) {
        super(message);
        this.code = code;
        Object.setPrototypeOf(this, ConnectionError.prototype);
    }
}
exports.ConnectionError = ConnectionError;
var ConnectionStrategy;
(function (ConnectionStrategy) {
    function is(value) {
        const candidate = value;
        return candidate && Is.func(candidate.cancelUndispatched);
    }
    ConnectionStrategy.is = is;
})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));
var IdCancellationReceiverStrategy;
(function (IdCancellationReceiverStrategy) {
    function is(value) {
        const candidate = value;
        return candidate && (candidate.kind === undefined || candidate.kind === 'id') && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));
    }
    IdCancellationReceiverStrategy.is = is;
})(IdCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy || (exports.IdCancellationReceiverStrategy = {}));
var RequestCancellationReceiverStrategy;
(function (RequestCancellationReceiverStrategy) {
    function is(value) {
        const candidate = value;
        return candidate && candidate.kind === 'request' && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));
    }
    RequestCancellationReceiverStrategy.is = is;
})(RequestCancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy || (exports.RequestCancellationReceiverStrategy = {}));
var CancellationReceiverStrategy;
(function (CancellationReceiverStrategy) {
    CancellationReceiverStrategy.Message = Object.freeze({
        createCancellationTokenSource(_) {
            return new cancellation_1.CancellationTokenSource();
        }
    });
    function is(value) {
        return IdCancellationReceiverStrategy.is(value) || RequestCancellationReceiverStrategy.is(value);
    }
    CancellationReceiverStrategy.is = is;
})(CancellationReceiverStrategy = exports.CancellationReceiverStrategy || (exports.CancellationReceiverStrategy = {}));
var CancellationSenderStrategy;
(function (CancellationSenderStrategy) {
    CancellationSenderStrategy.Message = Object.freeze({
        sendCancellation(conn, id) {
            return conn.sendNotification(CancelNotification.type, { id });
        },
        cleanup(_) { }
    });
    function is(value) {
        const candidate = value;
        return candidate && Is.func(candidate.sendCancellation) && Is.func(candidate.cleanup);
    }
    CancellationSenderStrategy.is = is;
})(CancellationSenderStrategy = exports.CancellationSenderStrategy || (exports.CancellationSenderStrategy = {}));
var CancellationStrategy;
(function (CancellationStrategy) {
    CancellationStrategy.Message = Object.freeze({
        receiver: CancellationReceiverStrategy.Message,
        sender: CancellationSenderStrategy.Message
    });
    function is(value) {
        const candidate = value;
        return candidate && CancellationReceiverStrategy.is(candidate.receiver) && CancellationSenderStrategy.is(candidate.sender);
    }
    CancellationStrategy.is = is;
})(CancellationStrategy = exports.CancellationStrategy || (exports.CancellationStrategy = {}));
var MessageStrategy;
(function (MessageStrategy) {
    function is(value) {
        const candidate = value;
        return candidate && Is.func(candidate.handleMessage);
    }
    MessageStrategy.is = is;
})(MessageStrategy = exports.MessageStrategy || (exports.MessageStrategy = {}));
var ConnectionOptions;
(function (ConnectionOptions) {
    function is(value) {
        const candidate = value;
        return candidate && (CancellationStrategy.is(candidate.cancellationStrategy) || ConnectionStrategy.is(candidate.connectionStrategy) || MessageStrategy.is(candidate.messageStrategy));
    }
    ConnectionOptions.is = is;
})(ConnectionOptions = exports.ConnectionOptions || (exports.ConnectionOptions = {}));
var ConnectionState;
(function (ConnectionState) {
    ConnectionState[ConnectionState["New"] = 1] = "New";
    ConnectionState[ConnectionState["Listening"] = 2] = "Listening";
    ConnectionState[ConnectionState["Closed"] = 3] = "Closed";
    ConnectionState[ConnectionState["Disposed"] = 4] = "Disposed";
})(ConnectionState || (ConnectionState = {}));
function createMessageConnection(messageReader, messageWriter, _logger, options) {
    const logger = _logger !== undefined ? _logger : exports.NullLogger;
    let sequenceNumber = 0;
    let notificationSequenceNumber = 0;
    let unknownResponseSequenceNumber = 0;
    const version = '2.0';
    let starRequestHandler = undefined;
    const requestHandlers = new Map();
    let starNotificationHandler = undefined;
    const notificationHandlers = new Map();
    const progressHandlers = new Map();
    let timer;
    let messageQueue = new linkedMap_1.LinkedMap();
    let responsePromises = new Map();
    let knownCanceledRequests = new Set();
    let requestTokens = new Map();
    let trace = Trace.Off;
    let traceFormat = TraceFormat.Text;
    let tracer;
    let state = ConnectionState.New;
    const errorEmitter = new events_1.Emitter();
    const closeEmitter = new events_1.Emitter();
    const unhandledNotificationEmitter = new events_1.Emitter();
    const unhandledProgressEmitter = new events_1.Emitter();
    const disposeEmitter = new events_1.Emitter();
    const cancellationStrategy = (options && options.cancellationStrategy) ? options.cancellationStrategy : CancellationStrategy.Message;
    function createRequestQueueKey(id) {
        if (id === null) {
            throw new Error(`Can't send requests with id null since the response can't be correlated.`);
        }
        return 'req-' + id.toString();
    }
    function createResponseQueueKey(id) {
        if (id === null) {
            return 'res-unknown-' + (++unknownResponseSequenceNumber).toString();
        }
        else {
            return 'res-' + id.toString();
        }
    }
    function createNotificationQueueKey() {
        return 'not-' + (++notificationSequenceNumber).toString();
    }
    function addMessageToQueue(queue, message) {
        if (messages_1.Message.isRequest(message)) {
            queue.set(createRequestQueueKey(message.id), message);
        }
        else if (messages_1.Message.isResponse(message)) {
            queue.set(createResponseQueueKey(message.id), message);
        }
        else {
            queue.set(createNotificationQueueKey(), message);
        }
    }
    function cancelUndispatched(_message) {
        return undefined;
    }
    function isListening() {
        return state === ConnectionState.Listening;
    }
    function isClosed() {
        return state === ConnectionState.Closed;
    }
    function isDisposed() {
        return state === ConnectionState.Disposed;
    }
    function closeHandler() {
        if (state === ConnectionState.New || state === ConnectionState.Listening) {
            state = ConnectionState.Closed;
            closeEmitter.fire(undefined);
        }
        // If the connection is disposed don't sent close events.
    }
    function readErrorHandler(error) {
        errorEmitter.fire([error, undefined, undefined]);
    }
    function writeErrorHandler(data) {
        errorEmitter.fire(data);
    }
    messageReader.onClose(closeHandler);
    messageReader.onError(readErrorHandler);
    messageWriter.onClose(closeHandler);
    messageWriter.onError(writeErrorHandler);
    function triggerMessageQueue() {
        if (timer || messageQueue.size === 0) {
            return;
        }
        timer = (0, ral_1.default)().timer.setImmediate(() => {
            timer = undefined;
            processMessageQueue();
        });
    }
    function handleMessage(message) {
        if (messages_1.Message.isRequest(message)) {
            handleRequest(message);
        }
        else if (messages_1.Message.isNotification(message)) {
            handleNotification(message);
        }
        else if (messages_1.Message.isResponse(message)) {
            handleResponse(message);
        }
        else {
            handleInvalidMessage(message);
        }
    }
    function processMessageQueue() {
        if (messageQueue.size === 0) {
            return;
        }
        const message = messageQueue.shift();
        try {
            const messageStrategy = options?.messageStrategy;
            if (MessageStrategy.is(messageStrategy)) {
                messageStrategy.handleMessage(message, handleMessage);
            }
            else {
                handleMessage(message);
            }
        }
        finally {
            triggerMessageQueue();
        }
    }
    const callback = (message) => {
        try {
            // We have received a cancellation message. Check if the message is still in the queue
            // and cancel it if allowed to do so.
            if (messages_1.Message.isNotification(message) && message.method === CancelNotification.type.method) {
                const cancelId = message.params.id;
                const key = createRequestQueueKey(cancelId);
                const toCancel = messageQueue.get(key);
                if (messages_1.Message.isRequest(toCancel)) {
                    const strategy = options?.connectionStrategy;
                    const response = (strategy && strategy.cancelUndispatched) ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);
                    if (response && (response.error !== undefined || response.result !== undefined)) {
                        messageQueue.delete(key);
                        requestTokens.delete(cancelId);
                        response.id = toCancel.id;
                        traceSendingResponse(response, message.method, Date.now());
                        messageWriter.write(response).catch(() => logger.error(`Sending response for canceled message failed.`));
                        return;
                    }
                }
                const cancellationToken = requestTokens.get(cancelId);
                // The request is already running. Cancel the token
                if (cancellationToken !== undefined) {
                    cancellationToken.cancel();
                    traceReceivedNotification(message);
                    return;
                }
                else {
                    // Remember the cancel but still queue the message to
                    // clean up state in process message.
                    knownCanceledRequests.add(cancelId);
                }
            }
            addMessageToQueue(messageQueue, message);
        }
        finally {
            triggerMessageQueue();
        }
    };
    function handleRequest(requestMessage) {
        if (isDisposed()) {
            // we return here silently since we fired an event when the
            // connection got disposed.
            return;
        }
        function reply(resultOrError, method, startTime) {
            const message = {
                jsonrpc: version,
                id: requestMessage.id
            };
            if (resultOrError instanceof messages_1.ResponseError) {
                message.error = resultOrError.toJson();
            }
            else {
                message.result = resultOrError === undefined ? null : resultOrError;
            }
            traceSendingResponse(message, method, startTime);
            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));
        }
        function replyError(error, method, startTime) {
            const message = {
                jsonrpc: version,
                id: requestMessage.id,
                error: error.toJson()
            };
            traceSendingResponse(message, method, startTime);
            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));
        }
        function replySuccess(result, method, startTime) {
            // The JSON RPC defines that a response must either have a result or an error
            // So we can't treat undefined as a valid response result.
            if (result === undefined) {
                result = null;
            }
            const message = {
                jsonrpc: version,
                id: requestMessage.id,
                result: result
            };
            traceSendingResponse(message, method, startTime);
            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));
        }
        traceReceivedRequest(requestMessage);
        const element = requestHandlers.get(requestMessage.method);
        let type;
        let requestHandler;
        if (element) {
            type = element.type;
            requestHandler = element.handler;
        }
        const startTime = Date.now();
        if (requestHandler || starRequestHandler) {
            const tokenKey = requestMessage.id ?? String(Date.now()); //
            const cancellationSource = IdCancellationReceiverStrategy.is(cancellationStrategy.receiver)
                ? cancellationStrategy.receiver.createCancellationTokenSource(tokenKey)
                : cancellationStrategy.receiver.createCancellationTokenSource(requestMessage);
            if (requestMessage.id !== null && knownCanceledRequests.has(requestMessage.id)) {
                cancellationSource.cancel();
            }
            if (requestMessage.id !== null) {
                requestTokens.set(tokenKey, cancellationSource);
            }
            try {
                let handlerResult;
                if (requestHandler) {
                    if (requestMessage.params === undefined) {
                        if (type !== undefined && type.numberOfParams !== 0) {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines ${type.numberOfParams} params but received none.`), requestMessage.method, startTime);
                            return;
                        }
                        handlerResult = requestHandler(cancellationSource.token);
                    }
                    else if (Array.isArray(requestMessage.params)) {
                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byName) {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by name but received parameters by position`), requestMessage.method, startTime);
                            return;
                        }
                        handlerResult = requestHandler(...requestMessage.params, cancellationSource.token);
                    }
                    else {
                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by position but received parameters by name`), requestMessage.method, startTime);
                            return;
                        }
                        handlerResult = requestHandler(requestMessage.params, cancellationSource.token);
                    }
                }
                else if (starRequestHandler) {
                    handlerResult = starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);
                }
                const promise = handlerResult;
                if (!handlerResult) {
                    requestTokens.delete(tokenKey);
                    replySuccess(handlerResult, requestMessage.method, startTime);
                }
                else if (promise.then) {
                    promise.then((resultOrError) => {
                        requestTokens.delete(tokenKey);
                        reply(resultOrError, requestMessage.method, startTime);
                    }, error => {
                        requestTokens.delete(tokenKey);
                        if (error instanceof messages_1.ResponseError) {
                            replyError(error, requestMessage.method, startTime);
                        }
                        else if (error && Is.string(error.message)) {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);
                        }
                        else {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);
                        }
                    });
                }
                else {
                    requestTokens.delete(tokenKey);
                    reply(handlerResult, requestMessage.method, startTime);
                }
            }
            catch (error) {
                requestTokens.delete(tokenKey);
                if (error instanceof messages_1.ResponseError) {
                    reply(error, requestMessage.method, startTime);
                }
                else if (error && Is.string(error.message)) {
                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);
                }
                else {
                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);
                }
            }
        }
        else {
            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);
        }
    }
    function handleResponse(responseMessage) {
        if (isDisposed()) {
            // See handle request.
            return;
        }
        if (responseMessage.id === null) {
            if (responseMessage.error) {
                logger.error(`Received response message without id: Error is: \n${JSON.stringify(responseMessage.error, undefined, 4)}`);
            }
            else {
                logger.error(`Received response message without id. No further error information provided.`);
            }
        }
        else {
            const key = responseMessage.id;
            const responsePromise = responsePromises.get(key);
            traceReceivedResponse(responseMessage, responsePromise);
            if (responsePromise !== undefined) {
                responsePromises.delete(key);
                try {
                    if (responseMessage.error) {
                        const error = responseMessage.error;
                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));
                    }
                    else if (responseMessage.result !== undefined) {
                        responsePromise.resolve(responseMessage.result);
                    }
                    else {
                        throw new Error('Should never happen.');
                    }
                }
                catch (error) {
                    if (error.message) {
                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);
                    }
                    else {
                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);
                    }
                }
            }
        }
    }
    function handleNotification(message) {
        if (isDisposed()) {
            // See handle request.
            return;
        }
        let type = undefined;
        let notificationHandler;
        if (message.method === CancelNotification.type.method) {
            const cancelId = message.params.id;
            knownCanceledRequests.delete(cancelId);
            traceReceivedNotification(message);
            return;
        }
        else {
            const element = notificationHandlers.get(message.method);
            if (element) {
                notificationHandler = element.handler;
                type = element.type;
            }
        }
        if (notificationHandler || starNotificationHandler) {
            try {
                traceReceivedNotification(message);
                if (notificationHandler) {
                    if (message.params === undefined) {
                        if (type !== undefined) {
                            if (type.numberOfParams !== 0 && type.parameterStructures !== messages_1.ParameterStructures.byName) {
                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received none.`);
                            }
                        }
                        notificationHandler();
                    }
                    else if (Array.isArray(message.params)) {
                        // There are JSON-RPC libraries that send progress message as positional params although
                        // specified as named. So convert them if this is the case.
                        const params = message.params;
                        if (message.method === ProgressNotification.type.method && params.length === 2 && ProgressToken.is(params[0])) {
                            notificationHandler({ token: params[0], value: params[1] });
                        }
                        else {
                            if (type !== undefined) {
                                if (type.parameterStructures === messages_1.ParameterStructures.byName) {
                                    logger.error(`Notification ${message.method} defines parameters by name but received parameters by position`);
                                }
                                if (type.numberOfParams !== message.params.length) {
                                    logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received ${params.length} arguments`);
                                }
                            }
                            notificationHandler(...params);
                        }
                    }
                    else {
                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {
                            logger.error(`Notification ${message.method} defines parameters by position but received parameters by name`);
                        }
                        notificationHandler(message.params);
                    }
                }
                else if (starNotificationHandler) {
                    starNotificationHandler(message.method, message.params);
                }
            }
            catch (error) {
                if (error.message) {
                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);
                }
                else {
                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);
                }
            }
        }
        else {
            unhandledNotificationEmitter.fire(message);
        }
    }
    function handleInvalidMessage(message) {
        if (!message) {
            logger.error('Received empty message.');
            return;
        }
        logger.error(`Received message which is neither a response nor a notification message:\n${JSON.stringify(message, null, 4)}`);
        // Test whether we find an id to reject the promise
        const responseMessage = message;
        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {
            const key = responseMessage.id;
            const responseHandler = responsePromises.get(key);
            if (responseHandler) {
                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));
            }
        }
    }
    function stringifyTrace(params) {
        if (params === undefined || params === null) {
            return undefined;
        }
        switch (trace) {
            case Trace.Verbose:
                return JSON.stringify(params, null, 4);
            case Trace.Compact:
                return JSON.stringify(params);
            default:
                return undefined;
        }
    }
    function traceSendingRequest(message) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {
                data = `Params: ${stringifyTrace(message.params)}\n\n`;
            }
            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);
        }
        else {
            logLSPMessage('send-request', message);
        }
    }
    function traceSendingNotification(message) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if (trace === Trace.Verbose || trace === Trace.Compact) {
                if (message.params) {
                    data = `Params: ${stringifyTrace(message.params)}\n\n`;
                }
                else {
                    data = 'No parameters provided.\n\n';
                }
            }
            tracer.log(`Sending notification '${message.method}'.`, data);
        }
        else {
            logLSPMessage('send-notification', message);
        }
    }
    function traceSendingResponse(message, method, startTime) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if (trace === Trace.Verbose || trace === Trace.Compact) {
                if (message.error && message.error.data) {
                    data = `Error data: ${stringifyTrace(message.error.data)}\n\n`;
                }
                else {
                    if (message.result) {
                        data = `Result: ${stringifyTrace(message.result)}\n\n`;
                    }
                    else if (message.error === undefined) {
                        data = 'No result returned.\n\n';
                    }
                }
            }
            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);
        }
        else {
            logLSPMessage('send-response', message);
        }
    }
    function traceReceivedRequest(message) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {
                data = `Params: ${stringifyTrace(message.params)}\n\n`;
            }
            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);
        }
        else {
            logLSPMessage('receive-request', message);
        }
    }
    function traceReceivedNotification(message) {
        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if (trace === Trace.Verbose || trace === Trace.Compact) {
                if (message.params) {
                    data = `Params: ${stringifyTrace(message.params)}\n\n`;
                }
                else {
                    data = 'No parameters provided.\n\n';
                }
            }
            tracer.log(`Received notification '${message.method}'.`, data);
        }
        else {
            logLSPMessage('receive-notification', message);
        }
    }
    function traceReceivedResponse(message, responsePromise) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if (trace === Trace.Verbose || trace === Trace.Compact) {
                if (message.error && message.error.data) {
                    data = `Error data: ${stringifyTrace(message.error.data)}\n\n`;
                }
                else {
                    if (message.result) {
                        data = `Result: ${stringifyTrace(message.result)}\n\n`;
                    }
                    else if (message.error === undefined) {
                        data = 'No result returned.\n\n';
                    }
                }
            }
            if (responsePromise) {
                const error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';
                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);
            }
            else {
                tracer.log(`Received response ${message.id} without active response promise.`, data);
            }
        }
        else {
            logLSPMessage('receive-response', message);
        }
    }
    function logLSPMessage(type, message) {
        if (!tracer || trace === Trace.Off) {
            return;
        }
        const lspMessage = {
            isLSPMessage: true,
            type,
            message,
            timestamp: Date.now()
        };
        tracer.log(lspMessage);
    }
    function throwIfClosedOrDisposed() {
        if (isClosed()) {
            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');
        }
        if (isDisposed()) {
            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');
        }
    }
    function throwIfListening() {
        if (isListening()) {
            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');
        }
    }
    function throwIfNotListening() {
        if (!isListening()) {
            throw new Error('Call listen() first.');
        }
    }
    function undefinedToNull(param) {
        if (param === undefined) {
            return null;
        }
        else {
            return param;
        }
    }
    function nullToUndefined(param) {
        if (param === null) {
            return undefined;
        }
        else {
            return param;
        }
    }
    function isNamedParam(param) {
        return param !== undefined && param !== null && !Array.isArray(param) && typeof param === 'object';
    }
    function computeSingleParam(parameterStructures, param) {
        switch (parameterStructures) {
            case messages_1.ParameterStructures.auto:
                if (isNamedParam(param)) {
                    return nullToUndefined(param);
                }
                else {
                    return [undefinedToNull(param)];
                }
            case messages_1.ParameterStructures.byName:
                if (!isNamedParam(param)) {
                    throw new Error(`Received parameters by name but param is not an object literal.`);
                }
                return nullToUndefined(param);
            case messages_1.ParameterStructures.byPosition:
                return [undefinedToNull(param)];
            default:
                throw new Error(`Unknown parameter structure ${parameterStructures.toString()}`);
        }
    }
    function computeMessageParams(type, params) {
        let result;
        const numberOfParams = type.numberOfParams;
        switch (numberOfParams) {
            case 0:
                result = undefined;
                break;
            case 1:
                result = computeSingleParam(type.parameterStructures, params[0]);
                break;
            default:
                result = [];
                for (let i = 0; i < params.length && i < numberOfParams; i++) {
                    result.push(undefinedToNull(params[i]));
                }
                if (params.length < numberOfParams) {
                    for (let i = params.length; i < numberOfParams; i++) {
                        result.push(null);
                    }
                }
                break;
        }
        return result;
    }
    const connection = {
        sendNotification: (type, ...args) => {
            throwIfClosedOrDisposed();
            let method;
            let messageParams;
            if (Is.string(type)) {
                method = type;
                const first = args[0];
                let paramStart = 0;
                let parameterStructures = messages_1.ParameterStructures.auto;
                if (messages_1.ParameterStructures.is(first)) {
                    paramStart = 1;
                    parameterStructures = first;
                }
                let paramEnd = args.length;
                const numberOfParams = paramEnd - paramStart;
                switch (numberOfParams) {
                    case 0:
                        messageParams = undefined;
                        break;
                    case 1:
                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);
                        break;
                    default:
                        if (parameterStructures === messages_1.ParameterStructures.byName) {
                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' notification parameter structure.`);
                        }
                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));
                        break;
                }
            }
            else {
                const params = args;
                method = type.method;
                messageParams = computeMessageParams(type, params);
            }
            const notificationMessage = {
                jsonrpc: version,
                method: method,
                params: messageParams
            };
            traceSendingNotification(notificationMessage);
            return messageWriter.write(notificationMessage).catch((error) => {
                logger.error(`Sending notification failed.`);
                throw error;
            });
        },
        onNotification: (type, handler) => {
            throwIfClosedOrDisposed();
            let method;
            if (Is.func(type)) {
                starNotificationHandler = type;
            }
            else if (handler) {
                if (Is.string(type)) {
                    method = type;
                    notificationHandlers.set(type, { type: undefined, handler });
                }
                else {
                    method = type.method;
                    notificationHandlers.set(type.method, { type, handler });
                }
            }
            return {
                dispose: () => {
                    if (method !== undefined) {
                        notificationHandlers.delete(method);
                    }
                    else {
                        starNotificationHandler = undefined;
                    }
                }
            };
        },
        onProgress: (_type, token, handler) => {
            if (progressHandlers.has(token)) {
                throw new Error(`Progress handler for token ${token} already registered`);
            }
            progressHandlers.set(token, handler);
            return {
                dispose: () => {
                    progressHandlers.delete(token);
                }
            };
        },
        sendProgress: (_type, token, value) => {
            // This should not await but simple return to ensure that we don't have another
            // async scheduling. Otherwise one send could overtake another send.
            return connection.sendNotification(ProgressNotification.type, { token, value });
        },
        onUnhandledProgress: unhandledProgressEmitter.event,
        sendRequest: (type, ...args) => {
            throwIfClosedOrDisposed();
            throwIfNotListening();
            let method;
            let messageParams;
            let token = undefined;
            if (Is.string(type)) {
                method = type;
                const first = args[0];
                const last = args[args.length - 1];
                let paramStart = 0;
                let parameterStructures = messages_1.ParameterStructures.auto;
                if (messages_1.ParameterStructures.is(first)) {
                    paramStart = 1;
                    parameterStructures = first;
                }
                let paramEnd = args.length;
                if (cancellation_1.CancellationToken.is(last)) {
                    paramEnd = paramEnd - 1;
                    token = last;
                }
                const numberOfParams = paramEnd - paramStart;
                switch (numberOfParams) {
                    case 0:
                        messageParams = undefined;
                        break;
                    case 1:
                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);
                        break;
                    default:
                        if (parameterStructures === messages_1.ParameterStructures.byName) {
                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' request parameter structure.`);
                        }
                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));
                        break;
                }
            }
            else {
                const params = args;
                method = type.method;
                messageParams = computeMessageParams(type, params);
                const numberOfParams = type.numberOfParams;
                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;
            }
            const id = sequenceNumber++;
            let disposable;
            if (token) {
                disposable = token.onCancellationRequested(() => {
                    const p = cancellationStrategy.sender.sendCancellation(connection, id);
                    if (p === undefined) {
                        logger.log(`Received no promise from cancellation strategy when cancelling id ${id}`);
                        return Promise.resolve();
                    }
                    else {
                        return p.catch(() => {
                            logger.log(`Sending cancellation messages for id ${id} failed`);
                        });
                    }
                });
            }
            const requestMessage = {
                jsonrpc: version,
                id: id,
                method: method,
                params: messageParams
            };
            traceSendingRequest(requestMessage);
            if (typeof cancellationStrategy.sender.enableCancellation === 'function') {
                cancellationStrategy.sender.enableCancellation(requestMessage);
            }
            return new Promise(async (resolve, reject) => {
                const resolveWithCleanup = (r) => {
                    resolve(r);
                    cancellationStrategy.sender.cleanup(id);
                    disposable?.dispose();
                };
                const rejectWithCleanup = (r) => {
                    reject(r);
                    cancellationStrategy.sender.cleanup(id);
                    disposable?.dispose();
                };
                const responsePromise = { method: method, timerStart: Date.now(), resolve: resolveWithCleanup, reject: rejectWithCleanup };
                try {
                    await messageWriter.write(requestMessage);
                    responsePromises.set(id, responsePromise);
                }
                catch (error) {
                    logger.error(`Sending request failed.`);
                    // Writing the message failed. So we need to reject the promise.
                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, error.message ? error.message : 'Unknown reason'));
                    throw error;
                }
            });
        },
        onRequest: (type, handler) => {
            throwIfClosedOrDisposed();
            let method = null;
            if (StarRequestHandler.is(type)) {
                method = undefined;
                starRequestHandler = type;
            }
            else if (Is.string(type)) {
                method = null;
                if (handler !== undefined) {
                    method = type;
                    requestHandlers.set(type, { handler: handler, type: undefined });
                }
            }
            else {
                if (handler !== undefined) {
                    method = type.method;
                    requestHandlers.set(type.method, { type, handler });
                }
            }
            return {
                dispose: () => {
                    if (method === null) {
                        return;
                    }
                    if (method !== undefined) {
                        requestHandlers.delete(method);
                    }
                    else {
                        starRequestHandler = undefined;
                    }
                }
            };
        },
        hasPendingResponse: () => {
            return responsePromises.size > 0;
        },
        trace: async (_value, _tracer, sendNotificationOrTraceOptions) => {
            let _sendNotification = false;
            let _traceFormat = TraceFormat.Text;
            if (sendNotificationOrTraceOptions !== undefined) {
                if (Is.boolean(sendNotificationOrTraceOptions)) {
                    _sendNotification = sendNotificationOrTraceOptions;
                }
                else {
                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;
                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;
                }
            }
            trace = _value;
            traceFormat = _traceFormat;
            if (trace === Trace.Off) {
                tracer = undefined;
            }
            else {
                tracer = _tracer;
            }
            if (_sendNotification && !isClosed() && !isDisposed()) {
                await connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });
            }
        },
        onError: errorEmitter.event,
        onClose: closeEmitter.event,
        onUnhandledNotification: unhandledNotificationEmitter.event,
        onDispose: disposeEmitter.event,
        end: () => {
            messageWriter.end();
        },
        dispose: () => {
            if (isDisposed()) {
                return;
            }
            state = ConnectionState.Disposed;
            disposeEmitter.fire(undefined);
            const error = new messages_1.ResponseError(messages_1.ErrorCodes.PendingResponseRejected, 'Pending response rejected since connection got disposed');
            for (const promise of responsePromises.values()) {
                promise.reject(error);
            }
            responsePromises = new Map();
            requestTokens = new Map();
            knownCanceledRequests = new Set();
            messageQueue = new linkedMap_1.LinkedMap();
            // Test for backwards compatibility
            if (Is.func(messageWriter.dispose)) {
                messageWriter.dispose();
            }
            if (Is.func(messageReader.dispose)) {
                messageReader.dispose();
            }
        },
        listen: () => {
            throwIfClosedOrDisposed();
            throwIfListening();
            state = ConnectionState.Listening;
            messageReader.listen(callback);
        },
        inspect: () => {
            // eslint-disable-next-line no-console
            (0, ral_1.default)().console.log('inspect');
        }
    };
    connection.onNotification(LogTraceNotification.type, (params) => {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        const verbose = trace === Trace.Verbose || trace === Trace.Compact;
        tracer.log(params.message, verbose ? params.verbose : undefined);
    });
    connection.onNotification(ProgressNotification.type, (params) => {
        const handler = progressHandlers.get(params.token);
        if (handler) {
            handler(params.value);
        }
        else {
            unhandledProgressEmitter.fire(params);
        }
    });
    return connection;
}
exports.createMessageConnection = createMessageConnection;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/disposable.js":
/*!**************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/disposable.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Disposable = void 0;
var Disposable;
(function (Disposable) {
    function create(func) {
        return {
            dispose: func
        };
    }
    Disposable.create = create;
})(Disposable = exports.Disposable || (exports.Disposable = {}));


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/events.js":
/*!**********************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/events.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Emitter = exports.Event = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
var Event;
(function (Event) {
    const _disposable = { dispose() { } };
    Event.None = function () { return _disposable; };
})(Event = exports.Event || (exports.Event = {}));
class CallbackList {
    add(callback, context = null, bucket) {
        if (!this._callbacks) {
            this._callbacks = [];
            this._contexts = [];
        }
        this._callbacks.push(callback);
        this._contexts.push(context);
        if (Array.isArray(bucket)) {
            bucket.push({ dispose: () => this.remove(callback, context) });
        }
    }
    remove(callback, context = null) {
        if (!this._callbacks) {
            return;
        }
        let foundCallbackWithDifferentContext = false;
        for (let i = 0, len = this._callbacks.length; i < len; i++) {
            if (this._callbacks[i] === callback) {
                if (this._contexts[i] === context) {
                    // callback & context match => remove it
                    this._callbacks.splice(i, 1);
                    this._contexts.splice(i, 1);
                    return;
                }
                else {
                    foundCallbackWithDifferentContext = true;
                }
            }
        }
        if (foundCallbackWithDifferentContext) {
            throw new Error('When adding a listener with a context, you should remove it with the same context');
        }
    }
    invoke(...args) {
        if (!this._callbacks) {
            return [];
        }
        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);
        for (let i = 0, len = callbacks.length; i < len; i++) {
            try {
                ret.push(callbacks[i].apply(contexts[i], args));
            }
            catch (e) {
                // eslint-disable-next-line no-console
                (0, ral_1.default)().console.error(e);
            }
        }
        return ret;
    }
    isEmpty() {
        return !this._callbacks || this._callbacks.length === 0;
    }
    dispose() {
        this._callbacks = undefined;
        this._contexts = undefined;
    }
}
class Emitter {
    constructor(_options) {
        this._options = _options;
    }
    /**
     * For the public to allow to subscribe
     * to events from this Emitter
     */
    get event() {
        if (!this._event) {
            this._event = (listener, thisArgs, disposables) => {
                if (!this._callbacks) {
                    this._callbacks = new CallbackList();
                }
                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {
                    this._options.onFirstListenerAdd(this);
                }
                this._callbacks.add(listener, thisArgs);
                const result = {
                    dispose: () => {
                        if (!this._callbacks) {
                            // disposable is disposed after emitter is disposed.
                            return;
                        }
                        this._callbacks.remove(listener, thisArgs);
                        result.dispose = Emitter._noop;
                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {
                            this._options.onLastListenerRemove(this);
                        }
                    }
                };
                if (Array.isArray(disposables)) {
                    disposables.push(result);
                }
                return result;
            };
        }
        return this._event;
    }
    /**
     * To be kept private to fire an event to
     * subscribers
     */
    fire(event) {
        if (this._callbacks) {
            this._callbacks.invoke.call(this._callbacks, event);
        }
    }
    dispose() {
        if (this._callbacks) {
            this._callbacks.dispose();
            this._callbacks = undefined;
        }
    }
}
exports.Emitter = Emitter;
Emitter._noop = function () { };


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/is.js":
/*!******************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/is.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;
function boolean(value) {
    return value === true || value === false;
}
exports.boolean = boolean;
function string(value) {
    return typeof value === 'string' || value instanceof String;
}
exports.string = string;
function number(value) {
    return typeof value === 'number' || value instanceof Number;
}
exports.number = number;
function error(value) {
    return value instanceof Error;
}
exports.error = error;
function func(value) {
    return typeof value === 'function';
}
exports.func = func;
function array(value) {
    return Array.isArray(value);
}
exports.array = array;
function stringArray(value) {
    return array(value) && value.every(elem => string(elem));
}
exports.stringArray = stringArray;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/linkedMap.js":
/*!*************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/linkedMap.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LRUCache = exports.LinkedMap = exports.Touch = void 0;
var Touch;
(function (Touch) {
    Touch.None = 0;
    Touch.First = 1;
    Touch.AsOld = Touch.First;
    Touch.Last = 2;
    Touch.AsNew = Touch.Last;
})(Touch = exports.Touch || (exports.Touch = {}));
class LinkedMap {
    constructor() {
        this[_a] = 'LinkedMap';
        this._map = new Map();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
        this._state = 0;
    }
    clear() {
        this._map.clear();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
        this._state++;
    }
    isEmpty() {
        return !this._head && !this._tail;
    }
    get size() {
        return this._size;
    }
    get first() {
        return this._head?.value;
    }
    get last() {
        return this._tail?.value;
    }
    has(key) {
        return this._map.has(key);
    }
    get(key, touch = Touch.None) {
        const item = this._map.get(key);
        if (!item) {
            return undefined;
        }
        if (touch !== Touch.None) {
            this.touch(item, touch);
        }
        return item.value;
    }
    set(key, value, touch = Touch.None) {
        let item = this._map.get(key);
        if (item) {
            item.value = value;
            if (touch !== Touch.None) {
                this.touch(item, touch);
            }
        }
        else {
            item = { key, value, next: undefined, previous: undefined };
            switch (touch) {
                case Touch.None:
                    this.addItemLast(item);
                    break;
                case Touch.First:
                    this.addItemFirst(item);
                    break;
                case Touch.Last:
                    this.addItemLast(item);
                    break;
                default:
                    this.addItemLast(item);
                    break;
            }
            this._map.set(key, item);
            this._size++;
        }
        return this;
    }
    delete(key) {
        return !!this.remove(key);
    }
    remove(key) {
        const item = this._map.get(key);
        if (!item) {
            return undefined;
        }
        this._map.delete(key);
        this.removeItem(item);
        this._size--;
        return item.value;
    }
    shift() {
        if (!this._head && !this._tail) {
            return undefined;
        }
        if (!this._head || !this._tail) {
            throw new Error('Invalid list');
        }
        const item = this._head;
        this._map.delete(item.key);
        this.removeItem(item);
        this._size--;
        return item.value;
    }
    forEach(callbackfn, thisArg) {
        const state = this._state;
        let current = this._head;
        while (current) {
            if (thisArg) {
                callbackfn.bind(thisArg)(current.value, current.key, this);
            }
            else {
                callbackfn(current.value, current.key, this);
            }
            if (this._state !== state) {
                throw new Error(`LinkedMap got modified during iteration.`);
            }
            current = current.next;
        }
    }
    keys() {
        const state = this._state;
        let current = this._head;
        const iterator = {
            [Symbol.iterator]: () => {
                return iterator;
            },
            next: () => {
                if (this._state !== state) {
                    throw new Error(`LinkedMap got modified during iteration.`);
                }
                if (current) {
                    const result = { value: current.key, done: false };
                    current = current.next;
                    return result;
                }
                else {
                    return { value: undefined, done: true };
                }
            }
        };
        return iterator;
    }
    values() {
        const state = this._state;
        let current = this._head;
        const iterator = {
            [Symbol.iterator]: () => {
                return iterator;
            },
            next: () => {
                if (this._state !== state) {
                    throw new Error(`LinkedMap got modified during iteration.`);
                }
                if (current) {
                    const result = { value: current.value, done: false };
                    current = current.next;
                    return result;
                }
                else {
                    return { value: undefined, done: true };
                }
            }
        };
        return iterator;
    }
    entries() {
        const state = this._state;
        let current = this._head;
        const iterator = {
            [Symbol.iterator]: () => {
                return iterator;
            },
            next: () => {
                if (this._state !== state) {
                    throw new Error(`LinkedMap got modified during iteration.`);
                }
                if (current) {
                    const result = { value: [current.key, current.value], done: false };
                    current = current.next;
                    return result;
                }
                else {
                    return { value: undefined, done: true };
                }
            }
        };
        return iterator;
    }
    [(_a = Symbol.toStringTag, Symbol.iterator)]() {
        return this.entries();
    }
    trimOld(newSize) {
        if (newSize >= this.size) {
            return;
        }
        if (newSize === 0) {
            this.clear();
            return;
        }
        let current = this._head;
        let currentSize = this.size;
        while (current && currentSize > newSize) {
            this._map.delete(current.key);
            current = current.next;
            currentSize--;
        }
        this._head = current;
        this._size = currentSize;
        if (current) {
            current.previous = undefined;
        }
        this._state++;
    }
    addItemFirst(item) {
        // First time Insert
        if (!this._head && !this._tail) {
            this._tail = item;
        }
        else if (!this._head) {
            throw new Error('Invalid list');
        }
        else {
            item.next = this._head;
            this._head.previous = item;
        }
        this._head = item;
        this._state++;
    }
    addItemLast(item) {
        // First time Insert
        if (!this._head && !this._tail) {
            this._head = item;
        }
        else if (!this._tail) {
            throw new Error('Invalid list');
        }
        else {
            item.previous = this._tail;
            this._tail.next = item;
        }
        this._tail = item;
        this._state++;
    }
    removeItem(item) {
        if (item === this._head && item === this._tail) {
            this._head = undefined;
            this._tail = undefined;
        }
        else if (item === this._head) {
            // This can only happened if size === 1 which is handle
            // by the case above.
            if (!item.next) {
                throw new Error('Invalid list');
            }
            item.next.previous = undefined;
            this._head = item.next;
        }
        else if (item === this._tail) {
            // This can only happened if size === 1 which is handle
            // by the case above.
            if (!item.previous) {
                throw new Error('Invalid list');
            }
            item.previous.next = undefined;
            this._tail = item.previous;
        }
        else {
            const next = item.next;
            const previous = item.previous;
            if (!next || !previous) {
                throw new Error('Invalid list');
            }
            next.previous = previous;
            previous.next = next;
        }
        item.next = undefined;
        item.previous = undefined;
        this._state++;
    }
    touch(item, touch) {
        if (!this._head || !this._tail) {
            throw new Error('Invalid list');
        }
        if ((touch !== Touch.First && touch !== Touch.Last)) {
            return;
        }
        if (touch === Touch.First) {
            if (item === this._head) {
                return;
            }
            const next = item.next;
            const previous = item.previous;
            // Unlink the item
            if (item === this._tail) {
                // previous must be defined since item was not head but is tail
                // So there are more than on item in the map
                previous.next = undefined;
                this._tail = previous;
            }
            else {
                // Both next and previous are not undefined since item was neither head nor tail.
                next.previous = previous;
                previous.next = next;
            }
            // Insert the node at head
            item.previous = undefined;
            item.next = this._head;
            this._head.previous = item;
            this._head = item;
            this._state++;
        }
        else if (touch === Touch.Last) {
            if (item === this._tail) {
                return;
            }
            const next = item.next;
            const previous = item.previous;
            // Unlink the item.
            if (item === this._head) {
                // next must be defined since item was not tail but is head
                // So there are more than on item in the map
                next.previous = undefined;
                this._head = next;
            }
            else {
                // Both next and previous are not undefined since item was neither head nor tail.
                next.previous = previous;
                previous.next = next;
            }
            item.next = undefined;
            item.previous = this._tail;
            this._tail.next = item;
            this._tail = item;
            this._state++;
        }
    }
    toJSON() {
        const data = [];
        this.forEach((value, key) => {
            data.push([key, value]);
        });
        return data;
    }
    fromJSON(data) {
        this.clear();
        for (const [key, value] of data) {
            this.set(key, value);
        }
    }
}
exports.LinkedMap = LinkedMap;
class LRUCache extends LinkedMap {
    constructor(limit, ratio = 1) {
        super();
        this._limit = limit;
        this._ratio = Math.min(Math.max(0, ratio), 1);
    }
    get limit() {
        return this._limit;
    }
    set limit(limit) {
        this._limit = limit;
        this.checkTrim();
    }
    get ratio() {
        return this._ratio;
    }
    set ratio(ratio) {
        this._ratio = Math.min(Math.max(0, ratio), 1);
        this.checkTrim();
    }
    get(key, touch = Touch.AsNew) {
        return super.get(key, touch);
    }
    peek(key) {
        return super.get(key, Touch.None);
    }
    set(key, value) {
        super.set(key, value, Touch.Last);
        this.checkTrim();
        return this;
    }
    checkTrim() {
        if (this.size > this._limit) {
            this.trimOld(Math.round(this._limit * this._ratio));
        }
    }
}
exports.LRUCache = LRUCache;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/messageBuffer.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/messageBuffer.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractMessageBuffer = void 0;
const CR = 13;
const LF = 10;
const CRLF = '\r\n';
class AbstractMessageBuffer {
    constructor(encoding = 'utf-8') {
        this._encoding = encoding;
        this._chunks = [];
        this._totalLength = 0;
    }
    get encoding() {
        return this._encoding;
    }
    append(chunk) {
        const toAppend = typeof chunk === 'string' ? this.fromString(chunk, this._encoding) : chunk;
        this._chunks.push(toAppend);
        this._totalLength += toAppend.byteLength;
    }
    tryReadHeaders(lowerCaseKeys = false) {
        if (this._chunks.length === 0) {
            return undefined;
        }
        let state = 0;
        let chunkIndex = 0;
        let offset = 0;
        let chunkBytesRead = 0;
        row: while (chunkIndex < this._chunks.length) {
            const chunk = this._chunks[chunkIndex];
            offset = 0;
            column: while (offset < chunk.length) {
                const value = chunk[offset];
                switch (value) {
                    case CR:
                        switch (state) {
                            case 0:
                                state = 1;
                                break;
                            case 2:
                                state = 3;
                                break;
                            default:
                                state = 0;
                        }
                        break;
                    case LF:
                        switch (state) {
                            case 1:
                                state = 2;
                                break;
                            case 3:
                                state = 4;
                                offset++;
                                break row;
                            default:
                                state = 0;
                        }
                        break;
                    default:
                        state = 0;
                }
                offset++;
            }
            chunkBytesRead += chunk.byteLength;
            chunkIndex++;
        }
        if (state !== 4) {
            return undefined;
        }
        // The buffer contains the two CRLF at the end. So we will
        // have two empty lines after the split at the end as well.
        const buffer = this._read(chunkBytesRead + offset);
        const result = new Map();
        const headers = this.toString(buffer, 'ascii').split(CRLF);
        if (headers.length < 2) {
            return result;
        }
        for (let i = 0; i < headers.length - 2; i++) {
            const header = headers[i];
            const index = header.indexOf(':');
            if (index === -1) {
                throw new Error('Message header must separate key and value using :');
            }
            const key = header.substr(0, index);
            const value = header.substr(index + 1).trim();
            result.set(lowerCaseKeys ? key.toLowerCase() : key, value);
        }
        return result;
    }
    tryReadBody(length) {
        if (this._totalLength < length) {
            return undefined;
        }
        return this._read(length);
    }
    get numberOfBytes() {
        return this._totalLength;
    }
    _read(byteCount) {
        if (byteCount === 0) {
            return this.emptyBuffer();
        }
        if (byteCount > this._totalLength) {
            throw new Error(`Cannot read so many bytes!`);
        }
        if (this._chunks[0].byteLength === byteCount) {
            // super fast path, precisely first chunk must be returned
            const chunk = this._chunks[0];
            this._chunks.shift();
            this._totalLength -= byteCount;
            return this.asNative(chunk);
        }
        if (this._chunks[0].byteLength > byteCount) {
            // fast path, the reading is entirely within the first chunk
            const chunk = this._chunks[0];
            const result = this.asNative(chunk, byteCount);
            this._chunks[0] = chunk.slice(byteCount);
            this._totalLength -= byteCount;
            return result;
        }
        const result = this.allocNative(byteCount);
        let resultOffset = 0;
        let chunkIndex = 0;
        while (byteCount > 0) {
            const chunk = this._chunks[chunkIndex];
            if (chunk.byteLength > byteCount) {
                // this chunk will survive
                const chunkPart = chunk.slice(0, byteCount);
                result.set(chunkPart, resultOffset);
                resultOffset += byteCount;
                this._chunks[chunkIndex] = chunk.slice(byteCount);
                this._totalLength -= byteCount;
                byteCount -= byteCount;
            }
            else {
                // this chunk will be entirely read
                result.set(chunk, resultOffset);
                resultOffset += chunk.byteLength;
                this._chunks.shift();
                this._totalLength -= chunk.byteLength;
                byteCount -= chunk.byteLength;
            }
        }
        return result;
    }
}
exports.AbstractMessageBuffer = AbstractMessageBuffer;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/messageReader.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/messageReader.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
const Is = __webpack_require__(/*! ./is */ "./node_modules/vscode-jsonrpc/lib/common/is.js");
const events_1 = __webpack_require__(/*! ./events */ "./node_modules/vscode-jsonrpc/lib/common/events.js");
const semaphore_1 = __webpack_require__(/*! ./semaphore */ "./node_modules/vscode-jsonrpc/lib/common/semaphore.js");
var MessageReader;
(function (MessageReader) {
    function is(value) {
        let candidate = value;
        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&
            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);
    }
    MessageReader.is = is;
})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));
class AbstractMessageReader {
    constructor() {
        this.errorEmitter = new events_1.Emitter();
        this.closeEmitter = new events_1.Emitter();
        this.partialMessageEmitter = new events_1.Emitter();
    }
    dispose() {
        this.errorEmitter.dispose();
        this.closeEmitter.dispose();
    }
    get onError() {
        return this.errorEmitter.event;
    }
    fireError(error) {
        this.errorEmitter.fire(this.asError(error));
    }
    get onClose() {
        return this.closeEmitter.event;
    }
    fireClose() {
        this.closeEmitter.fire(undefined);
    }
    get onPartialMessage() {
        return this.partialMessageEmitter.event;
    }
    firePartialMessage(info) {
        this.partialMessageEmitter.fire(info);
    }
    asError(error) {
        if (error instanceof Error) {
            return error;
        }
        else {
            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);
        }
    }
}
exports.AbstractMessageReader = AbstractMessageReader;
var ResolvedMessageReaderOptions;
(function (ResolvedMessageReaderOptions) {
    function fromOptions(options) {
        let charset;
        let result;
        let contentDecoder;
        const contentDecoders = new Map();
        let contentTypeDecoder;
        const contentTypeDecoders = new Map();
        if (options === undefined || typeof options === 'string') {
            charset = options ?? 'utf-8';
        }
        else {
            charset = options.charset ?? 'utf-8';
            if (options.contentDecoder !== undefined) {
                contentDecoder = options.contentDecoder;
                contentDecoders.set(contentDecoder.name, contentDecoder);
            }
            if (options.contentDecoders !== undefined) {
                for (const decoder of options.contentDecoders) {
                    contentDecoders.set(decoder.name, decoder);
                }
            }
            if (options.contentTypeDecoder !== undefined) {
                contentTypeDecoder = options.contentTypeDecoder;
                contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);
            }
            if (options.contentTypeDecoders !== undefined) {
                for (const decoder of options.contentTypeDecoders) {
                    contentTypeDecoders.set(decoder.name, decoder);
                }
            }
        }
        if (contentTypeDecoder === undefined) {
            contentTypeDecoder = (0, ral_1.default)().applicationJson.decoder;
            contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);
        }
        return { charset, contentDecoder, contentDecoders, contentTypeDecoder, contentTypeDecoders };
    }
    ResolvedMessageReaderOptions.fromOptions = fromOptions;
})(ResolvedMessageReaderOptions || (ResolvedMessageReaderOptions = {}));
class ReadableStreamMessageReader extends AbstractMessageReader {
    constructor(readable, options) {
        super();
        this.readable = readable;
        this.options = ResolvedMessageReaderOptions.fromOptions(options);
        this.buffer = (0, ral_1.default)().messageBuffer.create(this.options.charset);
        this._partialMessageTimeout = 10000;
        this.nextMessageLength = -1;
        this.messageToken = 0;
        this.readSemaphore = new semaphore_1.Semaphore(1);
    }
    set partialMessageTimeout(timeout) {
        this._partialMessageTimeout = timeout;
    }
    get partialMessageTimeout() {
        return this._partialMessageTimeout;
    }
    listen(callback) {
        this.nextMessageLength = -1;
        this.messageToken = 0;
        this.partialMessageTimer = undefined;
        this.callback = callback;
        const result = this.readable.onData((data) => {
            this.onData(data);
        });
        this.readable.onError((error) => this.fireError(error));
        this.readable.onClose(() => this.fireClose());
        return result;
    }
    onData(data) {
        this.buffer.append(data);
        while (true) {
            if (this.nextMessageLength === -1) {
                const headers = this.buffer.tryReadHeaders(true);
                if (!headers) {
                    return;
                }
                const contentLength = headers.get('content-length');
                if (!contentLength) {
                    this.fireError(new Error('Header must provide a Content-Length property.'));
                    return;
                }
                const length = parseInt(contentLength);
                if (isNaN(length)) {
                    this.fireError(new Error('Content-Length value must be a number.'));
                    return;
                }
                this.nextMessageLength = length;
            }
            const body = this.buffer.tryReadBody(this.nextMessageLength);
            if (body === undefined) {
                /** We haven't received the full message yet. */
                this.setPartialMessageTimer();
                return;
            }
            this.clearPartialMessageTimer();
            this.nextMessageLength = -1;
            // Make sure that we convert one received message after the
            // other. Otherwise it could happen that a decoding of a second
            // smaller message finished before the decoding of a first larger
            // message and then we would deliver the second message first.
            this.readSemaphore.lock(async () => {
                const bytes = this.options.contentDecoder !== undefined
                    ? await this.options.contentDecoder.decode(body)
                    : body;
                const message = await this.options.contentTypeDecoder.decode(bytes, this.options);
                this.callback(message);
            }).catch((error) => {
                this.fireError(error);
            });
        }
    }
    clearPartialMessageTimer() {
        if (this.partialMessageTimer) {
            this.partialMessageTimer.dispose();
            this.partialMessageTimer = undefined;
        }
    }
    setPartialMessageTimer() {
        this.clearPartialMessageTimer();
        if (this._partialMessageTimeout <= 0) {
            return;
        }
        this.partialMessageTimer = (0, ral_1.default)().timer.setTimeout((token, timeout) => {
            this.partialMessageTimer = undefined;
            if (token === this.messageToken) {
                this.firePartialMessage({ messageToken: token, waitingTime: timeout });
                this.setPartialMessageTimer();
            }
        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);
    }
}
exports.ReadableStreamMessageReader = ReadableStreamMessageReader;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/messageWriter.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/messageWriter.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
const Is = __webpack_require__(/*! ./is */ "./node_modules/vscode-jsonrpc/lib/common/is.js");
const semaphore_1 = __webpack_require__(/*! ./semaphore */ "./node_modules/vscode-jsonrpc/lib/common/semaphore.js");
const events_1 = __webpack_require__(/*! ./events */ "./node_modules/vscode-jsonrpc/lib/common/events.js");
const ContentLength = 'Content-Length: ';
const CRLF = '\r\n';
var MessageWriter;
(function (MessageWriter) {
    function is(value) {
        let candidate = value;
        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&
            Is.func(candidate.onError) && Is.func(candidate.write);
    }
    MessageWriter.is = is;
})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));
class AbstractMessageWriter {
    constructor() {
        this.errorEmitter = new events_1.Emitter();
        this.closeEmitter = new events_1.Emitter();
    }
    dispose() {
        this.errorEmitter.dispose();
        this.closeEmitter.dispose();
    }
    get onError() {
        return this.errorEmitter.event;
    }
    fireError(error, message, count) {
        this.errorEmitter.fire([this.asError(error), message, count]);
    }
    get onClose() {
        return this.closeEmitter.event;
    }
    fireClose() {
        this.closeEmitter.fire(undefined);
    }
    asError(error) {
        if (error instanceof Error) {
            return error;
        }
        else {
            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);
        }
    }
}
exports.AbstractMessageWriter = AbstractMessageWriter;
var ResolvedMessageWriterOptions;
(function (ResolvedMessageWriterOptions) {
    function fromOptions(options) {
        if (options === undefined || typeof options === 'string') {
            return { charset: options ?? 'utf-8', contentTypeEncoder: (0, ral_1.default)().applicationJson.encoder };
        }
        else {
            return { charset: options.charset ?? 'utf-8', contentEncoder: options.contentEncoder, contentTypeEncoder: options.contentTypeEncoder ?? (0, ral_1.default)().applicationJson.encoder };
        }
    }
    ResolvedMessageWriterOptions.fromOptions = fromOptions;
})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));
class WriteableStreamMessageWriter extends AbstractMessageWriter {
    constructor(writable, options) {
        super();
        this.writable = writable;
        this.options = ResolvedMessageWriterOptions.fromOptions(options);
        this.errorCount = 0;
        this.writeSemaphore = new semaphore_1.Semaphore(1);
        this.writable.onError((error) => this.fireError(error));
        this.writable.onClose(() => this.fireClose());
    }
    async write(msg) {
        return this.writeSemaphore.lock(async () => {
            const payload = this.options.contentTypeEncoder.encode(msg, this.options).then((buffer) => {
                if (this.options.contentEncoder !== undefined) {
                    return this.options.contentEncoder.encode(buffer);
                }
                else {
                    return buffer;
                }
            });
            return payload.then((buffer) => {
                const headers = [];
                headers.push(ContentLength, buffer.byteLength.toString(), CRLF);
                headers.push(CRLF);
                return this.doWrite(msg, headers, buffer);
            }, (error) => {
                this.fireError(error);
                throw error;
            });
        });
    }
    async doWrite(msg, headers, data) {
        try {
            await this.writable.write(headers.join(''), 'ascii');
            return this.writable.write(data);
        }
        catch (error) {
            this.handleError(error, msg);
            return Promise.reject(error);
        }
    }
    handleError(error, msg) {
        this.errorCount++;
        this.fireError(error, msg, this.errorCount);
    }
    end() {
        this.writable.end();
    }
}
exports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/messages.js":
/*!************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/messages.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Message = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType = exports.RequestType0 = exports.AbstractMessageSignature = exports.ParameterStructures = exports.ResponseError = exports.ErrorCodes = void 0;
const is = __webpack_require__(/*! ./is */ "./node_modules/vscode-jsonrpc/lib/common/is.js");
/**
 * Predefined error codes.
 */
var ErrorCodes;
(function (ErrorCodes) {
    // Defined by JSON RPC
    ErrorCodes.ParseError = -32700;
    ErrorCodes.InvalidRequest = -32600;
    ErrorCodes.MethodNotFound = -32601;
    ErrorCodes.InvalidParams = -32602;
    ErrorCodes.InternalError = -32603;
    /**
     * This is the start range of JSON RPC reserved error codes.
     * It doesn't denote a real error code. No application error codes should
     * be defined between the start and end range. For backwards
     * compatibility the `ServerNotInitialized` and the `UnknownErrorCode`
     * are left in the range.
     *
     * @since 3.16.0
    */
    ErrorCodes.jsonrpcReservedErrorRangeStart = -32099;
    /** @deprecated use  jsonrpcReservedErrorRangeStart */
    ErrorCodes.serverErrorStart = -32099;
    /**
     * An error occurred when write a message to the transport layer.
     */
    ErrorCodes.MessageWriteError = -32099;
    /**
     * An error occurred when reading a message from the transport layer.
     */
    ErrorCodes.MessageReadError = -32098;
    /**
     * The connection got disposed or lost and all pending responses got
     * rejected.
     */
    ErrorCodes.PendingResponseRejected = -32097;
    /**
     * The connection is inactive and a use of it failed.
     */
    ErrorCodes.ConnectionInactive = -32096;
    /**
     * Error code indicating that a server received a notification or
     * request before the server has received the `initialize` request.
     */
    ErrorCodes.ServerNotInitialized = -32002;
    ErrorCodes.UnknownErrorCode = -32001;
    /**
     * This is the end range of JSON RPC reserved error codes.
     * It doesn't denote a real error code.
     *
     * @since 3.16.0
    */
    ErrorCodes.jsonrpcReservedErrorRangeEnd = -32000;
    /** @deprecated use  jsonrpcReservedErrorRangeEnd */
    ErrorCodes.serverErrorEnd = -32000;
})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));
/**
 * An error object return in a response in case a request
 * has failed.
 */
class ResponseError extends Error {
    constructor(code, message, data) {
        super(message);
        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;
        this.data = data;
        Object.setPrototypeOf(this, ResponseError.prototype);
    }
    toJson() {
        const result = {
            code: this.code,
            message: this.message
        };
        if (this.data !== undefined) {
            result.data = this.data;
        }
        return result;
    }
}
exports.ResponseError = ResponseError;
class ParameterStructures {
    constructor(kind) {
        this.kind = kind;
    }
    static is(value) {
        return value === ParameterStructures.auto || value === ParameterStructures.byName || value === ParameterStructures.byPosition;
    }
    toString() {
        return this.kind;
    }
}
exports.ParameterStructures = ParameterStructures;
/**
 * The parameter structure is automatically inferred on the number of parameters
 * and the parameter type in case of a single param.
 */
ParameterStructures.auto = new ParameterStructures('auto');
/**
 * Forces `byPosition` parameter structure. This is useful if you have a single
 * parameter which has a literal type.
 */
ParameterStructures.byPosition = new ParameterStructures('byPosition');
/**
 * Forces `byName` parameter structure. This is only useful when having a single
 * parameter. The library will report errors if used with a different number of
 * parameters.
 */
ParameterStructures.byName = new ParameterStructures('byName');
/**
 * An abstract implementation of a MessageType.
 */
class AbstractMessageSignature {
    constructor(method, numberOfParams) {
        this.method = method;
        this.numberOfParams = numberOfParams;
    }
    get parameterStructures() {
        return ParameterStructures.auto;
    }
}
exports.AbstractMessageSignature = AbstractMessageSignature;
/**
 * Classes to type request response pairs
 */
class RequestType0 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 0);
    }
}
exports.RequestType0 = RequestType0;
class RequestType extends AbstractMessageSignature {
    constructor(method, _parameterStructures = ParameterStructures.auto) {
        super(method, 1);
        this._parameterStructures = _parameterStructures;
    }
    get parameterStructures() {
        return this._parameterStructures;
    }
}
exports.RequestType = RequestType;
class RequestType1 extends AbstractMessageSignature {
    constructor(method, _parameterStructures = ParameterStructures.auto) {
        super(method, 1);
        this._parameterStructures = _parameterStructures;
    }
    get parameterStructures() {
        return this._parameterStructures;
    }
}
exports.RequestType1 = RequestType1;
class RequestType2 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 2);
    }
}
exports.RequestType2 = RequestType2;
class RequestType3 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 3);
    }
}
exports.RequestType3 = RequestType3;
class RequestType4 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 4);
    }
}
exports.RequestType4 = RequestType4;
class RequestType5 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 5);
    }
}
exports.RequestType5 = RequestType5;
class RequestType6 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 6);
    }
}
exports.RequestType6 = RequestType6;
class RequestType7 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 7);
    }
}
exports.RequestType7 = RequestType7;
class RequestType8 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 8);
    }
}
exports.RequestType8 = RequestType8;
class RequestType9 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 9);
    }
}
exports.RequestType9 = RequestType9;
class NotificationType extends AbstractMessageSignature {
    constructor(method, _parameterStructures = ParameterStructures.auto) {
        super(method, 1);
        this._parameterStructures = _parameterStructures;
    }
    get parameterStructures() {
        return this._parameterStructures;
    }
}
exports.NotificationType = NotificationType;
class NotificationType0 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 0);
    }
}
exports.NotificationType0 = NotificationType0;
class NotificationType1 extends AbstractMessageSignature {
    constructor(method, _parameterStructures = ParameterStructures.auto) {
        super(method, 1);
        this._parameterStructures = _parameterStructures;
    }
    get parameterStructures() {
        return this._parameterStructures;
    }
}
exports.NotificationType1 = NotificationType1;
class NotificationType2 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 2);
    }
}
exports.NotificationType2 = NotificationType2;
class NotificationType3 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 3);
    }
}
exports.NotificationType3 = NotificationType3;
class NotificationType4 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 4);
    }
}
exports.NotificationType4 = NotificationType4;
class NotificationType5 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 5);
    }
}
exports.NotificationType5 = NotificationType5;
class NotificationType6 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 6);
    }
}
exports.NotificationType6 = NotificationType6;
class NotificationType7 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 7);
    }
}
exports.NotificationType7 = NotificationType7;
class NotificationType8 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 8);
    }
}
exports.NotificationType8 = NotificationType8;
class NotificationType9 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 9);
    }
}
exports.NotificationType9 = NotificationType9;
var Message;
(function (Message) {
    /**
     * Tests if the given message is a request message
     */
    function isRequest(message) {
        const candidate = message;
        return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));
    }
    Message.isRequest = isRequest;
    /**
     * Tests if the given message is a notification message
     */
    function isNotification(message) {
        const candidate = message;
        return candidate && is.string(candidate.method) && message.id === void 0;
    }
    Message.isNotification = isNotification;
    /**
     * Tests if the given message is a response message
     */
    function isResponse(message) {
        const candidate = message;
        return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);
    }
    Message.isResponse = isResponse;
})(Message = exports.Message || (exports.Message = {}));


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/ral.js":
/*!*******************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/ral.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
let _ral;
function RAL() {
    if (_ral === undefined) {
        throw new Error(`No runtime abstraction layer installed`);
    }
    return _ral;
}
(function (RAL) {
    function install(ral) {
        if (ral === undefined) {
            throw new Error(`No runtime abstraction layer provided`);
        }
        _ral = ral;
    }
    RAL.install = install;
})(RAL || (RAL = {}));
exports["default"] = RAL;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/semaphore.js":
/*!*************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/semaphore.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Semaphore = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
class Semaphore {
    constructor(capacity = 1) {
        if (capacity <= 0) {
            throw new Error('Capacity must be greater than 0');
        }
        this._capacity = capacity;
        this._active = 0;
        this._waiting = [];
    }
    lock(thunk) {
        return new Promise((resolve, reject) => {
            this._waiting.push({ thunk, resolve, reject });
            this.runNext();
        });
    }
    get active() {
        return this._active;
    }
    runNext() {
        if (this._waiting.length === 0 || this._active === this._capacity) {
            return;
        }
        (0, ral_1.default)().timer.setImmediate(() => this.doRunNext());
    }
    doRunNext() {
        if (this._waiting.length === 0 || this._active === this._capacity) {
            return;
        }
        const next = this._waiting.shift();
        this._active++;
        if (this._active > this._capacity) {
            throw new Error(`To many thunks active`);
        }
        try {
            const result = next.thunk();
            if (result instanceof Promise) {
                result.then((value) => {
                    this._active--;
                    next.resolve(value);
                    this.runNext();
                }, (err) => {
                    this._active--;
                    next.reject(err);
                    this.runNext();
                });
            }
            else {
                this._active--;
                next.resolve(result);
                this.runNext();
            }
        }
        catch (err) {
            this._active--;
            next.reject(err);
            this.runNext();
        }
    }
}
exports.Semaphore = Semaphore;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js":
/*!***************************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = void 0;
const cancellation_1 = __webpack_require__(/*! ./cancellation */ "./node_modules/vscode-jsonrpc/lib/common/cancellation.js");
var CancellationState;
(function (CancellationState) {
    CancellationState.Continue = 0;
    CancellationState.Cancelled = 1;
})(CancellationState || (CancellationState = {}));
class SharedArraySenderStrategy {
    constructor() {
        this.buffers = new Map();
    }
    enableCancellation(request) {
        if (request.id === null) {
            return;
        }
        const buffer = new SharedArrayBuffer(4);
        const data = new Int32Array(buffer, 0, 1);
        data[0] = CancellationState.Continue;
        this.buffers.set(request.id, buffer);
        request.$cancellationData = buffer;
    }
    async sendCancellation(_conn, id) {
        const buffer = this.buffers.get(id);
        if (buffer === undefined) {
            return;
        }
        const data = new Int32Array(buffer, 0, 1);
        Atomics.store(data, 0, CancellationState.Cancelled);
    }
    cleanup(id) {
        this.buffers.delete(id);
    }
    dispose() {
        this.buffers.clear();
    }
}
exports.SharedArraySenderStrategy = SharedArraySenderStrategy;
class SharedArrayBufferCancellationToken {
    constructor(buffer) {
        this.data = new Int32Array(buffer, 0, 1);
    }
    get isCancellationRequested() {
        return Atomics.load(this.data, 0) === CancellationState.Cancelled;
    }
    get onCancellationRequested() {
        throw new Error(`Cancellation over SharedArrayBuffer doesn't support cancellation events`);
    }
}
class SharedArrayBufferCancellationTokenSource {
    constructor(buffer) {
        this.token = new SharedArrayBufferCancellationToken(buffer);
    }
    cancel() {
    }
    dispose() {
    }
}
class SharedArrayReceiverStrategy {
    constructor() {
        this.kind = 'request';
    }
    createCancellationTokenSource(request) {
        const buffer = request.$cancellationData;
        if (buffer === undefined) {
            return new cancellation_1.CancellationTokenSource();
        }
        return new SharedArrayBufferCancellationTokenSource(buffer);
    }
}
exports.SharedArrayReceiverStrategy = SharedArrayReceiverStrategy;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/node/main.js":
/*!******************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/node/main.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createMessageConnection = exports.createServerSocketTransport = exports.createClientSocketTransport = exports.createServerPipeTransport = exports.createClientPipeTransport = exports.generateRandomPipeName = exports.StreamMessageWriter = exports.StreamMessageReader = exports.SocketMessageWriter = exports.SocketMessageReader = exports.PortMessageWriter = exports.PortMessageReader = exports.IPCMessageWriter = exports.IPCMessageReader = void 0;
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ----------------------------------------------------------------------------------------- */
const ril_1 = __webpack_require__(/*! ./ril */ "./node_modules/vscode-jsonrpc/lib/node/ril.js");
// Install the node runtime abstract.
ril_1.default.install();
const path = __webpack_require__(/*! path */ "path");
const os = __webpack_require__(/*! os */ "os");
const crypto_1 = __webpack_require__(/*! crypto */ "crypto");
const net_1 = __webpack_require__(/*! net */ "net");
const api_1 = __webpack_require__(/*! ../common/api */ "./node_modules/vscode-jsonrpc/lib/common/api.js");
__exportStar(__webpack_require__(/*! ../common/api */ "./node_modules/vscode-jsonrpc/lib/common/api.js"), exports);
class IPCMessageReader extends api_1.AbstractMessageReader {
    constructor(process) {
        super();
        this.process = process;
        let eventEmitter = this.process;
        eventEmitter.on('error', (error) => this.fireError(error));
        eventEmitter.on('close', () => this.fireClose());
    }
    listen(callback) {
        this.process.on('message', callback);
        return api_1.Disposable.create(() => this.process.off('message', callback));
    }
}
exports.IPCMessageReader = IPCMessageReader;
class IPCMessageWriter extends api_1.AbstractMessageWriter {
    constructor(process) {
        super();
        this.process = process;
        this.errorCount = 0;
        const eventEmitter = this.process;
        eventEmitter.on('error', (error) => this.fireError(error));
        eventEmitter.on('close', () => this.fireClose);
    }
    write(msg) {
        try {
            if (typeof this.process.send === 'function') {
                this.process.send(msg, undefined, undefined, (error) => {
                    if (error) {
                        this.errorCount++;
                        this.handleError(error, msg);
                    }
                    else {
                        this.errorCount = 0;
                    }
                });
            }
            return Promise.resolve();
        }
        catch (error) {
            this.handleError(error, msg);
            return Promise.reject(error);
        }
    }
    handleError(error, msg) {
        this.errorCount++;
        this.fireError(error, msg, this.errorCount);
    }
    end() {
    }
}
exports.IPCMessageWriter = IPCMessageWriter;
class PortMessageReader extends api_1.AbstractMessageReader {
    constructor(port) {
        super();
        this.onData = new api_1.Emitter;
        port.on('close', () => this.fireClose);
        port.on('error', (error) => this.fireError(error));
        port.on('message', (message) => {
            this.onData.fire(message);
        });
    }
    listen(callback) {
        return this.onData.event(callback);
    }
}
exports.PortMessageReader = PortMessageReader;
class PortMessageWriter extends api_1.AbstractMessageWriter {
    constructor(port) {
        super();
        this.port = port;
        this.errorCount = 0;
        port.on('close', () => this.fireClose());
        port.on('error', (error) => this.fireError(error));
    }
    write(msg) {
        try {
            this.port.postMessage(msg);
            return Promise.resolve();
        }
        catch (error) {
            this.handleError(error, msg);
            return Promise.reject(error);
        }
    }
    handleError(error, msg) {
        this.errorCount++;
        this.fireError(error, msg, this.errorCount);
    }
    end() {
    }
}
exports.PortMessageWriter = PortMessageWriter;
class SocketMessageReader extends api_1.ReadableStreamMessageReader {
    constructor(socket, encoding = 'utf-8') {
        super((0, ril_1.default)().stream.asReadableStream(socket), encoding);
    }
}
exports.SocketMessageReader = SocketMessageReader;
class SocketMessageWriter extends api_1.WriteableStreamMessageWriter {
    constructor(socket, options) {
        super((0, ril_1.default)().stream.asWritableStream(socket), options);
        this.socket = socket;
    }
    dispose() {
        super.dispose();
        this.socket.destroy();
    }
}
exports.SocketMessageWriter = SocketMessageWriter;
class StreamMessageReader extends api_1.ReadableStreamMessageReader {
    constructor(readable, encoding) {
        super((0, ril_1.default)().stream.asReadableStream(readable), encoding);
    }
}
exports.StreamMessageReader = StreamMessageReader;
class StreamMessageWriter extends api_1.WriteableStreamMessageWriter {
    constructor(writable, options) {
        super((0, ril_1.default)().stream.asWritableStream(writable), options);
    }
}
exports.StreamMessageWriter = StreamMessageWriter;
const XDG_RUNTIME_DIR = process.env['XDG_RUNTIME_DIR'];
const safeIpcPathLengths = new Map([
    ['linux', 107],
    ['darwin', 103]
]);
function generateRandomPipeName() {
    const randomSuffix = (0, crypto_1.randomBytes)(21).toString('hex');
    if (process.platform === 'win32') {
        return `\\\\.\\pipe\\vscode-jsonrpc-${randomSuffix}-sock`;
    }
    let result;
    if (XDG_RUNTIME_DIR) {
        result = path.join(XDG_RUNTIME_DIR, `vscode-ipc-${randomSuffix}.sock`);
    }
    else {
        result = path.join(os.tmpdir(), `vscode-${randomSuffix}.sock`);
    }
    const limit = safeIpcPathLengths.get(process.platform);
    if (limit !== undefined && result.length > limit) {
        (0, ril_1.default)().console.warn(`WARNING: IPC handle "${result}" is longer than ${limit} characters.`);
    }
    return result;
}
exports.generateRandomPipeName = generateRandomPipeName;
function createClientPipeTransport(pipeName, encoding = 'utf-8') {
    let connectResolve;
    const connected = new Promise((resolve, _reject) => {
        connectResolve = resolve;
    });
    return new Promise((resolve, reject) => {
        let server = (0, net_1.createServer)((socket) => {
            server.close();
            connectResolve([
                new SocketMessageReader(socket, encoding),
                new SocketMessageWriter(socket, encoding)
            ]);
        });
        server.on('error', reject);
        server.listen(pipeName, () => {
            server.removeListener('error', reject);
            resolve({
                onConnected: () => { return connected; }
            });
        });
    });
}
exports.createClientPipeTransport = createClientPipeTransport;
function createServerPipeTransport(pipeName, encoding = 'utf-8') {
    const socket = (0, net_1.createConnection)(pipeName);
    return [
        new SocketMessageReader(socket, encoding),
        new SocketMessageWriter(socket, encoding)
    ];
}
exports.createServerPipeTransport = createServerPipeTransport;
function createClientSocketTransport(port, encoding = 'utf-8') {
    let connectResolve;
    const connected = new Promise((resolve, _reject) => {
        connectResolve = resolve;
    });
    return new Promise((resolve, reject) => {
        const server = (0, net_1.createServer)((socket) => {
            server.close();
            connectResolve([
                new SocketMessageReader(socket, encoding),
                new SocketMessageWriter(socket, encoding)
            ]);
        });
        server.on('error', reject);
        server.listen(port, '127.0.0.1', () => {
            server.removeListener('error', reject);
            resolve({
                onConnected: () => { return connected; }
            });
        });
    });
}
exports.createClientSocketTransport = createClientSocketTransport;
function createServerSocketTransport(port, encoding = 'utf-8') {
    const socket = (0, net_1.createConnection)(port, '127.0.0.1');
    return [
        new SocketMessageReader(socket, encoding),
        new SocketMessageWriter(socket, encoding)
    ];
}
exports.createServerSocketTransport = createServerSocketTransport;
function isReadableStream(value) {
    const candidate = value;
    return candidate.read !== undefined && candidate.addListener !== undefined;
}
function isWritableStream(value) {
    const candidate = value;
    return candidate.write !== undefined && candidate.addListener !== undefined;
}
function createMessageConnection(input, output, logger, options) {
    if (!logger) {
        logger = api_1.NullLogger;
    }
    const reader = isReadableStream(input) ? new StreamMessageReader(input) : input;
    const writer = isWritableStream(output) ? new StreamMessageWriter(output) : output;
    if (api_1.ConnectionStrategy.is(options)) {
        options = { connectionStrategy: options };
    }
    return (0, api_1.createMessageConnection)(reader, writer, logger, options);
}
exports.createMessageConnection = createMessageConnection;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/node/ril.js":
/*!*****************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/node/ril.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
const util_1 = __webpack_require__(/*! util */ "util");
const api_1 = __webpack_require__(/*! ../common/api */ "./node_modules/vscode-jsonrpc/lib/common/api.js");
class MessageBuffer extends api_1.AbstractMessageBuffer {
    constructor(encoding = 'utf-8') {
        super(encoding);
    }
    emptyBuffer() {
        return MessageBuffer.emptyBuffer;
    }
    fromString(value, encoding) {
        return Buffer.from(value, encoding);
    }
    toString(value, encoding) {
        if (value instanceof Buffer) {
            return value.toString(encoding);
        }
        else {
            return new util_1.TextDecoder(encoding).decode(value);
        }
    }
    asNative(buffer, length) {
        if (length === undefined) {
            return buffer instanceof Buffer ? buffer : Buffer.from(buffer);
        }
        else {
            return buffer instanceof Buffer ? buffer.slice(0, length) : Buffer.from(buffer, 0, length);
        }
    }
    allocNative(length) {
        return Buffer.allocUnsafe(length);
    }
}
MessageBuffer.emptyBuffer = Buffer.allocUnsafe(0);
class ReadableStreamWrapper {
    constructor(stream) {
        this.stream = stream;
    }
    onClose(listener) {
        this.stream.on('close', listener);
        return api_1.Disposable.create(() => this.stream.off('close', listener));
    }
    onError(listener) {
        this.stream.on('error', listener);
        return api_1.Disposable.create(() => this.stream.off('error', listener));
    }
    onEnd(listener) {
        this.stream.on('end', listener);
        return api_1.Disposable.create(() => this.stream.off('end', listener));
    }
    onData(listener) {
        this.stream.on('data', listener);
        return api_1.Disposable.create(() => this.stream.off('data', listener));
    }
}
class WritableStreamWrapper {
    constructor(stream) {
        this.stream = stream;
    }
    onClose(listener) {
        this.stream.on('close', listener);
        return api_1.Disposable.create(() => this.stream.off('close', listener));
    }
    onError(listener) {
        this.stream.on('error', listener);
        return api_1.Disposable.create(() => this.stream.off('error', listener));
    }
    onEnd(listener) {
        this.stream.on('end', listener);
        return api_1.Disposable.create(() => this.stream.off('end', listener));
    }
    write(data, encoding) {
        return new Promise((resolve, reject) => {
            const callback = (error) => {
                if (error === undefined || error === null) {
                    resolve();
                }
                else {
                    reject(error);
                }
            };
            if (typeof data === 'string') {
                this.stream.write(data, encoding, callback);
            }
            else {
                this.stream.write(data, callback);
            }
        });
    }
    end() {
        this.stream.end();
    }
}
const _ril = Object.freeze({
    messageBuffer: Object.freeze({
        create: (encoding) => new MessageBuffer(encoding)
    }),
    applicationJson: Object.freeze({
        encoder: Object.freeze({
            name: 'application/json',
            encode: (msg, options) => {
                try {
                    return Promise.resolve(Buffer.from(JSON.stringify(msg, undefined, 0), options.charset));
                }
                catch (err) {
                    return Promise.reject(err);
                }
            }
        }),
        decoder: Object.freeze({
            name: 'application/json',
            decode: (buffer, options) => {
                try {
                    if (buffer instanceof Buffer) {
                        return Promise.resolve(JSON.parse(buffer.toString(options.charset)));
                    }
                    else {
                        return Promise.resolve(JSON.parse(new util_1.TextDecoder(options.charset).decode(buffer)));
                    }
                }
                catch (err) {
                    return Promise.reject(err);
                }
            }
        })
    }),
    stream: Object.freeze({
        asReadableStream: (stream) => new ReadableStreamWrapper(stream),
        asWritableStream: (stream) => new WritableStreamWrapper(stream)
    }),
    console: console,
    timer: Object.freeze({
        setTimeout(callback, ms, ...args) {
            const handle = setTimeout(callback, ms, ...args);
            return { dispose: () => clearTimeout(handle) };
        },
        setImmediate(callback, ...args) {
            const handle = setImmediate(callback, ...args);
            return { dispose: () => clearImmediate(handle) };
        },
        setInterval(callback, ms, ...args) {
            const handle = setInterval(callback, ms, ...args);
            return { dispose: () => clearInterval(handle) };
        }
    })
});
function RIL() {
    return _ril;
}
(function (RIL) {
    function install() {
        api_1.RAL.install(_ril);
    }
    RIL.install = install;
})(RIL || (RIL = {}));
exports["default"] = RIL;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/node.js":
/*!*********************************************!*\
  !*** ./node_modules/vscode-jsonrpc/node.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ----------------------------------------------------------------------------------------- */


module.exports = __webpack_require__(/*! ./lib/node/main */ "./node_modules/vscode-jsonrpc/lib/node/main.js");

/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/api.js":
/*!***********************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/api.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LSPErrorCodes = exports.createProtocolConnection = void 0;
__exportStar(__webpack_require__(/*! vscode-jsonrpc */ "./node_modules/vscode-jsonrpc/lib/node/main.js"), exports);
__exportStar(__webpack_require__(/*! vscode-languageserver-types */ "./node_modules/vscode-languageserver-types/lib/esm/main.js"), exports);
__exportStar(__webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js"), exports);
__exportStar(__webpack_require__(/*! ./protocol */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.js"), exports);
var connection_1 = __webpack_require__(/*! ./connection */ "./node_modules/vscode-languageserver-protocol/lib/common/connection.js");
Object.defineProperty(exports, "createProtocolConnection", ({ enumerable: true, get: function () { return connection_1.createProtocolConnection; } }));
var LSPErrorCodes;
(function (LSPErrorCodes) {
    /**
    * This is the start range of LSP reserved error codes.
    * It doesn't denote a real error code.
    *
    * @since 3.16.0
    */
    LSPErrorCodes.lspReservedErrorRangeStart = -32899;
    /**
     * A request failed but it was syntactically correct, e.g the
     * method name was known and the parameters were valid. The error
     * message should contain human readable information about why
     * the request failed.
     *
     * @since 3.17.0
     */
    LSPErrorCodes.RequestFailed = -32803;
    /**
     * The server cancelled the request. This error code should
     * only be used for requests that explicitly support being
     * server cancellable.
     *
     * @since 3.17.0
     */
    LSPErrorCodes.ServerCancelled = -32802;
    /**
     * The server detected that the content of a document got
     * modified outside normal conditions. A server should
     * NOT send this error code if it detects a content change
     * in it unprocessed messages. The result even computed
     * on an older state might still be useful for the client.
     *
     * If a client decides that a result is not of any use anymore
     * the client should cancel the request.
     */
    LSPErrorCodes.ContentModified = -32801;
    /**
     * The client has canceled a request and a server as detected
     * the cancel.
     */
    LSPErrorCodes.RequestCancelled = -32800;
    /**
    * This is the end range of LSP reserved error codes.
    * It doesn't denote a real error code.
    *
    * @since 3.16.0
    */
    LSPErrorCodes.lspReservedErrorRangeEnd = -32800;
})(LSPErrorCodes = exports.LSPErrorCodes || (exports.LSPErrorCodes = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/connection.js":
/*!******************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/connection.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createProtocolConnection = void 0;
const vscode_jsonrpc_1 = __webpack_require__(/*! vscode-jsonrpc */ "./node_modules/vscode-jsonrpc/lib/node/main.js");
function createProtocolConnection(input, output, logger, options) {
    if (vscode_jsonrpc_1.ConnectionStrategy.is(options)) {
        options = { connectionStrategy: options };
    }
    return (0, vscode_jsonrpc_1.createMessageConnection)(input, output, logger, options);
}
exports.createProtocolConnection = createProtocolConnection;


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js":
/*!****************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/messages.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProtocolNotificationType = exports.ProtocolNotificationType0 = exports.ProtocolRequestType = exports.ProtocolRequestType0 = exports.RegistrationType = exports.MessageDirection = void 0;
const vscode_jsonrpc_1 = __webpack_require__(/*! vscode-jsonrpc */ "./node_modules/vscode-jsonrpc/lib/node/main.js");
var MessageDirection;
(function (MessageDirection) {
    MessageDirection["clientToServer"] = "clientToServer";
    MessageDirection["serverToClient"] = "serverToClient";
    MessageDirection["both"] = "both";
})(MessageDirection = exports.MessageDirection || (exports.MessageDirection = {}));
class RegistrationType {
    constructor(method) {
        this.method = method;
    }
}
exports.RegistrationType = RegistrationType;
class ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {
    constructor(method) {
        super(method);
    }
}
exports.ProtocolRequestType0 = ProtocolRequestType0;
class ProtocolRequestType extends vscode_jsonrpc_1.RequestType {
    constructor(method) {
        super(method, vscode_jsonrpc_1.ParameterStructures.byName);
    }
}
exports.ProtocolRequestType = ProtocolRequestType;
class ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {
    constructor(method) {
        super(method);
    }
}
exports.ProtocolNotificationType0 = ProtocolNotificationType0;
class ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {
    constructor(method) {
        super(method, vscode_jsonrpc_1.ParameterStructures.byName);
    }
}
exports.ProtocolNotificationType = ProtocolNotificationType;


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.callHierarchy.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.callHierarchy.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) TypeFox, Microsoft and others. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.CallHierarchyPrepareRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * A request to result a `CallHierarchyItem` in a document at a given position.
 * Can be used as an input to an incoming or outgoing call hierarchy.
 *
 * @since 3.16.0
 */
var CallHierarchyPrepareRequest;
(function (CallHierarchyPrepareRequest) {
    CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';
    CallHierarchyPrepareRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);
})(CallHierarchyPrepareRequest = exports.CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = {}));
/**
 * A request to resolve the incoming calls for a given `CallHierarchyItem`.
 *
 * @since 3.16.0
 */
var CallHierarchyIncomingCallsRequest;
(function (CallHierarchyIncomingCallsRequest) {
    CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';
    CallHierarchyIncomingCallsRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);
})(CallHierarchyIncomingCallsRequest = exports.CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = {}));
/**
 * A request to resolve the outgoing calls for a given `CallHierarchyItem`.
 *
 * @since 3.16.0
 */
var CallHierarchyOutgoingCallsRequest;
(function (CallHierarchyOutgoingCallsRequest) {
    CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';
    CallHierarchyOutgoingCallsRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);
})(CallHierarchyOutgoingCallsRequest = exports.CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.colorProvider.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.colorProvider.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ColorPresentationRequest = exports.DocumentColorRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * A request to list all color symbols found in a given text document. The request's
 * parameter is of type {@link DocumentColorParams} the
 * response is of type {@link ColorInformation ColorInformation[]} or a Thenable
 * that resolves to such.
 */
var DocumentColorRequest;
(function (DocumentColorRequest) {
    DocumentColorRequest.method = 'textDocument/documentColor';
    DocumentColorRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    DocumentColorRequest.type = new messages_1.ProtocolRequestType(DocumentColorRequest.method);
})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));
/**
 * A request to list all presentation for a color. The request's
 * parameter is of type {@link ColorPresentationParams} the
 * response is of type {@link ColorInformation ColorInformation[]} or a Thenable
 * that resolves to such.
 */
var ColorPresentationRequest;
(function (ColorPresentationRequest) {
    ColorPresentationRequest.method = 'textDocument/colorPresentation';
    ColorPresentationRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    ColorPresentationRequest.type = new messages_1.ProtocolRequestType(ColorPresentationRequest.method);
})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.configuration.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.configuration.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ConfigurationRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
//---- Get Configuration request ----
/**
 * The 'workspace/configuration' request is sent from the server to the client to fetch a certain
 * configuration setting.
 *
 * This pull model replaces the old push model were the client signaled configuration change via an
 * event. If the server still needs to react to configuration changes (since the server caches the
 * result of `workspace/configuration` requests) the server should register for an empty configuration
 * change event and empty the cache if such an event is received.
 */
var ConfigurationRequest;
(function (ConfigurationRequest) {
    ConfigurationRequest.method = 'workspace/configuration';
    ConfigurationRequest.messageDirection = messages_1.MessageDirection.serverToClient;
    ConfigurationRequest.type = new messages_1.ProtocolRequestType(ConfigurationRequest.method);
})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.declaration.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.declaration.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeclarationRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
// @ts-ignore: to avoid inlining LocationLink as dynamic import
let __noDynamicImport;
/**
 * A request to resolve the type definition locations of a symbol at a given text
 * document position. The request's parameter is of type [TextDocumentPositionParams]
 * (#TextDocumentPositionParams) the response is of type {@link Declaration}
 * or a typed array of {@link DeclarationLink} or a Thenable that resolves
 * to such.
 */
var DeclarationRequest;
(function (DeclarationRequest) {
    DeclarationRequest.method = 'textDocument/declaration';
    DeclarationRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    DeclarationRequest.type = new messages_1.ProtocolRequestType(DeclarationRequest.method);
})(DeclarationRequest = exports.DeclarationRequest || (exports.DeclarationRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.diagnostic.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.diagnostic.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = void 0;
const vscode_jsonrpc_1 = __webpack_require__(/*! vscode-jsonrpc */ "./node_modules/vscode-jsonrpc/lib/node/main.js");
const Is = __webpack_require__(/*! ./utils/is */ "./node_modules/vscode-languageserver-protocol/lib/common/utils/is.js");
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * @since 3.17.0
 */
var DiagnosticServerCancellationData;
(function (DiagnosticServerCancellationData) {
    function is(value) {
        const candidate = value;
        return candidate && Is.boolean(candidate.retriggerRequest);
    }
    DiagnosticServerCancellationData.is = is;
})(DiagnosticServerCancellationData = exports.DiagnosticServerCancellationData || (exports.DiagnosticServerCancellationData = {}));
/**
 * The document diagnostic report kinds.
 *
 * @since 3.17.0
 */
var DocumentDiagnosticReportKind;
(function (DocumentDiagnosticReportKind) {
    /**
     * A diagnostic report with a full
     * set of problems.
     */
    DocumentDiagnosticReportKind.Full = 'full';
    /**
     * A report indicating that the last
     * returned report is still accurate.
     */
    DocumentDiagnosticReportKind.Unchanged = 'unchanged';
})(DocumentDiagnosticReportKind = exports.DocumentDiagnosticReportKind || (exports.DocumentDiagnosticReportKind = {}));
/**
 * The document diagnostic request definition.
 *
 * @since 3.17.0
 */
var DocumentDiagnosticRequest;
(function (DocumentDiagnosticRequest) {
    DocumentDiagnosticRequest.method = 'textDocument/diagnostic';
    DocumentDiagnosticRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    DocumentDiagnosticRequest.type = new messages_1.ProtocolRequestType(DocumentDiagnosticRequest.method);
    DocumentDiagnosticRequest.partialResult = new vscode_jsonrpc_1.ProgressType();
})(DocumentDiagnosticRequest = exports.DocumentDiagnosticRequest || (exports.DocumentDiagnosticRequest = {}));
/**
 * The workspace diagnostic request definition.
 *
 * @since 3.17.0
 */
var WorkspaceDiagnosticRequest;
(function (WorkspaceDiagnosticRequest) {
    WorkspaceDiagnosticRequest.method = 'workspace/diagnostic';
    WorkspaceDiagnosticRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    WorkspaceDiagnosticRequest.type = new messages_1.ProtocolRequestType(WorkspaceDiagnosticRequest.method);
    WorkspaceDiagnosticRequest.partialResult = new vscode_jsonrpc_1.ProgressType();
})(WorkspaceDiagnosticRequest = exports.WorkspaceDiagnosticRequest || (exports.WorkspaceDiagnosticRequest = {}));
/**
 * The diagnostic refresh request definition.
 *
 * @since 3.17.0
 */
var DiagnosticRefreshRequest;
(function (DiagnosticRefreshRequest) {
    DiagnosticRefreshRequest.method = `workspace/diagnostic/refresh`;
    DiagnosticRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;
    DiagnosticRefreshRequest.type = new messages_1.ProtocolRequestType0(DiagnosticRefreshRequest.method);
})(DiagnosticRefreshRequest = exports.DiagnosticRefreshRequest || (exports.DiagnosticRefreshRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.fileOperations.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.fileOperations.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.DidRenameFilesNotification = exports.WillRenameFilesRequest = exports.DidCreateFilesNotification = exports.WillCreateFilesRequest = exports.FileOperationPatternKind = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * A pattern kind describing if a glob pattern matches a file a folder or
 * both.
 *
 * @since 3.16.0
 */
var FileOperationPatternKind;
(function (FileOperationPatternKind) {
    /**
     * The pattern matches a file only.
     */
    FileOperationPatternKind.file = 'file';
    /**
     * The pattern matches a folder only.
     */
    FileOperationPatternKind.folder = 'folder';
})(FileOperationPatternKind = exports.FileOperationPatternKind || (exports.FileOperationPatternKind = {}));
/**
 * The will create files request is sent from the client to the server before files are actually
 * created as long as the creation is triggered from within the client.
 *
 * The request can return a `WorkspaceEdit` which will be applied to workspace before the
 * files are created. Hence the `WorkspaceEdit` can not manipulate the content of the file
 * to be created.
 *
 * @since 3.16.0
 */
var WillCreateFilesRequest;
(function (WillCreateFilesRequest) {
    WillCreateFilesRequest.method = 'workspace/willCreateFiles';
    WillCreateFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    WillCreateFilesRequest.type = new messages_1.ProtocolRequestType(WillCreateFilesRequest.method);
})(WillCreateFilesRequest = exports.WillCreateFilesRequest || (exports.WillCreateFilesRequest = {}));
/**
 * The did create files notification is sent from the client to the server when
 * files were created from within the client.
 *
 * @since 3.16.0
 */
var DidCreateFilesNotification;
(function (DidCreateFilesNotification) {
    DidCreateFilesNotification.method = 'workspace/didCreateFiles';
    DidCreateFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidCreateFilesNotification.type = new messages_1.ProtocolNotificationType(DidCreateFilesNotification.method);
})(DidCreateFilesNotification = exports.DidCreateFilesNotification || (exports.DidCreateFilesNotification = {}));
/**
 * The will rename files request is sent from the client to the server before files are actually
 * renamed as long as the rename is triggered from within the client.
 *
 * @since 3.16.0
 */
var WillRenameFilesRequest;
(function (WillRenameFilesRequest) {
    WillRenameFilesRequest.method = 'workspace/willRenameFiles';
    WillRenameFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    WillRenameFilesRequest.type = new messages_1.ProtocolRequestType(WillRenameFilesRequest.method);
})(WillRenameFilesRequest = exports.WillRenameFilesRequest || (exports.WillRenameFilesRequest = {}));
/**
 * The did rename files notification is sent from the client to the server when
 * files were renamed from within the client.
 *
 * @since 3.16.0
 */
var DidRenameFilesNotification;
(function (DidRenameFilesNotification) {
    DidRenameFilesNotification.method = 'workspace/didRenameFiles';
    DidRenameFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidRenameFilesNotification.type = new messages_1.ProtocolNotificationType(DidRenameFilesNotification.method);
})(DidRenameFilesNotification = exports.DidRenameFilesNotification || (exports.DidRenameFilesNotification = {}));
/**
 * The will delete files request is sent from the client to the server before files are actually
 * deleted as long as the deletion is triggered from within the client.
 *
 * @since 3.16.0
 */
var DidDeleteFilesNotification;
(function (DidDeleteFilesNotification) {
    DidDeleteFilesNotification.method = 'workspace/didDeleteFiles';
    DidDeleteFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidDeleteFilesNotification.type = new messages_1.ProtocolNotificationType(DidDeleteFilesNotification.method);
})(DidDeleteFilesNotification = exports.DidDeleteFilesNotification || (exports.DidDeleteFilesNotification = {}));
/**
 * The did delete files notification is sent from the client to the server when
 * files were deleted from within the client.
 *
 * @since 3.16.0
 */
var WillDeleteFilesRequest;
(function (WillDeleteFilesRequest) {
    WillDeleteFilesRequest.method = 'workspace/willDeleteFiles';
    WillDeleteFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    WillDeleteFilesRequest.type = new messages_1.ProtocolRequestType(WillDeleteFilesRequest.method);
})(WillDeleteFilesRequest = exports.WillDeleteFilesRequest || (exports.WillDeleteFilesRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.foldingRange.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.foldingRange.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FoldingRangeRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * A request to provide folding ranges in a document. The request's
 * parameter is of type {@link FoldingRangeParams}, the
 * response is of type {@link FoldingRangeList} or a Thenable
 * that resolves to such.
 */
var FoldingRangeRequest;
(function (FoldingRangeRequest) {
    FoldingRangeRequest.method = 'textDocument/foldingRange';
    FoldingRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    FoldingRangeRequest.type = new messages_1.ProtocolRequestType(FoldingRangeRequest.method);
})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.implementation.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.implementation.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ImplementationRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
// @ts-ignore: to avoid inlining LocationLink as dynamic import
let __noDynamicImport;
/**
 * A request to resolve the implementation locations of a symbol at a given text
 * document position. The request's parameter is of type [TextDocumentPositionParams]
 * (#TextDocumentPositionParams) the response is of type {@link Definition} or a
 * Thenable that resolves to such.
 */
var ImplementationRequest;
(function (ImplementationRequest) {
    ImplementationRequest.method = 'textDocument/implementation';
    ImplementationRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    ImplementationRequest.type = new messages_1.ProtocolRequestType(ImplementationRequest.method);
})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.inlayHint.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.inlayHint.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.InlayHintRefreshRequest = exports.InlayHintResolveRequest = exports.InlayHintRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * A request to provide inlay hints in a document. The request's parameter is of
 * type {@link InlayHintsParams}, the response is of type
 * {@link InlayHint InlayHint[]} or a Thenable that resolves to such.
 *
 * @since 3.17.0
 */
var InlayHintRequest;
(function (InlayHintRequest) {
    InlayHintRequest.method = 'textDocument/inlayHint';
    InlayHintRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    InlayHintRequest.type = new messages_1.ProtocolRequestType(InlayHintRequest.method);
})(InlayHintRequest = exports.InlayHintRequest || (exports.InlayHintRequest = {}));
/**
 * A request to resolve additional properties for an inlay hint.
 * The request's parameter is of type {@link InlayHint}, the response is
 * of type {@link InlayHint} or a Thenable that resolves to such.
 *
 * @since 3.17.0
 */
var InlayHintResolveRequest;
(function (InlayHintResolveRequest) {
    InlayHintResolveRequest.method = 'inlayHint/resolve';
    InlayHintResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    InlayHintResolveRequest.type = new messages_1.ProtocolRequestType(InlayHintResolveRequest.method);
})(InlayHintResolveRequest = exports.InlayHintResolveRequest || (exports.InlayHintResolveRequest = {}));
/**
 * @since 3.17.0
 */
var InlayHintRefreshRequest;
(function (InlayHintRefreshRequest) {
    InlayHintRefreshRequest.method = `workspace/inlayHint/refresh`;
    InlayHintRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;
    InlayHintRefreshRequest.type = new messages_1.ProtocolRequestType0(InlayHintRefreshRequest.method);
})(InlayHintRefreshRequest = exports.InlayHintRefreshRequest || (exports.InlayHintRefreshRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.inlineValue.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.inlineValue.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.InlineValueRefreshRequest = exports.InlineValueRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * A request to provide inline values in a document. The request's parameter is of
 * type {@link InlineValueParams}, the response is of type
 * {@link InlineValue InlineValue[]} or a Thenable that resolves to such.
 *
 * @since 3.17.0
 */
var InlineValueRequest;
(function (InlineValueRequest) {
    InlineValueRequest.method = 'textDocument/inlineValue';
    InlineValueRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    InlineValueRequest.type = new messages_1.ProtocolRequestType(InlineValueRequest.method);
})(InlineValueRequest = exports.InlineValueRequest || (exports.InlineValueRequest = {}));
/**
 * @since 3.17.0
 */
var InlineValueRefreshRequest;
(function (InlineValueRefreshRequest) {
    InlineValueRefreshRequest.method = `workspace/inlineValue/refresh`;
    InlineValueRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;
    InlineValueRefreshRequest.type = new messages_1.ProtocolRequestType0(InlineValueRefreshRequest.method);
})(InlineValueRefreshRequest = exports.InlineValueRefreshRequest || (exports.InlineValueRefreshRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.js":
/*!****************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WorkspaceSymbolRequest = exports.CodeActionResolveRequest = exports.CodeActionRequest = exports.DocumentSymbolRequest = exports.DocumentHighlightRequest = exports.ReferencesRequest = exports.DefinitionRequest = exports.SignatureHelpRequest = exports.SignatureHelpTriggerKind = exports.HoverRequest = exports.CompletionResolveRequest = exports.CompletionRequest = exports.CompletionTriggerKind = exports.PublishDiagnosticsNotification = exports.WatchKind = exports.RelativePattern = exports.FileChangeType = exports.DidChangeWatchedFilesNotification = exports.WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentNotification = exports.TextDocumentSaveReason = exports.DidSaveTextDocumentNotification = exports.DidCloseTextDocumentNotification = exports.DidChangeTextDocumentNotification = exports.TextDocumentContentChangeEvent = exports.DidOpenTextDocumentNotification = exports.TextDocumentSyncKind = exports.TelemetryEventNotification = exports.LogMessageNotification = exports.ShowMessageRequest = exports.ShowMessageNotification = exports.MessageType = exports.DidChangeConfigurationNotification = exports.ExitNotification = exports.ShutdownRequest = exports.InitializedNotification = exports.InitializeErrorCodes = exports.InitializeRequest = exports.WorkDoneProgressOptions = exports.TextDocumentRegistrationOptions = exports.StaticRegistrationOptions = exports.PositionEncodingKind = exports.FailureHandlingKind = exports.ResourceOperationKind = exports.UnregistrationRequest = exports.RegistrationRequest = exports.DocumentSelector = exports.NotebookCellTextDocumentFilter = exports.NotebookDocumentFilter = exports.TextDocumentFilter = void 0;
exports.TypeHierarchySubtypesRequest = exports.TypeHierarchyPrepareRequest = exports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.WillRenameFilesRequest = exports.DidRenameFilesNotification = exports.WillCreateFilesRequest = exports.DidCreateFilesNotification = exports.FileOperationPatternKind = exports.LinkedEditingRangeRequest = exports.ShowDocumentRequest = exports.SemanticTokensRegistrationType = exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.TokenFormat = exports.CallHierarchyPrepareRequest = exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = exports.SelectionRangeRequest = exports.DeclarationRequest = exports.FoldingRangeRequest = exports.ColorPresentationRequest = exports.DocumentColorRequest = exports.ConfigurationRequest = exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = exports.TypeDefinitionRequest = exports.ImplementationRequest = exports.ApplyWorkspaceEditRequest = exports.ExecuteCommandRequest = exports.PrepareRenameRequest = exports.RenameRequest = exports.PrepareSupportDefaultBehavior = exports.DocumentOnTypeFormattingRequest = exports.DocumentRangeFormattingRequest = exports.DocumentFormattingRequest = exports.DocumentLinkResolveRequest = exports.DocumentLinkRequest = exports.CodeLensRefreshRequest = exports.CodeLensResolveRequest = exports.CodeLensRequest = exports.WorkspaceSymbolResolveRequest = void 0;
exports.DidCloseNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification = exports.NotebookCellArrayChange = exports.DidOpenNotebookDocumentNotification = exports.NotebookDocumentSyncRegistrationType = exports.NotebookDocument = exports.NotebookCell = exports.ExecutionSummary = exports.NotebookCellKind = exports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = exports.InlayHintRefreshRequest = exports.InlayHintResolveRequest = exports.InlayHintRequest = exports.InlineValueRefreshRequest = exports.InlineValueRequest = exports.TypeHierarchySupertypesRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
const vscode_languageserver_types_1 = __webpack_require__(/*! vscode-languageserver-types */ "./node_modules/vscode-languageserver-types/lib/esm/main.js");
const Is = __webpack_require__(/*! ./utils/is */ "./node_modules/vscode-languageserver-protocol/lib/common/utils/is.js");
const protocol_implementation_1 = __webpack_require__(/*! ./protocol.implementation */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.implementation.js");
Object.defineProperty(exports, "ImplementationRequest", ({ enumerable: true, get: function () { return protocol_implementation_1.ImplementationRequest; } }));
const protocol_typeDefinition_1 = __webpack_require__(/*! ./protocol.typeDefinition */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.typeDefinition.js");
Object.defineProperty(exports, "TypeDefinitionRequest", ({ enumerable: true, get: function () { return protocol_typeDefinition_1.TypeDefinitionRequest; } }));
const protocol_workspaceFolder_1 = __webpack_require__(/*! ./protocol.workspaceFolder */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.workspaceFolder.js");
Object.defineProperty(exports, "WorkspaceFoldersRequest", ({ enumerable: true, get: function () { return protocol_workspaceFolder_1.WorkspaceFoldersRequest; } }));
Object.defineProperty(exports, "DidChangeWorkspaceFoldersNotification", ({ enumerable: true, get: function () { return protocol_workspaceFolder_1.DidChangeWorkspaceFoldersNotification; } }));
const protocol_configuration_1 = __webpack_require__(/*! ./protocol.configuration */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.configuration.js");
Object.defineProperty(exports, "ConfigurationRequest", ({ enumerable: true, get: function () { return protocol_configuration_1.ConfigurationRequest; } }));
const protocol_colorProvider_1 = __webpack_require__(/*! ./protocol.colorProvider */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.colorProvider.js");
Object.defineProperty(exports, "DocumentColorRequest", ({ enumerable: true, get: function () { return protocol_colorProvider_1.DocumentColorRequest; } }));
Object.defineProperty(exports, "ColorPresentationRequest", ({ enumerable: true, get: function () { return protocol_colorProvider_1.ColorPresentationRequest; } }));
const protocol_foldingRange_1 = __webpack_require__(/*! ./protocol.foldingRange */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.foldingRange.js");
Object.defineProperty(exports, "FoldingRangeRequest", ({ enumerable: true, get: function () { return protocol_foldingRange_1.FoldingRangeRequest; } }));
const protocol_declaration_1 = __webpack_require__(/*! ./protocol.declaration */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.declaration.js");
Object.defineProperty(exports, "DeclarationRequest", ({ enumerable: true, get: function () { return protocol_declaration_1.DeclarationRequest; } }));
const protocol_selectionRange_1 = __webpack_require__(/*! ./protocol.selectionRange */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.selectionRange.js");
Object.defineProperty(exports, "SelectionRangeRequest", ({ enumerable: true, get: function () { return protocol_selectionRange_1.SelectionRangeRequest; } }));
const protocol_progress_1 = __webpack_require__(/*! ./protocol.progress */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.progress.js");
Object.defineProperty(exports, "WorkDoneProgress", ({ enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgress; } }));
Object.defineProperty(exports, "WorkDoneProgressCreateRequest", ({ enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCreateRequest; } }));
Object.defineProperty(exports, "WorkDoneProgressCancelNotification", ({ enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCancelNotification; } }));
const protocol_callHierarchy_1 = __webpack_require__(/*! ./protocol.callHierarchy */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.callHierarchy.js");
Object.defineProperty(exports, "CallHierarchyIncomingCallsRequest", ({ enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyIncomingCallsRequest; } }));
Object.defineProperty(exports, "CallHierarchyOutgoingCallsRequest", ({ enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyOutgoingCallsRequest; } }));
Object.defineProperty(exports, "CallHierarchyPrepareRequest", ({ enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyPrepareRequest; } }));
const protocol_semanticTokens_1 = __webpack_require__(/*! ./protocol.semanticTokens */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.semanticTokens.js");
Object.defineProperty(exports, "TokenFormat", ({ enumerable: true, get: function () { return protocol_semanticTokens_1.TokenFormat; } }));
Object.defineProperty(exports, "SemanticTokensRequest", ({ enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRequest; } }));
Object.defineProperty(exports, "SemanticTokensDeltaRequest", ({ enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensDeltaRequest; } }));
Object.defineProperty(exports, "SemanticTokensRangeRequest", ({ enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRangeRequest; } }));
Object.defineProperty(exports, "SemanticTokensRefreshRequest", ({ enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRefreshRequest; } }));
Object.defineProperty(exports, "SemanticTokensRegistrationType", ({ enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRegistrationType; } }));
const protocol_showDocument_1 = __webpack_require__(/*! ./protocol.showDocument */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.showDocument.js");
Object.defineProperty(exports, "ShowDocumentRequest", ({ enumerable: true, get: function () { return protocol_showDocument_1.ShowDocumentRequest; } }));
const protocol_linkedEditingRange_1 = __webpack_require__(/*! ./protocol.linkedEditingRange */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.linkedEditingRange.js");
Object.defineProperty(exports, "LinkedEditingRangeRequest", ({ enumerable: true, get: function () { return protocol_linkedEditingRange_1.LinkedEditingRangeRequest; } }));
const protocol_fileOperations_1 = __webpack_require__(/*! ./protocol.fileOperations */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.fileOperations.js");
Object.defineProperty(exports, "FileOperationPatternKind", ({ enumerable: true, get: function () { return protocol_fileOperations_1.FileOperationPatternKind; } }));
Object.defineProperty(exports, "DidCreateFilesNotification", ({ enumerable: true, get: function () { return protocol_fileOperations_1.DidCreateFilesNotification; } }));
Object.defineProperty(exports, "WillCreateFilesRequest", ({ enumerable: true, get: function () { return protocol_fileOperations_1.WillCreateFilesRequest; } }));
Object.defineProperty(exports, "DidRenameFilesNotification", ({ enumerable: true, get: function () { return protocol_fileOperations_1.DidRenameFilesNotification; } }));
Object.defineProperty(exports, "WillRenameFilesRequest", ({ enumerable: true, get: function () { return protocol_fileOperations_1.WillRenameFilesRequest; } }));
Object.defineProperty(exports, "DidDeleteFilesNotification", ({ enumerable: true, get: function () { return protocol_fileOperations_1.DidDeleteFilesNotification; } }));
Object.defineProperty(exports, "WillDeleteFilesRequest", ({ enumerable: true, get: function () { return protocol_fileOperations_1.WillDeleteFilesRequest; } }));
const protocol_moniker_1 = __webpack_require__(/*! ./protocol.moniker */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.moniker.js");
Object.defineProperty(exports, "UniquenessLevel", ({ enumerable: true, get: function () { return protocol_moniker_1.UniquenessLevel; } }));
Object.defineProperty(exports, "MonikerKind", ({ enumerable: true, get: function () { return protocol_moniker_1.MonikerKind; } }));
Object.defineProperty(exports, "MonikerRequest", ({ enumerable: true, get: function () { return protocol_moniker_1.MonikerRequest; } }));
const protocol_typeHierarchy_1 = __webpack_require__(/*! ./protocol.typeHierarchy */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.typeHierarchy.js");
Object.defineProperty(exports, "TypeHierarchyPrepareRequest", ({ enumerable: true, get: function () { return protocol_typeHierarchy_1.TypeHierarchyPrepareRequest; } }));
Object.defineProperty(exports, "TypeHierarchySubtypesRequest", ({ enumerable: true, get: function () { return protocol_typeHierarchy_1.TypeHierarchySubtypesRequest; } }));
Object.defineProperty(exports, "TypeHierarchySupertypesRequest", ({ enumerable: true, get: function () { return protocol_typeHierarchy_1.TypeHierarchySupertypesRequest; } }));
const protocol_inlineValue_1 = __webpack_require__(/*! ./protocol.inlineValue */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.inlineValue.js");
Object.defineProperty(exports, "InlineValueRequest", ({ enumerable: true, get: function () { return protocol_inlineValue_1.InlineValueRequest; } }));
Object.defineProperty(exports, "InlineValueRefreshRequest", ({ enumerable: true, get: function () { return protocol_inlineValue_1.InlineValueRefreshRequest; } }));
const protocol_inlayHint_1 = __webpack_require__(/*! ./protocol.inlayHint */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.inlayHint.js");
Object.defineProperty(exports, "InlayHintRequest", ({ enumerable: true, get: function () { return protocol_inlayHint_1.InlayHintRequest; } }));
Object.defineProperty(exports, "InlayHintResolveRequest", ({ enumerable: true, get: function () { return protocol_inlayHint_1.InlayHintResolveRequest; } }));
Object.defineProperty(exports, "InlayHintRefreshRequest", ({ enumerable: true, get: function () { return protocol_inlayHint_1.InlayHintRefreshRequest; } }));
const protocol_diagnostic_1 = __webpack_require__(/*! ./protocol.diagnostic */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.diagnostic.js");
Object.defineProperty(exports, "DiagnosticServerCancellationData", ({ enumerable: true, get: function () { return protocol_diagnostic_1.DiagnosticServerCancellationData; } }));
Object.defineProperty(exports, "DocumentDiagnosticReportKind", ({ enumerable: true, get: function () { return protocol_diagnostic_1.DocumentDiagnosticReportKind; } }));
Object.defineProperty(exports, "DocumentDiagnosticRequest", ({ enumerable: true, get: function () { return protocol_diagnostic_1.DocumentDiagnosticRequest; } }));
Object.defineProperty(exports, "WorkspaceDiagnosticRequest", ({ enumerable: true, get: function () { return protocol_diagnostic_1.WorkspaceDiagnosticRequest; } }));
Object.defineProperty(exports, "DiagnosticRefreshRequest", ({ enumerable: true, get: function () { return protocol_diagnostic_1.DiagnosticRefreshRequest; } }));
const protocol_notebook_1 = __webpack_require__(/*! ./protocol.notebook */ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.notebook.js");
Object.defineProperty(exports, "NotebookCellKind", ({ enumerable: true, get: function () { return protocol_notebook_1.NotebookCellKind; } }));
Object.defineProperty(exports, "ExecutionSummary", ({ enumerable: true, get: function () { return protocol_notebook_1.ExecutionSummary; } }));
Object.defineProperty(exports, "NotebookCell", ({ enumerable: true, get: function () { return protocol_notebook_1.NotebookCell; } }));
Object.defineProperty(exports, "NotebookDocument", ({ enumerable: true, get: function () { return protocol_notebook_1.NotebookDocument; } }));
Object.defineProperty(exports, "NotebookDocumentSyncRegistrationType", ({ enumerable: true, get: function () { return protocol_notebook_1.NotebookDocumentSyncRegistrationType; } }));
Object.defineProperty(exports, "DidOpenNotebookDocumentNotification", ({ enumerable: true, get: function () { return protocol_notebook_1.DidOpenNotebookDocumentNotification; } }));
Object.defineProperty(exports, "NotebookCellArrayChange", ({ enumerable: true, get: function () { return protocol_notebook_1.NotebookCellArrayChange; } }));
Object.defineProperty(exports, "DidChangeNotebookDocumentNotification", ({ enumerable: true, get: function () { return protocol_notebook_1.DidChangeNotebookDocumentNotification; } }));
Object.defineProperty(exports, "DidSaveNotebookDocumentNotification", ({ enumerable: true, get: function () { return protocol_notebook_1.DidSaveNotebookDocumentNotification; } }));
Object.defineProperty(exports, "DidCloseNotebookDocumentNotification", ({ enumerable: true, get: function () { return protocol_notebook_1.DidCloseNotebookDocumentNotification; } }));
// @ts-ignore: to avoid inlining LocationLink as dynamic import
let __noDynamicImport;
/**
 * The TextDocumentFilter namespace provides helper functions to work with
 * {@link TextDocumentFilter} literals.
 *
 * @since 3.17.0
 */
var TextDocumentFilter;
(function (TextDocumentFilter) {
    function is(value) {
        const candidate = value;
        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);
    }
    TextDocumentFilter.is = is;
})(TextDocumentFilter = exports.TextDocumentFilter || (exports.TextDocumentFilter = {}));
/**
 * The NotebookDocumentFilter namespace provides helper functions to work with
 * {@link NotebookDocumentFilter} literals.
 *
 * @since 3.17.0
 */
var NotebookDocumentFilter;
(function (NotebookDocumentFilter) {
    function is(value) {
        const candidate = value;
        return Is.objectLiteral(candidate) && (Is.string(candidate.notebookType) || Is.string(candidate.scheme) || Is.string(candidate.pattern));
    }
    NotebookDocumentFilter.is = is;
})(NotebookDocumentFilter = exports.NotebookDocumentFilter || (exports.NotebookDocumentFilter = {}));
/**
 * The NotebookCellTextDocumentFilter namespace provides helper functions to work with
 * {@link NotebookCellTextDocumentFilter} literals.
 *
 * @since 3.17.0
 */
var NotebookCellTextDocumentFilter;
(function (NotebookCellTextDocumentFilter) {
    function is(value) {
        const candidate = value;
        return Is.objectLiteral(candidate)
            && (Is.string(candidate.notebook) || NotebookDocumentFilter.is(candidate.notebook))
            && (candidate.language === undefined || Is.string(candidate.language));
    }
    NotebookCellTextDocumentFilter.is = is;
})(NotebookCellTextDocumentFilter = exports.NotebookCellTextDocumentFilter || (exports.NotebookCellTextDocumentFilter = {}));
/**
 * The DocumentSelector namespace provides helper functions to work with
 * {@link DocumentSelector}s.
 */
var DocumentSelector;
(function (DocumentSelector) {
    function is(value) {
        if (!Array.isArray(value)) {
            return false;
        }
        for (let elem of value) {
            if (!Is.string(elem) && !TextDocumentFilter.is(elem) && !NotebookCellTextDocumentFilter.is(elem)) {
                return false;
            }
        }
        return true;
    }
    DocumentSelector.is = is;
})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));
/**
 * The `client/registerCapability` request is sent from the server to the client to register a new capability
 * handler on the client side.
 */
var RegistrationRequest;
(function (RegistrationRequest) {
    RegistrationRequest.method = 'client/registerCapability';
    RegistrationRequest.messageDirection = messages_1.MessageDirection.serverToClient;
    RegistrationRequest.type = new messages_1.ProtocolRequestType(RegistrationRequest.method);
})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));
/**
 * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability
 * handler on the client side.
 */
var UnregistrationRequest;
(function (UnregistrationRequest) {
    UnregistrationRequest.method = 'client/unregisterCapability';
    UnregistrationRequest.messageDirection = messages_1.MessageDirection.serverToClient;
    UnregistrationRequest.type = new messages_1.ProtocolRequestType(UnregistrationRequest.method);
})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));
var ResourceOperationKind;
(function (ResourceOperationKind) {
    /**
     * Supports creating new files and folders.
     */
    ResourceOperationKind.Create = 'create';
    /**
     * Supports renaming existing files and folders.
     */
    ResourceOperationKind.Rename = 'rename';
    /**
     * Supports deleting existing files and folders.
     */
    ResourceOperationKind.Delete = 'delete';
})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));
var FailureHandlingKind;
(function (FailureHandlingKind) {
    /**
     * Applying the workspace change is simply aborted if one of the changes provided
     * fails. All operations executed before the failing operation stay executed.
     */
    FailureHandlingKind.Abort = 'abort';
    /**
     * All operations are executed transactional. That means they either all
     * succeed or no changes at all are applied to the workspace.
     */
    FailureHandlingKind.Transactional = 'transactional';
    /**
     * If the workspace edit contains only textual file changes they are executed transactional.
     * If resource changes (create, rename or delete file) are part of the change the failure
     * handling strategy is abort.
     */
    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';
    /**
     * The client tries to undo the operations already executed. But there is no
     * guarantee that this is succeeding.
     */
    FailureHandlingKind.Undo = 'undo';
})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));
/**
 * A set of predefined position encoding kinds.
 *
 * @since 3.17.0
 */
var PositionEncodingKind;
(function (PositionEncodingKind) {
    /**
     * Character offsets count UTF-8 code units (e.g. bytes).
     */
    PositionEncodingKind.UTF8 = 'utf-8';
    /**
     * Character offsets count UTF-16 code units.
     *
     * This is the default and must always be supported
     * by servers
     */
    PositionEncodingKind.UTF16 = 'utf-16';
    /**
     * Character offsets count UTF-32 code units.
     *
     * Implementation note: these are the same as Unicode codepoints,
     * so this `PositionEncodingKind` may also be used for an
     * encoding-agnostic representation of character offsets.
     */
    PositionEncodingKind.UTF32 = 'utf-32';
})(PositionEncodingKind = exports.PositionEncodingKind || (exports.PositionEncodingKind = {}));
/**
 * The StaticRegistrationOptions namespace provides helper functions to work with
 * {@link StaticRegistrationOptions} literals.
 */
var StaticRegistrationOptions;
(function (StaticRegistrationOptions) {
    function hasId(value) {
        const candidate = value;
        return candidate && Is.string(candidate.id) && candidate.id.length > 0;
    }
    StaticRegistrationOptions.hasId = hasId;
})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));
/**
 * The TextDocumentRegistrationOptions namespace provides helper functions to work with
 * {@link TextDocumentRegistrationOptions} literals.
 */
var TextDocumentRegistrationOptions;
(function (TextDocumentRegistrationOptions) {
    function is(value) {
        const candidate = value;
        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));
    }
    TextDocumentRegistrationOptions.is = is;
})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));
/**
 * The WorkDoneProgressOptions namespace provides helper functions to work with
 * {@link WorkDoneProgressOptions} literals.
 */
var WorkDoneProgressOptions;
(function (WorkDoneProgressOptions) {
    function is(value) {
        const candidate = value;
        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));
    }
    WorkDoneProgressOptions.is = is;
    function hasWorkDoneProgress(value) {
        const candidate = value;
        return candidate && Is.boolean(candidate.workDoneProgress);
    }
    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;
})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));
/**
 * The initialize request is sent from the client to the server.
 * It is sent once as the request after starting up the server.
 * The requests parameter is of type {@link InitializeParams}
 * the response if of type {@link InitializeResult} of a Thenable that
 * resolves to such.
 */
var InitializeRequest;
(function (InitializeRequest) {
    InitializeRequest.method = 'initialize';
    InitializeRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    InitializeRequest.type = new messages_1.ProtocolRequestType(InitializeRequest.method);
})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));
/**
 * Known error codes for an `InitializeErrorCodes`;
 */
var InitializeErrorCodes;
(function (InitializeErrorCodes) {
    /**
     * If the protocol version provided by the client can't be handled by the server.
     *
     * @deprecated This initialize error got replaced by client capabilities. There is
     * no version handshake in version 3.0x
     */
    InitializeErrorCodes.unknownProtocolVersion = 1;
})(InitializeErrorCodes = exports.InitializeErrorCodes || (exports.InitializeErrorCodes = {}));
/**
 * The initialized notification is sent from the client to the
 * server after the client is fully initialized and the server
 * is allowed to send requests from the server to the client.
 */
var InitializedNotification;
(function (InitializedNotification) {
    InitializedNotification.method = 'initialized';
    InitializedNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    InitializedNotification.type = new messages_1.ProtocolNotificationType(InitializedNotification.method);
})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));
//---- Shutdown Method ----
/**
 * A shutdown request is sent from the client to the server.
 * It is sent once when the client decides to shutdown the
 * server. The only notification that is sent after a shutdown request
 * is the exit event.
 */
var ShutdownRequest;
(function (ShutdownRequest) {
    ShutdownRequest.method = 'shutdown';
    ShutdownRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    ShutdownRequest.type = new messages_1.ProtocolRequestType0(ShutdownRequest.method);
})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));
//---- Exit Notification ----
/**
 * The exit event is sent from the client to the server to
 * ask the server to exit its process.
 */
var ExitNotification;
(function (ExitNotification) {
    ExitNotification.method = 'exit';
    ExitNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    ExitNotification.type = new messages_1.ProtocolNotificationType0(ExitNotification.method);
})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));
/**
 * The configuration change notification is sent from the client to the server
 * when the client's configuration has changed. The notification contains
 * the changed configuration as defined by the language client.
 */
var DidChangeConfigurationNotification;
(function (DidChangeConfigurationNotification) {
    DidChangeConfigurationNotification.method = 'workspace/didChangeConfiguration';
    DidChangeConfigurationNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType(DidChangeConfigurationNotification.method);
})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));
//---- Message show and log notifications ----
/**
 * The message type
 */
var MessageType;
(function (MessageType) {
    /**
     * An error message.
     */
    MessageType.Error = 1;
    /**
     * A warning message.
     */
    MessageType.Warning = 2;
    /**
     * An information message.
     */
    MessageType.Info = 3;
    /**
     * A log message.
     */
    MessageType.Log = 4;
})(MessageType = exports.MessageType || (exports.MessageType = {}));
/**
 * The show message notification is sent from a server to a client to ask
 * the client to display a particular message in the user interface.
 */
var ShowMessageNotification;
(function (ShowMessageNotification) {
    ShowMessageNotification.method = 'window/showMessage';
    ShowMessageNotification.messageDirection = messages_1.MessageDirection.serverToClient;
    ShowMessageNotification.type = new messages_1.ProtocolNotificationType(ShowMessageNotification.method);
})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));
/**
 * The show message request is sent from the server to the client to show a message
 * and a set of options actions to the user.
 */
var ShowMessageRequest;
(function (ShowMessageRequest) {
    ShowMessageRequest.method = 'window/showMessageRequest';
    ShowMessageRequest.messageDirection = messages_1.MessageDirection.serverToClient;
    ShowMessageRequest.type = new messages_1.ProtocolRequestType(ShowMessageRequest.method);
})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));
/**
 * The log message notification is sent from the server to the client to ask
 * the client to log a particular message.
 */
var LogMessageNotification;
(function (LogMessageNotification) {
    LogMessageNotification.method = 'window/logMessage';
    LogMessageNotification.messageDirection = messages_1.MessageDirection.serverToClient;
    LogMessageNotification.type = new messages_1.ProtocolNotificationType(LogMessageNotification.method);
})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));
//---- Telemetry notification
/**
 * The telemetry event notification is sent from the server to the client to ask
 * the client to log telemetry data.
 */
var TelemetryEventNotification;
(function (TelemetryEventNotification) {
    TelemetryEventNotification.method = 'telemetry/event';
    TelemetryEventNotification.messageDirection = messages_1.MessageDirection.serverToClient;
    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType(TelemetryEventNotification.method);
})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));
/**
 * Defines how the host (editor) should sync
 * document changes to the language server.
 */
var TextDocumentSyncKind;
(function (TextDocumentSyncKind) {
    /**
     * Documents should not be synced at all.
     */
    TextDocumentSyncKind.None = 0;
    /**
     * Documents are synced by always sending the full content
     * of the document.
     */
    TextDocumentSyncKind.Full = 1;
    /**
     * Documents are synced by sending the full content on open.
     * After that only incremental updates to the document are
     * send.
     */
    TextDocumentSyncKind.Incremental = 2;
})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));
/**
 * The document open notification is sent from the client to the server to signal
 * newly opened text documents. The document's truth is now managed by the client
 * and the server must not try to read the document's truth using the document's
 * uri. Open in this sense means it is managed by the client. It doesn't necessarily
 * mean that its content is presented in an editor. An open notification must not
 * be sent more than once without a corresponding close notification send before.
 * This means open and close notification must be balanced and the max open count
 * is one.
 */
var DidOpenTextDocumentNotification;
(function (DidOpenTextDocumentNotification) {
    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';
    DidOpenTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);
})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));
var TextDocumentContentChangeEvent;
(function (TextDocumentContentChangeEvent) {
    /**
     * Checks whether the information describes a delta event.
     */
    function isIncremental(event) {
        let candidate = event;
        return candidate !== undefined && candidate !== null &&
            typeof candidate.text === 'string' && candidate.range !== undefined &&
            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');
    }
    TextDocumentContentChangeEvent.isIncremental = isIncremental;
    /**
     * Checks whether the information describes a full replacement event.
     */
    function isFull(event) {
        let candidate = event;
        return candidate !== undefined && candidate !== null &&
            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;
    }
    TextDocumentContentChangeEvent.isFull = isFull;
})(TextDocumentContentChangeEvent = exports.TextDocumentContentChangeEvent || (exports.TextDocumentContentChangeEvent = {}));
/**
 * The document change notification is sent from the client to the server to signal
 * changes to a text document.
 */
var DidChangeTextDocumentNotification;
(function (DidChangeTextDocumentNotification) {
    DidChangeTextDocumentNotification.method = 'textDocument/didChange';
    DidChangeTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);
})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));
/**
 * The document close notification is sent from the client to the server when
 * the document got closed in the client. The document's truth now exists where
 * the document's uri points to (e.g. if the document's uri is a file uri the
 * truth now exists on disk). As with the open notification the close notification
 * is about managing the document's content. Receiving a close notification
 * doesn't mean that the document was open in an editor before. A close
 * notification requires a previous open notification to be sent.
 */
var DidCloseTextDocumentNotification;
(function (DidCloseTextDocumentNotification) {
    DidCloseTextDocumentNotification.method = 'textDocument/didClose';
    DidCloseTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);
})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));
/**
 * The document save notification is sent from the client to the server when
 * the document got saved in the client.
 */
var DidSaveTextDocumentNotification;
(function (DidSaveTextDocumentNotification) {
    DidSaveTextDocumentNotification.method = 'textDocument/didSave';
    DidSaveTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);
})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));
/**
 * Represents reasons why a text document is saved.
 */
var TextDocumentSaveReason;
(function (TextDocumentSaveReason) {
    /**
     * Manually triggered, e.g. by the user pressing save, by starting debugging,
     * or by an API call.
     */
    TextDocumentSaveReason.Manual = 1;
    /**
     * Automatic after a delay.
     */
    TextDocumentSaveReason.AfterDelay = 2;
    /**
     * When the editor lost focus.
     */
    TextDocumentSaveReason.FocusOut = 3;
})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));
/**
 * A document will save notification is sent from the client to the server before
 * the document is actually saved.
 */
var WillSaveTextDocumentNotification;
(function (WillSaveTextDocumentNotification) {
    WillSaveTextDocumentNotification.method = 'textDocument/willSave';
    WillSaveTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);
})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));
/**
 * A document will save request is sent from the client to the server before
 * the document is actually saved. The request can return an array of TextEdits
 * which will be applied to the text document before it is saved. Please note that
 * clients might drop results if computing the text edits took too long or if a
 * server constantly fails on this request. This is done to keep the save fast and
 * reliable.
 */
var WillSaveTextDocumentWaitUntilRequest;
(function (WillSaveTextDocumentWaitUntilRequest) {
    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';
    WillSaveTextDocumentWaitUntilRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);
})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));
/**
 * The watched files notification is sent from the client to the server when
 * the client detects changes to file watched by the language client.
 */
var DidChangeWatchedFilesNotification;
(function (DidChangeWatchedFilesNotification) {
    DidChangeWatchedFilesNotification.method = 'workspace/didChangeWatchedFiles';
    DidChangeWatchedFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType(DidChangeWatchedFilesNotification.method);
})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));
/**
 * The file event type
 */
var FileChangeType;
(function (FileChangeType) {
    /**
     * The file got created.
     */
    FileChangeType.Created = 1;
    /**
     * The file got changed.
     */
    FileChangeType.Changed = 2;
    /**
     * The file got deleted.
     */
    FileChangeType.Deleted = 3;
})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));
var RelativePattern;
(function (RelativePattern) {
    function is(value) {
        const candidate = value;
        return Is.objectLiteral(candidate) && (vscode_languageserver_types_1.URI.is(candidate.baseUri) || vscode_languageserver_types_1.WorkspaceFolder.is(candidate.baseUri)) && Is.string(candidate.pattern);
    }
    RelativePattern.is = is;
})(RelativePattern = exports.RelativePattern || (exports.RelativePattern = {}));
var WatchKind;
(function (WatchKind) {
    /**
     * Interested in create events.
     */
    WatchKind.Create = 1;
    /**
     * Interested in change events
     */
    WatchKind.Change = 2;
    /**
     * Interested in delete events
     */
    WatchKind.Delete = 4;
})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));
/**
 * Diagnostics notification are sent from the server to the client to signal
 * results of validation runs.
 */
var PublishDiagnosticsNotification;
(function (PublishDiagnosticsNotification) {
    PublishDiagnosticsNotification.method = 'textDocument/publishDiagnostics';
    PublishDiagnosticsNotification.messageDirection = messages_1.MessageDirection.serverToClient;
    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType(PublishDiagnosticsNotification.method);
})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));
/**
 * How a completion was triggered
 */
var CompletionTriggerKind;
(function (CompletionTriggerKind) {
    /**
     * Completion was triggered by typing an identifier (24x7 code
     * complete), manual invocation (e.g Ctrl+Space) or via API.
     */
    CompletionTriggerKind.Invoked = 1;
    /**
     * Completion was triggered by a trigger character specified by
     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.
     */
    CompletionTriggerKind.TriggerCharacter = 2;
    /**
     * Completion was re-triggered as current completion list is incomplete
     */
    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;
})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));
/**
 * Request to request completion at a given text document position. The request's
 * parameter is of type {@link TextDocumentPosition} the response
 * is of type {@link CompletionItem CompletionItem[]} or {@link CompletionList}
 * or a Thenable that resolves to such.
 *
 * The request can delay the computation of the {@link CompletionItem.detail `detail`}
 * and {@link CompletionItem.documentation `documentation`} properties to the `completionItem/resolve`
 * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,
 * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.
 */
var CompletionRequest;
(function (CompletionRequest) {
    CompletionRequest.method = 'textDocument/completion';
    CompletionRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);
})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));
/**
 * Request to resolve additional information for a given completion item.The request's
 * parameter is of type {@link CompletionItem} the response
 * is of type {@link CompletionItem} or a Thenable that resolves to such.
 */
var CompletionResolveRequest;
(function (CompletionResolveRequest) {
    CompletionResolveRequest.method = 'completionItem/resolve';
    CompletionResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);
})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));
/**
 * Request to request hover information at a given text document position. The request's
 * parameter is of type {@link TextDocumentPosition} the response is of
 * type {@link Hover} or a Thenable that resolves to such.
 */
var HoverRequest;
(function (HoverRequest) {
    HoverRequest.method = 'textDocument/hover';
    HoverRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);
})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));
/**
 * How a signature help was triggered.
 *
 * @since 3.15.0
 */
var SignatureHelpTriggerKind;
(function (SignatureHelpTriggerKind) {
    /**
     * Signature help was invoked manually by the user or by a command.
     */
    SignatureHelpTriggerKind.Invoked = 1;
    /**
     * Signature help was triggered by a trigger character.
     */
    SignatureHelpTriggerKind.TriggerCharacter = 2;
    /**
     * Signature help was triggered by the cursor moving or by the document content changing.
     */
    SignatureHelpTriggerKind.ContentChange = 3;
})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));
var SignatureHelpRequest;
(function (SignatureHelpRequest) {
    SignatureHelpRequest.method = 'textDocument/signatureHelp';
    SignatureHelpRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);
})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));
/**
 * A request to resolve the definition location of a symbol at a given text
 * document position. The request's parameter is of type [TextDocumentPosition]
 * (#TextDocumentPosition) the response is of either type {@link Definition}
 * or a typed array of {@link DefinitionLink} or a Thenable that resolves
 * to such.
 */
var DefinitionRequest;
(function (DefinitionRequest) {
    DefinitionRequest.method = 'textDocument/definition';
    DefinitionRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);
})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));
/**
 * A request to resolve project-wide references for the symbol denoted
 * by the given text document position. The request's parameter is of
 * type {@link ReferenceParams} the response is of type
 * {@link Location Location[]} or a Thenable that resolves to such.
 */
var ReferencesRequest;
(function (ReferencesRequest) {
    ReferencesRequest.method = 'textDocument/references';
    ReferencesRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);
})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));
/**
 * Request to resolve a {@link DocumentHighlight} for a given
 * text document position. The request's parameter is of type [TextDocumentPosition]
 * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]
 * (#DocumentHighlight) or a Thenable that resolves to such.
 */
var DocumentHighlightRequest;
(function (DocumentHighlightRequest) {
    DocumentHighlightRequest.method = 'textDocument/documentHighlight';
    DocumentHighlightRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);
})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));
/**
 * A request to list all symbols found in a given text document. The request's
 * parameter is of type {@link TextDocumentIdentifier} the
 * response is of type {@link SymbolInformation SymbolInformation[]} or a Thenable
 * that resolves to such.
 */
var DocumentSymbolRequest;
(function (DocumentSymbolRequest) {
    DocumentSymbolRequest.method = 'textDocument/documentSymbol';
    DocumentSymbolRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);
})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));
/**
 * A request to provide commands for the given text document and range.
 */
var CodeActionRequest;
(function (CodeActionRequest) {
    CodeActionRequest.method = 'textDocument/codeAction';
    CodeActionRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);
})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));
/**
 * Request to resolve additional information for a given code action.The request's
 * parameter is of type {@link CodeAction} the response
 * is of type {@link CodeAction} or a Thenable that resolves to such.
 */
var CodeActionResolveRequest;
(function (CodeActionResolveRequest) {
    CodeActionResolveRequest.method = 'codeAction/resolve';
    CodeActionResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    CodeActionResolveRequest.type = new messages_1.ProtocolRequestType(CodeActionResolveRequest.method);
})(CodeActionResolveRequest = exports.CodeActionResolveRequest || (exports.CodeActionResolveRequest = {}));
/**
 * A request to list project-wide symbols matching the query string given
 * by the {@link WorkspaceSymbolParams}. The response is
 * of type {@link SymbolInformation SymbolInformation[]} or a Thenable that
 * resolves to such.
 *
 * @since 3.17.0 - support for WorkspaceSymbol in the returned data. Clients
 *  need to advertise support for WorkspaceSymbols via the client capability
 *  `workspace.symbol.resolveSupport`.
 *
 */
var WorkspaceSymbolRequest;
(function (WorkspaceSymbolRequest) {
    WorkspaceSymbolRequest.method = 'workspace/symbol';
    WorkspaceSymbolRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);
})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));
/**
 * A request to resolve the range inside the workspace
 * symbol's location.
 *
 * @since 3.17.0
 */
var WorkspaceSymbolResolveRequest;
(function (WorkspaceSymbolResolveRequest) {
    WorkspaceSymbolResolveRequest.method = 'workspaceSymbol/resolve';
    WorkspaceSymbolResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    WorkspaceSymbolResolveRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolResolveRequest.method);
})(WorkspaceSymbolResolveRequest = exports.WorkspaceSymbolResolveRequest || (exports.WorkspaceSymbolResolveRequest = {}));
/**
 * A request to provide code lens for the given text document.
 */
var CodeLensRequest;
(function (CodeLensRequest) {
    CodeLensRequest.method = 'textDocument/codeLens';
    CodeLensRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    CodeLensRequest.type = new messages_1.ProtocolRequestType(CodeLensRequest.method);
})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));
/**
 * A request to resolve a command for a given code lens.
 */
var CodeLensResolveRequest;
(function (CodeLensResolveRequest) {
    CodeLensResolveRequest.method = 'codeLens/resolve';
    CodeLensResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType(CodeLensResolveRequest.method);
})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));
/**
 * A request to refresh all code actions
 *
 * @since 3.16.0
 */
var CodeLensRefreshRequest;
(function (CodeLensRefreshRequest) {
    CodeLensRefreshRequest.method = `workspace/codeLens/refresh`;
    CodeLensRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;
    CodeLensRefreshRequest.type = new messages_1.ProtocolRequestType0(CodeLensRefreshRequest.method);
})(CodeLensRefreshRequest = exports.CodeLensRefreshRequest || (exports.CodeLensRefreshRequest = {}));
/**
 * A request to provide document links
 */
var DocumentLinkRequest;
(function (DocumentLinkRequest) {
    DocumentLinkRequest.method = 'textDocument/documentLink';
    DocumentLinkRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);
})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));
/**
 * Request to resolve additional information for a given document link. The request's
 * parameter is of type {@link DocumentLink} the response
 * is of type {@link DocumentLink} or a Thenable that resolves to such.
 */
var DocumentLinkResolveRequest;
(function (DocumentLinkResolveRequest) {
    DocumentLinkResolveRequest.method = 'documentLink/resolve';
    DocumentLinkResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType(DocumentLinkResolveRequest.method);
})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));
/**
 * A request to to format a whole document.
 */
var DocumentFormattingRequest;
(function (DocumentFormattingRequest) {
    DocumentFormattingRequest.method = 'textDocument/formatting';
    DocumentFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);
})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));
/**
 * A request to to format a range in a document.
 */
var DocumentRangeFormattingRequest;
(function (DocumentRangeFormattingRequest) {
    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';
    DocumentRangeFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);
})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));
/**
 * A request to format a document on type.
 */
var DocumentOnTypeFormattingRequest;
(function (DocumentOnTypeFormattingRequest) {
    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';
    DocumentOnTypeFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);
})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));
//---- Rename ----------------------------------------------
var PrepareSupportDefaultBehavior;
(function (PrepareSupportDefaultBehavior) {
    /**
     * The client's default behavior is to select the identifier
     * according the to language's syntax rule.
     */
    PrepareSupportDefaultBehavior.Identifier = 1;
})(PrepareSupportDefaultBehavior = exports.PrepareSupportDefaultBehavior || (exports.PrepareSupportDefaultBehavior = {}));
/**
 * A request to rename a symbol.
 */
var RenameRequest;
(function (RenameRequest) {
    RenameRequest.method = 'textDocument/rename';
    RenameRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);
})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));
/**
 * A request to test and perform the setup necessary for a rename.
 *
 * @since 3.16 - support for default behavior
 */
var PrepareRenameRequest;
(function (PrepareRenameRequest) {
    PrepareRenameRequest.method = 'textDocument/prepareRename';
    PrepareRenameRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);
})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));
/**
 * A request send from the client to the server to execute a command. The request might return
 * a workspace edit which the client will apply to the workspace.
 */
var ExecuteCommandRequest;
(function (ExecuteCommandRequest) {
    ExecuteCommandRequest.method = 'workspace/executeCommand';
    ExecuteCommandRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType(ExecuteCommandRequest.method);
})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));
/**
 * A request sent from the server to the client to modified certain resources.
 */
var ApplyWorkspaceEditRequest;
(function (ApplyWorkspaceEditRequest) {
    ApplyWorkspaceEditRequest.method = 'workspace/applyEdit';
    ApplyWorkspaceEditRequest.messageDirection = messages_1.MessageDirection.serverToClient;
    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');
})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.linkedEditingRange.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.linkedEditingRange.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LinkedEditingRangeRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * A request to provide ranges that can be edited together.
 *
 * @since 3.16.0
 */
var LinkedEditingRangeRequest;
(function (LinkedEditingRangeRequest) {
    LinkedEditingRangeRequest.method = 'textDocument/linkedEditingRange';
    LinkedEditingRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    LinkedEditingRangeRequest.type = new messages_1.ProtocolRequestType(LinkedEditingRangeRequest.method);
})(LinkedEditingRangeRequest = exports.LinkedEditingRangeRequest || (exports.LinkedEditingRangeRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.moniker.js":
/*!************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.moniker.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * Moniker uniqueness level to define scope of the moniker.
 *
 * @since 3.16.0
 */
var UniquenessLevel;
(function (UniquenessLevel) {
    /**
     * The moniker is only unique inside a document
     */
    UniquenessLevel.document = 'document';
    /**
     * The moniker is unique inside a project for which a dump got created
     */
    UniquenessLevel.project = 'project';
    /**
     * The moniker is unique inside the group to which a project belongs
     */
    UniquenessLevel.group = 'group';
    /**
     * The moniker is unique inside the moniker scheme.
     */
    UniquenessLevel.scheme = 'scheme';
    /**
     * The moniker is globally unique
     */
    UniquenessLevel.global = 'global';
})(UniquenessLevel = exports.UniquenessLevel || (exports.UniquenessLevel = {}));
/**
 * The moniker kind.
 *
 * @since 3.16.0
 */
var MonikerKind;
(function (MonikerKind) {
    /**
     * The moniker represent a symbol that is imported into a project
     */
    MonikerKind.$import = 'import';
    /**
     * The moniker represents a symbol that is exported from a project
     */
    MonikerKind.$export = 'export';
    /**
     * The moniker represents a symbol that is local to a project (e.g. a local
     * variable of a function, a class not visible outside the project, ...)
     */
    MonikerKind.local = 'local';
})(MonikerKind = exports.MonikerKind || (exports.MonikerKind = {}));
/**
 * A request to get the moniker of a symbol at a given text document position.
 * The request parameter is of type {@link TextDocumentPositionParams}.
 * The response is of type {@link Moniker Moniker[]} or `null`.
 */
var MonikerRequest;
(function (MonikerRequest) {
    MonikerRequest.method = 'textDocument/moniker';
    MonikerRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    MonikerRequest.type = new messages_1.ProtocolRequestType(MonikerRequest.method);
})(MonikerRequest = exports.MonikerRequest || (exports.MonikerRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.notebook.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.notebook.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DidCloseNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification = exports.NotebookCellArrayChange = exports.DidOpenNotebookDocumentNotification = exports.NotebookDocumentSyncRegistrationType = exports.NotebookDocument = exports.NotebookCell = exports.ExecutionSummary = exports.NotebookCellKind = void 0;
const vscode_languageserver_types_1 = __webpack_require__(/*! vscode-languageserver-types */ "./node_modules/vscode-languageserver-types/lib/esm/main.js");
const Is = __webpack_require__(/*! ./utils/is */ "./node_modules/vscode-languageserver-protocol/lib/common/utils/is.js");
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * A notebook cell kind.
 *
 * @since 3.17.0
 */
var NotebookCellKind;
(function (NotebookCellKind) {
    /**
     * A markup-cell is formatted source that is used for display.
     */
    NotebookCellKind.Markup = 1;
    /**
     * A code-cell is source code.
     */
    NotebookCellKind.Code = 2;
    function is(value) {
        return value === 1 || value === 2;
    }
    NotebookCellKind.is = is;
})(NotebookCellKind = exports.NotebookCellKind || (exports.NotebookCellKind = {}));
var ExecutionSummary;
(function (ExecutionSummary) {
    function create(executionOrder, success) {
        const result = { executionOrder };
        if (success === true || success === false) {
            result.success = success;
        }
        return result;
    }
    ExecutionSummary.create = create;
    function is(value) {
        const candidate = value;
        return Is.objectLiteral(candidate) && vscode_languageserver_types_1.uinteger.is(candidate.executionOrder) && (candidate.success === undefined || Is.boolean(candidate.success));
    }
    ExecutionSummary.is = is;
    function equals(one, other) {
        if (one === other) {
            return true;
        }
        if (one === null || one === undefined || other === null || other === undefined) {
            return false;
        }
        return one.executionOrder === other.executionOrder && one.success === other.success;
    }
    ExecutionSummary.equals = equals;
})(ExecutionSummary = exports.ExecutionSummary || (exports.ExecutionSummary = {}));
var NotebookCell;
(function (NotebookCell) {
    function create(kind, document) {
        return { kind, document };
    }
    NotebookCell.create = create;
    function is(value) {
        const candidate = value;
        return Is.objectLiteral(candidate) && NotebookCellKind.is(candidate.kind) && vscode_languageserver_types_1.DocumentUri.is(candidate.document) &&
            (candidate.metadata === undefined || Is.objectLiteral(candidate.metadata));
    }
    NotebookCell.is = is;
    function diff(one, two) {
        const result = new Set();
        if (one.document !== two.document) {
            result.add('document');
        }
        if (one.kind !== two.kind) {
            result.add('kind');
        }
        if (one.executionSummary !== two.executionSummary) {
            result.add('executionSummary');
        }
        if ((one.metadata !== undefined || two.metadata !== undefined) && !equalsMetadata(one.metadata, two.metadata)) {
            result.add('metadata');
        }
        if ((one.executionSummary !== undefined || two.executionSummary !== undefined) && !ExecutionSummary.equals(one.executionSummary, two.executionSummary)) {
            result.add('executionSummary');
        }
        return result;
    }
    NotebookCell.diff = diff;
    function equalsMetadata(one, other) {
        if (one === other) {
            return true;
        }
        if (one === null || one === undefined || other === null || other === undefined) {
            return false;
        }
        if (typeof one !== typeof other) {
            return false;
        }
        if (typeof one !== 'object') {
            return false;
        }
        const oneArray = Array.isArray(one);
        const otherArray = Array.isArray(other);
        if (oneArray !== otherArray) {
            return false;
        }
        if (oneArray && otherArray) {
            if (one.length !== other.length) {
                return false;
            }
            for (let i = 0; i < one.length; i++) {
                if (!equalsMetadata(one[i], other[i])) {
                    return false;
                }
            }
        }
        if (Is.objectLiteral(one) && Is.objectLiteral(other)) {
            const oneKeys = Object.keys(one);
            const otherKeys = Object.keys(other);
            if (oneKeys.length !== otherKeys.length) {
                return false;
            }
            oneKeys.sort();
            otherKeys.sort();
            if (!equalsMetadata(oneKeys, otherKeys)) {
                return false;
            }
            for (let i = 0; i < oneKeys.length; i++) {
                const prop = oneKeys[i];
                if (!equalsMetadata(one[prop], other[prop])) {
                    return false;
                }
            }
        }
        return true;
    }
})(NotebookCell = exports.NotebookCell || (exports.NotebookCell = {}));
var NotebookDocument;
(function (NotebookDocument) {
    function create(uri, notebookType, version, cells) {
        return { uri, notebookType, version, cells };
    }
    NotebookDocument.create = create;
    function is(value) {
        const candidate = value;
        return Is.objectLiteral(candidate) && Is.string(candidate.uri) && vscode_languageserver_types_1.integer.is(candidate.version) && Is.typedArray(candidate.cells, NotebookCell.is);
    }
    NotebookDocument.is = is;
})(NotebookDocument = exports.NotebookDocument || (exports.NotebookDocument = {}));
var NotebookDocumentSyncRegistrationType;
(function (NotebookDocumentSyncRegistrationType) {
    NotebookDocumentSyncRegistrationType.method = 'notebookDocument/sync';
    NotebookDocumentSyncRegistrationType.messageDirection = messages_1.MessageDirection.clientToServer;
    NotebookDocumentSyncRegistrationType.type = new messages_1.RegistrationType(NotebookDocumentSyncRegistrationType.method);
})(NotebookDocumentSyncRegistrationType = exports.NotebookDocumentSyncRegistrationType || (exports.NotebookDocumentSyncRegistrationType = {}));
/**
 * A notification sent when a notebook opens.
 *
 * @since 3.17.0
 */
var DidOpenNotebookDocumentNotification;
(function (DidOpenNotebookDocumentNotification) {
    DidOpenNotebookDocumentNotification.method = 'notebookDocument/didOpen';
    DidOpenNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidOpenNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenNotebookDocumentNotification.method);
    DidOpenNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;
})(DidOpenNotebookDocumentNotification = exports.DidOpenNotebookDocumentNotification || (exports.DidOpenNotebookDocumentNotification = {}));
var NotebookCellArrayChange;
(function (NotebookCellArrayChange) {
    function is(value) {
        const candidate = value;
        return Is.objectLiteral(candidate) && vscode_languageserver_types_1.uinteger.is(candidate.start) && vscode_languageserver_types_1.uinteger.is(candidate.deleteCount) && (candidate.cells === undefined || Is.typedArray(candidate.cells, NotebookCell.is));
    }
    NotebookCellArrayChange.is = is;
    function create(start, deleteCount, cells) {
        const result = { start, deleteCount };
        if (cells !== undefined) {
            result.cells = cells;
        }
        return result;
    }
    NotebookCellArrayChange.create = create;
})(NotebookCellArrayChange = exports.NotebookCellArrayChange || (exports.NotebookCellArrayChange = {}));
var DidChangeNotebookDocumentNotification;
(function (DidChangeNotebookDocumentNotification) {
    DidChangeNotebookDocumentNotification.method = 'notebookDocument/didChange';
    DidChangeNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidChangeNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeNotebookDocumentNotification.method);
    DidChangeNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;
})(DidChangeNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification || (exports.DidChangeNotebookDocumentNotification = {}));
/**
 * A notification sent when a notebook document is saved.
 *
 * @since 3.17.0
 */
var DidSaveNotebookDocumentNotification;
(function (DidSaveNotebookDocumentNotification) {
    DidSaveNotebookDocumentNotification.method = 'notebookDocument/didSave';
    DidSaveNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidSaveNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveNotebookDocumentNotification.method);
    DidSaveNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;
})(DidSaveNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification || (exports.DidSaveNotebookDocumentNotification = {}));
/**
 * A notification sent when a notebook closes.
 *
 * @since 3.17.0
 */
var DidCloseNotebookDocumentNotification;
(function (DidCloseNotebookDocumentNotification) {
    DidCloseNotebookDocumentNotification.method = 'notebookDocument/didClose';
    DidCloseNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidCloseNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseNotebookDocumentNotification.method);
    DidCloseNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;
})(DidCloseNotebookDocumentNotification = exports.DidCloseNotebookDocumentNotification || (exports.DidCloseNotebookDocumentNotification = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.progress.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.progress.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = void 0;
const vscode_jsonrpc_1 = __webpack_require__(/*! vscode-jsonrpc */ "./node_modules/vscode-jsonrpc/lib/node/main.js");
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
var WorkDoneProgress;
(function (WorkDoneProgress) {
    WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();
    function is(value) {
        return value === WorkDoneProgress.type;
    }
    WorkDoneProgress.is = is;
})(WorkDoneProgress = exports.WorkDoneProgress || (exports.WorkDoneProgress = {}));
/**
 * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress
 * reporting from the server.
 */
var WorkDoneProgressCreateRequest;
(function (WorkDoneProgressCreateRequest) {
    WorkDoneProgressCreateRequest.method = 'window/workDoneProgress/create';
    WorkDoneProgressCreateRequest.messageDirection = messages_1.MessageDirection.serverToClient;
    WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType(WorkDoneProgressCreateRequest.method);
})(WorkDoneProgressCreateRequest = exports.WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = {}));
/**
 * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress
 * initiated on the server side.
 */
var WorkDoneProgressCancelNotification;
(function (WorkDoneProgressCancelNotification) {
    WorkDoneProgressCancelNotification.method = 'window/workDoneProgress/cancel';
    WorkDoneProgressCancelNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType(WorkDoneProgressCancelNotification.method);
})(WorkDoneProgressCancelNotification = exports.WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.selectionRange.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.selectionRange.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectionRangeRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * A request to provide selection ranges in a document. The request's
 * parameter is of type {@link SelectionRangeParams}, the
 * response is of type {@link SelectionRange SelectionRange[]} or a Thenable
 * that resolves to such.
 */
var SelectionRangeRequest;
(function (SelectionRangeRequest) {
    SelectionRangeRequest.method = 'textDocument/selectionRange';
    SelectionRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    SelectionRangeRequest.type = new messages_1.ProtocolRequestType(SelectionRangeRequest.method);
})(SelectionRangeRequest = exports.SelectionRangeRequest || (exports.SelectionRangeRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.semanticTokens.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.semanticTokens.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.SemanticTokensRegistrationType = exports.TokenFormat = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
//------- 'textDocument/semanticTokens' -----
var TokenFormat;
(function (TokenFormat) {
    TokenFormat.Relative = 'relative';
})(TokenFormat = exports.TokenFormat || (exports.TokenFormat = {}));
var SemanticTokensRegistrationType;
(function (SemanticTokensRegistrationType) {
    SemanticTokensRegistrationType.method = 'textDocument/semanticTokens';
    SemanticTokensRegistrationType.type = new messages_1.RegistrationType(SemanticTokensRegistrationType.method);
})(SemanticTokensRegistrationType = exports.SemanticTokensRegistrationType || (exports.SemanticTokensRegistrationType = {}));
/**
 * @since 3.16.0
 */
var SemanticTokensRequest;
(function (SemanticTokensRequest) {
    SemanticTokensRequest.method = 'textDocument/semanticTokens/full';
    SemanticTokensRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);
    SemanticTokensRequest.registrationMethod = SemanticTokensRegistrationType.method;
})(SemanticTokensRequest = exports.SemanticTokensRequest || (exports.SemanticTokensRequest = {}));
/**
 * @since 3.16.0
 */
var SemanticTokensDeltaRequest;
(function (SemanticTokensDeltaRequest) {
    SemanticTokensDeltaRequest.method = 'textDocument/semanticTokens/full/delta';
    SemanticTokensDeltaRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    SemanticTokensDeltaRequest.type = new messages_1.ProtocolRequestType(SemanticTokensDeltaRequest.method);
    SemanticTokensDeltaRequest.registrationMethod = SemanticTokensRegistrationType.method;
})(SemanticTokensDeltaRequest = exports.SemanticTokensDeltaRequest || (exports.SemanticTokensDeltaRequest = {}));
/**
 * @since 3.16.0
 */
var SemanticTokensRangeRequest;
(function (SemanticTokensRangeRequest) {
    SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';
    SemanticTokensRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);
    SemanticTokensRangeRequest.registrationMethod = SemanticTokensRegistrationType.method;
})(SemanticTokensRangeRequest = exports.SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = {}));
/**
 * @since 3.16.0
 */
var SemanticTokensRefreshRequest;
(function (SemanticTokensRefreshRequest) {
    SemanticTokensRefreshRequest.method = `workspace/semanticTokens/refresh`;
    SemanticTokensRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;
    SemanticTokensRefreshRequest.type = new messages_1.ProtocolRequestType0(SemanticTokensRefreshRequest.method);
})(SemanticTokensRefreshRequest = exports.SemanticTokensRefreshRequest || (exports.SemanticTokensRefreshRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.showDocument.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.showDocument.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDocumentRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * A request to show a document. This request might open an
 * external program depending on the value of the URI to open.
 * For example a request to open `https://code.visualstudio.com/`
 * will very likely open the URI in a WEB browser.
 *
 * @since 3.16.0
*/
var ShowDocumentRequest;
(function (ShowDocumentRequest) {
    ShowDocumentRequest.method = 'window/showDocument';
    ShowDocumentRequest.messageDirection = messages_1.MessageDirection.serverToClient;
    ShowDocumentRequest.type = new messages_1.ProtocolRequestType(ShowDocumentRequest.method);
})(ShowDocumentRequest = exports.ShowDocumentRequest || (exports.ShowDocumentRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.typeDefinition.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.typeDefinition.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TypeDefinitionRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
// @ts-ignore: to avoid inlining LocatioLink as dynamic import
let __noDynamicImport;
/**
 * A request to resolve the type definition locations of a symbol at a given text
 * document position. The request's parameter is of type [TextDocumentPositionParams]
 * (#TextDocumentPositionParams) the response is of type {@link Definition} or a
 * Thenable that resolves to such.
 */
var TypeDefinitionRequest;
(function (TypeDefinitionRequest) {
    TypeDefinitionRequest.method = 'textDocument/typeDefinition';
    TypeDefinitionRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    TypeDefinitionRequest.type = new messages_1.ProtocolRequestType(TypeDefinitionRequest.method);
})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.typeHierarchy.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.typeHierarchy.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) TypeFox, Microsoft and others. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TypeHierarchySubtypesRequest = exports.TypeHierarchySupertypesRequest = exports.TypeHierarchyPrepareRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * A request to result a `TypeHierarchyItem` in a document at a given position.
 * Can be used as an input to a subtypes or supertypes type hierarchy.
 *
 * @since 3.17.0
 */
var TypeHierarchyPrepareRequest;
(function (TypeHierarchyPrepareRequest) {
    TypeHierarchyPrepareRequest.method = 'textDocument/prepareTypeHierarchy';
    TypeHierarchyPrepareRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    TypeHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(TypeHierarchyPrepareRequest.method);
})(TypeHierarchyPrepareRequest = exports.TypeHierarchyPrepareRequest || (exports.TypeHierarchyPrepareRequest = {}));
/**
 * A request to resolve the supertypes for a given `TypeHierarchyItem`.
 *
 * @since 3.17.0
 */
var TypeHierarchySupertypesRequest;
(function (TypeHierarchySupertypesRequest) {
    TypeHierarchySupertypesRequest.method = 'typeHierarchy/supertypes';
    TypeHierarchySupertypesRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    TypeHierarchySupertypesRequest.type = new messages_1.ProtocolRequestType(TypeHierarchySupertypesRequest.method);
})(TypeHierarchySupertypesRequest = exports.TypeHierarchySupertypesRequest || (exports.TypeHierarchySupertypesRequest = {}));
/**
 * A request to resolve the subtypes for a given `TypeHierarchyItem`.
 *
 * @since 3.17.0
 */
var TypeHierarchySubtypesRequest;
(function (TypeHierarchySubtypesRequest) {
    TypeHierarchySubtypesRequest.method = 'typeHierarchy/subtypes';
    TypeHierarchySubtypesRequest.messageDirection = messages_1.MessageDirection.clientToServer;
    TypeHierarchySubtypesRequest.type = new messages_1.ProtocolRequestType(TypeHierarchySubtypesRequest.method);
})(TypeHierarchySubtypesRequest = exports.TypeHierarchySubtypesRequest || (exports.TypeHierarchySubtypesRequest = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/protocol.workspaceFolder.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/protocol.workspaceFolder.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-languageserver-protocol/lib/common/messages.js");
/**
 * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.
 */
var WorkspaceFoldersRequest;
(function (WorkspaceFoldersRequest) {
    WorkspaceFoldersRequest.method = 'workspace/workspaceFolders';
    WorkspaceFoldersRequest.messageDirection = messages_1.MessageDirection.serverToClient;
    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0(WorkspaceFoldersRequest.method);
})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));
/**
 * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace
 * folder configuration changes.
 */
var DidChangeWorkspaceFoldersNotification;
(function (DidChangeWorkspaceFoldersNotification) {
    DidChangeWorkspaceFoldersNotification.method = 'workspace/didChangeWorkspaceFolders';
    DidChangeWorkspaceFoldersNotification.messageDirection = messages_1.MessageDirection.clientToServer;
    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType(DidChangeWorkspaceFoldersNotification.method);
})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/common/utils/is.js":
/*!****************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/common/utils/is.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.objectLiteral = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;
function boolean(value) {
    return value === true || value === false;
}
exports.boolean = boolean;
function string(value) {
    return typeof value === 'string' || value instanceof String;
}
exports.string = string;
function number(value) {
    return typeof value === 'number' || value instanceof Number;
}
exports.number = number;
function error(value) {
    return value instanceof Error;
}
exports.error = error;
function func(value) {
    return typeof value === 'function';
}
exports.func = func;
function array(value) {
    return Array.isArray(value);
}
exports.array = array;
function stringArray(value) {
    return array(value) && value.every(elem => string(elem));
}
exports.stringArray = stringArray;
function typedArray(value, check) {
    return Array.isArray(value) && value.every(check);
}
exports.typedArray = typedArray;
function objectLiteral(value) {
    // Strictly speaking class instances pass this check as well. Since the LSP
    // doesn't use classes we ignore this for now. If we do we need to add something
    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`
    return value !== null && typeof value === 'object';
}
exports.objectLiteral = objectLiteral;


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/lib/node/main.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/lib/node/main.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createProtocolConnection = void 0;
const node_1 = __webpack_require__(/*! vscode-jsonrpc/node */ "./node_modules/vscode-jsonrpc/node.js");
__exportStar(__webpack_require__(/*! vscode-jsonrpc/node */ "./node_modules/vscode-jsonrpc/node.js"), exports);
__exportStar(__webpack_require__(/*! ../common/api */ "./node_modules/vscode-languageserver-protocol/lib/common/api.js"), exports);
function createProtocolConnection(input, output, logger, options) {
    return (0, node_1.createMessageConnection)(input, output, logger, options);
}
exports.createProtocolConnection = createProtocolConnection;


/***/ }),

/***/ "./node_modules/vscode-languageserver-protocol/node.js":
/*!*************************************************************!*\
  !*** ./node_modules/vscode-languageserver-protocol/node.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ----------------------------------------------------------------------------------------- */


module.exports = __webpack_require__(/*! ./lib/node/main */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");

/***/ }),

/***/ "./node_modules/vscode-languageserver-textdocument/lib/esm/main.js":
/*!*************************************************************************!*\
  !*** ./node_modules/vscode-languageserver-textdocument/lib/esm/main.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TextDocument: () => (/* binding */ TextDocument)
/* harmony export */ });
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var FullTextDocument = /** @class */ (function () {
    function FullTextDocument(uri, languageId, version, content) {
        this._uri = uri;
        this._languageId = languageId;
        this._version = version;
        this._content = content;
        this._lineOffsets = undefined;
    }
    Object.defineProperty(FullTextDocument.prototype, "uri", {
        get: function () {
            return this._uri;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FullTextDocument.prototype, "languageId", {
        get: function () {
            return this._languageId;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FullTextDocument.prototype, "version", {
        get: function () {
            return this._version;
        },
        enumerable: false,
        configurable: true
    });
    FullTextDocument.prototype.getText = function (range) {
        if (range) {
            var start = this.offsetAt(range.start);
            var end = this.offsetAt(range.end);
            return this._content.substring(start, end);
        }
        return this._content;
    };
    FullTextDocument.prototype.update = function (changes, version) {
        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {
            var change = changes_1[_i];
            if (FullTextDocument.isIncremental(change)) {
                // makes sure start is before end
                var range = getWellformedRange(change.range);
                // update content
                var startOffset = this.offsetAt(range.start);
                var endOffset = this.offsetAt(range.end);
                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);
                // update the offsets
                var startLine = Math.max(range.start.line, 0);
                var endLine = Math.max(range.end.line, 0);
                var lineOffsets = this._lineOffsets;
                var addedLineOffsets = computeLineOffsets(change.text, false, startOffset);
                if (endLine - startLine === addedLineOffsets.length) {
                    for (var i = 0, len = addedLineOffsets.length; i < len; i++) {
                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];
                    }
                }
                else {
                    if (addedLineOffsets.length < 10000) {
                        lineOffsets.splice.apply(lineOffsets, __spreadArray([startLine + 1, endLine - startLine], addedLineOffsets, false));
                    }
                    else { // avoid too many arguments for splice
                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));
                    }
                }
                var diff = change.text.length - (endOffset - startOffset);
                if (diff !== 0) {
                    for (var i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {
                        lineOffsets[i] = lineOffsets[i] + diff;
                    }
                }
            }
            else if (FullTextDocument.isFull(change)) {
                this._content = change.text;
                this._lineOffsets = undefined;
            }
            else {
                throw new Error('Unknown change event received');
            }
        }
        this._version = version;
    };
    FullTextDocument.prototype.getLineOffsets = function () {
        if (this._lineOffsets === undefined) {
            this._lineOffsets = computeLineOffsets(this._content, true);
        }
        return this._lineOffsets;
    };
    FullTextDocument.prototype.positionAt = function (offset) {
        offset = Math.max(Math.min(offset, this._content.length), 0);
        var lineOffsets = this.getLineOffsets();
        var low = 0, high = lineOffsets.length;
        if (high === 0) {
            return { line: 0, character: offset };
        }
        while (low < high) {
            var mid = Math.floor((low + high) / 2);
            if (lineOffsets[mid] > offset) {
                high = mid;
            }
            else {
                low = mid + 1;
            }
        }
        // low is the least x for which the line offset is larger than the current offset
        // or array.length if no line offset is larger than the current offset
        var line = low - 1;
        return { line: line, character: offset - lineOffsets[line] };
    };
    FullTextDocument.prototype.offsetAt = function (position) {
        var lineOffsets = this.getLineOffsets();
        if (position.line >= lineOffsets.length) {
            return this._content.length;
        }
        else if (position.line < 0) {
            return 0;
        }
        var lineOffset = lineOffsets[position.line];
        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;
        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);
    };
    Object.defineProperty(FullTextDocument.prototype, "lineCount", {
        get: function () {
            return this.getLineOffsets().length;
        },
        enumerable: false,
        configurable: true
    });
    FullTextDocument.isIncremental = function (event) {
        var candidate = event;
        return candidate !== undefined && candidate !== null &&
            typeof candidate.text === 'string' && candidate.range !== undefined &&
            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');
    };
    FullTextDocument.isFull = function (event) {
        var candidate = event;
        return candidate !== undefined && candidate !== null &&
            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;
    };
    return FullTextDocument;
}());
var TextDocument;
(function (TextDocument) {
    /**
     * Creates a new text document.
     *
     * @param uri The document's uri.
     * @param languageId  The document's language Id.
     * @param version The document's initial version number.
     * @param content The document's content.
     */
    function create(uri, languageId, version, content) {
        return new FullTextDocument(uri, languageId, version, content);
    }
    TextDocument.create = create;
    /**
     * Updates a TextDocument by modifying its content.
     *
     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.
     * @param changes the changes to apply to the document.
     * @param version the changes version for the document.
     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.
     *
     */
    function update(document, changes, version) {
        if (document instanceof FullTextDocument) {
            document.update(changes, version);
            return document;
        }
        else {
            throw new Error('TextDocument.update: document must be created by TextDocument.create');
        }
    }
    TextDocument.update = update;
    function applyEdits(document, edits) {
        var text = document.getText();
        var sortedEdits = mergeSort(edits.map(getWellformedEdit), function (a, b) {
            var diff = a.range.start.line - b.range.start.line;
            if (diff === 0) {
                return a.range.start.character - b.range.start.character;
            }
            return diff;
        });
        var lastModifiedOffset = 0;
        var spans = [];
        for (var _i = 0, sortedEdits_1 = sortedEdits; _i < sortedEdits_1.length; _i++) {
            var e = sortedEdits_1[_i];
            var startOffset = document.offsetAt(e.range.start);
            if (startOffset < lastModifiedOffset) {
                throw new Error('Overlapping edit');
            }
            else if (startOffset > lastModifiedOffset) {
                spans.push(text.substring(lastModifiedOffset, startOffset));
            }
            if (e.newText.length) {
                spans.push(e.newText);
            }
            lastModifiedOffset = document.offsetAt(e.range.end);
        }
        spans.push(text.substr(lastModifiedOffset));
        return spans.join('');
    }
    TextDocument.applyEdits = applyEdits;
})(TextDocument || (TextDocument = {}));
function mergeSort(data, compare) {
    if (data.length <= 1) {
        // sorted
        return data;
    }
    var p = (data.length / 2) | 0;
    var left = data.slice(0, p);
    var right = data.slice(p);
    mergeSort(left, compare);
    mergeSort(right, compare);
    var leftIdx = 0;
    var rightIdx = 0;
    var i = 0;
    while (leftIdx < left.length && rightIdx < right.length) {
        var ret = compare(left[leftIdx], right[rightIdx]);
        if (ret <= 0) {
            // smaller_equal -> take left to preserve order
            data[i++] = left[leftIdx++];
        }
        else {
            // greater -> take right
            data[i++] = right[rightIdx++];
        }
    }
    while (leftIdx < left.length) {
        data[i++] = left[leftIdx++];
    }
    while (rightIdx < right.length) {
        data[i++] = right[rightIdx++];
    }
    return data;
}
function computeLineOffsets(text, isAtLineStart, textOffset) {
    if (textOffset === void 0) { textOffset = 0; }
    var result = isAtLineStart ? [textOffset] : [];
    for (var i = 0; i < text.length; i++) {
        var ch = text.charCodeAt(i);
        if (ch === 13 /* CharCode.CarriageReturn */ || ch === 10 /* CharCode.LineFeed */) {
            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {
                i++;
            }
            result.push(textOffset + i + 1);
        }
    }
    return result;
}
function getWellformedRange(range) {
    var start = range.start;
    var end = range.end;
    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {
        return { start: end, end: start };
    }
    return range;
}
function getWellformedEdit(textEdit) {
    var range = getWellformedRange(textEdit.range);
    if (range !== textEdit.range) {
        return { newText: textEdit.newText, range: range };
    }
    return textEdit;
}


/***/ }),

/***/ "./node_modules/vscode-languageserver-types/lib/esm/main.js":
/*!******************************************************************!*\
  !*** ./node_modules/vscode-languageserver-types/lib/esm/main.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AnnotatedTextEdit: () => (/* binding */ AnnotatedTextEdit),
/* harmony export */   ChangeAnnotation: () => (/* binding */ ChangeAnnotation),
/* harmony export */   ChangeAnnotationIdentifier: () => (/* binding */ ChangeAnnotationIdentifier),
/* harmony export */   CodeAction: () => (/* binding */ CodeAction),
/* harmony export */   CodeActionContext: () => (/* binding */ CodeActionContext),
/* harmony export */   CodeActionKind: () => (/* binding */ CodeActionKind),
/* harmony export */   CodeActionTriggerKind: () => (/* binding */ CodeActionTriggerKind),
/* harmony export */   CodeDescription: () => (/* binding */ CodeDescription),
/* harmony export */   CodeLens: () => (/* binding */ CodeLens),
/* harmony export */   Color: () => (/* binding */ Color),
/* harmony export */   ColorInformation: () => (/* binding */ ColorInformation),
/* harmony export */   ColorPresentation: () => (/* binding */ ColorPresentation),
/* harmony export */   Command: () => (/* binding */ Command),
/* harmony export */   CompletionItem: () => (/* binding */ CompletionItem),
/* harmony export */   CompletionItemKind: () => (/* binding */ CompletionItemKind),
/* harmony export */   CompletionItemLabelDetails: () => (/* binding */ CompletionItemLabelDetails),
/* harmony export */   CompletionItemTag: () => (/* binding */ CompletionItemTag),
/* harmony export */   CompletionList: () => (/* binding */ CompletionList),
/* harmony export */   CreateFile: () => (/* binding */ CreateFile),
/* harmony export */   DeleteFile: () => (/* binding */ DeleteFile),
/* harmony export */   Diagnostic: () => (/* binding */ Diagnostic),
/* harmony export */   DiagnosticRelatedInformation: () => (/* binding */ DiagnosticRelatedInformation),
/* harmony export */   DiagnosticSeverity: () => (/* binding */ DiagnosticSeverity),
/* harmony export */   DiagnosticTag: () => (/* binding */ DiagnosticTag),
/* harmony export */   DocumentHighlight: () => (/* binding */ DocumentHighlight),
/* harmony export */   DocumentHighlightKind: () => (/* binding */ DocumentHighlightKind),
/* harmony export */   DocumentLink: () => (/* binding */ DocumentLink),
/* harmony export */   DocumentSymbol: () => (/* binding */ DocumentSymbol),
/* harmony export */   DocumentUri: () => (/* binding */ DocumentUri),
/* harmony export */   EOL: () => (/* binding */ EOL),
/* harmony export */   FoldingRange: () => (/* binding */ FoldingRange),
/* harmony export */   FoldingRangeKind: () => (/* binding */ FoldingRangeKind),
/* harmony export */   FormattingOptions: () => (/* binding */ FormattingOptions),
/* harmony export */   Hover: () => (/* binding */ Hover),
/* harmony export */   InlayHint: () => (/* binding */ InlayHint),
/* harmony export */   InlayHintKind: () => (/* binding */ InlayHintKind),
/* harmony export */   InlayHintLabelPart: () => (/* binding */ InlayHintLabelPart),
/* harmony export */   InlineValueContext: () => (/* binding */ InlineValueContext),
/* harmony export */   InlineValueEvaluatableExpression: () => (/* binding */ InlineValueEvaluatableExpression),
/* harmony export */   InlineValueText: () => (/* binding */ InlineValueText),
/* harmony export */   InlineValueVariableLookup: () => (/* binding */ InlineValueVariableLookup),
/* harmony export */   InsertReplaceEdit: () => (/* binding */ InsertReplaceEdit),
/* harmony export */   InsertTextFormat: () => (/* binding */ InsertTextFormat),
/* harmony export */   InsertTextMode: () => (/* binding */ InsertTextMode),
/* harmony export */   Location: () => (/* binding */ Location),
/* harmony export */   LocationLink: () => (/* binding */ LocationLink),
/* harmony export */   MarkedString: () => (/* binding */ MarkedString),
/* harmony export */   MarkupContent: () => (/* binding */ MarkupContent),
/* harmony export */   MarkupKind: () => (/* binding */ MarkupKind),
/* harmony export */   OptionalVersionedTextDocumentIdentifier: () => (/* binding */ OptionalVersionedTextDocumentIdentifier),
/* harmony export */   ParameterInformation: () => (/* binding */ ParameterInformation),
/* harmony export */   Position: () => (/* binding */ Position),
/* harmony export */   Range: () => (/* binding */ Range),
/* harmony export */   RenameFile: () => (/* binding */ RenameFile),
/* harmony export */   SelectionRange: () => (/* binding */ SelectionRange),
/* harmony export */   SemanticTokenModifiers: () => (/* binding */ SemanticTokenModifiers),
/* harmony export */   SemanticTokenTypes: () => (/* binding */ SemanticTokenTypes),
/* harmony export */   SemanticTokens: () => (/* binding */ SemanticTokens),
/* harmony export */   SignatureInformation: () => (/* binding */ SignatureInformation),
/* harmony export */   SymbolInformation: () => (/* binding */ SymbolInformation),
/* harmony export */   SymbolKind: () => (/* binding */ SymbolKind),
/* harmony export */   SymbolTag: () => (/* binding */ SymbolTag),
/* harmony export */   TextDocument: () => (/* binding */ TextDocument),
/* harmony export */   TextDocumentEdit: () => (/* binding */ TextDocumentEdit),
/* harmony export */   TextDocumentIdentifier: () => (/* binding */ TextDocumentIdentifier),
/* harmony export */   TextDocumentItem: () => (/* binding */ TextDocumentItem),
/* harmony export */   TextEdit: () => (/* binding */ TextEdit),
/* harmony export */   URI: () => (/* binding */ URI),
/* harmony export */   VersionedTextDocumentIdentifier: () => (/* binding */ VersionedTextDocumentIdentifier),
/* harmony export */   WorkspaceChange: () => (/* binding */ WorkspaceChange),
/* harmony export */   WorkspaceEdit: () => (/* binding */ WorkspaceEdit),
/* harmony export */   WorkspaceFolder: () => (/* binding */ WorkspaceFolder),
/* harmony export */   WorkspaceSymbol: () => (/* binding */ WorkspaceSymbol),
/* harmony export */   integer: () => (/* binding */ integer),
/* harmony export */   uinteger: () => (/* binding */ uinteger)
/* harmony export */ });
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

var DocumentUri;
(function (DocumentUri) {
    function is(value) {
        return typeof value === 'string';
    }
    DocumentUri.is = is;
})(DocumentUri || (DocumentUri = {}));
var URI;
(function (URI) {
    function is(value) {
        return typeof value === 'string';
    }
    URI.is = is;
})(URI || (URI = {}));
var integer;
(function (integer) {
    integer.MIN_VALUE = -2147483648;
    integer.MAX_VALUE = 2147483647;
    function is(value) {
        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;
    }
    integer.is = is;
})(integer || (integer = {}));
var uinteger;
(function (uinteger) {
    uinteger.MIN_VALUE = 0;
    uinteger.MAX_VALUE = 2147483647;
    function is(value) {
        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;
    }
    uinteger.is = is;
})(uinteger || (uinteger = {}));
/**
 * The Position namespace provides helper functions to work with
 * {@link Position} literals.
 */
var Position;
(function (Position) {
    /**
     * Creates a new Position literal from the given line and character.
     * @param line The position's line.
     * @param character The position's character.
     */
    function create(line, character) {
        if (line === Number.MAX_VALUE) {
            line = uinteger.MAX_VALUE;
        }
        if (character === Number.MAX_VALUE) {
            character = uinteger.MAX_VALUE;
        }
        return { line: line, character: character };
    }
    Position.create = create;
    /**
     * Checks whether the given literal conforms to the {@link Position} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);
    }
    Position.is = is;
})(Position || (Position = {}));
/**
 * The Range namespace provides helper functions to work with
 * {@link Range} literals.
 */
var Range;
(function (Range) {
    function create(one, two, three, four) {
        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {
            return { start: Position.create(one, two), end: Position.create(three, four) };
        }
        else if (Position.is(one) && Position.is(two)) {
            return { start: one, end: two };
        }
        else {
            throw new Error("Range#create called with invalid arguments[".concat(one, ", ").concat(two, ", ").concat(three, ", ").concat(four, "]"));
        }
    }
    Range.create = create;
    /**
     * Checks whether the given literal conforms to the {@link Range} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);
    }
    Range.is = is;
})(Range || (Range = {}));
/**
 * The Location namespace provides helper functions to work with
 * {@link Location} literals.
 */
var Location;
(function (Location) {
    /**
     * Creates a Location literal.
     * @param uri The location's uri.
     * @param range The location's range.
     */
    function create(uri, range) {
        return { uri: uri, range: range };
    }
    Location.create = create;
    /**
     * Checks whether the given literal conforms to the {@link Location} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));
    }
    Location.is = is;
})(Location || (Location = {}));
/**
 * The LocationLink namespace provides helper functions to work with
 * {@link LocationLink} literals.
 */
var LocationLink;
(function (LocationLink) {
    /**
     * Creates a LocationLink literal.
     * @param targetUri The definition's uri.
     * @param targetRange The full range of the definition.
     * @param targetSelectionRange The span of the symbol definition at the target.
     * @param originSelectionRange The span of the symbol being defined in the originating source file.
     */
    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {
        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };
    }
    LocationLink.create = create;
    /**
     * Checks whether the given literal conforms to the {@link LocationLink} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)
            && Range.is(candidate.targetSelectionRange)
            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));
    }
    LocationLink.is = is;
})(LocationLink || (LocationLink = {}));
/**
 * The Color namespace provides helper functions to work with
 * {@link Color} literals.
 */
var Color;
(function (Color) {
    /**
     * Creates a new Color literal.
     */
    function create(red, green, blue, alpha) {
        return {
            red: red,
            green: green,
            blue: blue,
            alpha: alpha,
        };
    }
    Color.create = create;
    /**
     * Checks whether the given literal conforms to the {@link Color} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)
            && Is.numberRange(candidate.green, 0, 1)
            && Is.numberRange(candidate.blue, 0, 1)
            && Is.numberRange(candidate.alpha, 0, 1);
    }
    Color.is = is;
})(Color || (Color = {}));
/**
 * The ColorInformation namespace provides helper functions to work with
 * {@link ColorInformation} literals.
 */
var ColorInformation;
(function (ColorInformation) {
    /**
     * Creates a new ColorInformation literal.
     */
    function create(range, color) {
        return {
            range: range,
            color: color,
        };
    }
    ColorInformation.create = create;
    /**
     * Checks whether the given literal conforms to the {@link ColorInformation} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);
    }
    ColorInformation.is = is;
})(ColorInformation || (ColorInformation = {}));
/**
 * The Color namespace provides helper functions to work with
 * {@link ColorPresentation} literals.
 */
var ColorPresentation;
(function (ColorPresentation) {
    /**
     * Creates a new ColorInformation literal.
     */
    function create(label, textEdit, additionalTextEdits) {
        return {
            label: label,
            textEdit: textEdit,
            additionalTextEdits: additionalTextEdits,
        };
    }
    ColorPresentation.create = create;
    /**
     * Checks whether the given literal conforms to the {@link ColorInformation} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && Is.string(candidate.label)
            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))
            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));
    }
    ColorPresentation.is = is;
})(ColorPresentation || (ColorPresentation = {}));
/**
 * A set of predefined range kinds.
 */
var FoldingRangeKind;
(function (FoldingRangeKind) {
    /**
     * Folding range for a comment
     */
    FoldingRangeKind.Comment = 'comment';
    /**
     * Folding range for an import or include
     */
    FoldingRangeKind.Imports = 'imports';
    /**
     * Folding range for a region (e.g. `#region`)
     */
    FoldingRangeKind.Region = 'region';
})(FoldingRangeKind || (FoldingRangeKind = {}));
/**
 * The folding range namespace provides helper functions to work with
 * {@link FoldingRange} literals.
 */
var FoldingRange;
(function (FoldingRange) {
    /**
     * Creates a new FoldingRange literal.
     */
    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {
        var result = {
            startLine: startLine,
            endLine: endLine
        };
        if (Is.defined(startCharacter)) {
            result.startCharacter = startCharacter;
        }
        if (Is.defined(endCharacter)) {
            result.endCharacter = endCharacter;
        }
        if (Is.defined(kind)) {
            result.kind = kind;
        }
        if (Is.defined(collapsedText)) {
            result.collapsedText = collapsedText;
        }
        return result;
    }
    FoldingRange.create = create;
    /**
     * Checks whether the given literal conforms to the {@link FoldingRange} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)
            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))
            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))
            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));
    }
    FoldingRange.is = is;
})(FoldingRange || (FoldingRange = {}));
/**
 * The DiagnosticRelatedInformation namespace provides helper functions to work with
 * {@link DiagnosticRelatedInformation} literals.
 */
var DiagnosticRelatedInformation;
(function (DiagnosticRelatedInformation) {
    /**
     * Creates a new DiagnosticRelatedInformation literal.
     */
    function create(location, message) {
        return {
            location: location,
            message: message
        };
    }
    DiagnosticRelatedInformation.create = create;
    /**
     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);
    }
    DiagnosticRelatedInformation.is = is;
})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));
/**
 * The diagnostic's severity.
 */
var DiagnosticSeverity;
(function (DiagnosticSeverity) {
    /**
     * Reports an error.
     */
    DiagnosticSeverity.Error = 1;
    /**
     * Reports a warning.
     */
    DiagnosticSeverity.Warning = 2;
    /**
     * Reports an information.
     */
    DiagnosticSeverity.Information = 3;
    /**
     * Reports a hint.
     */
    DiagnosticSeverity.Hint = 4;
})(DiagnosticSeverity || (DiagnosticSeverity = {}));
/**
 * The diagnostic tags.
 *
 * @since 3.15.0
 */
var DiagnosticTag;
(function (DiagnosticTag) {
    /**
     * Unused or unnecessary code.
     *
     * Clients are allowed to render diagnostics with this tag faded out instead of having
     * an error squiggle.
     */
    DiagnosticTag.Unnecessary = 1;
    /**
     * Deprecated or obsolete code.
     *
     * Clients are allowed to rendered diagnostics with this tag strike through.
     */
    DiagnosticTag.Deprecated = 2;
})(DiagnosticTag || (DiagnosticTag = {}));
/**
 * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.
 *
 * @since 3.16.0
 */
var CodeDescription;
(function (CodeDescription) {
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && Is.string(candidate.href);
    }
    CodeDescription.is = is;
})(CodeDescription || (CodeDescription = {}));
/**
 * The Diagnostic namespace provides helper functions to work with
 * {@link Diagnostic} literals.
 */
var Diagnostic;
(function (Diagnostic) {
    /**
     * Creates a new Diagnostic literal.
     */
    function create(range, message, severity, code, source, relatedInformation) {
        var result = { range: range, message: message };
        if (Is.defined(severity)) {
            result.severity = severity;
        }
        if (Is.defined(code)) {
            result.code = code;
        }
        if (Is.defined(source)) {
            result.source = source;
        }
        if (Is.defined(relatedInformation)) {
            result.relatedInformation = relatedInformation;
        }
        return result;
    }
    Diagnostic.create = create;
    /**
     * Checks whether the given literal conforms to the {@link Diagnostic} interface.
     */
    function is(value) {
        var _a;
        var candidate = value;
        return Is.defined(candidate)
            && Range.is(candidate.range)
            && Is.string(candidate.message)
            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))
            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))
            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))
            && (Is.string(candidate.source) || Is.undefined(candidate.source))
            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));
    }
    Diagnostic.is = is;
})(Diagnostic || (Diagnostic = {}));
/**
 * The Command namespace provides helper functions to work with
 * {@link Command} literals.
 */
var Command;
(function (Command) {
    /**
     * Creates a new Command literal.
     */
    function create(title, command) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        var result = { title: title, command: command };
        if (Is.defined(args) && args.length > 0) {
            result.arguments = args;
        }
        return result;
    }
    Command.create = create;
    /**
     * Checks whether the given literal conforms to the {@link Command} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);
    }
    Command.is = is;
})(Command || (Command = {}));
/**
 * The TextEdit namespace provides helper function to create replace,
 * insert and delete edits more easily.
 */
var TextEdit;
(function (TextEdit) {
    /**
     * Creates a replace text edit.
     * @param range The range of text to be replaced.
     * @param newText The new text.
     */
    function replace(range, newText) {
        return { range: range, newText: newText };
    }
    TextEdit.replace = replace;
    /**
     * Creates an insert text edit.
     * @param position The position to insert the text at.
     * @param newText The text to be inserted.
     */
    function insert(position, newText) {
        return { range: { start: position, end: position }, newText: newText };
    }
    TextEdit.insert = insert;
    /**
     * Creates a delete text edit.
     * @param range The range of text to be deleted.
     */
    function del(range) {
        return { range: range, newText: '' };
    }
    TextEdit.del = del;
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate)
            && Is.string(candidate.newText)
            && Range.is(candidate.range);
    }
    TextEdit.is = is;
})(TextEdit || (TextEdit = {}));
var ChangeAnnotation;
(function (ChangeAnnotation) {
    function create(label, needsConfirmation, description) {
        var result = { label: label };
        if (needsConfirmation !== undefined) {
            result.needsConfirmation = needsConfirmation;
        }
        if (description !== undefined) {
            result.description = description;
        }
        return result;
    }
    ChangeAnnotation.create = create;
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&
            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&
            (Is.string(candidate.description) || candidate.description === undefined);
    }
    ChangeAnnotation.is = is;
})(ChangeAnnotation || (ChangeAnnotation = {}));
var ChangeAnnotationIdentifier;
(function (ChangeAnnotationIdentifier) {
    function is(value) {
        var candidate = value;
        return Is.string(candidate);
    }
    ChangeAnnotationIdentifier.is = is;
})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));
var AnnotatedTextEdit;
(function (AnnotatedTextEdit) {
    /**
     * Creates an annotated replace text edit.
     *
     * @param range The range of text to be replaced.
     * @param newText The new text.
     * @param annotation The annotation.
     */
    function replace(range, newText, annotation) {
        return { range: range, newText: newText, annotationId: annotation };
    }
    AnnotatedTextEdit.replace = replace;
    /**
     * Creates an annotated insert text edit.
     *
     * @param position The position to insert the text at.
     * @param newText The text to be inserted.
     * @param annotation The annotation.
     */
    function insert(position, newText, annotation) {
        return { range: { start: position, end: position }, newText: newText, annotationId: annotation };
    }
    AnnotatedTextEdit.insert = insert;
    /**
     * Creates an annotated delete text edit.
     *
     * @param range The range of text to be deleted.
     * @param annotation The annotation.
     */
    function del(range, annotation) {
        return { range: range, newText: '', annotationId: annotation };
    }
    AnnotatedTextEdit.del = del;
    function is(value) {
        var candidate = value;
        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));
    }
    AnnotatedTextEdit.is = is;
})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));
/**
 * The TextDocumentEdit namespace provides helper function to create
 * an edit that manipulates a text document.
 */
var TextDocumentEdit;
(function (TextDocumentEdit) {
    /**
     * Creates a new `TextDocumentEdit`
     */
    function create(textDocument, edits) {
        return { textDocument: textDocument, edits: edits };
    }
    TextDocumentEdit.create = create;
    function is(value) {
        var candidate = value;
        return Is.defined(candidate)
            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)
            && Array.isArray(candidate.edits);
    }
    TextDocumentEdit.is = is;
})(TextDocumentEdit || (TextDocumentEdit = {}));
var CreateFile;
(function (CreateFile) {
    function create(uri, options, annotation) {
        var result = {
            kind: 'create',
            uri: uri
        };
        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {
            result.options = options;
        }
        if (annotation !== undefined) {
            result.annotationId = annotation;
        }
        return result;
    }
    CreateFile.create = create;
    function is(value) {
        var candidate = value;
        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||
            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));
    }
    CreateFile.is = is;
})(CreateFile || (CreateFile = {}));
var RenameFile;
(function (RenameFile) {
    function create(oldUri, newUri, options, annotation) {
        var result = {
            kind: 'rename',
            oldUri: oldUri,
            newUri: newUri
        };
        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {
            result.options = options;
        }
        if (annotation !== undefined) {
            result.annotationId = annotation;
        }
        return result;
    }
    RenameFile.create = create;
    function is(value) {
        var candidate = value;
        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||
            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));
    }
    RenameFile.is = is;
})(RenameFile || (RenameFile = {}));
var DeleteFile;
(function (DeleteFile) {
    function create(uri, options, annotation) {
        var result = {
            kind: 'delete',
            uri: uri
        };
        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {
            result.options = options;
        }
        if (annotation !== undefined) {
            result.annotationId = annotation;
        }
        return result;
    }
    DeleteFile.create = create;
    function is(value) {
        var candidate = value;
        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||
            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));
    }
    DeleteFile.is = is;
})(DeleteFile || (DeleteFile = {}));
var WorkspaceEdit;
(function (WorkspaceEdit) {
    function is(value) {
        var candidate = value;
        return candidate &&
            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&
            (candidate.documentChanges === undefined || candidate.documentChanges.every(function (change) {
                if (Is.string(change.kind)) {
                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);
                }
                else {
                    return TextDocumentEdit.is(change);
                }
            }));
    }
    WorkspaceEdit.is = is;
})(WorkspaceEdit || (WorkspaceEdit = {}));
var TextEditChangeImpl = /** @class */ (function () {
    function TextEditChangeImpl(edits, changeAnnotations) {
        this.edits = edits;
        this.changeAnnotations = changeAnnotations;
    }
    TextEditChangeImpl.prototype.insert = function (position, newText, annotation) {
        var edit;
        var id;
        if (annotation === undefined) {
            edit = TextEdit.insert(position, newText);
        }
        else if (ChangeAnnotationIdentifier.is(annotation)) {
            id = annotation;
            edit = AnnotatedTextEdit.insert(position, newText, annotation);
        }
        else {
            this.assertChangeAnnotations(this.changeAnnotations);
            id = this.changeAnnotations.manage(annotation);
            edit = AnnotatedTextEdit.insert(position, newText, id);
        }
        this.edits.push(edit);
        if (id !== undefined) {
            return id;
        }
    };
    TextEditChangeImpl.prototype.replace = function (range, newText, annotation) {
        var edit;
        var id;
        if (annotation === undefined) {
            edit = TextEdit.replace(range, newText);
        }
        else if (ChangeAnnotationIdentifier.is(annotation)) {
            id = annotation;
            edit = AnnotatedTextEdit.replace(range, newText, annotation);
        }
        else {
            this.assertChangeAnnotations(this.changeAnnotations);
            id = this.changeAnnotations.manage(annotation);
            edit = AnnotatedTextEdit.replace(range, newText, id);
        }
        this.edits.push(edit);
        if (id !== undefined) {
            return id;
        }
    };
    TextEditChangeImpl.prototype.delete = function (range, annotation) {
        var edit;
        var id;
        if (annotation === undefined) {
            edit = TextEdit.del(range);
        }
        else if (ChangeAnnotationIdentifier.is(annotation)) {
            id = annotation;
            edit = AnnotatedTextEdit.del(range, annotation);
        }
        else {
            this.assertChangeAnnotations(this.changeAnnotations);
            id = this.changeAnnotations.manage(annotation);
            edit = AnnotatedTextEdit.del(range, id);
        }
        this.edits.push(edit);
        if (id !== undefined) {
            return id;
        }
    };
    TextEditChangeImpl.prototype.add = function (edit) {
        this.edits.push(edit);
    };
    TextEditChangeImpl.prototype.all = function () {
        return this.edits;
    };
    TextEditChangeImpl.prototype.clear = function () {
        this.edits.splice(0, this.edits.length);
    };
    TextEditChangeImpl.prototype.assertChangeAnnotations = function (value) {
        if (value === undefined) {
            throw new Error("Text edit change is not configured to manage change annotations.");
        }
    };
    return TextEditChangeImpl;
}());
/**
 * A helper class
 */
var ChangeAnnotations = /** @class */ (function () {
    function ChangeAnnotations(annotations) {
        this._annotations = annotations === undefined ? Object.create(null) : annotations;
        this._counter = 0;
        this._size = 0;
    }
    ChangeAnnotations.prototype.all = function () {
        return this._annotations;
    };
    Object.defineProperty(ChangeAnnotations.prototype, "size", {
        get: function () {
            return this._size;
        },
        enumerable: false,
        configurable: true
    });
    ChangeAnnotations.prototype.manage = function (idOrAnnotation, annotation) {
        var id;
        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {
            id = idOrAnnotation;
        }
        else {
            id = this.nextId();
            annotation = idOrAnnotation;
        }
        if (this._annotations[id] !== undefined) {
            throw new Error("Id ".concat(id, " is already in use."));
        }
        if (annotation === undefined) {
            throw new Error("No annotation provided for id ".concat(id));
        }
        this._annotations[id] = annotation;
        this._size++;
        return id;
    };
    ChangeAnnotations.prototype.nextId = function () {
        this._counter++;
        return this._counter.toString();
    };
    return ChangeAnnotations;
}());
/**
 * A workspace change helps constructing changes to a workspace.
 */
var WorkspaceChange = /** @class */ (function () {
    function WorkspaceChange(workspaceEdit) {
        var _this = this;
        this._textEditChanges = Object.create(null);
        if (workspaceEdit !== undefined) {
            this._workspaceEdit = workspaceEdit;
            if (workspaceEdit.documentChanges) {
                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);
                workspaceEdit.changeAnnotations = this._changeAnnotations.all();
                workspaceEdit.documentChanges.forEach(function (change) {
                    if (TextDocumentEdit.is(change)) {
                        var textEditChange = new TextEditChangeImpl(change.edits, _this._changeAnnotations);
                        _this._textEditChanges[change.textDocument.uri] = textEditChange;
                    }
                });
            }
            else if (workspaceEdit.changes) {
                Object.keys(workspaceEdit.changes).forEach(function (key) {
                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);
                    _this._textEditChanges[key] = textEditChange;
                });
            }
        }
        else {
            this._workspaceEdit = {};
        }
    }
    Object.defineProperty(WorkspaceChange.prototype, "edit", {
        /**
         * Returns the underlying {@link WorkspaceEdit} literal
         * use to be returned from a workspace edit operation like rename.
         */
        get: function () {
            this.initDocumentChanges();
            if (this._changeAnnotations !== undefined) {
                if (this._changeAnnotations.size === 0) {
                    this._workspaceEdit.changeAnnotations = undefined;
                }
                else {
                    this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();
                }
            }
            return this._workspaceEdit;
        },
        enumerable: false,
        configurable: true
    });
    WorkspaceChange.prototype.getTextEditChange = function (key) {
        if (OptionalVersionedTextDocumentIdentifier.is(key)) {
            this.initDocumentChanges();
            if (this._workspaceEdit.documentChanges === undefined) {
                throw new Error('Workspace edit is not configured for document changes.');
            }
            var textDocument = { uri: key.uri, version: key.version };
            var result = this._textEditChanges[textDocument.uri];
            if (!result) {
                var edits = [];
                var textDocumentEdit = {
                    textDocument: textDocument,
                    edits: edits
                };
                this._workspaceEdit.documentChanges.push(textDocumentEdit);
                result = new TextEditChangeImpl(edits, this._changeAnnotations);
                this._textEditChanges[textDocument.uri] = result;
            }
            return result;
        }
        else {
            this.initChanges();
            if (this._workspaceEdit.changes === undefined) {
                throw new Error('Workspace edit is not configured for normal text edit changes.');
            }
            var result = this._textEditChanges[key];
            if (!result) {
                var edits = [];
                this._workspaceEdit.changes[key] = edits;
                result = new TextEditChangeImpl(edits);
                this._textEditChanges[key] = result;
            }
            return result;
        }
    };
    WorkspaceChange.prototype.initDocumentChanges = function () {
        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {
            this._changeAnnotations = new ChangeAnnotations();
            this._workspaceEdit.documentChanges = [];
            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();
        }
    };
    WorkspaceChange.prototype.initChanges = function () {
        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {
            this._workspaceEdit.changes = Object.create(null);
        }
    };
    WorkspaceChange.prototype.createFile = function (uri, optionsOrAnnotation, options) {
        this.initDocumentChanges();
        if (this._workspaceEdit.documentChanges === undefined) {
            throw new Error('Workspace edit is not configured for document changes.');
        }
        var annotation;
        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {
            annotation = optionsOrAnnotation;
        }
        else {
            options = optionsOrAnnotation;
        }
        var operation;
        var id;
        if (annotation === undefined) {
            operation = CreateFile.create(uri, options);
        }
        else {
            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);
            operation = CreateFile.create(uri, options, id);
        }
        this._workspaceEdit.documentChanges.push(operation);
        if (id !== undefined) {
            return id;
        }
    };
    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, optionsOrAnnotation, options) {
        this.initDocumentChanges();
        if (this._workspaceEdit.documentChanges === undefined) {
            throw new Error('Workspace edit is not configured for document changes.');
        }
        var annotation;
        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {
            annotation = optionsOrAnnotation;
        }
        else {
            options = optionsOrAnnotation;
        }
        var operation;
        var id;
        if (annotation === undefined) {
            operation = RenameFile.create(oldUri, newUri, options);
        }
        else {
            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);
            operation = RenameFile.create(oldUri, newUri, options, id);
        }
        this._workspaceEdit.documentChanges.push(operation);
        if (id !== undefined) {
            return id;
        }
    };
    WorkspaceChange.prototype.deleteFile = function (uri, optionsOrAnnotation, options) {
        this.initDocumentChanges();
        if (this._workspaceEdit.documentChanges === undefined) {
            throw new Error('Workspace edit is not configured for document changes.');
        }
        var annotation;
        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {
            annotation = optionsOrAnnotation;
        }
        else {
            options = optionsOrAnnotation;
        }
        var operation;
        var id;
        if (annotation === undefined) {
            operation = DeleteFile.create(uri, options);
        }
        else {
            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);
            operation = DeleteFile.create(uri, options, id);
        }
        this._workspaceEdit.documentChanges.push(operation);
        if (id !== undefined) {
            return id;
        }
    };
    return WorkspaceChange;
}());

/**
 * The TextDocumentIdentifier namespace provides helper functions to work with
 * {@link TextDocumentIdentifier} literals.
 */
var TextDocumentIdentifier;
(function (TextDocumentIdentifier) {
    /**
     * Creates a new TextDocumentIdentifier literal.
     * @param uri The document's uri.
     */
    function create(uri) {
        return { uri: uri };
    }
    TextDocumentIdentifier.create = create;
    /**
     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.defined(candidate) && Is.string(candidate.uri);
    }
    TextDocumentIdentifier.is = is;
})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));
/**
 * The VersionedTextDocumentIdentifier namespace provides helper functions to work with
 * {@link VersionedTextDocumentIdentifier} literals.
 */
var VersionedTextDocumentIdentifier;
(function (VersionedTextDocumentIdentifier) {
    /**
     * Creates a new VersionedTextDocumentIdentifier literal.
     * @param uri The document's uri.
     * @param version The document's version.
     */
    function create(uri, version) {
        return { uri: uri, version: version };
    }
    VersionedTextDocumentIdentifier.create = create;
    /**
     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);
    }
    VersionedTextDocumentIdentifier.is = is;
})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));
/**
 * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with
 * {@link OptionalVersionedTextDocumentIdentifier} literals.
 */
var OptionalVersionedTextDocumentIdentifier;
(function (OptionalVersionedTextDocumentIdentifier) {
    /**
     * Creates a new OptionalVersionedTextDocumentIdentifier literal.
     * @param uri The document's uri.
     * @param version The document's version.
     */
    function create(uri, version) {
        return { uri: uri, version: version };
    }
    OptionalVersionedTextDocumentIdentifier.create = create;
    /**
     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));
    }
    OptionalVersionedTextDocumentIdentifier.is = is;
})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));
/**
 * The TextDocumentItem namespace provides helper functions to work with
 * {@link TextDocumentItem} literals.
 */
var TextDocumentItem;
(function (TextDocumentItem) {
    /**
     * Creates a new TextDocumentItem literal.
     * @param uri The document's uri.
     * @param languageId The document's language identifier.
     * @param version The document's version number.
     * @param text The document's text.
     */
    function create(uri, languageId, version, text) {
        return { uri: uri, languageId: languageId, version: version, text: text };
    }
    TextDocumentItem.create = create;
    /**
     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);
    }
    TextDocumentItem.is = is;
})(TextDocumentItem || (TextDocumentItem = {}));
/**
 * Describes the content type that a client supports in various
 * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.
 *
 * Please note that `MarkupKinds` must not start with a `$`. This kinds
 * are reserved for internal usage.
 */
var MarkupKind;
(function (MarkupKind) {
    /**
     * Plain text is supported as a content format
     */
    MarkupKind.PlainText = 'plaintext';
    /**
     * Markdown is supported as a content format
     */
    MarkupKind.Markdown = 'markdown';
    /**
     * Checks whether the given value is a value of the {@link MarkupKind} type.
     */
    function is(value) {
        var candidate = value;
        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;
    }
    MarkupKind.is = is;
})(MarkupKind || (MarkupKind = {}));
var MarkupContent;
(function (MarkupContent) {
    /**
     * Checks whether the given value conforms to the {@link MarkupContent} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);
    }
    MarkupContent.is = is;
})(MarkupContent || (MarkupContent = {}));
/**
 * The kind of a completion entry.
 */
var CompletionItemKind;
(function (CompletionItemKind) {
    CompletionItemKind.Text = 1;
    CompletionItemKind.Method = 2;
    CompletionItemKind.Function = 3;
    CompletionItemKind.Constructor = 4;
    CompletionItemKind.Field = 5;
    CompletionItemKind.Variable = 6;
    CompletionItemKind.Class = 7;
    CompletionItemKind.Interface = 8;
    CompletionItemKind.Module = 9;
    CompletionItemKind.Property = 10;
    CompletionItemKind.Unit = 11;
    CompletionItemKind.Value = 12;
    CompletionItemKind.Enum = 13;
    CompletionItemKind.Keyword = 14;
    CompletionItemKind.Snippet = 15;
    CompletionItemKind.Color = 16;
    CompletionItemKind.File = 17;
    CompletionItemKind.Reference = 18;
    CompletionItemKind.Folder = 19;
    CompletionItemKind.EnumMember = 20;
    CompletionItemKind.Constant = 21;
    CompletionItemKind.Struct = 22;
    CompletionItemKind.Event = 23;
    CompletionItemKind.Operator = 24;
    CompletionItemKind.TypeParameter = 25;
})(CompletionItemKind || (CompletionItemKind = {}));
/**
 * Defines whether the insert text in a completion item should be interpreted as
 * plain text or a snippet.
 */
var InsertTextFormat;
(function (InsertTextFormat) {
    /**
     * The primary text to be inserted is treated as a plain string.
     */
    InsertTextFormat.PlainText = 1;
    /**
     * The primary text to be inserted is treated as a snippet.
     *
     * A snippet can define tab stops and placeholders with `$1`, `$2`
     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to
     * the end of the snippet. Placeholders with equal identifiers are linked,
     * that is typing in one will update others too.
     *
     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax
     */
    InsertTextFormat.Snippet = 2;
})(InsertTextFormat || (InsertTextFormat = {}));
/**
 * Completion item tags are extra annotations that tweak the rendering of a completion
 * item.
 *
 * @since 3.15.0
 */
var CompletionItemTag;
(function (CompletionItemTag) {
    /**
     * Render a completion as obsolete, usually using a strike-out.
     */
    CompletionItemTag.Deprecated = 1;
})(CompletionItemTag || (CompletionItemTag = {}));
/**
 * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.
 *
 * @since 3.16.0
 */
var InsertReplaceEdit;
(function (InsertReplaceEdit) {
    /**
     * Creates a new insert / replace edit
     */
    function create(newText, insert, replace) {
        return { newText: newText, insert: insert, replace: replace };
    }
    InsertReplaceEdit.create = create;
    /**
     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.
     */
    function is(value) {
        var candidate = value;
        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);
    }
    InsertReplaceEdit.is = is;
})(InsertReplaceEdit || (InsertReplaceEdit = {}));
/**
 * How whitespace and indentation is handled during completion
 * item insertion.
 *
 * @since 3.16.0
 */
var InsertTextMode;
(function (InsertTextMode) {
    /**
     * The insertion or replace strings is taken as it is. If the
     * value is multi line the lines below the cursor will be
     * inserted using the indentation defined in the string value.
     * The client will not apply any kind of adjustments to the
     * string.
     */
    InsertTextMode.asIs = 1;
    /**
     * The editor adjusts leading whitespace of new lines so that
     * they match the indentation up to the cursor of the line for
     * which the item is accepted.
     *
     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a
     * multi line completion item is indented using 2 tabs and all
     * following lines inserted will be indented using 2 tabs as well.
     */
    InsertTextMode.adjustIndentation = 2;
})(InsertTextMode || (InsertTextMode = {}));
var CompletionItemLabelDetails;
(function (CompletionItemLabelDetails) {
    function is(value) {
        var candidate = value;
        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&
            (Is.string(candidate.description) || candidate.description === undefined);
    }
    CompletionItemLabelDetails.is = is;
})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));
/**
 * The CompletionItem namespace provides functions to deal with
 * completion items.
 */
var CompletionItem;
(function (CompletionItem) {
    /**
     * Create a completion item and seed it with a label.
     * @param label The completion item's label
     */
    function create(label) {
        return { label: label };
    }
    CompletionItem.create = create;
})(CompletionItem || (CompletionItem = {}));
/**
 * The CompletionList namespace provides functions to deal with
 * completion lists.
 */
var CompletionList;
(function (CompletionList) {
    /**
     * Creates a new completion list.
     *
     * @param items The completion items.
     * @param isIncomplete The list is not complete.
     */
    function create(items, isIncomplete) {
        return { items: items ? items : [], isIncomplete: !!isIncomplete };
    }
    CompletionList.create = create;
})(CompletionList || (CompletionList = {}));
var MarkedString;
(function (MarkedString) {
    /**
     * Creates a marked string from plain text.
     *
     * @param plainText The plain text.
     */
    function fromPlainText(plainText) {
        return plainText.replace(/[\\`*_{}[\]()#+\-.!]/g, '\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash
    }
    MarkedString.fromPlainText = fromPlainText;
    /**
     * Checks whether the given value conforms to the {@link MarkedString} type.
     */
    function is(value) {
        var candidate = value;
        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));
    }
    MarkedString.is = is;
})(MarkedString || (MarkedString = {}));
var Hover;
(function (Hover) {
    /**
     * Checks whether the given value conforms to the {@link Hover} interface.
     */
    function is(value) {
        var candidate = value;
        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||
            MarkedString.is(candidate.contents) ||
            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));
    }
    Hover.is = is;
})(Hover || (Hover = {}));
/**
 * The ParameterInformation namespace provides helper functions to work with
 * {@link ParameterInformation} literals.
 */
var ParameterInformation;
(function (ParameterInformation) {
    /**
     * Creates a new parameter information literal.
     *
     * @param label A label string.
     * @param documentation A doc string.
     */
    function create(label, documentation) {
        return documentation ? { label: label, documentation: documentation } : { label: label };
    }
    ParameterInformation.create = create;
})(ParameterInformation || (ParameterInformation = {}));
/**
 * The SignatureInformation namespace provides helper functions to work with
 * {@link SignatureInformation} literals.
 */
var SignatureInformation;
(function (SignatureInformation) {
    function create(label, documentation) {
        var parameters = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            parameters[_i - 2] = arguments[_i];
        }
        var result = { label: label };
        if (Is.defined(documentation)) {
            result.documentation = documentation;
        }
        if (Is.defined(parameters)) {
            result.parameters = parameters;
        }
        else {
            result.parameters = [];
        }
        return result;
    }
    SignatureInformation.create = create;
})(SignatureInformation || (SignatureInformation = {}));
/**
 * A document highlight kind.
 */
var DocumentHighlightKind;
(function (DocumentHighlightKind) {
    /**
     * A textual occurrence.
     */
    DocumentHighlightKind.Text = 1;
    /**
     * Read-access of a symbol, like reading a variable.
     */
    DocumentHighlightKind.Read = 2;
    /**
     * Write-access of a symbol, like writing to a variable.
     */
    DocumentHighlightKind.Write = 3;
})(DocumentHighlightKind || (DocumentHighlightKind = {}));
/**
 * DocumentHighlight namespace to provide helper functions to work with
 * {@link DocumentHighlight} literals.
 */
var DocumentHighlight;
(function (DocumentHighlight) {
    /**
     * Create a DocumentHighlight object.
     * @param range The range the highlight applies to.
     * @param kind The highlight kind
     */
    function create(range, kind) {
        var result = { range: range };
        if (Is.number(kind)) {
            result.kind = kind;
        }
        return result;
    }
    DocumentHighlight.create = create;
})(DocumentHighlight || (DocumentHighlight = {}));
/**
 * A symbol kind.
 */
var SymbolKind;
(function (SymbolKind) {
    SymbolKind.File = 1;
    SymbolKind.Module = 2;
    SymbolKind.Namespace = 3;
    SymbolKind.Package = 4;
    SymbolKind.Class = 5;
    SymbolKind.Method = 6;
    SymbolKind.Property = 7;
    SymbolKind.Field = 8;
    SymbolKind.Constructor = 9;
    SymbolKind.Enum = 10;
    SymbolKind.Interface = 11;
    SymbolKind.Function = 12;
    SymbolKind.Variable = 13;
    SymbolKind.Constant = 14;
    SymbolKind.String = 15;
    SymbolKind.Number = 16;
    SymbolKind.Boolean = 17;
    SymbolKind.Array = 18;
    SymbolKind.Object = 19;
    SymbolKind.Key = 20;
    SymbolKind.Null = 21;
    SymbolKind.EnumMember = 22;
    SymbolKind.Struct = 23;
    SymbolKind.Event = 24;
    SymbolKind.Operator = 25;
    SymbolKind.TypeParameter = 26;
})(SymbolKind || (SymbolKind = {}));
/**
 * Symbol tags are extra annotations that tweak the rendering of a symbol.
 *
 * @since 3.16
 */
var SymbolTag;
(function (SymbolTag) {
    /**
     * Render a symbol as obsolete, usually using a strike-out.
     */
    SymbolTag.Deprecated = 1;
})(SymbolTag || (SymbolTag = {}));
var SymbolInformation;
(function (SymbolInformation) {
    /**
     * Creates a new symbol information literal.
     *
     * @param name The name of the symbol.
     * @param kind The kind of the symbol.
     * @param range The range of the location of the symbol.
     * @param uri The resource of the location of symbol.
     * @param containerName The name of the symbol containing the symbol.
     */
    function create(name, kind, range, uri, containerName) {
        var result = {
            name: name,
            kind: kind,
            location: { uri: uri, range: range }
        };
        if (containerName) {
            result.containerName = containerName;
        }
        return result;
    }
    SymbolInformation.create = create;
})(SymbolInformation || (SymbolInformation = {}));
var WorkspaceSymbol;
(function (WorkspaceSymbol) {
    /**
     * Create a new workspace symbol.
     *
     * @param name The name of the symbol.
     * @param kind The kind of the symbol.
     * @param uri The resource of the location of the symbol.
     * @param range An options range of the location.
     * @returns A WorkspaceSymbol.
     */
    function create(name, kind, uri, range) {
        return range !== undefined
            ? { name: name, kind: kind, location: { uri: uri, range: range } }
            : { name: name, kind: kind, location: { uri: uri } };
    }
    WorkspaceSymbol.create = create;
})(WorkspaceSymbol || (WorkspaceSymbol = {}));
var DocumentSymbol;
(function (DocumentSymbol) {
    /**
     * Creates a new symbol information literal.
     *
     * @param name The name of the symbol.
     * @param detail The detail of the symbol.
     * @param kind The kind of the symbol.
     * @param range The range of the symbol.
     * @param selectionRange The selectionRange of the symbol.
     * @param children Children of the symbol.
     */
    function create(name, detail, kind, range, selectionRange, children) {
        var result = {
            name: name,
            detail: detail,
            kind: kind,
            range: range,
            selectionRange: selectionRange
        };
        if (children !== undefined) {
            result.children = children;
        }
        return result;
    }
    DocumentSymbol.create = create;
    /**
     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.
     */
    function is(value) {
        var candidate = value;
        return candidate &&
            Is.string(candidate.name) && Is.number(candidate.kind) &&
            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&
            (candidate.detail === undefined || Is.string(candidate.detail)) &&
            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&
            (candidate.children === undefined || Array.isArray(candidate.children)) &&
            (candidate.tags === undefined || Array.isArray(candidate.tags));
    }
    DocumentSymbol.is = is;
})(DocumentSymbol || (DocumentSymbol = {}));
/**
 * A set of predefined code action kinds
 */
var CodeActionKind;
(function (CodeActionKind) {
    /**
     * Empty kind.
     */
    CodeActionKind.Empty = '';
    /**
     * Base kind for quickfix actions: 'quickfix'
     */
    CodeActionKind.QuickFix = 'quickfix';
    /**
     * Base kind for refactoring actions: 'refactor'
     */
    CodeActionKind.Refactor = 'refactor';
    /**
     * Base kind for refactoring extraction actions: 'refactor.extract'
     *
     * Example extract actions:
     *
     * - Extract method
     * - Extract function
     * - Extract variable
     * - Extract interface from class
     * - ...
     */
    CodeActionKind.RefactorExtract = 'refactor.extract';
    /**
     * Base kind for refactoring inline actions: 'refactor.inline'
     *
     * Example inline actions:
     *
     * - Inline function
     * - Inline variable
     * - Inline constant
     * - ...
     */
    CodeActionKind.RefactorInline = 'refactor.inline';
    /**
     * Base kind for refactoring rewrite actions: 'refactor.rewrite'
     *
     * Example rewrite actions:
     *
     * - Convert JavaScript function to class
     * - Add or remove parameter
     * - Encapsulate field
     * - Make method static
     * - Move method to base class
     * - ...
     */
    CodeActionKind.RefactorRewrite = 'refactor.rewrite';
    /**
     * Base kind for source actions: `source`
     *
     * Source code actions apply to the entire file.
     */
    CodeActionKind.Source = 'source';
    /**
     * Base kind for an organize imports source action: `source.organizeImports`
     */
    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';
    /**
     * Base kind for auto-fix source actions: `source.fixAll`.
     *
     * Fix all actions automatically fix errors that have a clear fix that do not require user input.
     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.
     *
     * @since 3.15.0
     */
    CodeActionKind.SourceFixAll = 'source.fixAll';
})(CodeActionKind || (CodeActionKind = {}));
/**
 * The reason why code actions were requested.
 *
 * @since 3.17.0
 */
var CodeActionTriggerKind;
(function (CodeActionTriggerKind) {
    /**
     * Code actions were explicitly requested by the user or by an extension.
     */
    CodeActionTriggerKind.Invoked = 1;
    /**
     * Code actions were requested automatically.
     *
     * This typically happens when current selection in a file changes, but can
     * also be triggered when file content changes.
     */
    CodeActionTriggerKind.Automatic = 2;
})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));
/**
 * The CodeActionContext namespace provides helper functions to work with
 * {@link CodeActionContext} literals.
 */
var CodeActionContext;
(function (CodeActionContext) {
    /**
     * Creates a new CodeActionContext literal.
     */
    function create(diagnostics, only, triggerKind) {
        var result = { diagnostics: diagnostics };
        if (only !== undefined && only !== null) {
            result.only = only;
        }
        if (triggerKind !== undefined && triggerKind !== null) {
            result.triggerKind = triggerKind;
        }
        return result;
    }
    CodeActionContext.create = create;
    /**
     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)
            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))
            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);
    }
    CodeActionContext.is = is;
})(CodeActionContext || (CodeActionContext = {}));
var CodeAction;
(function (CodeAction) {
    function create(title, kindOrCommandOrEdit, kind) {
        var result = { title: title };
        var checkKind = true;
        if (typeof kindOrCommandOrEdit === 'string') {
            checkKind = false;
            result.kind = kindOrCommandOrEdit;
        }
        else if (Command.is(kindOrCommandOrEdit)) {
            result.command = kindOrCommandOrEdit;
        }
        else {
            result.edit = kindOrCommandOrEdit;
        }
        if (checkKind && kind !== undefined) {
            result.kind = kind;
        }
        return result;
    }
    CodeAction.create = create;
    function is(value) {
        var candidate = value;
        return candidate && Is.string(candidate.title) &&
            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&
            (candidate.kind === undefined || Is.string(candidate.kind)) &&
            (candidate.edit !== undefined || candidate.command !== undefined) &&
            (candidate.command === undefined || Command.is(candidate.command)) &&
            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&
            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));
    }
    CodeAction.is = is;
})(CodeAction || (CodeAction = {}));
/**
 * The CodeLens namespace provides helper functions to work with
 * {@link CodeLens} literals.
 */
var CodeLens;
(function (CodeLens) {
    /**
     * Creates a new CodeLens literal.
     */
    function create(range, data) {
        var result = { range: range };
        if (Is.defined(data)) {
            result.data = data;
        }
        return result;
    }
    CodeLens.create = create;
    /**
     * Checks whether the given literal conforms to the {@link CodeLens} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));
    }
    CodeLens.is = is;
})(CodeLens || (CodeLens = {}));
/**
 * The FormattingOptions namespace provides helper functions to work with
 * {@link FormattingOptions} literals.
 */
var FormattingOptions;
(function (FormattingOptions) {
    /**
     * Creates a new FormattingOptions literal.
     */
    function create(tabSize, insertSpaces) {
        return { tabSize: tabSize, insertSpaces: insertSpaces };
    }
    FormattingOptions.create = create;
    /**
     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);
    }
    FormattingOptions.is = is;
})(FormattingOptions || (FormattingOptions = {}));
/**
 * The DocumentLink namespace provides helper functions to work with
 * {@link DocumentLink} literals.
 */
var DocumentLink;
(function (DocumentLink) {
    /**
     * Creates a new DocumentLink literal.
     */
    function create(range, target, data) {
        return { range: range, target: target, data: data };
    }
    DocumentLink.create = create;
    /**
     * Checks whether the given literal conforms to the {@link DocumentLink} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));
    }
    DocumentLink.is = is;
})(DocumentLink || (DocumentLink = {}));
/**
 * The SelectionRange namespace provides helper function to work with
 * SelectionRange literals.
 */
var SelectionRange;
(function (SelectionRange) {
    /**
     * Creates a new SelectionRange
     * @param range the range.
     * @param parent an optional parent.
     */
    function create(range, parent) {
        return { range: range, parent: parent };
    }
    SelectionRange.create = create;
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));
    }
    SelectionRange.is = is;
})(SelectionRange || (SelectionRange = {}));
/**
 * A set of predefined token types. This set is not fixed
 * an clients can specify additional token types via the
 * corresponding client capabilities.
 *
 * @since 3.16.0
 */
var SemanticTokenTypes;
(function (SemanticTokenTypes) {
    SemanticTokenTypes["namespace"] = "namespace";
    /**
     * Represents a generic type. Acts as a fallback for types which can't be mapped to
     * a specific type like class or enum.
     */
    SemanticTokenTypes["type"] = "type";
    SemanticTokenTypes["class"] = "class";
    SemanticTokenTypes["enum"] = "enum";
    SemanticTokenTypes["interface"] = "interface";
    SemanticTokenTypes["struct"] = "struct";
    SemanticTokenTypes["typeParameter"] = "typeParameter";
    SemanticTokenTypes["parameter"] = "parameter";
    SemanticTokenTypes["variable"] = "variable";
    SemanticTokenTypes["property"] = "property";
    SemanticTokenTypes["enumMember"] = "enumMember";
    SemanticTokenTypes["event"] = "event";
    SemanticTokenTypes["function"] = "function";
    SemanticTokenTypes["method"] = "method";
    SemanticTokenTypes["macro"] = "macro";
    SemanticTokenTypes["keyword"] = "keyword";
    SemanticTokenTypes["modifier"] = "modifier";
    SemanticTokenTypes["comment"] = "comment";
    SemanticTokenTypes["string"] = "string";
    SemanticTokenTypes["number"] = "number";
    SemanticTokenTypes["regexp"] = "regexp";
    SemanticTokenTypes["operator"] = "operator";
    /**
     * @since 3.17.0
     */
    SemanticTokenTypes["decorator"] = "decorator";
})(SemanticTokenTypes || (SemanticTokenTypes = {}));
/**
 * A set of predefined token modifiers. This set is not fixed
 * an clients can specify additional token types via the
 * corresponding client capabilities.
 *
 * @since 3.16.0
 */
var SemanticTokenModifiers;
(function (SemanticTokenModifiers) {
    SemanticTokenModifiers["declaration"] = "declaration";
    SemanticTokenModifiers["definition"] = "definition";
    SemanticTokenModifiers["readonly"] = "readonly";
    SemanticTokenModifiers["static"] = "static";
    SemanticTokenModifiers["deprecated"] = "deprecated";
    SemanticTokenModifiers["abstract"] = "abstract";
    SemanticTokenModifiers["async"] = "async";
    SemanticTokenModifiers["modification"] = "modification";
    SemanticTokenModifiers["documentation"] = "documentation";
    SemanticTokenModifiers["defaultLibrary"] = "defaultLibrary";
})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));
/**
 * @since 3.16.0
 */
var SemanticTokens;
(function (SemanticTokens) {
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&
            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');
    }
    SemanticTokens.is = is;
})(SemanticTokens || (SemanticTokens = {}));
/**
 * The InlineValueText namespace provides functions to deal with InlineValueTexts.
 *
 * @since 3.17.0
 */
var InlineValueText;
(function (InlineValueText) {
    /**
     * Creates a new InlineValueText literal.
     */
    function create(range, text) {
        return { range: range, text: text };
    }
    InlineValueText.create = create;
    function is(value) {
        var candidate = value;
        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);
    }
    InlineValueText.is = is;
})(InlineValueText || (InlineValueText = {}));
/**
 * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.
 *
 * @since 3.17.0
 */
var InlineValueVariableLookup;
(function (InlineValueVariableLookup) {
    /**
     * Creates a new InlineValueText literal.
     */
    function create(range, variableName, caseSensitiveLookup) {
        return { range: range, variableName: variableName, caseSensitiveLookup: caseSensitiveLookup };
    }
    InlineValueVariableLookup.create = create;
    function is(value) {
        var candidate = value;
        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)
            && (Is.string(candidate.variableName) || candidate.variableName === undefined);
    }
    InlineValueVariableLookup.is = is;
})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));
/**
 * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.
 *
 * @since 3.17.0
 */
var InlineValueEvaluatableExpression;
(function (InlineValueEvaluatableExpression) {
    /**
     * Creates a new InlineValueEvaluatableExpression literal.
     */
    function create(range, expression) {
        return { range: range, expression: expression };
    }
    InlineValueEvaluatableExpression.create = create;
    function is(value) {
        var candidate = value;
        return candidate !== undefined && candidate !== null && Range.is(candidate.range)
            && (Is.string(candidate.expression) || candidate.expression === undefined);
    }
    InlineValueEvaluatableExpression.is = is;
})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));
/**
 * The InlineValueContext namespace provides helper functions to work with
 * {@link InlineValueContext} literals.
 *
 * @since 3.17.0
 */
var InlineValueContext;
(function (InlineValueContext) {
    /**
     * Creates a new InlineValueContext literal.
     */
    function create(frameId, stoppedLocation) {
        return { frameId: frameId, stoppedLocation: stoppedLocation };
    }
    InlineValueContext.create = create;
    /**
     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.defined(candidate) && Range.is(value.stoppedLocation);
    }
    InlineValueContext.is = is;
})(InlineValueContext || (InlineValueContext = {}));
/**
 * Inlay hint kinds.
 *
 * @since 3.17.0
 */
var InlayHintKind;
(function (InlayHintKind) {
    /**
     * An inlay hint that for a type annotation.
     */
    InlayHintKind.Type = 1;
    /**
     * An inlay hint that is for a parameter.
     */
    InlayHintKind.Parameter = 2;
    function is(value) {
        return value === 1 || value === 2;
    }
    InlayHintKind.is = is;
})(InlayHintKind || (InlayHintKind = {}));
var InlayHintLabelPart;
(function (InlayHintLabelPart) {
    function create(value) {
        return { value: value };
    }
    InlayHintLabelPart.create = create;
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate)
            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))
            && (candidate.location === undefined || Location.is(candidate.location))
            && (candidate.command === undefined || Command.is(candidate.command));
    }
    InlayHintLabelPart.is = is;
})(InlayHintLabelPart || (InlayHintLabelPart = {}));
var InlayHint;
(function (InlayHint) {
    function create(position, label, kind) {
        var result = { position: position, label: label };
        if (kind !== undefined) {
            result.kind = kind;
        }
        return result;
    }
    InlayHint.create = create;
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && Position.is(candidate.position)
            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))
            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))
            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)
            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))
            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))
            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));
    }
    InlayHint.is = is;
})(InlayHint || (InlayHint = {}));
var WorkspaceFolder;
(function (WorkspaceFolder) {
    function is(value) {
        var candidate = value;
        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);
    }
    WorkspaceFolder.is = is;
})(WorkspaceFolder || (WorkspaceFolder = {}));
var EOL = ['\n', '\r\n', '\r'];
/**
 * @deprecated Use the text document from the new vscode-languageserver-textdocument package.
 */
var TextDocument;
(function (TextDocument) {
    /**
     * Creates a new ITextDocument literal from the given uri and content.
     * @param uri The document's uri.
     * @param languageId The document's language Id.
     * @param version The document's version.
     * @param content The document's content.
     */
    function create(uri, languageId, version, content) {
        return new FullTextDocument(uri, languageId, version, content);
    }
    TextDocument.create = create;
    /**
     * Checks whether the given literal conforms to the {@link ITextDocument} interface.
     */
    function is(value) {
        var candidate = value;
        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)
            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;
    }
    TextDocument.is = is;
    function applyEdits(document, edits) {
        var text = document.getText();
        var sortedEdits = mergeSort(edits, function (a, b) {
            var diff = a.range.start.line - b.range.start.line;
            if (diff === 0) {
                return a.range.start.character - b.range.start.character;
            }
            return diff;
        });
        var lastModifiedOffset = text.length;
        for (var i = sortedEdits.length - 1; i >= 0; i--) {
            var e = sortedEdits[i];
            var startOffset = document.offsetAt(e.range.start);
            var endOffset = document.offsetAt(e.range.end);
            if (endOffset <= lastModifiedOffset) {
                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);
            }
            else {
                throw new Error('Overlapping edit');
            }
            lastModifiedOffset = startOffset;
        }
        return text;
    }
    TextDocument.applyEdits = applyEdits;
    function mergeSort(data, compare) {
        if (data.length <= 1) {
            // sorted
            return data;
        }
        var p = (data.length / 2) | 0;
        var left = data.slice(0, p);
        var right = data.slice(p);
        mergeSort(left, compare);
        mergeSort(right, compare);
        var leftIdx = 0;
        var rightIdx = 0;
        var i = 0;
        while (leftIdx < left.length && rightIdx < right.length) {
            var ret = compare(left[leftIdx], right[rightIdx]);
            if (ret <= 0) {
                // smaller_equal -> take left to preserve order
                data[i++] = left[leftIdx++];
            }
            else {
                // greater -> take right
                data[i++] = right[rightIdx++];
            }
        }
        while (leftIdx < left.length) {
            data[i++] = left[leftIdx++];
        }
        while (rightIdx < right.length) {
            data[i++] = right[rightIdx++];
        }
        return data;
    }
})(TextDocument || (TextDocument = {}));
/**
 * @deprecated Use the text document from the new vscode-languageserver-textdocument package.
 */
var FullTextDocument = /** @class */ (function () {
    function FullTextDocument(uri, languageId, version, content) {
        this._uri = uri;
        this._languageId = languageId;
        this._version = version;
        this._content = content;
        this._lineOffsets = undefined;
    }
    Object.defineProperty(FullTextDocument.prototype, "uri", {
        get: function () {
            return this._uri;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FullTextDocument.prototype, "languageId", {
        get: function () {
            return this._languageId;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FullTextDocument.prototype, "version", {
        get: function () {
            return this._version;
        },
        enumerable: false,
        configurable: true
    });
    FullTextDocument.prototype.getText = function (range) {
        if (range) {
            var start = this.offsetAt(range.start);
            var end = this.offsetAt(range.end);
            return this._content.substring(start, end);
        }
        return this._content;
    };
    FullTextDocument.prototype.update = function (event, version) {
        this._content = event.text;
        this._version = version;
        this._lineOffsets = undefined;
    };
    FullTextDocument.prototype.getLineOffsets = function () {
        if (this._lineOffsets === undefined) {
            var lineOffsets = [];
            var text = this._content;
            var isLineStart = true;
            for (var i = 0; i < text.length; i++) {
                if (isLineStart) {
                    lineOffsets.push(i);
                    isLineStart = false;
                }
                var ch = text.charAt(i);
                isLineStart = (ch === '\r' || ch === '\n');
                if (ch === '\r' && i + 1 < text.length && text.charAt(i + 1) === '\n') {
                    i++;
                }
            }
            if (isLineStart && text.length > 0) {
                lineOffsets.push(text.length);
            }
            this._lineOffsets = lineOffsets;
        }
        return this._lineOffsets;
    };
    FullTextDocument.prototype.positionAt = function (offset) {
        offset = Math.max(Math.min(offset, this._content.length), 0);
        var lineOffsets = this.getLineOffsets();
        var low = 0, high = lineOffsets.length;
        if (high === 0) {
            return Position.create(0, offset);
        }
        while (low < high) {
            var mid = Math.floor((low + high) / 2);
            if (lineOffsets[mid] > offset) {
                high = mid;
            }
            else {
                low = mid + 1;
            }
        }
        // low is the least x for which the line offset is larger than the current offset
        // or array.length if no line offset is larger than the current offset
        var line = low - 1;
        return Position.create(line, offset - lineOffsets[line]);
    };
    FullTextDocument.prototype.offsetAt = function (position) {
        var lineOffsets = this.getLineOffsets();
        if (position.line >= lineOffsets.length) {
            return this._content.length;
        }
        else if (position.line < 0) {
            return 0;
        }
        var lineOffset = lineOffsets[position.line];
        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;
        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);
    };
    Object.defineProperty(FullTextDocument.prototype, "lineCount", {
        get: function () {
            return this.getLineOffsets().length;
        },
        enumerable: false,
        configurable: true
    });
    return FullTextDocument;
}());
var Is;
(function (Is) {
    var toString = Object.prototype.toString;
    function defined(value) {
        return typeof value !== 'undefined';
    }
    Is.defined = defined;
    function undefined(value) {
        return typeof value === 'undefined';
    }
    Is.undefined = undefined;
    function boolean(value) {
        return value === true || value === false;
    }
    Is.boolean = boolean;
    function string(value) {
        return toString.call(value) === '[object String]';
    }
    Is.string = string;
    function number(value) {
        return toString.call(value) === '[object Number]';
    }
    Is.number = number;
    function numberRange(value, min, max) {
        return toString.call(value) === '[object Number]' && min <= value && value <= max;
    }
    Is.numberRange = numberRange;
    function integer(value) {
        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;
    }
    Is.integer = integer;
    function uinteger(value) {
        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;
    }
    Is.uinteger = uinteger;
    function func(value) {
        return toString.call(value) === '[object Function]';
    }
    Is.func = func;
    function objectLiteral(value) {
        // Strictly speaking class instances pass this check as well. Since the LSP
        // doesn't use classes we ignore this for now. If we do we need to add something
        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`
        return value !== null && typeof value === 'object';
    }
    Is.objectLiteral = objectLiteral;
    function typedArray(value, check) {
        return Array.isArray(value) && value.every(check);
    }
    Is.typedArray = typedArray;
})(Is || (Is = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/api.js":
/*!**************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/api.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProposedFeatures = exports.NotebookDocuments = exports.TextDocuments = exports.SemanticTokensBuilder = void 0;
const semanticTokens_1 = __webpack_require__(/*! ./semanticTokens */ "./node_modules/vscode-languageserver/lib/common/semanticTokens.js");
Object.defineProperty(exports, "SemanticTokensBuilder", ({ enumerable: true, get: function () { return semanticTokens_1.SemanticTokensBuilder; } }));
__exportStar(__webpack_require__(/*! vscode-languageserver-protocol/ */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js"), exports);
const textDocuments_1 = __webpack_require__(/*! ./textDocuments */ "./node_modules/vscode-languageserver/lib/common/textDocuments.js");
Object.defineProperty(exports, "TextDocuments", ({ enumerable: true, get: function () { return textDocuments_1.TextDocuments; } }));
const notebook_1 = __webpack_require__(/*! ./notebook */ "./node_modules/vscode-languageserver/lib/common/notebook.js");
Object.defineProperty(exports, "NotebookDocuments", ({ enumerable: true, get: function () { return notebook_1.NotebookDocuments; } }));
__exportStar(__webpack_require__(/*! ./server */ "./node_modules/vscode-languageserver/lib/common/server.js"), exports);
var ProposedFeatures;
(function (ProposedFeatures) {
    ProposedFeatures.all = {
        __brand: 'features',
    };
})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/callHierarchy.js":
/*!************************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/callHierarchy.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CallHierarchyFeature = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const CallHierarchyFeature = (Base) => {
    return class extends Base {
        get callHierarchy() {
            return {
                onPrepare: (handler) => {
                    return this.connection.onRequest(vscode_languageserver_protocol_1.CallHierarchyPrepareRequest.type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params), undefined);
                    });
                },
                onIncomingCalls: (handler) => {
                    const type = vscode_languageserver_protocol_1.CallHierarchyIncomingCallsRequest.type;
                    return this.connection.onRequest(type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));
                    });
                },
                onOutgoingCalls: (handler) => {
                    const type = vscode_languageserver_protocol_1.CallHierarchyOutgoingCallsRequest.type;
                    return this.connection.onRequest(type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));
                    });
                }
            };
        }
    };
};
exports.CallHierarchyFeature = CallHierarchyFeature;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/configuration.js":
/*!************************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/configuration.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ConfigurationFeature = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const Is = __webpack_require__(/*! ./utils/is */ "./node_modules/vscode-languageserver/lib/common/utils/is.js");
const ConfigurationFeature = (Base) => {
    return class extends Base {
        getConfiguration(arg) {
            if (!arg) {
                return this._getConfiguration({});
            }
            else if (Is.string(arg)) {
                return this._getConfiguration({ section: arg });
            }
            else {
                return this._getConfiguration(arg);
            }
        }
        _getConfiguration(arg) {
            let params = {
                items: Array.isArray(arg) ? arg : [arg]
            };
            return this.connection.sendRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, params).then((result) => {
                if (Array.isArray(result)) {
                    return Array.isArray(arg) ? result : result[0];
                }
                else {
                    return Array.isArray(arg) ? [] : null;
                }
            });
        }
    };
};
exports.ConfigurationFeature = ConfigurationFeature;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/diagnostic.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/diagnostic.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DiagnosticFeature = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const DiagnosticFeature = (Base) => {
    return class extends Base {
        get diagnostics() {
            return {
                refresh: () => {
                    return this.connection.sendRequest(vscode_languageserver_protocol_1.DiagnosticRefreshRequest.type);
                },
                on: (handler) => {
                    return this.connection.onRequest(vscode_languageserver_protocol_1.DocumentDiagnosticRequest.type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(vscode_languageserver_protocol_1.DocumentDiagnosticRequest.partialResult, params));
                    });
                },
                onWorkspace: (handler) => {
                    return this.connection.onRequest(vscode_languageserver_protocol_1.WorkspaceDiagnosticRequest.type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(vscode_languageserver_protocol_1.WorkspaceDiagnosticRequest.partialResult, params));
                    });
                }
            };
        }
    };
};
exports.DiagnosticFeature = DiagnosticFeature;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/fileOperations.js":
/*!*************************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/fileOperations.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FileOperationsFeature = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const FileOperationsFeature = (Base) => {
    return class extends Base {
        onDidCreateFiles(handler) {
            return this.connection.onNotification(vscode_languageserver_protocol_1.DidCreateFilesNotification.type, (params) => {
                handler(params);
            });
        }
        onDidRenameFiles(handler) {
            return this.connection.onNotification(vscode_languageserver_protocol_1.DidRenameFilesNotification.type, (params) => {
                handler(params);
            });
        }
        onDidDeleteFiles(handler) {
            return this.connection.onNotification(vscode_languageserver_protocol_1.DidDeleteFilesNotification.type, (params) => {
                handler(params);
            });
        }
        onWillCreateFiles(handler) {
            return this.connection.onRequest(vscode_languageserver_protocol_1.WillCreateFilesRequest.type, (params, cancel) => {
                return handler(params, cancel);
            });
        }
        onWillRenameFiles(handler) {
            return this.connection.onRequest(vscode_languageserver_protocol_1.WillRenameFilesRequest.type, (params, cancel) => {
                return handler(params, cancel);
            });
        }
        onWillDeleteFiles(handler) {
            return this.connection.onRequest(vscode_languageserver_protocol_1.WillDeleteFilesRequest.type, (params, cancel) => {
                return handler(params, cancel);
            });
        }
    };
};
exports.FileOperationsFeature = FileOperationsFeature;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/inlayHint.js":
/*!********************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/inlayHint.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.InlayHintFeature = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const InlayHintFeature = (Base) => {
    return class extends Base {
        get inlayHint() {
            return {
                refresh: () => {
                    return this.connection.sendRequest(vscode_languageserver_protocol_1.InlayHintRefreshRequest.type);
                },
                on: (handler) => {
                    return this.connection.onRequest(vscode_languageserver_protocol_1.InlayHintRequest.type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params));
                    });
                },
                resolve: (handler) => {
                    return this.connection.onRequest(vscode_languageserver_protocol_1.InlayHintResolveRequest.type, (params, cancel) => {
                        return handler(params, cancel);
                    });
                }
            };
        }
    };
};
exports.InlayHintFeature = InlayHintFeature;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/inlineValue.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/inlineValue.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.InlineValueFeature = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const InlineValueFeature = (Base) => {
    return class extends Base {
        get inlineValue() {
            return {
                refresh: () => {
                    return this.connection.sendRequest(vscode_languageserver_protocol_1.InlineValueRefreshRequest.type);
                },
                on: (handler) => {
                    return this.connection.onRequest(vscode_languageserver_protocol_1.InlineValueRequest.type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params));
                    });
                }
            };
        }
    };
};
exports.InlineValueFeature = InlineValueFeature;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/linkedEditingRange.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/linkedEditingRange.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LinkedEditingRangeFeature = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const LinkedEditingRangeFeature = (Base) => {
    return class extends Base {
        onLinkedEditingRange(handler) {
            return this.connection.onRequest(vscode_languageserver_protocol_1.LinkedEditingRangeRequest.type, (params, cancel) => {
                return handler(params, cancel, this.attachWorkDoneProgress(params), undefined);
            });
        }
    };
};
exports.LinkedEditingRangeFeature = LinkedEditingRangeFeature;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/moniker.js":
/*!******************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/moniker.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MonikerFeature = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const MonikerFeature = (Base) => {
    return class extends Base {
        get moniker() {
            return {
                on: (handler) => {
                    const type = vscode_languageserver_protocol_1.MonikerRequest.type;
                    return this.connection.onRequest(type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));
                    });
                },
            };
        }
    };
};
exports.MonikerFeature = MonikerFeature;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/notebook.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/notebook.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NotebookDocuments = exports.NotebookSyncFeature = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const textDocuments_1 = __webpack_require__(/*! ./textDocuments */ "./node_modules/vscode-languageserver/lib/common/textDocuments.js");
const NotebookSyncFeature = (Base) => {
    return class extends Base {
        get synchronization() {
            return {
                onDidOpenNotebookDocument: (handler) => {
                    return this.connection.onNotification(vscode_languageserver_protocol_1.DidOpenNotebookDocumentNotification.type, (params) => {
                        handler(params);
                    });
                },
                onDidChangeNotebookDocument: (handler) => {
                    return this.connection.onNotification(vscode_languageserver_protocol_1.DidChangeNotebookDocumentNotification.type, (params) => {
                        handler(params);
                    });
                },
                onDidSaveNotebookDocument: (handler) => {
                    return this.connection.onNotification(vscode_languageserver_protocol_1.DidSaveNotebookDocumentNotification.type, (params) => {
                        handler(params);
                    });
                },
                onDidCloseNotebookDocument: (handler) => {
                    return this.connection.onNotification(vscode_languageserver_protocol_1.DidCloseNotebookDocumentNotification.type, (params) => {
                        handler(params);
                    });
                }
            };
        }
    };
};
exports.NotebookSyncFeature = NotebookSyncFeature;
class CellTextDocumentConnection {
    onDidOpenTextDocument(handler) {
        this.openHandler = handler;
        return vscode_languageserver_protocol_1.Disposable.create(() => { this.openHandler = undefined; });
    }
    openTextDocument(params) {
        this.openHandler && this.openHandler(params);
    }
    onDidChangeTextDocument(handler) {
        this.changeHandler = handler;
        return vscode_languageserver_protocol_1.Disposable.create(() => { this.changeHandler = handler; });
    }
    changeTextDocument(params) {
        this.changeHandler && this.changeHandler(params);
    }
    onDidCloseTextDocument(handler) {
        this.closeHandler = handler;
        return vscode_languageserver_protocol_1.Disposable.create(() => { this.closeHandler = undefined; });
    }
    closeTextDocument(params) {
        this.closeHandler && this.closeHandler(params);
    }
    onWillSaveTextDocument() {
        return CellTextDocumentConnection.NULL_DISPOSE;
    }
    onWillSaveTextDocumentWaitUntil() {
        return CellTextDocumentConnection.NULL_DISPOSE;
    }
    onDidSaveTextDocument() {
        return CellTextDocumentConnection.NULL_DISPOSE;
    }
}
CellTextDocumentConnection.NULL_DISPOSE = Object.freeze({ dispose: () => { } });
class NotebookDocuments {
    constructor(configurationOrTextDocuments) {
        if (configurationOrTextDocuments instanceof textDocuments_1.TextDocuments) {
            this._cellTextDocuments = configurationOrTextDocuments;
        }
        else {
            this._cellTextDocuments = new textDocuments_1.TextDocuments(configurationOrTextDocuments);
        }
        this.notebookDocuments = new Map();
        this.notebookCellMap = new Map();
        this._onDidOpen = new vscode_languageserver_protocol_1.Emitter();
        this._onDidChange = new vscode_languageserver_protocol_1.Emitter();
        this._onDidSave = new vscode_languageserver_protocol_1.Emitter();
        this._onDidClose = new vscode_languageserver_protocol_1.Emitter();
    }
    get cellTextDocuments() {
        return this._cellTextDocuments;
    }
    getCellTextDocument(cell) {
        return this._cellTextDocuments.get(cell.document);
    }
    getNotebookDocument(uri) {
        return this.notebookDocuments.get(uri);
    }
    getNotebookCell(uri) {
        const value = this.notebookCellMap.get(uri);
        return value && value[0];
    }
    findNotebookDocumentForCell(cell) {
        const key = typeof cell === 'string' ? cell : cell.document;
        const value = this.notebookCellMap.get(key);
        return value && value[1];
    }
    get onDidOpen() {
        return this._onDidOpen.event;
    }
    get onDidSave() {
        return this._onDidSave.event;
    }
    get onDidChange() {
        return this._onDidChange.event;
    }
    get onDidClose() {
        return this._onDidClose.event;
    }
    /**
     * Listens for `low level` notification on the given connection to
     * update the notebook documents managed by this instance.
     *
     * Please note that the connection only provides handlers not an event model. Therefore
     * listening on a connection will overwrite the following handlers on a connection:
     * `onDidOpenNotebookDocument`, `onDidChangeNotebookDocument`, `onDidSaveNotebookDocument`,
     *  and `onDidCloseNotebookDocument`.
     *
     * @param connection The connection to listen on.
     */
    listen(connection) {
        const cellTextDocumentConnection = new CellTextDocumentConnection();
        const disposables = [];
        disposables.push(this.cellTextDocuments.listen(cellTextDocumentConnection));
        disposables.push(connection.notebooks.synchronization.onDidOpenNotebookDocument((params) => {
            this.notebookDocuments.set(params.notebookDocument.uri, params.notebookDocument);
            for (const cellTextDocument of params.cellTextDocuments) {
                cellTextDocumentConnection.openTextDocument({ textDocument: cellTextDocument });
            }
            this.updateCellMap(params.notebookDocument);
            this._onDidOpen.fire(params.notebookDocument);
        }));
        disposables.push(connection.notebooks.synchronization.onDidChangeNotebookDocument((params) => {
            const notebookDocument = this.notebookDocuments.get(params.notebookDocument.uri);
            if (notebookDocument === undefined) {
                return;
            }
            notebookDocument.version = params.notebookDocument.version;
            const oldMetadata = notebookDocument.metadata;
            let metadataChanged = false;
            const change = params.change;
            if (change.metadata !== undefined) {
                metadataChanged = true;
                notebookDocument.metadata = change.metadata;
            }
            const opened = [];
            const closed = [];
            const data = [];
            const text = [];
            if (change.cells !== undefined) {
                const changedCells = change.cells;
                if (changedCells.structure !== undefined) {
                    const array = changedCells.structure.array;
                    notebookDocument.cells.splice(array.start, array.deleteCount, ...(array.cells !== undefined ? array.cells : []));
                    // Additional open cell text documents.
                    if (changedCells.structure.didOpen !== undefined) {
                        for (const open of changedCells.structure.didOpen) {
                            cellTextDocumentConnection.openTextDocument({ textDocument: open });
                            opened.push(open.uri);
                        }
                    }
                    // Additional closed cell test documents.
                    if (changedCells.structure.didClose) {
                        for (const close of changedCells.structure.didClose) {
                            cellTextDocumentConnection.closeTextDocument({ textDocument: close });
                            closed.push(close.uri);
                        }
                    }
                }
                if (changedCells.data !== undefined) {
                    const cellUpdates = new Map(changedCells.data.map(cell => [cell.document, cell]));
                    for (let i = 0; i <= notebookDocument.cells.length; i++) {
                        const change = cellUpdates.get(notebookDocument.cells[i].document);
                        if (change !== undefined) {
                            const old = notebookDocument.cells.splice(i, 1, change);
                            data.push({ old: old[0], new: change });
                            cellUpdates.delete(change.document);
                            if (cellUpdates.size === 0) {
                                break;
                            }
                        }
                    }
                }
                if (changedCells.textContent !== undefined) {
                    for (const cellTextDocument of changedCells.textContent) {
                        cellTextDocumentConnection.changeTextDocument({ textDocument: cellTextDocument.document, contentChanges: cellTextDocument.changes });
                        text.push(cellTextDocument.document.uri);
                    }
                }
            }
            // Update internal data structure.
            this.updateCellMap(notebookDocument);
            const changeEvent = { notebookDocument };
            if (metadataChanged) {
                changeEvent.metadata = { old: oldMetadata, new: notebookDocument.metadata };
            }
            const added = [];
            for (const open of opened) {
                added.push(this.getNotebookCell(open));
            }
            const removed = [];
            for (const close of closed) {
                removed.push(this.getNotebookCell(close));
            }
            const textContent = [];
            for (const change of text) {
                textContent.push(this.getNotebookCell(change));
            }
            if (added.length > 0 || removed.length > 0 || data.length > 0 || textContent.length > 0) {
                changeEvent.cells = { added, removed, changed: { data, textContent } };
            }
            if (changeEvent.metadata !== undefined || changeEvent.cells !== undefined) {
                this._onDidChange.fire(changeEvent);
            }
        }));
        disposables.push(connection.notebooks.synchronization.onDidSaveNotebookDocument((params) => {
            const notebookDocument = this.notebookDocuments.get(params.notebookDocument.uri);
            if (notebookDocument === undefined) {
                return;
            }
            this._onDidSave.fire(notebookDocument);
        }));
        disposables.push(connection.notebooks.synchronization.onDidCloseNotebookDocument((params) => {
            const notebookDocument = this.notebookDocuments.get(params.notebookDocument.uri);
            if (notebookDocument === undefined) {
                return;
            }
            this._onDidClose.fire(notebookDocument);
            for (const cellTextDocument of params.cellTextDocuments) {
                cellTextDocumentConnection.closeTextDocument({ textDocument: cellTextDocument });
            }
            this.notebookDocuments.delete(params.notebookDocument.uri);
            for (const cell of notebookDocument.cells) {
                this.notebookCellMap.delete(cell.document);
            }
        }));
        return vscode_languageserver_protocol_1.Disposable.create(() => { disposables.forEach(disposable => disposable.dispose()); });
    }
    updateCellMap(notebookDocument) {
        for (const cell of notebookDocument.cells) {
            this.notebookCellMap.set(cell.document, [cell, notebookDocument]);
        }
    }
}
exports.NotebookDocuments = NotebookDocuments;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/progress.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/progress.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.attachPartialResult = exports.ProgressFeature = exports.attachWorkDone = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const uuid_1 = __webpack_require__(/*! ./utils/uuid */ "./node_modules/vscode-languageserver/lib/common/utils/uuid.js");
class WorkDoneProgressReporterImpl {
    constructor(_connection, _token) {
        this._connection = _connection;
        this._token = _token;
        WorkDoneProgressReporterImpl.Instances.set(this._token, this);
    }
    begin(title, percentage, message, cancellable) {
        let param = {
            kind: 'begin',
            title,
            percentage,
            message,
            cancellable
        };
        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);
    }
    report(arg0, arg1) {
        let param = {
            kind: 'report'
        };
        if (typeof arg0 === 'number') {
            param.percentage = arg0;
            if (arg1 !== undefined) {
                param.message = arg1;
            }
        }
        else {
            param.message = arg0;
        }
        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);
    }
    done() {
        WorkDoneProgressReporterImpl.Instances.delete(this._token);
        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, { kind: 'end' });
    }
}
WorkDoneProgressReporterImpl.Instances = new Map();
class WorkDoneProgressServerReporterImpl extends WorkDoneProgressReporterImpl {
    constructor(connection, token) {
        super(connection, token);
        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();
    }
    get token() {
        return this._source.token;
    }
    done() {
        this._source.dispose();
        super.done();
    }
    cancel() {
        this._source.cancel();
    }
}
class NullProgressReporter {
    constructor() {
    }
    begin() {
    }
    report() {
    }
    done() {
    }
}
class NullProgressServerReporter extends NullProgressReporter {
    constructor() {
        super();
        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();
    }
    get token() {
        return this._source.token;
    }
    done() {
        this._source.dispose();
    }
    cancel() {
        this._source.cancel();
    }
}
function attachWorkDone(connection, params) {
    if (params === undefined || params.workDoneToken === undefined) {
        return new NullProgressReporter();
    }
    const token = params.workDoneToken;
    delete params.workDoneToken;
    return new WorkDoneProgressReporterImpl(connection, token);
}
exports.attachWorkDone = attachWorkDone;
const ProgressFeature = (Base) => {
    return class extends Base {
        constructor() {
            super();
            this._progressSupported = false;
        }
        initialize(capabilities) {
            super.initialize(capabilities);
            if (capabilities?.window?.workDoneProgress === true) {
                this._progressSupported = true;
                this.connection.onNotification(vscode_languageserver_protocol_1.WorkDoneProgressCancelNotification.type, (params) => {
                    let progress = WorkDoneProgressReporterImpl.Instances.get(params.token);
                    if (progress instanceof WorkDoneProgressServerReporterImpl || progress instanceof NullProgressServerReporter) {
                        progress.cancel();
                    }
                });
            }
        }
        attachWorkDoneProgress(token) {
            if (token === undefined) {
                return new NullProgressReporter();
            }
            else {
                return new WorkDoneProgressReporterImpl(this.connection, token);
            }
        }
        createWorkDoneProgress() {
            if (this._progressSupported) {
                const token = (0, uuid_1.generateUuid)();
                return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, { token }).then(() => {
                    const result = new WorkDoneProgressServerReporterImpl(this.connection, token);
                    return result;
                });
            }
            else {
                return Promise.resolve(new NullProgressServerReporter());
            }
        }
    };
};
exports.ProgressFeature = ProgressFeature;
var ResultProgress;
(function (ResultProgress) {
    ResultProgress.type = new vscode_languageserver_protocol_1.ProgressType();
})(ResultProgress || (ResultProgress = {}));
class ResultProgressReporterImpl {
    constructor(_connection, _token) {
        this._connection = _connection;
        this._token = _token;
    }
    report(data) {
        this._connection.sendProgress(ResultProgress.type, this._token, data);
    }
}
function attachPartialResult(connection, params) {
    if (params === undefined || params.partialResultToken === undefined) {
        return undefined;
    }
    const token = params.partialResultToken;
    delete params.partialResultToken;
    return new ResultProgressReporterImpl(connection, token);
}
exports.attachPartialResult = attachPartialResult;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/semanticTokens.js":
/*!*************************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/semanticTokens.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SemanticTokensBuilder = exports.SemanticTokensDiff = exports.SemanticTokensFeature = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const SemanticTokensFeature = (Base) => {
    return class extends Base {
        get semanticTokens() {
            return {
                refresh: () => {
                    return this.connection.sendRequest(vscode_languageserver_protocol_1.SemanticTokensRefreshRequest.type);
                },
                on: (handler) => {
                    const type = vscode_languageserver_protocol_1.SemanticTokensRequest.type;
                    return this.connection.onRequest(type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));
                    });
                },
                onDelta: (handler) => {
                    const type = vscode_languageserver_protocol_1.SemanticTokensDeltaRequest.type;
                    return this.connection.onRequest(type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));
                    });
                },
                onRange: (handler) => {
                    const type = vscode_languageserver_protocol_1.SemanticTokensRangeRequest.type;
                    return this.connection.onRequest(type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));
                    });
                }
            };
        }
    };
};
exports.SemanticTokensFeature = SemanticTokensFeature;
class SemanticTokensDiff {
    constructor(originalSequence, modifiedSequence) {
        this.originalSequence = originalSequence;
        this.modifiedSequence = modifiedSequence;
    }
    computeDiff() {
        const originalLength = this.originalSequence.length;
        const modifiedLength = this.modifiedSequence.length;
        let startIndex = 0;
        while (startIndex < modifiedLength && startIndex < originalLength && this.originalSequence[startIndex] === this.modifiedSequence[startIndex]) {
            startIndex++;
        }
        if (startIndex < modifiedLength && startIndex < originalLength) {
            let originalEndIndex = originalLength - 1;
            let modifiedEndIndex = modifiedLength - 1;
            while (originalEndIndex >= startIndex && modifiedEndIndex >= startIndex && this.originalSequence[originalEndIndex] === this.modifiedSequence[modifiedEndIndex]) {
                originalEndIndex--;
                modifiedEndIndex--;
            }
            // if one moved behind the start index move them forward again
            if (originalEndIndex < startIndex || modifiedEndIndex < startIndex) {
                originalEndIndex++;
                modifiedEndIndex++;
            }
            const deleteCount = originalEndIndex - startIndex + 1;
            const newData = this.modifiedSequence.slice(startIndex, modifiedEndIndex + 1);
            // If we moved behind the start index we could have missed a simple delete.
            if (newData.length === 1 && newData[0] === this.originalSequence[originalEndIndex]) {
                return [
                    { start: startIndex, deleteCount: deleteCount - 1 }
                ];
            }
            else {
                return [
                    { start: startIndex, deleteCount, data: newData }
                ];
            }
        }
        else if (startIndex < modifiedLength) {
            return [
                { start: startIndex, deleteCount: 0, data: this.modifiedSequence.slice(startIndex) }
            ];
        }
        else if (startIndex < originalLength) {
            return [
                { start: startIndex, deleteCount: originalLength - startIndex }
            ];
        }
        else {
            // The two arrays are the same.
            return [];
        }
    }
}
exports.SemanticTokensDiff = SemanticTokensDiff;
class SemanticTokensBuilder {
    constructor() {
        this._prevData = undefined;
        this.initialize();
    }
    initialize() {
        this._id = Date.now();
        this._prevLine = 0;
        this._prevChar = 0;
        this._data = [];
        this._dataLen = 0;
    }
    push(line, char, length, tokenType, tokenModifiers) {
        let pushLine = line;
        let pushChar = char;
        if (this._dataLen > 0) {
            pushLine -= this._prevLine;
            if (pushLine === 0) {
                pushChar -= this._prevChar;
            }
        }
        this._data[this._dataLen++] = pushLine;
        this._data[this._dataLen++] = pushChar;
        this._data[this._dataLen++] = length;
        this._data[this._dataLen++] = tokenType;
        this._data[this._dataLen++] = tokenModifiers;
        this._prevLine = line;
        this._prevChar = char;
    }
    get id() {
        return this._id.toString();
    }
    previousResult(id) {
        if (this.id === id) {
            this._prevData = this._data;
        }
        this.initialize();
    }
    build() {
        this._prevData = undefined;
        return {
            resultId: this.id,
            data: this._data
        };
    }
    canBuildEdits() {
        return this._prevData !== undefined;
    }
    buildEdits() {
        if (this._prevData !== undefined) {
            return {
                resultId: this.id,
                edits: (new SemanticTokensDiff(this._prevData, this._data)).computeDiff()
            };
        }
        else {
            return this.build();
        }
    }
}
exports.SemanticTokensBuilder = SemanticTokensBuilder;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/server.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/server.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createConnection = exports.combineFeatures = exports.combineNotebooksFeatures = exports.combineLanguagesFeatures = exports.combineWorkspaceFeatures = exports.combineWindowFeatures = exports.combineClientFeatures = exports.combineTracerFeatures = exports.combineTelemetryFeatures = exports.combineConsoleFeatures = exports._NotebooksImpl = exports._LanguagesImpl = exports.BulkUnregistration = exports.BulkRegistration = exports.ErrorMessageTracker = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const Is = __webpack_require__(/*! ./utils/is */ "./node_modules/vscode-languageserver/lib/common/utils/is.js");
const UUID = __webpack_require__(/*! ./utils/uuid */ "./node_modules/vscode-languageserver/lib/common/utils/uuid.js");
const progress_1 = __webpack_require__(/*! ./progress */ "./node_modules/vscode-languageserver/lib/common/progress.js");
const configuration_1 = __webpack_require__(/*! ./configuration */ "./node_modules/vscode-languageserver/lib/common/configuration.js");
const workspaceFolder_1 = __webpack_require__(/*! ./workspaceFolder */ "./node_modules/vscode-languageserver/lib/common/workspaceFolder.js");
const callHierarchy_1 = __webpack_require__(/*! ./callHierarchy */ "./node_modules/vscode-languageserver/lib/common/callHierarchy.js");
const semanticTokens_1 = __webpack_require__(/*! ./semanticTokens */ "./node_modules/vscode-languageserver/lib/common/semanticTokens.js");
const showDocument_1 = __webpack_require__(/*! ./showDocument */ "./node_modules/vscode-languageserver/lib/common/showDocument.js");
const fileOperations_1 = __webpack_require__(/*! ./fileOperations */ "./node_modules/vscode-languageserver/lib/common/fileOperations.js");
const linkedEditingRange_1 = __webpack_require__(/*! ./linkedEditingRange */ "./node_modules/vscode-languageserver/lib/common/linkedEditingRange.js");
const typeHierarchy_1 = __webpack_require__(/*! ./typeHierarchy */ "./node_modules/vscode-languageserver/lib/common/typeHierarchy.js");
const inlineValue_1 = __webpack_require__(/*! ./inlineValue */ "./node_modules/vscode-languageserver/lib/common/inlineValue.js");
const inlayHint_1 = __webpack_require__(/*! ./inlayHint */ "./node_modules/vscode-languageserver/lib/common/inlayHint.js");
const diagnostic_1 = __webpack_require__(/*! ./diagnostic */ "./node_modules/vscode-languageserver/lib/common/diagnostic.js");
const notebook_1 = __webpack_require__(/*! ./notebook */ "./node_modules/vscode-languageserver/lib/common/notebook.js");
const moniker_1 = __webpack_require__(/*! ./moniker */ "./node_modules/vscode-languageserver/lib/common/moniker.js");
function null2Undefined(value) {
    if (value === null) {
        return undefined;
    }
    return value;
}
/**
 * Helps tracking error message. Equal occurrences of the same
 * message are only stored once. This class is for example
 * useful if text documents are validated in a loop and equal
 * error message should be folded into one.
 */
class ErrorMessageTracker {
    constructor() {
        this._messages = Object.create(null);
    }
    /**
     * Add a message to the tracker.
     *
     * @param message The message to add.
     */
    add(message) {
        let count = this._messages[message];
        if (!count) {
            count = 0;
        }
        count++;
        this._messages[message] = count;
    }
    /**
     * Send all tracked messages to the connection's window.
     *
     * @param connection The connection established between client and server.
     */
    sendErrors(connection) {
        Object.keys(this._messages).forEach(message => {
            connection.window.showErrorMessage(message);
        });
    }
}
exports.ErrorMessageTracker = ErrorMessageTracker;
class RemoteConsoleImpl {
    constructor() {
    }
    rawAttach(connection) {
        this._rawConnection = connection;
    }
    attach(connection) {
        this._connection = connection;
    }
    get connection() {
        if (!this._connection) {
            throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
    }
    fillServerCapabilities(_capabilities) {
    }
    initialize(_capabilities) {
    }
    error(message) {
        this.send(vscode_languageserver_protocol_1.MessageType.Error, message);
    }
    warn(message) {
        this.send(vscode_languageserver_protocol_1.MessageType.Warning, message);
    }
    info(message) {
        this.send(vscode_languageserver_protocol_1.MessageType.Info, message);
    }
    log(message) {
        this.send(vscode_languageserver_protocol_1.MessageType.Log, message);
    }
    send(type, message) {
        if (this._rawConnection) {
            this._rawConnection.sendNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, { type, message }).catch(() => {
                (0, vscode_languageserver_protocol_1.RAL)().console.error(`Sending log message failed`);
            });
        }
    }
}
class _RemoteWindowImpl {
    constructor() {
    }
    attach(connection) {
        this._connection = connection;
    }
    get connection() {
        if (!this._connection) {
            throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
    }
    initialize(_capabilities) {
    }
    fillServerCapabilities(_capabilities) {
    }
    showErrorMessage(message, ...actions) {
        let params = { type: vscode_languageserver_protocol_1.MessageType.Error, message, actions };
        return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);
    }
    showWarningMessage(message, ...actions) {
        let params = { type: vscode_languageserver_protocol_1.MessageType.Warning, message, actions };
        return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);
    }
    showInformationMessage(message, ...actions) {
        let params = { type: vscode_languageserver_protocol_1.MessageType.Info, message, actions };
        return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);
    }
}
const RemoteWindowImpl = (0, showDocument_1.ShowDocumentFeature)((0, progress_1.ProgressFeature)(_RemoteWindowImpl));
var BulkRegistration;
(function (BulkRegistration) {
    /**
     * Creates a new bulk registration.
     * @return an empty bulk registration.
     */
    function create() {
        return new BulkRegistrationImpl();
    }
    BulkRegistration.create = create;
})(BulkRegistration = exports.BulkRegistration || (exports.BulkRegistration = {}));
class BulkRegistrationImpl {
    constructor() {
        this._registrations = [];
        this._registered = new Set();
    }
    add(type, registerOptions) {
        const method = Is.string(type) ? type : type.method;
        if (this._registered.has(method)) {
            throw new Error(`${method} is already added to this registration`);
        }
        const id = UUID.generateUuid();
        this._registrations.push({
            id: id,
            method: method,
            registerOptions: registerOptions || {}
        });
        this._registered.add(method);
    }
    asRegistrationParams() {
        return {
            registrations: this._registrations
        };
    }
}
var BulkUnregistration;
(function (BulkUnregistration) {
    function create() {
        return new BulkUnregistrationImpl(undefined, []);
    }
    BulkUnregistration.create = create;
})(BulkUnregistration = exports.BulkUnregistration || (exports.BulkUnregistration = {}));
class BulkUnregistrationImpl {
    constructor(_connection, unregistrations) {
        this._connection = _connection;
        this._unregistrations = new Map();
        unregistrations.forEach(unregistration => {
            this._unregistrations.set(unregistration.method, unregistration);
        });
    }
    get isAttached() {
        return !!this._connection;
    }
    attach(connection) {
        this._connection = connection;
    }
    add(unregistration) {
        this._unregistrations.set(unregistration.method, unregistration);
    }
    dispose() {
        let unregistrations = [];
        for (let unregistration of this._unregistrations.values()) {
            unregistrations.push(unregistration);
        }
        let params = {
            unregisterations: unregistrations
        };
        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).catch(() => {
            this._connection.console.info(`Bulk unregistration failed.`);
        });
    }
    disposeSingle(arg) {
        const method = Is.string(arg) ? arg : arg.method;
        const unregistration = this._unregistrations.get(method);
        if (!unregistration) {
            return false;
        }
        let params = {
            unregisterations: [unregistration]
        };
        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(() => {
            this._unregistrations.delete(method);
        }, (_error) => {
            this._connection.console.info(`Un-registering request handler for ${unregistration.id} failed.`);
        });
        return true;
    }
}
class RemoteClientImpl {
    attach(connection) {
        this._connection = connection;
    }
    get connection() {
        if (!this._connection) {
            throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
    }
    initialize(_capabilities) {
    }
    fillServerCapabilities(_capabilities) {
    }
    register(typeOrRegistrations, registerOptionsOrType, registerOptions) {
        if (typeOrRegistrations instanceof BulkRegistrationImpl) {
            return this.registerMany(typeOrRegistrations);
        }
        else if (typeOrRegistrations instanceof BulkUnregistrationImpl) {
            return this.registerSingle1(typeOrRegistrations, registerOptionsOrType, registerOptions);
        }
        else {
            return this.registerSingle2(typeOrRegistrations, registerOptionsOrType);
        }
    }
    registerSingle1(unregistration, type, registerOptions) {
        const method = Is.string(type) ? type : type.method;
        const id = UUID.generateUuid();
        let params = {
            registrations: [{ id, method, registerOptions: registerOptions || {} }]
        };
        if (!unregistration.isAttached) {
            unregistration.attach(this.connection);
        }
        return this.connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {
            unregistration.add({ id: id, method: method });
            return unregistration;
        }, (_error) => {
            this.connection.console.info(`Registering request handler for ${method} failed.`);
            return Promise.reject(_error);
        });
    }
    registerSingle2(type, registerOptions) {
        const method = Is.string(type) ? type : type.method;
        const id = UUID.generateUuid();
        let params = {
            registrations: [{ id, method, registerOptions: registerOptions || {} }]
        };
        return this.connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {
            return vscode_languageserver_protocol_1.Disposable.create(() => {
                this.unregisterSingle(id, method).catch(() => { this.connection.console.info(`Un-registering capability with id ${id} failed.`); });
            });
        }, (_error) => {
            this.connection.console.info(`Registering request handler for ${method} failed.`);
            return Promise.reject(_error);
        });
    }
    unregisterSingle(id, method) {
        let params = {
            unregisterations: [{ id, method }]
        };
        return this.connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).catch(() => {
            this.connection.console.info(`Un-registering request handler for ${id} failed.`);
        });
    }
    registerMany(registrations) {
        let params = registrations.asRegistrationParams();
        return this.connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then(() => {
            return new BulkUnregistrationImpl(this._connection, params.registrations.map(registration => { return { id: registration.id, method: registration.method }; }));
        }, (_error) => {
            this.connection.console.info(`Bulk registration failed.`);
            return Promise.reject(_error);
        });
    }
}
class _RemoteWorkspaceImpl {
    constructor() {
    }
    attach(connection) {
        this._connection = connection;
    }
    get connection() {
        if (!this._connection) {
            throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
    }
    initialize(_capabilities) {
    }
    fillServerCapabilities(_capabilities) {
    }
    applyEdit(paramOrEdit) {
        function isApplyWorkspaceEditParams(value) {
            return value && !!value.edit;
        }
        let params = isApplyWorkspaceEditParams(paramOrEdit) ? paramOrEdit : { edit: paramOrEdit };
        return this.connection.sendRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params);
    }
}
const RemoteWorkspaceImpl = (0, fileOperations_1.FileOperationsFeature)((0, workspaceFolder_1.WorkspaceFoldersFeature)((0, configuration_1.ConfigurationFeature)(_RemoteWorkspaceImpl)));
class TracerImpl {
    constructor() {
        this._trace = vscode_languageserver_protocol_1.Trace.Off;
    }
    attach(connection) {
        this._connection = connection;
    }
    get connection() {
        if (!this._connection) {
            throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
    }
    initialize(_capabilities) {
    }
    fillServerCapabilities(_capabilities) {
    }
    set trace(value) {
        this._trace = value;
    }
    log(message, verbose) {
        if (this._trace === vscode_languageserver_protocol_1.Trace.Off) {
            return;
        }
        this.connection.sendNotification(vscode_languageserver_protocol_1.LogTraceNotification.type, {
            message: message,
            verbose: this._trace === vscode_languageserver_protocol_1.Trace.Verbose ? verbose : undefined
        }).catch(() => {
            // Very hard to decide what to do. We tried to send a log
            // message which failed so we can't simply send another :-(.
        });
    }
}
class TelemetryImpl {
    constructor() {
    }
    attach(connection) {
        this._connection = connection;
    }
    get connection() {
        if (!this._connection) {
            throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
    }
    initialize(_capabilities) {
    }
    fillServerCapabilities(_capabilities) {
    }
    logEvent(data) {
        this.connection.sendNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, data).catch(() => {
            this.connection.console.log(`Sending TelemetryEventNotification failed`);
        });
    }
}
class _LanguagesImpl {
    constructor() {
    }
    attach(connection) {
        this._connection = connection;
    }
    get connection() {
        if (!this._connection) {
            throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
    }
    initialize(_capabilities) {
    }
    fillServerCapabilities(_capabilities) {
    }
    attachWorkDoneProgress(params) {
        return (0, progress_1.attachWorkDone)(this.connection, params);
    }
    attachPartialResultProgress(_type, params) {
        return (0, progress_1.attachPartialResult)(this.connection, params);
    }
}
exports._LanguagesImpl = _LanguagesImpl;
const LanguagesImpl = (0, moniker_1.MonikerFeature)((0, diagnostic_1.DiagnosticFeature)((0, inlayHint_1.InlayHintFeature)((0, inlineValue_1.InlineValueFeature)((0, typeHierarchy_1.TypeHierarchyFeature)((0, linkedEditingRange_1.LinkedEditingRangeFeature)((0, semanticTokens_1.SemanticTokensFeature)((0, callHierarchy_1.CallHierarchyFeature)(_LanguagesImpl))))))));
class _NotebooksImpl {
    constructor() {
    }
    attach(connection) {
        this._connection = connection;
    }
    get connection() {
        if (!this._connection) {
            throw new Error('Remote is not attached to a connection yet.');
        }
        return this._connection;
    }
    initialize(_capabilities) {
    }
    fillServerCapabilities(_capabilities) {
    }
    attachWorkDoneProgress(params) {
        return (0, progress_1.attachWorkDone)(this.connection, params);
    }
    attachPartialResultProgress(_type, params) {
        return (0, progress_1.attachPartialResult)(this.connection, params);
    }
}
exports._NotebooksImpl = _NotebooksImpl;
const NotebooksImpl = (0, notebook_1.NotebookSyncFeature)(_NotebooksImpl);
function combineConsoleFeatures(one, two) {
    return function (Base) {
        return two(one(Base));
    };
}
exports.combineConsoleFeatures = combineConsoleFeatures;
function combineTelemetryFeatures(one, two) {
    return function (Base) {
        return two(one(Base));
    };
}
exports.combineTelemetryFeatures = combineTelemetryFeatures;
function combineTracerFeatures(one, two) {
    return function (Base) {
        return two(one(Base));
    };
}
exports.combineTracerFeatures = combineTracerFeatures;
function combineClientFeatures(one, two) {
    return function (Base) {
        return two(one(Base));
    };
}
exports.combineClientFeatures = combineClientFeatures;
function combineWindowFeatures(one, two) {
    return function (Base) {
        return two(one(Base));
    };
}
exports.combineWindowFeatures = combineWindowFeatures;
function combineWorkspaceFeatures(one, two) {
    return function (Base) {
        return two(one(Base));
    };
}
exports.combineWorkspaceFeatures = combineWorkspaceFeatures;
function combineLanguagesFeatures(one, two) {
    return function (Base) {
        return two(one(Base));
    };
}
exports.combineLanguagesFeatures = combineLanguagesFeatures;
function combineNotebooksFeatures(one, two) {
    return function (Base) {
        return two(one(Base));
    };
}
exports.combineNotebooksFeatures = combineNotebooksFeatures;
function combineFeatures(one, two) {
    function combine(one, two, func) {
        if (one && two) {
            return func(one, two);
        }
        else if (one) {
            return one;
        }
        else {
            return two;
        }
    }
    let result = {
        __brand: 'features',
        console: combine(one.console, two.console, combineConsoleFeatures),
        tracer: combine(one.tracer, two.tracer, combineTracerFeatures),
        telemetry: combine(one.telemetry, two.telemetry, combineTelemetryFeatures),
        client: combine(one.client, two.client, combineClientFeatures),
        window: combine(one.window, two.window, combineWindowFeatures),
        workspace: combine(one.workspace, two.workspace, combineWorkspaceFeatures),
        languages: combine(one.languages, two.languages, combineLanguagesFeatures),
        notebooks: combine(one.notebooks, two.notebooks, combineNotebooksFeatures)
    };
    return result;
}
exports.combineFeatures = combineFeatures;
function createConnection(connectionFactory, watchDog, factories) {
    const logger = (factories && factories.console ? new (factories.console(RemoteConsoleImpl))() : new RemoteConsoleImpl());
    const connection = connectionFactory(logger);
    logger.rawAttach(connection);
    const tracer = (factories && factories.tracer ? new (factories.tracer(TracerImpl))() : new TracerImpl());
    const telemetry = (factories && factories.telemetry ? new (factories.telemetry(TelemetryImpl))() : new TelemetryImpl());
    const client = (factories && factories.client ? new (factories.client(RemoteClientImpl))() : new RemoteClientImpl());
    const remoteWindow = (factories && factories.window ? new (factories.window(RemoteWindowImpl))() : new RemoteWindowImpl());
    const workspace = (factories && factories.workspace ? new (factories.workspace(RemoteWorkspaceImpl))() : new RemoteWorkspaceImpl());
    const languages = (factories && factories.languages ? new (factories.languages(LanguagesImpl))() : new LanguagesImpl());
    const notebooks = (factories && factories.notebooks ? new (factories.notebooks(NotebooksImpl))() : new NotebooksImpl());
    const allRemotes = [logger, tracer, telemetry, client, remoteWindow, workspace, languages, notebooks];
    function asPromise(value) {
        if (value instanceof Promise) {
            return value;
        }
        else if (Is.thenable(value)) {
            return new Promise((resolve, reject) => {
                value.then((resolved) => resolve(resolved), (error) => reject(error));
            });
        }
        else {
            return Promise.resolve(value);
        }
    }
    let shutdownHandler = undefined;
    let initializeHandler = undefined;
    let exitHandler = undefined;
    let protocolConnection = {
        listen: () => connection.listen(),
        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),
        onRequest: (type, handler) => connection.onRequest(type, handler),
        sendNotification: (type, param) => {
            const method = Is.string(type) ? type : type.method;
            if (arguments.length === 1) {
                return connection.sendNotification(method);
            }
            else {
                return connection.sendNotification(method, param);
            }
        },
        onNotification: (type, handler) => connection.onNotification(type, handler),
        onProgress: connection.onProgress,
        sendProgress: connection.sendProgress,
        onInitialize: (handler) => {
            initializeHandler = handler;
            return {
                dispose: () => {
                    initializeHandler = undefined;
                }
            };
        },
        onInitialized: (handler) => connection.onNotification(vscode_languageserver_protocol_1.InitializedNotification.type, handler),
        onShutdown: (handler) => {
            shutdownHandler = handler;
            return {
                dispose: () => {
                    shutdownHandler = undefined;
                }
            };
        },
        onExit: (handler) => {
            exitHandler = handler;
            return {
                dispose: () => {
                    exitHandler = undefined;
                }
            };
        },
        get console() { return logger; },
        get telemetry() { return telemetry; },
        get tracer() { return tracer; },
        get client() { return client; },
        get window() { return remoteWindow; },
        get workspace() { return workspace; },
        get languages() { return languages; },
        get notebooks() { return notebooks; },
        onDidChangeConfiguration: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, handler),
        onDidChangeWatchedFiles: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, handler),
        __textDocumentSync: undefined,
        onDidOpenTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, handler),
        onDidChangeTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, handler),
        onDidCloseTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, handler),
        onWillSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, handler),
        onWillSaveTextDocumentWaitUntil: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, handler),
        onDidSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, handler),
        sendDiagnostics: (params) => connection.sendNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, params),
        onHover: (handler) => connection.onRequest(vscode_languageserver_protocol_1.HoverRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);
        }),
        onCompletion: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onCompletionResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, handler),
        onSignatureHelp: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);
        }),
        onDeclaration: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onTypeDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onImplementation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onReferences: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onDocumentHighlight: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onDocumentSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onWorkspaceSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onWorkspaceSymbolResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WorkspaceSymbolResolveRequest.type, handler),
        onCodeAction: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onCodeActionResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeActionResolveRequest.type, (params, cancel) => {
            return handler(params, cancel);
        }),
        onCodeLens: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onCodeLensResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, (params, cancel) => {
            return handler(params, cancel);
        }),
        onDocumentFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);
        }),
        onDocumentRangeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);
        }),
        onDocumentOnTypeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, (params, cancel) => {
            return handler(params, cancel);
        }),
        onRenameRequest: (handler) => connection.onRequest(vscode_languageserver_protocol_1.RenameRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);
        }),
        onPrepareRename: (handler) => connection.onRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, (params, cancel) => {
            return handler(params, cancel);
        }),
        onDocumentLinks: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onDocumentLinkResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, (params, cancel) => {
            return handler(params, cancel);
        }),
        onDocumentColor: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onColorPresentation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onFoldingRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onSelectionRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), (0, progress_1.attachPartialResult)(connection, params));
        }),
        onExecuteCommand: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, (params, cancel) => {
            return handler(params, cancel, (0, progress_1.attachWorkDone)(connection, params), undefined);
        }),
        dispose: () => connection.dispose()
    };
    for (let remote of allRemotes) {
        remote.attach(protocolConnection);
    }
    connection.onRequest(vscode_languageserver_protocol_1.InitializeRequest.type, (params) => {
        watchDog.initialize(params);
        if (Is.string(params.trace)) {
            tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.trace);
        }
        for (let remote of allRemotes) {
            remote.initialize(params.capabilities);
        }
        if (initializeHandler) {
            let result = initializeHandler(params, new vscode_languageserver_protocol_1.CancellationTokenSource().token, (0, progress_1.attachWorkDone)(connection, params), undefined);
            return asPromise(result).then((value) => {
                if (value instanceof vscode_languageserver_protocol_1.ResponseError) {
                    return value;
                }
                let result = value;
                if (!result) {
                    result = { capabilities: {} };
                }
                let capabilities = result.capabilities;
                if (!capabilities) {
                    capabilities = {};
                    result.capabilities = capabilities;
                }
                if (capabilities.textDocumentSync === undefined || capabilities.textDocumentSync === null) {
                    capabilities.textDocumentSync = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;
                }
                else if (!Is.number(capabilities.textDocumentSync) && !Is.number(capabilities.textDocumentSync.change)) {
                    capabilities.textDocumentSync.change = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;
                }
                for (let remote of allRemotes) {
                    remote.fillServerCapabilities(capabilities);
                }
                return result;
            });
        }
        else {
            let result = { capabilities: { textDocumentSync: vscode_languageserver_protocol_1.TextDocumentSyncKind.None } };
            for (let remote of allRemotes) {
                remote.fillServerCapabilities(result.capabilities);
            }
            return result;
        }
    });
    connection.onRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, () => {
        watchDog.shutdownReceived = true;
        if (shutdownHandler) {
            return shutdownHandler(new vscode_languageserver_protocol_1.CancellationTokenSource().token);
        }
        else {
            return undefined;
        }
    });
    connection.onNotification(vscode_languageserver_protocol_1.ExitNotification.type, () => {
        try {
            if (exitHandler) {
                exitHandler();
            }
        }
        finally {
            if (watchDog.shutdownReceived) {
                watchDog.exit(0);
            }
            else {
                watchDog.exit(1);
            }
        }
    });
    connection.onNotification(vscode_languageserver_protocol_1.SetTraceNotification.type, (params) => {
        tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.value);
    });
    return protocolConnection;
}
exports.createConnection = createConnection;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/showDocument.js":
/*!***********************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/showDocument.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDocumentFeature = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const ShowDocumentFeature = (Base) => {
    return class extends Base {
        showDocument(params) {
            return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowDocumentRequest.type, params);
        }
    };
};
exports.ShowDocumentFeature = ShowDocumentFeature;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/textDocuments.js":
/*!************************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/textDocuments.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TextDocuments = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
/**
 * A manager for simple text documents. The manager requires at a minimum that
 * the server registered for the following text document sync events in the
 * initialize handler or via dynamic registration:
 *
 * - open and close events.
 * - change events.
 *
 * Registering for save and will save events is optional.
 */
class TextDocuments {
    /**
     * Create a new text document manager.
     */
    constructor(configuration) {
        this._configuration = configuration;
        this._syncedDocuments = new Map();
        this._onDidChangeContent = new vscode_languageserver_protocol_1.Emitter();
        this._onDidOpen = new vscode_languageserver_protocol_1.Emitter();
        this._onDidClose = new vscode_languageserver_protocol_1.Emitter();
        this._onDidSave = new vscode_languageserver_protocol_1.Emitter();
        this._onWillSave = new vscode_languageserver_protocol_1.Emitter();
    }
    /**
     * An event that fires when a text document managed by this manager
     * has been opened.
     */
    get onDidOpen() {
        return this._onDidOpen.event;
    }
    /**
     * An event that fires when a text document managed by this manager
     * has been opened or the content changes.
     */
    get onDidChangeContent() {
        return this._onDidChangeContent.event;
    }
    /**
     * An event that fires when a text document managed by this manager
     * will be saved.
     */
    get onWillSave() {
        return this._onWillSave.event;
    }
    /**
     * Sets a handler that will be called if a participant wants to provide
     * edits during a text document save.
     */
    onWillSaveWaitUntil(handler) {
        this._willSaveWaitUntil = handler;
    }
    /**
     * An event that fires when a text document managed by this manager
     * has been saved.
     */
    get onDidSave() {
        return this._onDidSave.event;
    }
    /**
     * An event that fires when a text document managed by this manager
     * has been closed.
     */
    get onDidClose() {
        return this._onDidClose.event;
    }
    /**
     * Returns the document for the given URI. Returns undefined if
     * the document is not managed by this instance.
     *
     * @param uri The text document's URI to retrieve.
     * @return the text document or `undefined`.
     */
    get(uri) {
        return this._syncedDocuments.get(uri);
    }
    /**
     * Returns all text documents managed by this instance.
     *
     * @return all text documents.
     */
    all() {
        return Array.from(this._syncedDocuments.values());
    }
    /**
     * Returns the URIs of all text documents managed by this instance.
     *
     * @return the URI's of all text documents.
     */
    keys() {
        return Array.from(this._syncedDocuments.keys());
    }
    /**
     * Listens for `low level` notification on the given connection to
     * update the text documents managed by this instance.
     *
     * Please note that the connection only provides handlers not an event model. Therefore
     * listening on a connection will overwrite the following handlers on a connection:
     * `onDidOpenTextDocument`, `onDidChangeTextDocument`, `onDidCloseTextDocument`,
     * `onWillSaveTextDocument`, `onWillSaveTextDocumentWaitUntil` and `onDidSaveTextDocument`.
     *
     * Use the corresponding events on the TextDocuments instance instead.
     *
     * @param connection The connection to listen on.
     */
    listen(connection) {
        connection.__textDocumentSync = vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental;
        const disposables = [];
        disposables.push(connection.onDidOpenTextDocument((event) => {
            const td = event.textDocument;
            const document = this._configuration.create(td.uri, td.languageId, td.version, td.text);
            this._syncedDocuments.set(td.uri, document);
            const toFire = Object.freeze({ document });
            this._onDidOpen.fire(toFire);
            this._onDidChangeContent.fire(toFire);
        }));
        disposables.push(connection.onDidChangeTextDocument((event) => {
            const td = event.textDocument;
            const changes = event.contentChanges;
            if (changes.length === 0) {
                return;
            }
            const { version } = td;
            if (version === null || version === undefined) {
                throw new Error(`Received document change event for ${td.uri} without valid version identifier`);
            }
            let syncedDocument = this._syncedDocuments.get(td.uri);
            if (syncedDocument !== undefined) {
                syncedDocument = this._configuration.update(syncedDocument, changes, version);
                this._syncedDocuments.set(td.uri, syncedDocument);
                this._onDidChangeContent.fire(Object.freeze({ document: syncedDocument }));
            }
        }));
        disposables.push(connection.onDidCloseTextDocument((event) => {
            let syncedDocument = this._syncedDocuments.get(event.textDocument.uri);
            if (syncedDocument !== undefined) {
                this._syncedDocuments.delete(event.textDocument.uri);
                this._onDidClose.fire(Object.freeze({ document: syncedDocument }));
            }
        }));
        disposables.push(connection.onWillSaveTextDocument((event) => {
            let syncedDocument = this._syncedDocuments.get(event.textDocument.uri);
            if (syncedDocument !== undefined) {
                this._onWillSave.fire(Object.freeze({ document: syncedDocument, reason: event.reason }));
            }
        }));
        disposables.push(connection.onWillSaveTextDocumentWaitUntil((event, token) => {
            let syncedDocument = this._syncedDocuments.get(event.textDocument.uri);
            if (syncedDocument !== undefined && this._willSaveWaitUntil) {
                return this._willSaveWaitUntil(Object.freeze({ document: syncedDocument, reason: event.reason }), token);
            }
            else {
                return [];
            }
        }));
        disposables.push(connection.onDidSaveTextDocument((event) => {
            let syncedDocument = this._syncedDocuments.get(event.textDocument.uri);
            if (syncedDocument !== undefined) {
                this._onDidSave.fire(Object.freeze({ document: syncedDocument }));
            }
        }));
        return vscode_languageserver_protocol_1.Disposable.create(() => { disposables.forEach(disposable => disposable.dispose()); });
    }
}
exports.TextDocuments = TextDocuments;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/typeHierarchy.js":
/*!************************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/typeHierarchy.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TypeHierarchyFeature = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const TypeHierarchyFeature = (Base) => {
    return class extends Base {
        get typeHierarchy() {
            return {
                onPrepare: (handler) => {
                    return this.connection.onRequest(vscode_languageserver_protocol_1.TypeHierarchyPrepareRequest.type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params), undefined);
                    });
                },
                onSupertypes: (handler) => {
                    const type = vscode_languageserver_protocol_1.TypeHierarchySupertypesRequest.type;
                    return this.connection.onRequest(type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));
                    });
                },
                onSubtypes: (handler) => {
                    const type = vscode_languageserver_protocol_1.TypeHierarchySubtypesRequest.type;
                    return this.connection.onRequest(type, (params, cancel) => {
                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));
                    });
                }
            };
        }
    };
};
exports.TypeHierarchyFeature = TypeHierarchyFeature;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/utils/is.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/utils/is.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.thenable = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;
function boolean(value) {
    return value === true || value === false;
}
exports.boolean = boolean;
function string(value) {
    return typeof value === 'string' || value instanceof String;
}
exports.string = string;
function number(value) {
    return typeof value === 'number' || value instanceof Number;
}
exports.number = number;
function error(value) {
    return value instanceof Error;
}
exports.error = error;
function func(value) {
    return typeof value === 'function';
}
exports.func = func;
function array(value) {
    return Array.isArray(value);
}
exports.array = array;
function stringArray(value) {
    return array(value) && value.every(elem => string(elem));
}
exports.stringArray = stringArray;
function typedArray(value, check) {
    return Array.isArray(value) && value.every(check);
}
exports.typedArray = typedArray;
function thenable(value) {
    return value && func(value.then);
}
exports.thenable = thenable;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/utils/uuid.js":
/*!*********************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/utils/uuid.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.generateUuid = exports.parse = exports.isUUID = exports.v4 = exports.empty = void 0;
class ValueUUID {
    constructor(_value) {
        this._value = _value;
        // empty
    }
    asHex() {
        return this._value;
    }
    equals(other) {
        return this.asHex() === other.asHex();
    }
}
class V4UUID extends ValueUUID {
    constructor() {
        super([
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            '-',
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            '-',
            '4',
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            '-',
            V4UUID._oneOf(V4UUID._timeHighBits),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            '-',
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
            V4UUID._randomHex(),
        ].join(''));
    }
    static _oneOf(array) {
        return array[Math.floor(array.length * Math.random())];
    }
    static _randomHex() {
        return V4UUID._oneOf(V4UUID._chars);
    }
}
V4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];
V4UUID._timeHighBits = ['8', '9', 'a', 'b'];
/**
 * An empty UUID that contains only zeros.
 */
exports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');
function v4() {
    return new V4UUID();
}
exports.v4 = v4;
const _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
function isUUID(value) {
    return _UUIDPattern.test(value);
}
exports.isUUID = isUUID;
/**
 * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.
 * @param value A uuid string.
 */
function parse(value) {
    if (!isUUID(value)) {
        throw new Error('invalid uuid');
    }
    return new ValueUUID(value);
}
exports.parse = parse;
function generateUuid() {
    return v4().asHex();
}
exports.generateUuid = generateUuid;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/common/workspaceFolder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/common/workspaceFolder.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WorkspaceFoldersFeature = void 0;
const vscode_languageserver_protocol_1 = __webpack_require__(/*! vscode-languageserver-protocol */ "./node_modules/vscode-languageserver-protocol/lib/node/main.js");
const WorkspaceFoldersFeature = (Base) => {
    return class extends Base {
        constructor() {
            super();
            this._notificationIsAutoRegistered = false;
        }
        initialize(capabilities) {
            super.initialize(capabilities);
            let workspaceCapabilities = capabilities.workspace;
            if (workspaceCapabilities && workspaceCapabilities.workspaceFolders) {
                this._onDidChangeWorkspaceFolders = new vscode_languageserver_protocol_1.Emitter();
                this.connection.onNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, (params) => {
                    this._onDidChangeWorkspaceFolders.fire(params.event);
                });
            }
        }
        fillServerCapabilities(capabilities) {
            super.fillServerCapabilities(capabilities);
            const changeNotifications = capabilities.workspace?.workspaceFolders?.changeNotifications;
            this._notificationIsAutoRegistered = changeNotifications === true || typeof changeNotifications === 'string';
        }
        getWorkspaceFolders() {
            return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type);
        }
        get onDidChangeWorkspaceFolders() {
            if (!this._onDidChangeWorkspaceFolders) {
                throw new Error('Client doesn\'t support sending workspace folder change events.');
            }
            if (!this._notificationIsAutoRegistered && !this._unregistration) {
                this._unregistration = this.connection.client.register(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type);
            }
            return this._onDidChangeWorkspaceFolders.event;
        }
    };
};
exports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/node/files.js":
/*!**************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/node/files.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resolveModulePath = exports.FileSystem = exports.resolveGlobalYarnPath = exports.resolveGlobalNodePath = exports.resolve = exports.uriToFilePath = void 0;
const url = __webpack_require__(/*! url */ "url");
const path = __webpack_require__(/*! path */ "path");
const fs = __webpack_require__(/*! fs */ "fs");
const child_process_1 = __webpack_require__(/*! child_process */ "child_process");
/**
 * @deprecated Use the `vscode-uri` npm module which provides a more
 * complete implementation of handling VS Code URIs.
 */
function uriToFilePath(uri) {
    let parsed = url.parse(uri);
    if (parsed.protocol !== 'file:' || !parsed.path) {
        return undefined;
    }
    let segments = parsed.path.split('/');
    for (var i = 0, len = segments.length; i < len; i++) {
        segments[i] = decodeURIComponent(segments[i]);
    }
    if (process.platform === 'win32' && segments.length > 1) {
        let first = segments[0];
        let second = segments[1];
        // Do we have a drive letter and we started with a / which is the
        // case if the first segement is empty (see split above)
        if (first.length === 0 && second.length > 1 && second[1] === ':') {
            // Remove first slash
            segments.shift();
        }
    }
    return path.normalize(segments.join('/'));
}
exports.uriToFilePath = uriToFilePath;
function isWindows() {
    return process.platform === 'win32';
}
function resolve(moduleName, nodePath, cwd, tracer) {
    const nodePathKey = 'NODE_PATH';
    const app = [
        'var p = process;',
        'p.on(\'message\',function(m){',
        'if(m.c===\'e\'){',
        'p.exit(0);',
        '}',
        'else if(m.c===\'rs\'){',
        'try{',
        'var r=require.resolve(m.a);',
        'p.send({c:\'r\',s:true,r:r});',
        '}',
        'catch(err){',
        'p.send({c:\'r\',s:false});',
        '}',
        '}',
        '});'
    ].join('');
    return new Promise((resolve, reject) => {
        let env = process.env;
        let newEnv = Object.create(null);
        Object.keys(env).forEach(key => newEnv[key] = env[key]);
        if (nodePath && fs.existsSync(nodePath) /* see issue 545 */) {
            if (newEnv[nodePathKey]) {
                newEnv[nodePathKey] = nodePath + path.delimiter + newEnv[nodePathKey];
            }
            else {
                newEnv[nodePathKey] = nodePath;
            }
            if (tracer) {
                tracer(`NODE_PATH value is: ${newEnv[nodePathKey]}`);
            }
        }
        newEnv['ELECTRON_RUN_AS_NODE'] = '1';
        try {
            let cp = (0, child_process_1.fork)('', [], {
                cwd: cwd,
                env: newEnv,
                execArgv: ['-e', app]
            });
            if (cp.pid === void 0) {
                reject(new Error(`Starting process to resolve node module  ${moduleName} failed`));
                return;
            }
            cp.on('error', (error) => {
                reject(error);
            });
            cp.on('message', (message) => {
                if (message.c === 'r') {
                    cp.send({ c: 'e' });
                    if (message.s) {
                        resolve(message.r);
                    }
                    else {
                        reject(new Error(`Failed to resolve module: ${moduleName}`));
                    }
                }
            });
            let message = {
                c: 'rs',
                a: moduleName
            };
            cp.send(message);
        }
        catch (error) {
            reject(error);
        }
    });
}
exports.resolve = resolve;
/**
 * Resolve the global npm package path.
 * @deprecated Since this depends on the used package manager and their version the best is that servers
 * implement this themselves since they know best what kind of package managers to support.
 * @param tracer the tracer to use
 */
function resolveGlobalNodePath(tracer) {
    let npmCommand = 'npm';
    const env = Object.create(null);
    Object.keys(process.env).forEach(key => env[key] = process.env[key]);
    env['NO_UPDATE_NOTIFIER'] = 'true';
    const options = {
        encoding: 'utf8',
        env
    };
    if (isWindows()) {
        npmCommand = 'npm.cmd';
        options.shell = true;
    }
    let handler = () => { };
    try {
        process.on('SIGPIPE', handler);
        let stdout = (0, child_process_1.spawnSync)(npmCommand, ['config', 'get', 'prefix'], options).stdout;
        if (!stdout) {
            if (tracer) {
                tracer(`'npm config get prefix' didn't return a value.`);
            }
            return undefined;
        }
        let prefix = stdout.trim();
        if (tracer) {
            tracer(`'npm config get prefix' value is: ${prefix}`);
        }
        if (prefix.length > 0) {
            if (isWindows()) {
                return path.join(prefix, 'node_modules');
            }
            else {
                return path.join(prefix, 'lib', 'node_modules');
            }
        }
        return undefined;
    }
    catch (err) {
        return undefined;
    }
    finally {
        process.removeListener('SIGPIPE', handler);
    }
}
exports.resolveGlobalNodePath = resolveGlobalNodePath;
/*
 * Resolve the global yarn pakage path.
 * @deprecated Since this depends on the used package manager and their version the best is that servers
 * implement this themselves since they know best what kind of package managers to support.
 * @param tracer the tracer to use
 */
function resolveGlobalYarnPath(tracer) {
    let yarnCommand = 'yarn';
    let options = {
        encoding: 'utf8'
    };
    if (isWindows()) {
        yarnCommand = 'yarn.cmd';
        options.shell = true;
    }
    let handler = () => { };
    try {
        process.on('SIGPIPE', handler);
        let results = (0, child_process_1.spawnSync)(yarnCommand, ['global', 'dir', '--json'], options);
        let stdout = results.stdout;
        if (!stdout) {
            if (tracer) {
                tracer(`'yarn global dir' didn't return a value.`);
                if (results.stderr) {
                    tracer(results.stderr);
                }
            }
            return undefined;
        }
        let lines = stdout.trim().split(/\r?\n/);
        for (let line of lines) {
            try {
                let yarn = JSON.parse(line);
                if (yarn.type === 'log') {
                    return path.join(yarn.data, 'node_modules');
                }
            }
            catch (e) {
                // Do nothing. Ignore the line
            }
        }
        return undefined;
    }
    catch (err) {
        return undefined;
    }
    finally {
        process.removeListener('SIGPIPE', handler);
    }
}
exports.resolveGlobalYarnPath = resolveGlobalYarnPath;
var FileSystem;
(function (FileSystem) {
    let _isCaseSensitive = undefined;
    function isCaseSensitive() {
        if (_isCaseSensitive !== void 0) {
            return _isCaseSensitive;
        }
        if (process.platform === 'win32') {
            _isCaseSensitive = false;
        }
        else {
            // convert current file name to upper case / lower case and check if file exists
            // (guards against cases when name is already all uppercase or lowercase)
            _isCaseSensitive = !fs.existsSync(__filename.toUpperCase()) || !fs.existsSync(__filename.toLowerCase());
        }
        return _isCaseSensitive;
    }
    FileSystem.isCaseSensitive = isCaseSensitive;
    function isParent(parent, child) {
        if (isCaseSensitive()) {
            return path.normalize(child).indexOf(path.normalize(parent)) === 0;
        }
        else {
            return path.normalize(child).toLowerCase().indexOf(path.normalize(parent).toLowerCase()) === 0;
        }
    }
    FileSystem.isParent = isParent;
})(FileSystem = exports.FileSystem || (exports.FileSystem = {}));
function resolveModulePath(workspaceRoot, moduleName, nodePath, tracer) {
    if (nodePath) {
        if (!path.isAbsolute(nodePath)) {
            nodePath = path.join(workspaceRoot, nodePath);
        }
        return resolve(moduleName, nodePath, nodePath, tracer).then((value) => {
            if (FileSystem.isParent(nodePath, value)) {
                return value;
            }
            else {
                return Promise.reject(new Error(`Failed to load ${moduleName} from node path location.`));
            }
        }).then(undefined, (_error) => {
            return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);
        });
    }
    else {
        return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);
    }
}
exports.resolveModulePath = resolveModulePath;


/***/ }),

/***/ "./node_modules/vscode-languageserver/lib/node/main.js":
/*!*************************************************************!*\
  !*** ./node_modules/vscode-languageserver/lib/node/main.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
/// <reference path="../../typings/thenable.d.ts" />
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createConnection = exports.Files = void 0;
const Is = __webpack_require__(/*! ../common/utils/is */ "./node_modules/vscode-languageserver/lib/common/utils/is.js");
const server_1 = __webpack_require__(/*! ../common/server */ "./node_modules/vscode-languageserver/lib/common/server.js");
const fm = __webpack_require__(/*! ./files */ "./node_modules/vscode-languageserver/lib/node/files.js");
const node_1 = __webpack_require__(/*! vscode-languageserver-protocol/node */ "./node_modules/vscode-languageserver-protocol/node.js");
__exportStar(__webpack_require__(/*! vscode-languageserver-protocol/node */ "./node_modules/vscode-languageserver-protocol/node.js"), exports);
__exportStar(__webpack_require__(/*! ../common/api */ "./node_modules/vscode-languageserver/lib/common/api.js"), exports);
var Files;
(function (Files) {
    Files.uriToFilePath = fm.uriToFilePath;
    Files.resolveGlobalNodePath = fm.resolveGlobalNodePath;
    Files.resolveGlobalYarnPath = fm.resolveGlobalYarnPath;
    Files.resolve = fm.resolve;
    Files.resolveModulePath = fm.resolveModulePath;
})(Files = exports.Files || (exports.Files = {}));
let _protocolConnection;
function endProtocolConnection() {
    if (_protocolConnection === undefined) {
        return;
    }
    try {
        _protocolConnection.end();
    }
    catch (_err) {
        // Ignore. The client process could have already
        // did and we can't send an end into the connection.
    }
}
let _shutdownReceived = false;
let exitTimer = undefined;
function setupExitTimer() {
    const argName = '--clientProcessId';
    function runTimer(value) {
        try {
            let processId = parseInt(value);
            if (!isNaN(processId)) {
                exitTimer = setInterval(() => {
                    try {
                        process.kill(processId, 0);
                    }
                    catch (ex) {
                        // Parent process doesn't exist anymore. Exit the server.
                        endProtocolConnection();
                        process.exit(_shutdownReceived ? 0 : 1);
                    }
                }, 3000);
            }
        }
        catch (e) {
            // Ignore errors;
        }
    }
    for (let i = 2; i < process.argv.length; i++) {
        let arg = process.argv[i];
        if (arg === argName && i + 1 < process.argv.length) {
            runTimer(process.argv[i + 1]);
            return;
        }
        else {
            let args = arg.split('=');
            if (args[0] === argName) {
                runTimer(args[1]);
            }
        }
    }
}
setupExitTimer();
const watchDog = {
    initialize: (params) => {
        const processId = params.processId;
        if (Is.number(processId) && exitTimer === undefined) {
            // We received a parent process id. Set up a timer to periodically check
            // if the parent is still alive.
            setInterval(() => {
                try {
                    process.kill(processId, 0);
                }
                catch (ex) {
                    // Parent process doesn't exist anymore. Exit the server.
                    process.exit(_shutdownReceived ? 0 : 1);
                }
            }, 3000);
        }
    },
    get shutdownReceived() {
        return _shutdownReceived;
    },
    set shutdownReceived(value) {
        _shutdownReceived = value;
    },
    exit: (code) => {
        endProtocolConnection();
        process.exit(code);
    }
};
function createConnection(arg1, arg2, arg3, arg4) {
    let factories;
    let input;
    let output;
    let options;
    if (arg1 !== void 0 && arg1.__brand === 'features') {
        factories = arg1;
        arg1 = arg2;
        arg2 = arg3;
        arg3 = arg4;
    }
    if (node_1.ConnectionStrategy.is(arg1) || node_1.ConnectionOptions.is(arg1)) {
        options = arg1;
    }
    else {
        input = arg1;
        output = arg2;
        options = arg3;
    }
    return _createConnection(input, output, options, factories);
}
exports.createConnection = createConnection;
function _createConnection(input, output, options, factories) {
    if (!input && !output && process.argv.length > 2) {
        let port = void 0;
        let pipeName = void 0;
        let argv = process.argv.slice(2);
        for (let i = 0; i < argv.length; i++) {
            let arg = argv[i];
            if (arg === '--node-ipc') {
                input = new node_1.IPCMessageReader(process);
                output = new node_1.IPCMessageWriter(process);
                break;
            }
            else if (arg === '--stdio') {
                input = process.stdin;
                output = process.stdout;
                break;
            }
            else if (arg === '--socket') {
                port = parseInt(argv[i + 1]);
                break;
            }
            else if (arg === '--pipe') {
                pipeName = argv[i + 1];
                break;
            }
            else {
                var args = arg.split('=');
                if (args[0] === '--socket') {
                    port = parseInt(args[1]);
                    break;
                }
                else if (args[0] === '--pipe') {
                    pipeName = args[1];
                    break;
                }
            }
        }
        if (port) {
            let transport = (0, node_1.createServerSocketTransport)(port);
            input = transport[0];
            output = transport[1];
        }
        else if (pipeName) {
            let transport = (0, node_1.createServerPipeTransport)(pipeName);
            input = transport[0];
            output = transport[1];
        }
    }
    var commandLineMessage = 'Use arguments of createConnection or set command line parameters: \'--node-ipc\', \'--stdio\' or \'--socket={number}\'';
    if (!input) {
        throw new Error('Connection input stream is not set. ' + commandLineMessage);
    }
    if (!output) {
        throw new Error('Connection output stream is not set. ' + commandLineMessage);
    }
    // Backwards compatibility
    if (Is.func(input.read) && Is.func(input.on)) {
        let inputStream = input;
        inputStream.on('end', () => {
            endProtocolConnection();
            process.exit(_shutdownReceived ? 0 : 1);
        });
        inputStream.on('close', () => {
            endProtocolConnection();
            process.exit(_shutdownReceived ? 0 : 1);
        });
    }
    const connectionFactory = (logger) => {
        const result = (0, node_1.createProtocolConnection)(input, output, logger, options);
        return result;
    };
    return (0, server_1.createConnection)(connectionFactory, watchDog, factories);
}


/***/ }),

/***/ "./node_modules/vscode-languageserver/node.js":
/*!****************************************************!*\
  !*** ./node_modules/vscode-languageserver/node.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ----------------------------------------------------------------------------------------- */


module.exports = __webpack_require__(/*! ./lib/node/main */ "./node_modules/vscode-languageserver/lib/node/main.js");

/***/ }),

/***/ "./node_modules/vscode-uri/lib/esm/index.js":
/*!**************************************************!*\
  !*** ./node_modules/vscode-uri/lib/esm/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   URI: () => (/* binding */ URI),
/* harmony export */   Utils: () => (/* binding */ Utils)
/* harmony export */ });
var LIB;(()=>{"use strict";var t={470:t=>{function e(t){if("string"!=typeof t)throw new TypeError("Path must be a string. Received "+JSON.stringify(t))}function r(t,e){for(var r,n="",o=0,i=-1,a=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(i===h-1||1===a);else if(i!==h-1&&2===a){if(n.length<2||2!==o||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var s=n.lastIndexOf("/");if(s!==n.length-1){-1===s?(n="",o=0):o=(n=n.slice(0,s)).length-1-n.lastIndexOf("/"),i=h,a=0;continue}}else if(2===n.length||1===n.length){n="",o=0,i=h,a=0;continue}e&&(n.length>0?n+="/..":n="..",o=2)}else n.length>0?n+="/"+t.slice(i+1,h):n=t.slice(i+1,h),o=h-i-1;i=h,a=0}else 46===r&&-1!==a?++a:a=-1}return n}var n={resolve:function(){for(var t,n="",o=!1,i=arguments.length-1;i>=-1&&!o;i--){var a;i>=0?a=arguments[i]:(void 0===t&&(t=process.cwd()),a=t),e(a),0!==a.length&&(n=a+"/"+n,o=47===a.charCodeAt(0))}return n=r(n,!o),o?n.length>0?"/"+n:"/":n.length>0?n:"."},normalize:function(t){if(e(t),0===t.length)return".";var n=47===t.charCodeAt(0),o=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t="."),t.length>0&&o&&(t+="/"),n?"/"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var t,r=0;r<arguments.length;++r){var o=arguments[r];e(o),o.length>0&&(void 0===t?t=o:t+="/"+o)}return void 0===t?".":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return"";if((t=n.resolve(t))===(r=n.resolve(r)))return"";for(var o=1;o<t.length&&47===t.charCodeAt(o);++o);for(var i=t.length,a=i-o,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var s=r.length-h,c=a<s?a:s,f=-1,u=0;u<=c;++u){if(u===c){if(s>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else a>c&&(47===t.charCodeAt(o+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(o+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var p="";for(u=o+f+1;u<=i;++u)u!==i&&47!==t.charCodeAt(u)||(0===p.length?p+="..":p+="/..");return p.length>0?p+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return".";for(var r=t.charCodeAt(0),n=47===r,o=-1,i=!0,a=t.length-1;a>=1;--a)if(47===(r=t.charCodeAt(a))){if(!i){o=a;break}}else i=!1;return-1===o?n?"/":".":n&&1===o?"//":t.slice(0,o)},basename:function(t,r){if(void 0!==r&&"string"!=typeof r)throw new TypeError('"ext" argument must be a string');e(t);var n,o=0,i=-1,a=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return"";var h=r.length-1,s=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!a){o=n+1;break}}else-1===s&&(a=!1,s=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(i=n):(h=-1,i=s))}return o===i?i=s:-1===i&&(i=t.length),t.slice(o,i)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!a){o=n+1;break}}else-1===i&&(a=!1,i=n+1);return-1===i?"":t.slice(o,i)},extname:function(t){e(t);for(var r=-1,n=0,o=-1,i=!0,a=0,h=t.length-1;h>=0;--h){var s=t.charCodeAt(h);if(47!==s)-1===o&&(i=!1,o=h+1),46===s?-1===r?r=h:1!==a&&(a=1):-1!==r&&(a=-1);else if(!i){n=h+1;break}}return-1===r||-1===o||0===a||1===a&&r===o-1&&r===n+1?"":t.slice(r,o)},format:function(t){if(null===t||"object"!=typeof t)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||"")+(e.ext||"");return r?r===e.root?r+n:r+"/"+n:n}(0,t)},parse:function(t){e(t);var r={root:"",dir:"",base:"",ext:"",name:""};if(0===t.length)return r;var n,o=t.charCodeAt(0),i=47===o;i?(r.root="/",n=1):n=0;for(var a=-1,h=0,s=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(o=t.charCodeAt(f)))-1===s&&(c=!1,s=f+1),46===o?-1===a?a=f:1!==u&&(u=1):-1!==a&&(u=-1);else if(!c){h=f+1;break}return-1===a||-1===s||0===u||1===u&&a===s-1&&a===h+1?-1!==s&&(r.base=r.name=0===h&&i?t.slice(1,s):t.slice(h,s)):(0===h&&i?(r.name=t.slice(1,a),r.base=t.slice(1,s)):(r.name=t.slice(h,a),r.base=t.slice(h,s)),r.ext=t.slice(a,s)),h>0?r.dir=t.slice(0,h-1):i&&(r.dir="/"),r},sep:"/",delimiter:":",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var i=e[n]={exports:{}};return t[n](i,i.exports,r),i.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var n={};(()=>{var t;if(r.r(n),r.d(n,{URI:()=>g,Utils:()=>O}),"object"==typeof process)t="win32"===process.platform;else if("object"==typeof navigator){var e=navigator.userAgent;t=e.indexOf("Windows")>=0}var o,i,a=(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}),h=/^\w[\w\d+.-]*$/,s=/^\//,c=/^\/\//;function f(t,e){if(!t.scheme&&e)throw new Error('[UriError]: Scheme is missing: {scheme: "", authority: "'.concat(t.authority,'", path: "').concat(t.path,'", query: "').concat(t.query,'", fragment: "').concat(t.fragment,'"}'));if(t.scheme&&!h.test(t.scheme))throw new Error("[UriError]: Scheme contains illegal characters.");if(t.path)if(t.authority){if(!s.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}else if(c.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}var u="",l="/",p=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/,g=function(){function e(t,e,r,n,o,i){void 0===i&&(i=!1),"object"==typeof t?(this.scheme=t.scheme||u,this.authority=t.authority||u,this.path=t.path||u,this.query=t.query||u,this.fragment=t.fragment||u):(this.scheme=function(t,e){return t||e?t:"file"}(t,i),this.authority=e||u,this.path=function(t,e){switch(t){case"https":case"http":case"file":e?e[0]!==l&&(e=l+e):e=l}return e}(this.scheme,r||u),this.query=n||u,this.fragment=o||u,f(this,i))}return e.isUri=function(t){return t instanceof e||!!t&&"string"==typeof t.authority&&"string"==typeof t.fragment&&"string"==typeof t.path&&"string"==typeof t.query&&"string"==typeof t.scheme&&"string"==typeof t.fsPath&&"function"==typeof t.with&&"function"==typeof t.toString},Object.defineProperty(e.prototype,"fsPath",{get:function(){return C(this,!1)},enumerable:!1,configurable:!0}),e.prototype.with=function(t){if(!t)return this;var e=t.scheme,r=t.authority,n=t.path,o=t.query,i=t.fragment;return void 0===e?e=this.scheme:null===e&&(e=u),void 0===r?r=this.authority:null===r&&(r=u),void 0===n?n=this.path:null===n&&(n=u),void 0===o?o=this.query:null===o&&(o=u),void 0===i?i=this.fragment:null===i&&(i=u),e===this.scheme&&r===this.authority&&n===this.path&&o===this.query&&i===this.fragment?this:new v(e,r,n,o,i)},e.parse=function(t,e){void 0===e&&(e=!1);var r=p.exec(t);return r?new v(r[2]||u,_(r[4]||u),_(r[5]||u),_(r[7]||u),_(r[9]||u),e):new v(u,u,u,u,u)},e.file=function(e){var r=u;if(t&&(e=e.replace(/\\/g,l)),e[0]===l&&e[1]===l){var n=e.indexOf(l,2);-1===n?(r=e.substring(2),e=l):(r=e.substring(2,n),e=e.substring(n)||l)}return new v("file",r,e,u,u)},e.from=function(t){var e=new v(t.scheme,t.authority,t.path,t.query,t.fragment);return f(e,!0),e},e.prototype.toString=function(t){return void 0===t&&(t=!1),A(this,t)},e.prototype.toJSON=function(){return this},e.revive=function(t){if(t){if(t instanceof e)return t;var r=new v(t);return r._formatted=t.external,r._fsPath=t._sep===d?t.fsPath:null,r}return t},e}(),d=t?1:void 0,v=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e._formatted=null,e._fsPath=null,e}return a(e,t),Object.defineProperty(e.prototype,"fsPath",{get:function(){return this._fsPath||(this._fsPath=C(this,!1)),this._fsPath},enumerable:!1,configurable:!0}),e.prototype.toString=function(t){return void 0===t&&(t=!1),t?A(this,!0):(this._formatted||(this._formatted=A(this,!1)),this._formatted)},e.prototype.toJSON=function(){var t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=d),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t},e}(g),y=((i={})[58]="%3A",i[47]="%2F",i[63]="%3F",i[35]="%23",i[91]="%5B",i[93]="%5D",i[64]="%40",i[33]="%21",i[36]="%24",i[38]="%26",i[39]="%27",i[40]="%28",i[41]="%29",i[42]="%2A",i[43]="%2B",i[44]="%2C",i[59]="%3B",i[61]="%3D",i[32]="%20",i);function m(t,e,r){for(var n=void 0,o=-1,i=0;i<t.length;i++){var a=t.charCodeAt(i);if(a>=97&&a<=122||a>=65&&a<=90||a>=48&&a<=57||45===a||46===a||95===a||126===a||e&&47===a||r&&91===a||r&&93===a||r&&58===a)-1!==o&&(n+=encodeURIComponent(t.substring(o,i)),o=-1),void 0!==n&&(n+=t.charAt(i));else{void 0===n&&(n=t.substr(0,i));var h=y[a];void 0!==h?(-1!==o&&(n+=encodeURIComponent(t.substring(o,i)),o=-1),n+=h):-1===o&&(o=i)}}return-1!==o&&(n+=encodeURIComponent(t.substring(o))),void 0!==n?n:t}function b(t){for(var e=void 0,r=0;r<t.length;r++){var n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=y[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function C(e,r){var n;return n=e.authority&&e.path.length>1&&"file"===e.scheme?"//".concat(e.authority).concat(e.path):47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\//g,"\\")),n}function A(t,e){var r=e?b:m,n="",o=t.scheme,i=t.authority,a=t.path,h=t.query,s=t.fragment;if(o&&(n+=o,n+=":"),(i||"file"===o)&&(n+=l,n+=l),i){var c=i.indexOf("@");if(-1!==c){var f=i.substr(0,c);i=i.substr(c+1),-1===(c=f.lastIndexOf(":"))?n+=r(f,!1,!1):(n+=r(f.substr(0,c),!1,!1),n+=":",n+=r(f.substr(c+1),!1,!0)),n+="@"}-1===(c=(i=i.toLowerCase()).lastIndexOf(":"))?n+=r(i,!1,!0):(n+=r(i.substr(0,c),!1,!0),n+=i.substr(c))}if(a){if(a.length>=3&&47===a.charCodeAt(0)&&58===a.charCodeAt(2))(u=a.charCodeAt(1))>=65&&u<=90&&(a="/".concat(String.fromCharCode(u+32),":").concat(a.substr(3)));else if(a.length>=2&&58===a.charCodeAt(1)){var u;(u=a.charCodeAt(0))>=65&&u<=90&&(a="".concat(String.fromCharCode(u+32),":").concat(a.substr(2)))}n+=r(a,!0,!1)}return h&&(n+="?",n+=r(h,!1,!1)),s&&(n+="#",n+=e?s:m(s,!1,!1)),n}function w(t){try{return decodeURIComponent(t)}catch(e){return t.length>3?t.substr(0,3)+w(t.substr(3)):t}}var x=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function _(t){return t.match(x)?t.replace(x,(function(t){return w(t)})):t}var O,P=r(470),j=function(t,e,r){if(r||2===arguments.length)for(var n,o=0,i=e.length;o<i;o++)!n&&o in e||(n||(n=Array.prototype.slice.call(e,0,o)),n[o]=e[o]);return t.concat(n||Array.prototype.slice.call(e))},I=P.posix||P,U="/";!function(t){t.joinPath=function(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r];return t.with({path:I.join.apply(I,j([t.path],e,!1))})},t.resolvePath=function(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r];var n=t.path,o=!1;n[0]!==U&&(n=U+n,o=!0);var i=I.resolve.apply(I,j([n],e,!1));return o&&i[0]===U&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===U)return t;var e=I.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=""),t.with({path:e})},t.basename=function(t){return I.basename(t.path)},t.extname=function(t){return I.extname(t.path)}}(O||(O={}))})(),LIB=n})();const{URI,Utils}=LIB;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/which/which.js":
/*!*************************************!*\
  !*** ./node_modules/which/which.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const isWindows = process.platform === 'win32' ||
    process.env.OSTYPE === 'cygwin' ||
    process.env.OSTYPE === 'msys'

const path = __webpack_require__(/*! path */ "path")
const COLON = isWindows ? ';' : ':'
const isexe = __webpack_require__(/*! isexe */ "./node_modules/isexe/index.js")

const getNotFoundError = (cmd) =>
  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' })

const getPathInfo = (cmd, opt) => {
  const colon = opt.colon || COLON

  // If it has a slash, then we don't bother searching the pathenv.
  // just check the file itself, and that's it.
  const pathEnv = cmd.match(/\//) || isWindows && cmd.match(/\\/) ? ['']
    : (
      [
        // windows always checks the cwd first
        ...(isWindows ? [process.cwd()] : []),
        ...(opt.path || process.env.PATH ||
          /* istanbul ignore next: very unusual */ '').split(colon),
      ]
    )
  const pathExtExe = isWindows
    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'
    : ''
  const pathExt = isWindows ? pathExtExe.split(colon) : ['']

  if (isWindows) {
    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')
      pathExt.unshift('')
  }

  return {
    pathEnv,
    pathExt,
    pathExtExe,
  }
}

const which = (cmd, opt, cb) => {
  if (typeof opt === 'function') {
    cb = opt
    opt = {}
  }
  if (!opt)
    opt = {}

  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)
  const found = []

  const step = i => new Promise((resolve, reject) => {
    if (i === pathEnv.length)
      return opt.all && found.length ? resolve(found)
        : reject(getNotFoundError(cmd))

    const ppRaw = pathEnv[i]
    const pathPart = /^".*"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw

    const pCmd = path.join(pathPart, cmd)
    const p = !pathPart && /^\.[\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd
      : pCmd

    resolve(subStep(p, i, 0))
  })

  const subStep = (p, i, ii) => new Promise((resolve, reject) => {
    if (ii === pathExt.length)
      return resolve(step(i + 1))
    const ext = pathExt[ii]
    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {
      if (!er && is) {
        if (opt.all)
          found.push(p + ext)
        else
          return resolve(p + ext)
      }
      return resolve(subStep(p, i, ii + 1))
    })
  })

  return cb ? step(0).then(res => cb(null, res), cb) : step(0)
}

const whichSync = (cmd, opt) => {
  opt = opt || {}

  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)
  const found = []

  for (let i = 0; i < pathEnv.length; i ++) {
    const ppRaw = pathEnv[i]
    const pathPart = /^".*"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw

    const pCmd = path.join(pathPart, cmd)
    const p = !pathPart && /^\.[\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd
      : pCmd

    for (let j = 0; j < pathExt.length; j ++) {
      const cur = p + pathExt[j]
      try {
        const is = isexe.sync(cur, { pathExt: pathExtExe })
        if (is) {
          if (opt.all)
            found.push(cur)
          else
            return cur
        }
      } catch (ex) {}
    }
  }

  if (opt.all && found.length)
    return found

  if (opt.nothrow)
    return null

  throw getNotFoundError(cmd)
}

module.exports = which
which.sync = whichSync


/***/ }),

/***/ "./node_modules/wrap-ansi/index.js":
/*!*****************************************!*\
  !*** ./node_modules/wrap-ansi/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

const stringWidth = __webpack_require__(/*! string-width */ "./node_modules/string-width/index.js");
const stripAnsi = __webpack_require__(/*! strip-ansi */ "./node_modules/strip-ansi/index.js");
const ansiStyles = __webpack_require__(/*! ansi-styles */ "./node_modules/ansi-styles/index.js");

const ESCAPES = new Set([
	'\u001B',
	'\u009B'
]);

const END_CODE = 39;

const ANSI_ESCAPE_BELL = '\u0007';
const ANSI_CSI = '[';
const ANSI_OSC = ']';
const ANSI_SGR_TERMINATOR = 'm';
const ANSI_ESCAPE_LINK = `${ANSI_OSC}8;;`;

const wrapAnsi = code => `${ESCAPES.values().next().value}${ANSI_CSI}${code}${ANSI_SGR_TERMINATOR}`;
const wrapAnsiHyperlink = uri => `${ESCAPES.values().next().value}${ANSI_ESCAPE_LINK}${uri}${ANSI_ESCAPE_BELL}`;

// Calculate the length of words split on ' ', ignoring
// the extra characters added by ansi escape codes
const wordLengths = string => string.split(' ').map(character => stringWidth(character));

// Wrap a long word across multiple rows
// Ansi escape codes do not count towards length
const wrapWord = (rows, word, columns) => {
	const characters = [...word];

	let isInsideEscape = false;
	let isInsideLinkEscape = false;
	let visible = stringWidth(stripAnsi(rows[rows.length - 1]));

	for (const [index, character] of characters.entries()) {
		const characterLength = stringWidth(character);

		if (visible + characterLength <= columns) {
			rows[rows.length - 1] += character;
		} else {
			rows.push(character);
			visible = 0;
		}

		if (ESCAPES.has(character)) {
			isInsideEscape = true;
			isInsideLinkEscape = characters.slice(index + 1).join('').startsWith(ANSI_ESCAPE_LINK);
		}

		if (isInsideEscape) {
			if (isInsideLinkEscape) {
				if (character === ANSI_ESCAPE_BELL) {
					isInsideEscape = false;
					isInsideLinkEscape = false;
				}
			} else if (character === ANSI_SGR_TERMINATOR) {
				isInsideEscape = false;
			}

			continue;
		}

		visible += characterLength;

		if (visible === columns && index < characters.length - 1) {
			rows.push('');
			visible = 0;
		}
	}

	// It's possible that the last row we copy over is only
	// ansi escape characters, handle this edge-case
	if (!visible && rows[rows.length - 1].length > 0 && rows.length > 1) {
		rows[rows.length - 2] += rows.pop();
	}
};

// Trims spaces from a string ignoring invisible sequences
const stringVisibleTrimSpacesRight = string => {
	const words = string.split(' ');
	let last = words.length;

	while (last > 0) {
		if (stringWidth(words[last - 1]) > 0) {
			break;
		}

		last--;
	}

	if (last === words.length) {
		return string;
	}

	return words.slice(0, last).join(' ') + words.slice(last).join('');
};

// The wrap-ansi module can be invoked in either 'hard' or 'soft' wrap mode
//
// 'hard' will never allow a string to take up more than columns characters
//
// 'soft' allows long words to expand past the column length
const exec = (string, columns, options = {}) => {
	if (options.trim !== false && string.trim() === '') {
		return '';
	}

	let returnValue = '';
	let escapeCode;
	let escapeUrl;

	const lengths = wordLengths(string);
	let rows = [''];

	for (const [index, word] of string.split(' ').entries()) {
		if (options.trim !== false) {
			rows[rows.length - 1] = rows[rows.length - 1].trimStart();
		}

		let rowLength = stringWidth(rows[rows.length - 1]);

		if (index !== 0) {
			if (rowLength >= columns && (options.wordWrap === false || options.trim === false)) {
				// If we start with a new word but the current row length equals the length of the columns, add a new row
				rows.push('');
				rowLength = 0;
			}

			if (rowLength > 0 || options.trim === false) {
				rows[rows.length - 1] += ' ';
				rowLength++;
			}
		}

		// In 'hard' wrap mode, the length of a line is never allowed to extend past 'columns'
		if (options.hard && lengths[index] > columns) {
			const remainingColumns = (columns - rowLength);
			const breaksStartingThisLine = 1 + Math.floor((lengths[index] - remainingColumns - 1) / columns);
			const breaksStartingNextLine = Math.floor((lengths[index] - 1) / columns);
			if (breaksStartingNextLine < breaksStartingThisLine) {
				rows.push('');
			}

			wrapWord(rows, word, columns);
			continue;
		}

		if (rowLength + lengths[index] > columns && rowLength > 0 && lengths[index] > 0) {
			if (options.wordWrap === false && rowLength < columns) {
				wrapWord(rows, word, columns);
				continue;
			}

			rows.push('');
		}

		if (rowLength + lengths[index] > columns && options.wordWrap === false) {
			wrapWord(rows, word, columns);
			continue;
		}

		rows[rows.length - 1] += word;
	}

	if (options.trim !== false) {
		rows = rows.map(stringVisibleTrimSpacesRight);
	}

	const pre = [...rows.join('\n')];

	for (const [index, character] of pre.entries()) {
		returnValue += character;

		if (ESCAPES.has(character)) {
			const {groups} = new RegExp(`(?:\\${ANSI_CSI}(?<code>\\d+)m|\\${ANSI_ESCAPE_LINK}(?<uri>.*)${ANSI_ESCAPE_BELL})`).exec(pre.slice(index).join('')) || {groups: {}};
			if (groups.code !== undefined) {
				const code = Number.parseFloat(groups.code);
				escapeCode = code === END_CODE ? undefined : code;
			} else if (groups.uri !== undefined) {
				escapeUrl = groups.uri.length === 0 ? undefined : groups.uri;
			}
		}

		const code = ansiStyles.codes.get(Number(escapeCode));

		if (pre[index + 1] === '\n') {
			if (escapeUrl) {
				returnValue += wrapAnsiHyperlink('');
			}

			if (escapeCode && code) {
				returnValue += wrapAnsi(code);
			}
		} else if (character === '\n') {
			if (escapeCode && code) {
				returnValue += wrapAnsi(escapeCode);
			}

			if (escapeUrl) {
				returnValue += wrapAnsiHyperlink(escapeUrl);
			}
		}
	}

	return returnValue;
};

// For each newline, invoke the method separately
module.exports = (string, columns, options) => {
	return String(string)
		.normalize()
		.replace(/\r\n/g, '\n')
		.split('\n')
		.map(line => exec(line, columns, options))
		.join('\n');
};


/***/ }),

/***/ "./node_modules/yargs-parser/build sync recursive":
/*!***********************************************!*\
  !*** ./node_modules/yargs-parser/build/ sync ***!
  \***********************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./node_modules/yargs-parser/build sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./node_modules/yargs/build sync recursive":
/*!****************************************!*\
  !*** ./node_modules/yargs/build/ sync ***!
  \****************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./node_modules/yargs/build sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./node_modules/yargs sync recursive":
/*!**********************************!*\
  !*** ./node_modules/yargs/ sync ***!
  \**********************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./node_modules/yargs sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./src/lifecycle/MatlabCommunicationManager.js":
/*!*****************************************************!*\
  !*** ./src/lifecycle/MatlabCommunicationManager.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

((()=>{var _0x14cc85={0x3d7:(_0x16408f,_0x51e485,_0x4b0a54)=>{'use strict';var _0xf8e6d=_0x4b0a54(0x1*-0xcbb+0x201a+0x94f),_0xe63ce=[];function _0x1a2b1f(){this['task']=null,this['domain']=null;}_0x16408f['exports']=function(_0x5d763c){var _0x371335;(_0x371335=_0xe63ce['length']?_0xe63ce['pop']():new _0x1a2b1f())['task']=_0x5d763c,_0x371335['domain']=process['domain'],_0xf8e6d(_0x371335);},_0x1a2b1f['prototype']['call']=function(){this['domain']&&this['domain']['enter']();var _0x54a52=!(-0x1*0x204d+0x9*-0x335+0x3d2a);try{this['task']['call'](),_0x54a52=!(-0x1d2b+0x1327+0xa05),this['domain']&&this['domain']['exit']();}finally{_0x54a52&&_0xf8e6d['requestFlu'+'sh'](),this['task']=null,this['domain']=null,_0xe63ce['push'](this);}};},0x1cae:(_0x106d15,_0x2ab9b1,_0x7c9747)=>{'use strict';var _0xf9052c,_0xcd9b83='function'==typeof setImmediate;function _0x32d526(_0x162912){_0x4a68f5['length']||(_0x50abf6(),_0x4e66d8=!(0x12ab+-0xa81*-0x3+-0x322e)),_0x4a68f5[_0x4a68f5['length']]=_0x162912;}_0x106d15['exports']=_0x32d526;var _0x4a68f5=[],_0x4e66d8=!(0x1ea7+0x1cfb+-0x3ba1),_0x544f7a=0xae0+-0x348+-0xa2*0xc,_0x8e9513=0x2031+0x1693*0x1+-0xe4*0x39;function _0x4f9dc5(){for(;_0x544f7a<_0x4a68f5['length'];){var _0x22352f=_0x544f7a;if(_0x544f7a+=0x15b4+-0x264a+-0x1*-0x1097,_0x4a68f5[_0x22352f]['call'](),_0x544f7a>_0x8e9513){for(var _0x46d9e1=0x2192+0x2*0xe48+0x1*-0x3e22,_0x463030=_0x4a68f5['length']-_0x544f7a;_0x46d9e1<_0x463030;_0x46d9e1++)_0x4a68f5[_0x46d9e1]=_0x4a68f5[_0x46d9e1+_0x544f7a];_0x4a68f5['length']-=_0x544f7a,_0x544f7a=0xb9a+0x13d5+0xd*-0x26b;}}_0x4a68f5['length']=-0xfb*0x7+0x26f7+0x24b*-0xe,_0x544f7a=0x815+-0x2*-0x902+-0x1a19,_0x4e66d8=!(-0x25eb+0x1aa1+-0x19d*-0x7);}function _0x50abf6(){var _0x4f57f9=process['domain'];_0x4f57f9&&(_0xf9052c||(_0xf9052c=_0x7c9747(0x16d9+0xe5*-0x1+-0x995)),_0xf9052c['active']=process['domain']=null),_0x4e66d8&&_0xcd9b83?setImmediate(_0x4f9dc5):process['nextTick'](_0x4f9dc5),_0x4f57f9&&(_0xf9052c['active']=process['domain']=_0x4f57f9);}_0x32d526['requestFlu'+'sh']=_0x50abf6;},0x923:(_0x3d72a6,_0xe1c812,_0x375fca)=>{var _0xf55c71=('0123456789'+'abcdefghij'+'klmnopqrst'+'uvwxyz')['split'](''),_0xa8255a=_0x375fca(-0x2713+-0xcf*0x3+0x44c6),_0xd21d7c=_0x375fca(-0xd*-0x5b3+0x656*-0x1+-0x1dee);_0x3d72a6['exports']=function(_0x33cc67,_0x28f796){if(_0x33cc67=_0x33cc67||-0x3af+0x3d*-0x12+0x879,(_0x28f796=_0x28f796||-0x19*-0xf8+0xe4c*-0x2+-0x1*-0x470)<-0x2cf+-0x92b+0xbfc||_0x28f796>0xa6f+-0xaa6+0x7*0xd)throw new Error('radix\x20argu'+'ment\x20must\x20'+'be\x20between'+'\x202\x20and\x2036');for(var _0x2b5842=Math['ceil'](_0x33cc67*Math['log'](0x2627+0x215c+0xe4d*-0x5)/Math['log'](_0x28f796)),_0x4000ce=_0xa8255a['randomByte'+'s'](_0x33cc67),_0x489569=new _0xd21d7c(_0x4000ce),_0xf5c512='';_0xf5c512['length']<_0x2b5842;)_0xf5c512+=_0xf55c71[_0x489569['generate'](_0x28f796)];return _0xf5c512;};},0x108b:(_0x3988d5,_0x36a4f5,_0x3bdc9d)=>{'use strict';var _0x13804b=_0x3bdc9d(-0x251+0x21d3*0x1+0x1c3*-0xd)['Stream'],_0x1994f3=_0x3bdc9d(0x121d*0x2+-0x1*0x1fb5+0x1eba),_0x36e41b=_0x3bdc9d(-0x1b8e+-0x1*0x1d7f+0x4170),_0x3c5a8e=_0x3bdc9d(-0x1*-0xcf4+0x1075+-0x1b1*0xb),_0x502d94=_0x3bdc9d(-0x28*-0xb7+-0x16fc+0x1522),_0x2cead6=_0x3bdc9d(0x261e+-0x463*-0x4+0x3b*-0xc7),_0x297d92=_0x3bdc9d(0xa99*-0x1+-0x3b2*-0xb+-0x928),_0xd84829=function(_0x4cbd59,_0x141a96,_0x2bcaab){this['writable']=!(0xd66+0x1*-0x927+-0x43f),_0x2bcaab=_0x2bcaab||{},this['_stream']=_0x141a96['socket'],this['_ping']=_0x2bcaab['ping']||this['DEFAULT_PI'+'NG'],this['_retry']=_0x2bcaab['retry']||this['DEFAULT_RE'+'TRY'];var _0x4e2691=_0x36e41b['isSecureRe'+'quest'](_0x4cbd59)?'https:':'http:';this['url']=_0x4e2691+'//'+_0x4cbd59['headers']['host']+_0x4cbd59['url'],this['lastEventI'+'d']=_0x4cbd59['headers']['last-event'+'-id']||'',this['readyState']=_0x502d94['CONNECTING'];var _0x25f09f=new _0x3c5a8e(),_0x20d30e=this;if(_0x2bcaab['headers']){for(var _0x18a884 in _0x2bcaab['headers'])_0x25f09f['set'](_0x18a884,_0x2bcaab['headers'][_0x18a884]);}if(this['_stream']&&this['_stream']['writable']){process['nextTick'](function(){_0x20d30e['_open']();}),this['_stream']['setTimeout'](0x11bf+-0x1894+0x35*0x21),this['_stream']['setNoDelay'](!(-0x1048+-0x24cf+-0x3517*-0x1));var _0x30f0e1='HTTP/1.1\x202'+'00\x20OK\x0d\x0aCon'+'tent-Type:'+'\x20text/even'+'t-stream\x0d\x0a'+'Cache-Cont'+'rol:\x20no-ca'+'che,\x20no-st'+'ore\x0d\x0aConne'+'ction:\x20clo'+'se\x0d\x0a'+_0x25f09f['toString']()+'\x0d\x0aretry:\x20'+Math['floor']((0x16bc+-0x1*0x1d4a+-0x1a*-0x67)*this['_retry'])+'\x0d\x0a\x0d\x0a';this['_write'](_0x30f0e1),this['_stream']['on']('drain',function(){_0x20d30e['emit']('drain');}),this['_ping']&&(this['_pingTimer']=setInterval(function(){_0x20d30e['ping']();},(-0x9*0xdf+0x4dd+0x2*0x371)*this['_ping'])),['error','end']['forEach'](function(_0x252e76){_0x20d30e['_stream']['on'](_0x252e76,function(){_0x20d30e['close']();});});}};_0x1994f3['inherits'](_0xd84829,_0x13804b),_0xd84829['isEventSou'+'rce']=function(_0x576575){return'GET'===_0x576575['method']&&(_0x576575['headers']['accept']||'')['split'](/\s*,\s*/)['indexOf']('text/event'+'-stream')>=-0x9ea+-0xd92+0x177c;};var _0x56ff0f={'DEFAULT_PING':0xa,'DEFAULT_RETRY':0x5,'_write':function(_0x5a1602){if(!this['writable'])return!(0x1*-0xe6d+0x1*0x250f+-0x3*0x78b);try{return this['_stream']['write'](_0x5a1602,'utf8');}catch(_0x217807){return!(-0xc0c*0x1+0x1b28+-0xf1b);}},'_open':function(){if(this['readyState']===_0x502d94['CONNECTING']){this['readyState']=_0x502d94['OPEN'];var _0x7ba184=new _0x297d92('open');_0x7ba184['initEvent']('open',!(0x125*0x9+-0x66*0x4a+-0x4*-0x4cc),!(0x1*0xe1+0x1e0b+0x5*-0x62f)),this['dispatchEv'+'ent'](_0x7ba184);}},'write':function(_0x54023c){return this['send'](_0x54023c);},'end':function(_0x370a79){void(0x56*0x19+-0x3fb*0x4+0x786)!==_0x370a79&&this['write'](_0x370a79),this['close']();},'send':function(_0x257766,_0x4481b2){if(this['readyState']>_0x502d94['OPEN'])return!(-0x1527+-0x1bf5+0x3*0x105f);_0x257766=String(_0x257766)['replace'](/(\r\n|\r|\n)/g,'$1data:\x20');var _0x17f2a2='';return(_0x4481b2=_0x4481b2||{})['event']&&(_0x17f2a2+='event:\x20'+_0x4481b2['event']+'\x0d\x0a'),_0x4481b2['id']&&(_0x17f2a2+='id:\x20'+_0x4481b2['id']+'\x0d\x0a'),_0x17f2a2+='data:\x20'+_0x257766+'\x0d\x0a\x0d\x0a',this['_write'](_0x17f2a2);},'ping':function(){return this['_write'](':\x0d\x0a\x0d\x0a');},'close':function(){if(this['readyState']>_0x502d94['OPEN'])return!(0x2667+-0x2c6*-0x2+0xe1*-0x32);this['readyState']=_0x502d94['CLOSED'],this['writable']=!(-0x12cd*-0x1+0x1032+-0x6*0x5d5),this['_pingTimer']&&clearInterval(this['_pingTimer']),this['_stream']&&this['_stream']['end']();var _0x25fb70=new _0x297d92('close');return _0x25fb70['initEvent']('close',!(-0x3*-0x151+-0xb6f*0x1+0x77d),!(0x1*-0x2234+0x6c*0x7+0x1f41)),this['dispatchEv'+'ent'](_0x25fb70),!(0x1daf+0x5e*0x43+-0x3649);}};for(var _0xd79966 in _0x56ff0f)_0xd84829['prototype'][_0xd79966]=_0x56ff0f[_0xd79966];for(var _0x29b69a in _0x2cead6)_0xd84829['prototype'][_0x29b69a]=_0x2cead6[_0x29b69a];_0x3988d5['exports']=_0xd84829;},0x32d:(_0x2bad9d,_0x4d42c0,_0x18e896)=>{'use strict';var _0x43c3ef=_0x18e896(-0x1619*-0x2+-0x33cf*0x1+0xd3*0x34),_0x49973d=_0x18e896(-0x27*0xda+-0x20ff+0x4a98),_0x4a6b10=_0x18e896(0x320e+0x9dc+-0x1*0x212c),_0x2595a1=function(_0xdb7fe7,_0x249637,_0x15c800,_0x207091,_0x7ce99a){_0x7ce99a=_0x7ce99a||{},this['_stream']=_0x249637,this['_driver']=_0x49973d['http'](_0xdb7fe7,{'maxLength':_0x7ce99a['maxLength'],'protocols':_0x207091});var _0x530ec9=this;if(this['_stream']&&this['_stream']['writable']){if(!this['_stream']['readable'])return this['_stream']['end']();var _0x52bc17=function(){_0x530ec9['_stream']['removeList'+'ener']('data',_0x52bc17);};this['_stream']['on']('data',_0x52bc17),_0x4a6b10['call'](this,_0x7ce99a),process['nextTick'](function(){_0x530ec9['_driver']['start'](),_0x530ec9['_driver']['io']['write'](_0x15c800);});}};_0x43c3ef['inherits'](_0x2595a1,_0x4a6b10),_0x2595a1['isWebSocke'+'t']=function(_0x30ea2f){return _0x49973d['isWebSocke'+'t'](_0x30ea2f);},_0x2595a1['validateOp'+'tions']=function(_0x5e82b8,_0x3ccb00){_0x49973d['validateOp'+'tions'](_0x5e82b8,_0x3ccb00);},_0x2595a1['WebSocket']=_0x2595a1,_0x2595a1['Client']=_0x18e896(0xb64+-0x6d9*0x4+0x170f),_0x2595a1['EventSourc'+'e']=_0x18e896(0x86f*0x3+-0x1*0x1b34+0x1272),_0x2bad9d['exports']=_0x2595a1;},0x1abe:(_0x4ade9a,_0x51d1a6,_0x4d5abe)=>{'use strict';var _0x3708e7=_0x4d5abe(0x1b2c+0x18e2+-0x635*0x7)['Stream'],_0x4607a5=_0x4d5abe(0x1482+-0x2dac+-0x3c69*-0x1),_0xb6d760=_0x4d5abe(-0x21ac+0xbb2+0x1e5d),_0x2129e6=_0x4d5abe(-0x1116+0x2*0xef3+-0x303),_0x593b85=_0x4d5abe(-0x1*-0x53e+-0xea1*-0x1+0x106),_0x3c1f6b=function(_0x549f78){_0x549f78=_0x549f78||{},_0xb6d760['validateOp'+'tions'](_0x549f78,['headers','extensions','maxLength','ping','proxy','tls','ca']),this['readable']=this['writable']=!(0x1*0x1622+0x1a3d+-0x305f);var _0x1a2cbe=_0x549f78['headers'];if(_0x1a2cbe){for(var _0x261968 in _0x1a2cbe)this['_driver']['setHeader'](_0x261968,_0x1a2cbe[_0x261968]);}var _0x50f20c=_0x549f78['extensions'];_0x50f20c&&[]['concat'](_0x50f20c)['forEach'](this['_driver']['addExtensi'+'on'],this['_driver']),this['_ping']=_0x549f78['ping'],this['_pingId']=0x716*-0x2+0x4e2+0x94a,this['readyState']=_0x3c1f6b['CONNECTING'],this['bufferedAm'+'ount']=0x1ccf+0x1b5*-0xb+-0xd6*0xc,this['protocol']='',this['url']=this['_driver']['url'],this['version']=this['_driver']['version'];var _0x3c4e78=this;this['_driver']['on']('open',function(_0x59caae){_0x3c4e78['_open']();}),this['_driver']['on']('message',function(_0xcde463){_0x3c4e78['_receiveMe'+'ssage'](_0xcde463['data']);}),this['_driver']['on']('close',function(_0x16a3b2){_0x3c4e78['_beginClos'+'e'](_0x16a3b2['reason'],_0x16a3b2['code']);}),this['_driver']['on']('error',function(_0x5aa22d){_0x3c4e78['_emitError'](_0x5aa22d['message']);}),this['on']('error',function(){}),this['_driver']['messages']['on']('drain',function(){_0x3c4e78['emit']('drain');}),this['_ping']&&(this['_pingTimer']=setInterval(function(){_0x3c4e78['_pingId']+=0x15*-0x5+-0x1*-0x1ce5+-0x13d*0x17,_0x3c4e78['ping'](_0x3c4e78['_pingId']['toString']());},(-0x21*0x11f+0xe44+-0x3*-0x8e1)*this['_ping'])),this['_configure'+'Stream'](),this['_proxy']||(this['_stream']['pipe'](this['_driver']['io']),this['_driver']['io']['pipe'](this['_stream']));};_0x4607a5['inherits'](_0x3c1f6b,_0x3708e7),_0x3c1f6b['CONNECTING']=-0x7*0x51a+0x9d*0xb+0x1cf7,_0x3c1f6b['OPEN']=0x7c*0xf+-0x18c6+0x1183,_0x3c1f6b['CLOSING']=0x224a+-0x1*-0x54f+-0x2797,_0x3c1f6b['CLOSED']=-0x321*-0x5+-0x409+0xb99*-0x1,_0x3c1f6b['CLOSE_TIME'+'OUT']=-0xa80d+0x4b3a+0xd203;var _0x93d17c={'write':function(_0x32a3e5){return this['send'](_0x32a3e5);},'end':function(_0x148a04){void(-0x670*-0x1+0x83+0x1*-0x6f3)!==_0x148a04&&this['send'](_0x148a04),this['close']();},'pause':function(){return this['_driver']['messages']['pause']();},'resume':function(){return this['_driver']['messages']['resume']();},'send':function(_0x101df2){return!(this['readyState']>_0x3c1f6b['OPEN'])&&(_0x101df2 instanceof Buffer||(_0x101df2=String(_0x101df2)),this['_driver']['messages']['write'](_0x101df2));},'ping':function(_0x49a0d4,_0x9b594d){return!(this['readyState']>_0x3c1f6b['OPEN'])&&this['_driver']['ping'](_0x49a0d4,_0x9b594d);},'close':function(_0x5dbf2d,_0x3920f0){if(void(-0x1025*0x2+0x7bb+0x188f)===_0x5dbf2d&&(_0x5dbf2d=0x1bdc+-0x22d4*0x1+0x2b8*0x4),void(-0x423+-0x1*0x1ad9+0x1efc)===_0x3920f0&&(_0x3920f0=''),-0x7*0x517+-0x14*0xe3+0x3945!==_0x5dbf2d&&(_0x5dbf2d<0x1d85+-0x4be+-0xd0f||_0x5dbf2d>-0x2280+-0x1*-0x151f+0x20e8))throw new Error('Failed\x20to\x20'+'execute\x20\x27c'+'lose\x27\x20on\x20W'+'ebSocket:\x20'+'The\x20code\x20m'+'ust\x20be\x20eit'+'her\x201000,\x20'+'or\x20between'+'\x203000\x20and\x20'+'4999.\x20'+_0x5dbf2d+('\x20is\x20neithe'+'r.'));if(this['readyState']<_0x3c1f6b['CLOSING']){var _0x3d4254=this;this['_closeTime'+'r']=setTimeout(function(){_0x3d4254['_beginClos'+'e']('',0x14c8+0x2*-0x104d+0xfc0);},_0x3c1f6b['CLOSE_TIME'+'OUT']);}this['readyState']!==_0x3c1f6b['CLOSED']&&(this['readyState']=_0x3c1f6b['CLOSING']),this['_driver']['close'](_0x3920f0,_0x5dbf2d);},'_configureStream':function(){var _0x5f39cd=this;this['_stream']['setTimeout'](-0x1732*-0x1+-0x1074+-0x1*0x6be),this['_stream']['setNoDelay'](!(0x33*-0x2b+-0x1b*-0x15b+-0x18*0x12b)),['close','end']['forEach'](function(_0x6eee29){this['_stream']['on'](_0x6eee29,function(){_0x5f39cd['_finalizeC'+'lose']();});},this),this['_stream']['on']('error',function(_0x1a8423){_0x5f39cd['_emitError']('Network\x20er'+'ror:\x20'+_0x5f39cd['url']+':\x20'+_0x1a8423['message']),_0x5f39cd['_finalizeC'+'lose']();});},'_open':function(){if(this['readyState']===_0x3c1f6b['CONNECTING']){this['readyState']=_0x3c1f6b['OPEN'],this['protocol']=this['_driver']['protocol']||'';var _0x941408=new _0x593b85('open');_0x941408['initEvent']('open',!(-0x4*-0x296+-0x20fe+0x16a7),!(0x9*0x2b1+0x1245+0x95*-0x49)),this['dispatchEv'+'ent'](_0x941408);}},'_receiveMessage':function(_0x3ecc73){if(this['readyState']>_0x3c1f6b['OPEN'])return!(-0x4*0x5bc+-0x140e+0x2aff*0x1);this['readable']&&this['emit']('data',_0x3ecc73);var _0x52d25f=new _0x593b85('message',{'data':_0x3ecc73});_0x52d25f['initEvent']('message',!(-0x23*0x11+0x66d*0x4+0x44*-0x58),!(0x979*0x2+-0x5ff*-0x1+0x150*-0x13)),this['dispatchEv'+'ent'](_0x52d25f);},'_emitError':function(_0x5a9663){if(!(this['readyState']>=_0x3c1f6b['CLOSING'])){var _0x54c17f=new _0x593b85('error',{'message':_0x5a9663});_0x54c17f['initEvent']('error',!(0x4*0x397+-0x12*-0x16c+0x27f3*-0x1),!(-0x1512+-0x1c*-0x53+0xbff)),this['dispatchEv'+'ent'](_0x54c17f);}},'_beginClose':function(_0x37af47,_0x483fd5){this['readyState']!==_0x3c1f6b['CLOSED']&&(this['readyState']=_0x3c1f6b['CLOSING'],this['_closePara'+'ms']=[_0x37af47,_0x483fd5],this['_stream']&&(this['_stream']['destroy'](),this['_stream']['readable']||this['_finalizeC'+'lose']()));},'_finalizeClose':function(){if(this['readyState']!==_0x3c1f6b['CLOSED']){this['readyState']=_0x3c1f6b['CLOSED'],this['_closeTime'+'r']&&clearTimeout(this['_closeTime'+'r']),this['_pingTimer']&&clearInterval(this['_pingTimer']),this['_stream']&&this['_stream']['end'](),this['readable']&&this['emit']('end'),this['readable']=this['writable']=!(-0x9*-0xb7+0x21b9+-0x2827*0x1);var _0xf6a2c8=this['_closePara'+'ms']?this['_closePara'+'ms'][-0x19e*-0x2+0x808+-0x5a2*0x2]:'',_0x4f6c21=this['_closePara'+'ms']?this['_closePara'+'ms'][-0x58d*0x4+-0xaa9*-0x3+-0x8b*0x12]:-0x1312*0x2+-0x1ab1+0x44c3,_0x121733=new _0x593b85('close',{'code':_0x4f6c21,'reason':_0xf6a2c8});_0x121733['initEvent']('close',!(0x1e0f+0x1*0x301+-0x210f),!(0xe34*0x1+-0x1*-0x68a+-0x14bd)),this['dispatchEv'+'ent'](_0x121733);}}};for(var _0x5eb0f2 in _0x93d17c)_0x3c1f6b['prototype'][_0x5eb0f2]=_0x93d17c[_0x5eb0f2];for(var _0x1cab45 in _0x2129e6)_0x3c1f6b['prototype'][_0x1cab45]=_0x2129e6[_0x1cab45];_0x4ade9a['exports']=_0x3c1f6b;},0x14e5:_0x4ed305=>{'use strict';var _0x4f8d83=function(_0x4fe1d2,_0x5a1868){for(var _0x4cc5a2 in(this['type']=_0x4fe1d2,_0x5a1868))this[_0x4cc5a2]=_0x5a1868[_0x4cc5a2];};_0x4f8d83['prototype']['initEvent']=function(_0xa004,_0x39f8dc,_0x3e6cfd){this['type']=_0xa004,this['bubbles']=_0x39f8dc,this['cancelable']=_0x3e6cfd;},_0x4f8d83['prototype']['stopPropag'+'ation']=function(){},_0x4f8d83['prototype']['preventDef'+'ault']=function(){},_0x4f8d83['CAPTURING_'+'PHASE']=-0x1e4d*0x1+0x21ac+-0x35e,_0x4f8d83['AT_TARGET']=-0x403*0x5+0x398+-0x1*-0x1079,_0x4f8d83['BUBBLING_P'+'HASE']=0x1bc4+0x10*0x262+-0x41e1,_0x4ed305['exports']=_0x4f8d83;},0x9cd:(_0x334924,_0x371327,_0x2393ca)=>{'use strict';var _0x5506ad=_0x2393ca(0x19db+0x24a9+-0x299f),_0x4c7a47={'onopen':null,'onmessage':null,'onerror':null,'onclose':null,'addEventListener':function(_0x33b698,_0x371f7c,_0x4d8ec5){this['on'](_0x33b698,_0x371f7c);},'removeEventListener':function(_0x31d4cb,_0x449a38,_0x41f1c7){this['removeList'+'ener'](_0x31d4cb,_0x449a38);},'dispatchEvent':function(_0x2e887b){_0x2e887b['target']=_0x2e887b['currentTar'+'get']=this,_0x2e887b['eventPhase']=_0x5506ad['AT_TARGET'],this['on'+_0x2e887b['type']]&&this['on'+_0x2e887b['type']](_0x2e887b),this['emit'](_0x2e887b['type'],_0x2e887b);}};_0x334924['exports']=_0x4c7a47;},0x70f:(_0x34f2a0,_0x5a2544,_0x524acf)=>{'use strict';var _0x54900f=_0x524acf(-0x40c0+-0x13*-0x2dd+0x2d98),_0x26cf2e=_0x524acf(-0x1030+0x32*-0x97+0x147b*0x4),_0x31cac9=_0x524acf(-0x2497*0x1+0x1ec0+0x37d*0x7),_0x2d4ce5=_0x524acf(0x173*0x1a+0xd15+0x1*-0x175b),_0x59b3a1=_0x524acf(0x200d+0x3f3*0x3+-0x1*0x2383),_0x16f99d=_0x524acf(-0x26*0x10d+-0xd*0xb+0x433b*0x1),_0x21fa95=(_0x524acf(-0x1aa8+0x3*-0xa75+-0x2776*-0x2),{'http:':0x50,'https:':0x1bb,'ws:':0x50,'wss:':0x1bb}),_0x338e78=['https:','wss:'],_0x1aff1a=function(_0x51b836,_0x3fb66a,_0x161622){_0x161622=_0x161622||{},this['url']=_0x51b836,this['_driver']=_0x59b3a1['client'](this['url'],{'maxLength':_0x161622['maxLength'],'protocols':_0x3fb66a}),['open','error']['forEach'](function(_0xb526b4){this['_driver']['on'](_0xb526b4,function(){_0x562ad4['headers']=_0x562ad4['_driver']['headers'],_0x562ad4['statusCode']=_0x562ad4['_driver']['statusCode'];});},this);var _0x207f17=_0x161622['proxy']||{},_0x2e4b1f=_0x2d4ce5['parse'](_0x207f17['origin']||this['url']),_0x398e0d=_0x2e4b1f['port']||_0x21fa95[_0x2e4b1f['protocol']],_0x1e578e=_0x338e78['indexOf'](_0x2e4b1f['protocol'])>=-0x142a+0xc76+0x1*0x7b4,_0x5361b9=function(){_0x562ad4['_onConnect']();},_0x2e77bd=_0x161622['net']||{},_0x282b1b=_0x161622['tls']||{},_0x23b05f=_0x207f17['origin']?_0x207f17['tls']||{}:_0x282b1b,_0x562ad4=this;_0x2e77bd['host']=_0x23b05f['host']=_0x2e4b1f['hostname'],_0x2e77bd['port']=_0x23b05f['port']=_0x398e0d,_0x282b1b['ca']=_0x282b1b['ca']||_0x161622['ca'],_0x23b05f['servername']=_0x23b05f['servername']||_0x2e4b1f['hostname'],this['_stream']=_0x1e578e?_0x31cac9['connect'](_0x23b05f,_0x5361b9):_0x26cf2e['connect'](_0x2e77bd,_0x5361b9),_0x207f17['origin']&&this['_configure'+'Proxy'](_0x207f17,_0x282b1b),_0x16f99d['call'](this,_0x161622);};_0x54900f['inherits'](_0x1aff1a,_0x16f99d),_0x1aff1a['prototype']['_onConnect']=function(){(this['_proxy']||this['_driver'])['start']();},_0x1aff1a['prototype']['_configure'+'Proxy']=function(_0x3b4671,_0xfbc97d){var _0x3e8812,_0x4cbc5d=_0x2d4ce5['parse'](this['url']),_0x3a565f=_0x338e78['indexOf'](_0x4cbc5d['protocol'])>=0x361+0x21c5+-0x2526,_0x151239=this;if(this['_proxy']=this['_driver']['proxy'](_0x3b4671['origin']),_0x3b4671['headers']){for(_0x3e8812 in _0x3b4671['headers'])this['_proxy']['setHeader'](_0x3e8812,_0x3b4671['headers'][_0x3e8812]);}this['_proxy']['pipe'](this['_stream'],{'end':!(0x5ad*0x1+-0xba9+-0x1ff*-0x3)}),this['_stream']['pipe'](this['_proxy']),this['_proxy']['on']('connect',function(){if(_0x3a565f){var _0x4f11c3={'socket':_0x151239['_stream'],'servername':_0x4cbc5d['hostname']};for(_0x3e8812 in _0xfbc97d)_0x4f11c3[_0x3e8812]=_0xfbc97d[_0x3e8812];_0x151239['_stream']=_0x31cac9['connect'](_0x4f11c3),_0x151239['_configure'+'Stream']();}_0x151239['_driver']['io']['pipe'](_0x151239['_stream']),_0x151239['_stream']['pipe'](_0x151239['_driver']['io']),_0x151239['_driver']['start']();}),this['_proxy']['on']('error',function(_0x10aa0a){_0x151239['_driver']['emit']('error',_0x10aa0a);});},_0x34f2a0['exports']=_0x1aff1a;},0x22bb:_0x3881b8=>{_0x3881b8['exports']={'TYPE_JSON':{'Content-Type':'applicatio'+'n/json;\x20ch'+'arset=utf-'+'8'},'TYPE_SCRIPT':{'Content-Type':'text/javas'+'cript;\x20cha'+'rset=utf-8'},'TYPE_TEXT':{'Content-Type':'text/plain'+';\x20charset='+'utf-8'}};},0xdf6:(_0x99f71f,_0x5ba157,_0x18df20)=>{'use strict';var _0x8df292=_0x18df20(0x1a6f+-0x7d6*0x3+0x840)['Buffer'],_0x4685c7=_0x18df20(-0x4c1*-0x2+-0x1e88+0x3016),_0x24a935=_0x18df20(0xde7+0x22c2+-0x2311),_0x114c22=_0x18df20(-0x3f*0x9+0x47f*0x7+-0x9e*0x3),_0x5a1b86=_0x18df20(0x1c*-0xd7+0xa7*0x12+-0x1*-0xef3),_0xc61530=_0x5a1b86['EventSourc'+'e'],_0x148c9c=_0x18df20(-0x1344+-0xeee+0x2a77),_0x279496=_0x18df20(-0x92f*0x2+-0x16b9+0x365a),_0x2ab6d5=_0x18df20(-0x5*0x453+0x59*-0xb+0x36e7),_0x310d3b=_0x18df20(0x3*0x379+-0xdb7+0x20b8),_0x53c5dc=_0x18df20(-0x6e8+0x874*-0x1+0x1ec1),_0x552044=_0x18df20(0x53f*-0x1+-0x1*-0x1d04+-0x7b9),_0x291f12=_0x18df20(0x3*0x757+0x17*-0x56+0x4*0xd3),_0x5f2975=_0x18df20(-0xb44+0x1*-0x2f5a+0x5508),_0x3d32b3=_0x18df20(-0x112f+-0x1d2f+0x35bf*0x1),_0x24e9a2=_0x18df20(0x133c+0x1c+0x6f3*-0x1),_0x243a87=_0x18df20(0x2d22+-0x1*-0x1673+-0x20da),_0x318383=_0x18df20(0x26bd+-0x3df+-0x695*0x2),_0x1c38c0=_0x552044({'className':'NodeAdapte'+'r','DEFAULT_ENDPOINT':'/bayeux','SCRIPT_PATH':'faye-brows'+'er-min.js','VALID_JSONP_CALLBACK':/^[a-z_\$][a-z0-9_\$]*(\.[a-z_\$][a-z0-9_\$]*)*$/i,'initialize':function(_0x40bd7f){this['_options']=_0x40bd7f||{},_0x53c5dc(this['_options'],['engine','mount','ping','timeout','extensions','websocketE'+'xtensions']),this['_extension'+'s']=[],this['_endpoint']=this['_options']['mount']||this['DEFAULT_EN'+'DPOINT'],this['_endpointR'+'e']=new RegExp('^'+this['_endpoint']['replace'](/\/$/,'')+('(/[^/]*)*('+'\x5c.[^\x5c.]+)?'+'$')),this['_server']=_0x24e9a2['create'](this['_options']),this['_static']=new _0x318383(_0x4685c7['join'](__dirname,'..','..','client'),/\.(?:js|map)$/),this['_static']['map'](_0x4685c7['basename'](this['_endpoint'])+'.js',this['SCRIPT_PAT'+'H']),this['_static']['map']('client.js',this['SCRIPT_PAT'+'H']);var _0x2bcd91,_0x46bcec,_0x1f46a9=this['_options']['extensions'],_0x24114c=this['_options']['websocketE'+'xtensions'];if(_0x1f46a9){for(_0x2bcd91=-0x234+0xe67*-0x1+-0x1*-0x109b,_0x46bcec=(_0x1f46a9=[]['concat'](_0x1f46a9))['length'];_0x2bcd91<_0x46bcec;_0x2bcd91++)this['addExtensi'+'on'](_0x1f46a9[_0x2bcd91]);}if(_0x24114c){for(_0x2bcd91=-0x2289+-0xce*-0x26+0x3f5,_0x46bcec=(_0x24114c=[]['concat'](_0x24114c))['length'];_0x2bcd91<_0x46bcec;_0x2bcd91++)this['addWebsock'+'etExtensio'+'n'](_0x24114c[_0x2bcd91]);}},'listen':function(){throw new Error('The\x20listen'+'()\x20method\x20'+'is\x20depreca'+'ted\x20-\x20use\x20'+'the\x20attach'+'()\x20method\x20'+'to\x20bind\x20Fa'+'ye\x20to\x20an\x20h'+'ttp.Server');},'addExtension':function(_0x555906){return this['_server']['addExtensi'+'on'](_0x555906);},'removeExtension':function(_0x2147c4){return this['_server']['removeExte'+'nsion'](_0x2147c4);},'addWebsocketExtension':function(_0x19f2ca){this['_extension'+'s']['push'](_0x19f2ca);},'close':function(){return this['_server']['close']();},'getClient':function(){return this['_client']=this['_client']||new _0x3d32b3(this['_server']);},'attach':function(_0x880ccc){this['_overrideL'+'isteners'](_0x880ccc,'request','handle'),this['_overrideL'+'isteners'](_0x880ccc,'upgrade','handleUpgr'+'ade');},'_overrideListeners':function(_0x3ddc5e,_0x5b1ea6,_0xe72ba8){var _0x446feb=_0x3ddc5e['listeners'](_0x5b1ea6),_0x4d8817=this;_0x3ddc5e['removeAllL'+'isteners'](_0x5b1ea6),_0x3ddc5e['on'](_0x5b1ea6,function(_0x3df323){if(_0x4d8817['check'](_0x3df323))return _0x4d8817[_0xe72ba8]['apply'](_0x4d8817,arguments);for(var _0x3b71a6=0xfda+0x1a3*0x15+-0x3239,_0x14efd7=_0x446feb['length'];_0x3b71a6<_0x14efd7;_0x3b71a6++)_0x446feb[_0x3b71a6]['apply'](this,arguments);});},'check':function(_0x5373f6){var _0x1c880c=_0x114c22['parse'](_0x5373f6['url'],!(-0x2001+0xee2+0x111f))['pathname'];return!!this['_endpointR'+'e']['test'](_0x1c880c);},'handle':function(_0x28f568,_0x2419d7){var _0x49943d=_0x114c22['parse'](_0x28f568['url'],!(-0x85*-0x3e+0x9*0x373+-0x3f41)),_0x202c3a=_0x28f568['method'],_0x3af245=this;return _0x28f568['originalUr'+'l']=_0x28f568['url'],_0x28f568['on']('error',function(_0x186365){_0x3af245['_returnErr'+'or'](_0x2419d7,_0x186365);}),_0x2419d7['on']('error',function(_0x5b134e){_0x3af245['_returnErr'+'or'](null,_0x5b134e);}),this['_static']['test'](_0x49943d['pathname'])?this['_static']['call'](_0x28f568,_0x2419d7):'OPTIONS'===_0x202c3a||'POST'===_0x28f568['headers']['access-con'+'trol-reque'+'st-method']?this['_handleOpt'+'ions'](_0x28f568,_0x2419d7):_0xc61530['isEventSou'+'rce'](_0x28f568)?this['handleEven'+'tSource'](_0x28f568,_0x2419d7):'GET'===_0x202c3a?this['_callWithP'+'arams'](_0x28f568,_0x2419d7,_0x49943d['query']):'POST'===_0x202c3a?this['_concatStr'+'eam'](_0x28f568,function(_0x2d0b4b){var _0x2539c4='applicatio'+'n/json'===(_0x28f568['headers']['content-ty'+'pe']||'')['split'](';')[-0xf92+-0x10b5+0x1*0x2047]?{'message':_0x2d0b4b}:_0x24a935['parse'](_0x2d0b4b);_0x28f568['body']=_0x2d0b4b,this['_callWithP'+'arams'](_0x28f568,_0x2419d7,_0x2539c4);},this):void this['_returnErr'+'or'](_0x2419d7,{'message':'Unrecogniz'+'ed\x20request'+'\x20type'});},'_callWithParams':function(_0x335466,_0x2b09e6,_0x5db27d){if(!_0x5db27d['message'])return this['_returnErr'+'or'](_0x2b09e6,{'message':'Received\x20r'+'equest\x20wit'+'h\x20no\x20messa'+'ge:\x20'+this['_formatReq'+'uest'](_0x335466)});try{this['debug']('Received\x20m'+'essage\x20via'+'\x20HTTP\x20'+_0x335466['method']+':\x20?',_0x5db27d['message']);var _0x3c76c6=this['_parseJSON'](_0x5db27d['message']),_0x12ba04=_0x5db27d['jsonp']||_0x148c9c['JSONP_CALL'+'BACK'],_0x34397a='GET'===_0x335466['method'],_0x31861d=_0x34397a?_0x243a87['TYPE_SCRIP'+'T']:_0x243a87['TYPE_JSON'],_0x4d3c53=_0x279496({},_0x31861d),_0x20f150=_0x335466['headers']['origin'];if(!this['VALID_JSON'+'P_CALLBACK']['test'](_0x12ba04))return this['_returnErr'+'or'](_0x2b09e6,{'message':'Invalid\x20JS'+'ON-P\x20callb'+'ack:\x20'+_0x12ba04});_0x4d3c53['Cache-Cont'+'rol']='no-cache,\x20'+'no-store',_0x4d3c53['X-Content-'+'Type-Optio'+'ns']='nosniff',_0x20f150&&(_0x4d3c53['Access-Con'+'trol-Allow'+'-Credentia'+'ls']='true',_0x4d3c53['Access-Con'+'trol-Allow'+'-Origin']=_0x20f150),this['_server']['process'](_0x3c76c6,_0x335466,function(_0x4488ca){var _0x6b98c0=_0x310d3b(_0x4488ca);_0x34397a&&(_0x6b98c0='/**/'+_0x12ba04+'('+this['_jsonpEsca'+'pe'](_0x6b98c0)+');',_0x4d3c53['Content-Di'+'sposition']='attachment'+';\x20filename'+'=f.txt'),_0x4d3c53['Content-Le'+'ngth']=_0x8df292['from'](_0x6b98c0,'utf8')['length']['toString'](),this['debug']('HTTP\x20respo'+'nse:\x20?',_0x6b98c0),_0x2b09e6['writeHead'](0x11d2*0x1+-0x5*-0x55b+-0x1*0x2bd1,_0x4d3c53),_0x2b09e6['end'](_0x6b98c0);},this);}catch(_0x22a7d1){this['_returnErr'+'or'](_0x2b09e6,_0x22a7d1);}},'_jsonpEscape':function(_0x2b826a){return _0x2b826a['replace'](/\u2028/g,'\x5cu2028')['replace'](/\u2029/g,'\x5cu2029');},'handleUpgrade':function(_0x19db4e,_0x300296,_0x43988f){var _0x5d1ffb={'extensions':this['_extension'+'s'],'ping':this['_options']['ping']},_0x4cd749=new _0x5a1b86(_0x19db4e,_0x300296,_0x43988f,[],_0x5d1ffb),_0x5742ab=null,_0x3632fd=this;_0x19db4e['originalUr'+'l']=_0x19db4e['url'],_0x4cd749['onmessage']=function(_0xed71d7){try{_0x3632fd['debug']('Received\x20m'+'essage\x20via'+'\x20WebSocket'+'['+_0x4cd749['version']+']:\x20?',_0xed71d7['data']);var _0x1c2981=_0x3632fd['_parseJSON'](_0xed71d7['data']),_0x33f2a6=_0x2ab6d5(_0x1c2981);_0x5742ab&&_0x33f2a6&&_0x33f2a6!==_0x5742ab&&_0x3632fd['_server']['closeSocke'+'t'](_0x5742ab,!(-0x6ee+-0x2341+-0x21c*-0x14)),_0x3632fd['_server']['openSocket'](_0x33f2a6,_0x4cd749,_0x19db4e),_0x33f2a6&&(_0x5742ab=_0x33f2a6),_0x3632fd['_server']['process'](_0x1c2981,_0x19db4e,function(_0x3067af){_0x4cd749&&_0x4cd749['send'](_0x310d3b(_0x3067af));});}catch(_0x5cc943){console['log'](_0x5cc943['stack']),_0x3632fd['error'](_0x5cc943['message']+('\x0aBacktrace'+':\x0a')+_0x5cc943['stack']);}},_0x4cd749['onclose']=function(_0x38b588){_0x3632fd['_server']['closeSocke'+'t'](_0x5742ab),_0x4cd749=null;};},'handleEventSource':function(_0x503035,_0x4e115f){var _0x36a4a5=new _0xc61530(_0x503035,_0x4e115f,{'ping':this['_options']['ping']}),_0xf95051=_0x36a4a5['url']['split']('/')['pop'](),_0x57d22f=this;this['debug']('Opened\x20Eve'+'ntSource\x20c'+'onnection\x20'+'for\x20?',_0xf95051),this['_server']['openSocket'](_0xf95051,_0x36a4a5,_0x503035),_0x36a4a5['onclose']=function(_0x1d0f76){_0x57d22f['_server']['closeSocke'+'t'](_0xf95051),_0x36a4a5=null;};},'_handleOptions':function(_0x3506f8,_0x56d4e5){var _0x572ac2={'Access-Control-Allow-Credentials':'true','Access-Control-Allow-Headers':'Accept,\x20Au'+'thorizatio'+'n,\x20Content'+'-Type,\x20Pra'+'gma,\x20X-Req'+'uested-Wit'+'h','Access-Control-Allow-Methods':'POST,\x20GET','Access-Control-Allow-Origin':_0x3506f8['headers']['origin']||_0x3506f8['headers']['referer']||'*','Access-Control-Max-Age':'86400'};_0x56d4e5['writeHead'](-0x1bce+-0x1340+0x27*0x13a,_0x572ac2),_0x56d4e5['end']('');},'_concatStream':function(_0xfd6682,_0x5699e4,_0xe4c3a1){var _0x463eac=[],_0x41a407=0x52f*0x6+-0x1da8+0x2*-0xb9;_0xfd6682['on']('data',function(_0x5cef14){_0x463eac['push'](_0x5cef14),_0x41a407+=_0x5cef14['length'];}),_0xfd6682['on']('end',function(){for(var _0x19c2e8=_0x8df292['alloc'](_0x41a407),_0x4f01be=-0x1*0x976+-0x254e+0x2*0x1762,_0x1b509f=-0x264e+-0x1699+0x3ce7,_0xcda1d=_0x463eac['length'];_0x1b509f<_0xcda1d;_0x1b509f++)_0x463eac[_0x1b509f]['copy'](_0x19c2e8,_0x4f01be),_0x4f01be+=_0x463eac[_0x1b509f]['length'];_0x5699e4['call'](_0xe4c3a1,_0x19c2e8['toString']('utf8'));});},'_parseJSON':function(_0x3c8d04){var _0x27c754=JSON['parse'](_0x3c8d04);if('object'==typeof _0x27c754)return _0x27c754;throw new SyntaxError('JSON\x20messa'+'ges\x20must\x20c'+'ontain\x20an\x20'+'object\x20or\x20'+'array');},'_formatRequest':function(_0x4b0087){var _0x15f3f0=_0x4b0087['method']['toUpperCas'+'e'](),_0xbd34fb='curl\x20-X\x20'+_0x15f3f0;return _0xbd34fb+='\x20\x27http://'+_0x4b0087['headers']['host']+_0x4b0087['url']+'\x27','POST'===_0x15f3f0&&(_0xbd34fb+='\x20-H\x20\x27Conte'+'nt-Type:\x20'+_0x4b0087['headers']['content-ty'+'pe']+'\x27',_0xbd34fb+='\x20-d\x20\x27'+_0x4b0087['body']+'\x27'),_0xbd34fb;},'_returnError':function(_0x2871d9,_0x185b27){var _0x2cb5d5=_0x185b27['message'];_0x185b27['stack']&&(_0x2cb5d5+='\x0aBacktrace'+':\x0a'+_0x185b27['stack']),this['error'](_0x2cb5d5),_0x2871d9&&(_0x2871d9['writeHead'](-0xeb*0x22+0x831+0x1895,_0x243a87['TYPE_TEXT']),_0x2871d9['end']('Bad\x20reques'+'t'));}});for(var _0x493d7e in _0x5f2975)!function(_0x278b55){_0x1c38c0['prototype'][_0x278b55]=function(){return this['_server']['_engine'][_0x278b55]['apply'](this['_server']['_engine'],arguments);};}(_0x493d7e);_0x279496(_0x1c38c0['prototype'],_0x291f12),_0x99f71f['exports']=_0x1c38c0;},0x15b4:(_0x267cd8,_0x329484,_0xc311a8)=>{'use strict';var _0x22f061=_0xc311a8(-0x4*-0x457+0x249b+-0x1ab1),_0x2def8a=_0xc311a8(0x897*-0x3+-0x1*0xa47+0x1c*0x2ab),_0x27fba8=_0xc311a8(-0x530+-0x1567+0x35a7),_0x4d988b=_0xc311a8(-0x7ac*-0x1+-0x22e+0x37*0x66),_0x480835=_0xc311a8(-0x2468+0x7fe+0xe*0x32d),_0x1a52da=_0xc311a8(-0x5*0x135+-0x139f+0x51*0x7b),_0x467e69=_0xc311a8(-0x1*0x2467+0x3342+0x13e0),_0x118f67=_0x480835({'initialize':function(_0x31be07,_0x22f221){this['_directory']=_0x31be07,this['_pathRegex']=_0x22f221,this['_pathMap']={},this['_index']={};},'map':function(_0x3487fd,_0x3a8f2f){this['_pathMap'][_0x3487fd]=_0x3a8f2f;},'test':function(_0x1603ae){return this['_pathRegex']['test'](_0x1603ae);},'call':function(_0x295c6c,_0x1c944b){var _0xd723ac=_0x4d988b['parse'](_0x295c6c['url'],!(0x11c2+0x9*-0x36c+0xd0a))['pathname'],_0x1eb098=_0x27fba8['basename'](_0xd723ac);_0x1eb098=this['_pathMap'][_0x1eb098]||_0x1eb098,this['_index'][_0x1eb098]=this['_index'][_0x1eb098]||{};var _0x4b16ac=this['_index'][_0x1eb098],_0x138dca=_0x27fba8['join'](this['_directory'],_0x1eb098);try{_0x4b16ac['content']=_0x4b16ac['content']||_0x2def8a['readFileSy'+'nc'](_0x138dca),_0x4b16ac['digest']=_0x4b16ac['digest']||_0x22f061['createHash']('sha1')['update'](_0x4b16ac['content'])['digest']('hex'),_0x4b16ac['mtime']=_0x4b16ac['mtime']||_0x2def8a['statSync'](_0x138dca)['mtime'];}catch(_0xf45008){return _0x1c944b['writeHead'](-0x26c9*0x1+0x5c5+0x2298,{}),_0x1c944b['end']();}var _0xf694a0=/\.js$/['test'](_0xd723ac)?'TYPE_SCRIP'+'T':'TYPE_JSON',_0x411362=_0x295c6c['headers']['if-modifie'+'d-since'],_0x1c181b={'ETag':_0x4b16ac['digest'],'Last-Modified':_0x4b16ac['mtime']['toGMTStrin'+'g']()};_0x295c6c['headers']['if-none-ma'+'tch']===_0x4b16ac['digest']||_0x411362&&_0x4b16ac['mtime']<=new Date(_0x411362)?(_0x1c944b['writeHead'](0x206b+0x237f+-0x42ba,_0x1c181b),_0x1c944b['end']()):(_0x1c181b['Content-Le'+'ngth']=_0x4b16ac['content']['length'],_0x1a52da(_0x1c181b,_0x467e69[_0xf694a0]),_0x1c944b['writeHead'](0xfdd+-0x5*-0x2b+0x7f6*-0x2,_0x1c181b),_0x1c944b['end'](_0x4b16ac['content']));}});_0x267cd8['exports']=_0x118f67;},0x15bf:(_0x261038,_0x216e29,_0x3563d6)=>{'use strict';var _0x2a0866=_0x3563d6(-0x768+0xd76+0x2*0x4ff),_0x3e464f=_0x3563d6(0x105e+0x1*-0xd31+0x1*0xa16),_0x156c52=_0x3563d6(0x217f+-0x52*-0x8+-0xc05),_0x59d3a4=_0x3563d6(0x239*0xe+0x2f*-0xd0+0x2*0x15b5),_0x2cb5f5=_0x2a0866({'initialize':function(_0x23cc4b,_0x4a8931,_0x3a66b){this['_engine']=_0x23cc4b,this['_id']=_0x4a8931,this['_options']=_0x3a66b,this['_inbox']=[];},'deliver':function(_0x238e89){if(delete _0x238e89['clientId'],this['socket'])return this['socket']['send'](_0x238e89);this['_inbox']['push'](_0x238e89),this['_beginDeli'+'veryTimeou'+'t']();},'connect':function(_0x125709,_0x42c19c,_0x4e9880){var _0x308e68=void(0x1540+0x28b+-0x17cb)!==(_0x125709=_0x125709||{})['timeout']?_0x125709['timeout']/(0x26cd+0xa*-0xee+-0x1*0x1999):this['_engine']['timeout'];this['setDeferre'+'dStatus']('unknown'),this['callback'](_0x42c19c,_0x4e9880),this['_beginDeli'+'veryTimeou'+'t'](),this['_beginConn'+'ectionTime'+'out'](_0x308e68);},'flush':function(){this['removeTime'+'out']('connection'),this['removeTime'+'out']('delivery'),this['setDeferre'+'dStatus']('succeeded',this['_inbox']),this['_inbox']=[],this['socket']||this['_engine']['closeConne'+'ction'](this['_id']);},'_beginDeliveryTimeout':function(){0x41*-0x5b+-0x7ae*0x5+0x14f*0x2f!==this['_inbox']['length']&&this['addTimeout']('delivery',this['_engine']['MAX_DELAY'],this['flush'],this);},'_beginConnectionTimeout':function(_0x379a8f){this['addTimeout']('connection',_0x379a8f,this['flush'],this);}});_0x3e464f(_0x2cb5f5['prototype'],_0x156c52),_0x3e464f(_0x2cb5f5['prototype'],_0x59d3a4),_0x261038['exports']=_0x2cb5f5;},0x1628:(_0x598e31,_0xd7377a,_0x5d27c3)=>{'use strict';var _0x431ca6=_0x5d27c3(-0x1d93+0x2635*-0x1+-0x1*-0x5161),_0x3c8231=_0x5d27c3(-0x1b6b*0x1+0x257*0x7+0x184d*0x1),_0x112c9c=_0x5d27c3(0x1*-0xbdd+0xff4+0x30*0x44),_0x1920dd=_0x5d27c3(0x1487+-0x129e+0x11b7),_0x219e71=_0x5d27c3(-0x68*-0x1a+-0x330e+0x1*0x4cd6),_0x21122d=function(_0x2130dd,_0x4701ff){this['_server']=_0x2130dd,this['_options']=_0x4701ff||{},this['reset']();};_0x21122d['create']=function(_0x2eeb9a,_0x40e077){return new _0x21122d(_0x2eeb9a,_0x40e077);},_0x3c8231(_0x21122d['prototype']={'disconnect':function(){this['reset'](),this['removeAllT'+'imeouts']();},'reset':function(){this['_namespace']=new _0x112c9c(),this['_clients']={},this['_channels']={},this['_messages']={};},'createClient':function(_0x105a4f,_0x4429e5){var _0x4b08b6=this['_namespace']['generate']();this['_server']['debug']('Created\x20ne'+'w\x20client\x20?',_0x4b08b6),this['ping'](_0x4b08b6),this['_server']['trigger']('handshake',_0x4b08b6),_0x105a4f['call'](_0x4429e5,_0x4b08b6);},'destroyClient':function(_0x411703,_0x1c7663,_0x15ae35){if(this['_namespace']['exists'](_0x411703)){var _0x3fd336=this['_clients'];_0x3fd336[_0x411703]&&_0x3fd336[_0x411703]['forEach'](function(_0x108086){this['unsubscrib'+'e'](_0x411703,_0x108086);},this),this['removeTime'+'out'](_0x411703),this['_namespace']['release'](_0x411703),delete this['_messages'][_0x411703],this['_server']['debug']('Destroyed\x20'+'client\x20?',_0x411703),this['_server']['trigger']('disconnect',_0x411703),this['_server']['trigger']('close',_0x411703),_0x1c7663&&_0x1c7663['call'](_0x15ae35);}},'clientExists':function(_0x5ced47,_0x5bf81f,_0x13073e){_0x5bf81f['call'](_0x13073e,this['_namespace']['exists'](_0x5ced47));},'ping':function(_0xc64efb){var _0x37c733=this['_server']['timeout'];'number'==typeof _0x37c733&&(this['_server']['debug']('Ping\x20?,\x20?',_0xc64efb,_0x37c733),this['removeTime'+'out'](_0xc64efb),this['addTimeout'](_0xc64efb,(-0x1*0x1a9e+-0x1021*0x1+0x2ac1)*_0x37c733,function(){this['destroyCli'+'ent'](_0xc64efb);},this));},'subscribe':function(_0x483723,_0x54fbbf,_0x35cc1d,_0x38a1e9){var _0x4ca7f8=this['_clients'],_0x33bf38=this['_channels'];_0x4ca7f8[_0x483723]=_0x4ca7f8[_0x483723]||new _0x1920dd();var _0x298b12=_0x4ca7f8[_0x483723]['add'](_0x54fbbf);_0x33bf38[_0x54fbbf]=_0x33bf38[_0x54fbbf]||new _0x1920dd(),_0x33bf38[_0x54fbbf]['add'](_0x483723),this['_server']['debug']('Subscribed'+'\x20client\x20?\x20'+'to\x20channel'+'\x20?',_0x483723,_0x54fbbf),_0x298b12&&this['_server']['trigger']('subscribe',_0x483723,_0x54fbbf),_0x35cc1d&&_0x35cc1d['call'](_0x38a1e9,!(0x577+-0x8b*-0x40+0x47*-0x91));},'unsubscribe':function(_0x193955,_0x16fd93,_0x1b7f68,_0x401713){var _0x1fc078=this['_clients'],_0x47c6dc=this['_channels'],_0x4a6b23=!(-0x1d03+0x1f81+-0x27d);_0x1fc078[_0x193955]&&(_0x4a6b23=_0x1fc078[_0x193955]['remove'](_0x16fd93),_0x1fc078[_0x193955]['isEmpty']()&&delete _0x1fc078[_0x193955]),_0x47c6dc[_0x16fd93]&&(_0x47c6dc[_0x16fd93]['remove'](_0x193955),_0x47c6dc[_0x16fd93]['isEmpty']()&&delete _0x47c6dc[_0x16fd93]),this['_server']['debug']('Unsubscrib'+'ed\x20client\x20'+'?\x20from\x20cha'+'nnel\x20?',_0x193955,_0x16fd93),_0x4a6b23&&this['_server']['trigger']('unsubscrib'+'e',_0x193955,_0x16fd93),_0x1b7f68&&_0x1b7f68['call'](_0x401713,!(0x17af+-0x26d7+-0x5*-0x308));},'publish':function(_0x12e1bd,_0x3b0d53){this['_server']['debug']('Publishing'+'\x20message\x20?',_0x12e1bd);for(var _0x362d29,_0xd39d1e=this['_messages'],_0x5f3dd6=new _0x1920dd(),_0x2bd7c6=0x1*0x656+-0x2f1*-0x1+-0x947,_0x287f9a=_0x3b0d53['length'];_0x2bd7c6<_0x287f9a;_0x2bd7c6++)(_0x362d29=this['_channels'][_0x3b0d53[_0x2bd7c6]])&&_0x362d29['forEach'](_0x5f3dd6['add'],_0x5f3dd6);_0x5f3dd6['forEach'](function(_0x37a05c){this['_server']['debug']('Queueing\x20f'+'or\x20client\x20'+'?:\x20?',_0x37a05c,_0x12e1bd),_0xd39d1e[_0x37a05c]=_0xd39d1e[_0x37a05c]||[],_0xd39d1e[_0x37a05c]['push'](_0x431ca6(_0x12e1bd)),this['emptyQueue'](_0x37a05c);},this),this['_server']['trigger']('publish',_0x12e1bd['clientId'],_0x12e1bd['channel'],_0x12e1bd['data']);},'emptyQueue':function(_0x2d2725){this['_server']['hasConnect'+'ion'](_0x2d2725)&&(this['_server']['deliver'](_0x2d2725,this['_messages'][_0x2d2725]),delete this['_messages'][_0x2d2725]);}},_0x219e71),_0x598e31['exports']=_0x21122d;},0x24af:(_0x4e63e8,_0x7a7555,_0x502bc7)=>{'use strict';var _0x379ab6=_0x502bc7(-0x6*-0x331+-0xc6d+-0x2e2),_0x443384=_0x502bc7(-0x1a21+-0x10ab+0x380f),_0x1cb2cb=_0x502bc7(0x1a5b+-0x1db*-0x5+-0x199d),_0x15f027=_0x502bc7(-0x175*0x6+-0xfb9*-0x1+0xb*0xd3),_0x12de00=(_0x502bc7(-0x22*-0xb0+0x7f*-0x1d+0x2*-0x454),_0x502bc7(0x2a6*-0x1+-0x1f92+-0x1145*-0x3)),_0x25883a=_0x502bc7(0x1888+0x60c+-0x215*0x2),_0xb33e6f=_0x502bc7(0x7*0x289+-0x3eb4+0x4d20),_0x1c40a9=_0x502bc7(0x2a9f*-0x1+-0x362+0x43c0),_0x4e489b=_0x502bc7(0x26b5+-0x1f97+-0x6e*-0x23),_0x4d95cb=_0x443384(_0x15f027({'className':'Engine.Pro'+'xy','MAX_DELAY':0x0,'INTERVAL':0x0,'TIMEOUT':0x3c,'initialize':function(_0x575200){this['_options']=_0x575200||{},this['_connectio'+'ns']={},this['interval']=this['_options']['interval']||this['INTERVAL'],this['timeout']=this['_options']['timeout']||this['TIMEOUT'];var _0xab937a=this['_options']['type']||_0x4e489b;this['_engine']=_0xab937a['create'](this,this['_options']),this['bind']('close',function(_0x1918cc){var _0x1f0a06=this;_0x379ab6(function(){_0x1f0a06['flushConne'+'ction'](_0x1918cc);});},this),this['debug']('Created\x20ne'+'w\x20engine:\x20'+'?',this['_options']);},'connect':function(_0x5366f1,_0x3cfe13,_0x187cae,_0x34148e){this['debug']('Accepting\x20'+'connection'+'\x20from\x20?',_0x5366f1),this['_engine']['ping'](_0x5366f1),this['connection'](_0x5366f1,!(0x1*-0x1025+0x2165+0x2e*-0x60))['connect'](_0x3cfe13,_0x187cae,_0x34148e),this['_engine']['emptyQueue'](_0x5366f1);},'hasConnection':function(_0x434e96){return this['_connectio'+'ns']['hasOwnProp'+'erty'](_0x434e96);},'connection':function(_0xc4304,_0x1581dd){var _0x3de9d2=this['_connectio'+'ns'][_0xc4304];return _0x3de9d2||!_0x1581dd?_0x3de9d2:(this['_connectio'+'ns'][_0xc4304]=new _0x1c40a9(this,_0xc4304),this['trigger']('connection'+':open',_0xc4304),this['_connectio'+'ns'][_0xc4304]);},'closeConnection':function(_0x3f6532){this['debug']('Closing\x20co'+'nnection\x20f'+'or\x20?',_0x3f6532);var _0x46eb4a=this['_connectio'+'ns'][_0x3f6532];_0x46eb4a&&(_0x46eb4a['socket']&&_0x46eb4a['socket']['close'](),this['trigger']('connection'+':close',_0x3f6532),delete this['_connectio'+'ns'][_0x3f6532]);},'openSocket':function(_0x1a8976,_0x43ba22){this['connection'](_0x1a8976,!(0x16*-0x9f+0x6b7*0x1+0x6f3))['socket']=_0x43ba22;},'deliver':function(_0x2d5387,_0x15a8af){if(!_0x15a8af||-0xe8*-0x1f+-0x1*-0xb83+-0x279b*0x1===_0x15a8af['length'])return!(-0x24f*0x1+-0x26b*-0x2+-0x1*0x286);var _0x3978fd=this['connection'](_0x2d5387,!(0x2bb*0x2+-0x249d+0x1f28));if(!_0x3978fd)return!(-0x1228*-0x2+0xe71+-0xe*0x3a0);for(var _0x196ee2=0x530+0x4*0x757+-0x228c,_0xb54a76=_0x15a8af['length'];_0x196ee2<_0xb54a76;_0x196ee2++)_0x3978fd['deliver'](_0x15a8af[_0x196ee2]);return!(-0x1*0xde+0x1a7d+-0x199f);},'generateId':function(){return _0x1cb2cb();},'flushConnection':function(_0x155242,_0x303c34){if(_0x155242){this['debug']('Flushing\x20c'+'onnection\x20'+'for\x20?',_0x155242);var _0x33ce75=this['connection'](_0x155242,!(-0x10c4+0x378*-0x8+-0x189*-0x1d));_0x33ce75&&(!(0x12b0+0xea3+-0x2152)===_0x303c34&&(_0x33ce75['socket']=null),_0x33ce75['flush'](),this['closeConne'+'ction'](_0x155242));}},'close':function(){for(var _0x24fd53 in this['_connectio'+'ns'])this['flushConne'+'ction'](_0x24fd53);this['_engine']['disconnect']();},'disconnect':function(){if(this['_engine']['disconnect'])return this['_engine']['disconnect']();},'publish':function(_0x4f9d8c){var _0x58f99c=_0xb33e6f['expand'](_0x4f9d8c['channel']);return this['_engine']['publish'](_0x4f9d8c,_0x58f99c);}}),{'get':function(_0x29d1c5){return new _0x4d95cb(_0x29d1c5);}});['createClie'+'nt','clientExis'+'ts','destroyCli'+'ent','ping','subscribe','unsubscrib'+'e']['forEach'](function(_0x297962){_0x4d95cb['prototype'][_0x297962]=function(){return this['_engine'][_0x297962]['apply'](this['_engine'],arguments);};}),_0x443384(_0x4d95cb['prototype'],_0x25883a),_0x443384(_0x4d95cb['prototype'],_0x12de00),_0x4e63e8['exports']=_0x4d95cb;},0xa37:(_0xaa260f,_0x100cfb,_0x5c615c)=>{'use strict';var _0x55f019=_0x5c615c(-0xa4*0x13+-0x230a+0x7*0x7ed),_0x193ed5=_0x5c615c(0x1*-0xa76+0x2231*0x1+-0xc*0x83),_0x17070e={'VERSION':_0x55f019['VERSION'],'Client':_0x5c615c(-0x10a4+0x542+-0x641*-0x3),'Scheduler':_0x5c615c(-0x58c+0x1e39+-0x6a*-0x4),'NodeAdapter':_0x5c615c(-0x113a+-0x1ab*-0x3+-0x1*-0x1a2f)};_0x193ed5['wrapper']=_0x17070e,_0xaa260f['exports']=_0x17070e;},0x180a:(_0x24bd3f,_0x2ea0ba,_0x3a49c9)=>{'use strict';var _0x3ff930=_0x3a49c9(-0x19e5+0x250d+0x11*-0xa3);_0x24bd3f['exports']={'then':function(_0x3b0b8b,_0x25a218){var _0x121445=this;return this['_promise']||(this['_promise']=new _0x3ff930(function(_0x402054,_0x41adb4){_0x121445['_resolve']=_0x402054,_0x121445['_reject']=_0x41adb4;})),0x13*-0x15d+-0xa36+0x241d===arguments['length']?this['_promise']:this['_promise']['then'](_0x3b0b8b,_0x25a218);},'callback':function(_0x1dbe3d,_0x24dc92){return this['then'](function(_0x5783ac){_0x1dbe3d['call'](_0x24dc92,_0x5783ac);});},'errback':function(_0x3fa48f,_0x5eecba){return this['then'](null,function(_0x338fc7){_0x3fa48f['call'](_0x5eecba,_0x338fc7);});},'timeout':function(_0x4acc17,_0xce795){this['then']();var _0x13e3d5=this;this['_timer']=global['setTimeout'](function(){_0x13e3d5['_reject'](_0xce795);},(-0x221b+0x2*0x68c+-0x1*-0x18eb)*_0x4acc17);},'setDeferredStatus':function(_0xd879f6,_0x30392d){this['_timer']&&global['clearTimeo'+'ut'](this['_timer']),this['then'](),'succeeded'===_0xd879f6?this['_resolve'](_0x30392d):'failed'===_0xd879f6?this['_reject'](_0x30392d):delete this['_promise'];}};},0x1197:(_0x492042,_0x53fe68,_0x5290b0)=>{'use strict';var _0x48a5c8=_0x5290b0(0x211e+0x2e*-0xa6+0x1a22),_0x11002f={'LOG_LEVELS':{'fatal':0x4,'error':0x3,'warn':0x2,'info':0x1,'debug':0x0},'writeLog':function(_0x1988ed,_0x3137f7){var _0x24b08a=_0x11002f['logger']||(_0x11002f['wrapper']||_0x11002f)['logger'];if(_0x24b08a){var _0x3ecd74=Array['prototype']['slice']['apply'](_0x1988ed),_0x64b6fc='[Faye',_0x23dfd8=this['className'],_0xad89fb=_0x3ecd74['shift']()['replace'](/\?/g,function(){try{return _0x48a5c8(_0x3ecd74['shift']());}catch(_0x382884){return'[Object]';}});_0x23dfd8&&(_0x64b6fc+='.'+_0x23dfd8),_0x64b6fc+=']\x20','function'==typeof _0x24b08a[_0x3137f7]?_0x24b08a[_0x3137f7](_0x64b6fc+_0xad89fb):'function'==typeof _0x24b08a&&_0x24b08a(_0x64b6fc+_0xad89fb);}}};for(var _0x16d851 in _0x11002f['LOG_LEVELS'])!function(_0x1b557b){_0x11002f[_0x1b557b]=function(){this['writeLog'](arguments,_0x1b557b);};}(_0x16d851);_0x492042['exports']=_0x11002f;},0x1a6a:(_0x208894,_0x481f30,_0x5d9f7d)=>{'use strict';var _0x5b8acc={'countListeners':function(_0x29a439){return this['listeners'](_0x29a439)['length'];},'bind':function(_0x1a61b4,_0x367ce4,_0x3f94a6){var _0x4a61b5=Array['prototype']['slice'],_0x3aaf02=function(){_0x367ce4['apply'](_0x3f94a6,_0x4a61b5['call'](arguments));};return this['_listeners']=this['_listeners']||[],this['_listeners']['push']([_0x1a61b4,_0x367ce4,_0x3f94a6,_0x3aaf02]),this['on'](_0x1a61b4,_0x3aaf02);},'unbind':function(_0x2751c9,_0x159d8b,_0x57d2ec){this['_listeners']=this['_listeners']||[];for(var _0x8951b5,_0x217019=this['_listeners']['length'];_0x217019--;)(_0x8951b5=this['_listeners'][_0x217019])[-0x3*-0x9dd+0x2405+-0x20ce*0x2]===_0x2751c9&&(!_0x159d8b||_0x8951b5[-0x2*0x365+-0x552+0x7*0x1bb]===_0x159d8b&&_0x8951b5[-0x1387+0x1601+-0x278]===_0x57d2ec)&&(this['_listeners']['splice'](_0x217019,-0x209*-0x11+-0x2*-0xbbf+-0x3a16),this['removeList'+'ener'](_0x2751c9,_0x8951b5[-0x1ec1*0x1+-0x1a87+0x394b]));}};_0x5d9f7d(-0xac*-0x2+-0xdba+0x1f9*0xd)(_0x5b8acc,_0x5d9f7d(-0xb30+0xf63*-0x1+-0x45*-0x6c)['prototype']),_0x5b8acc['trigger']=_0x5b8acc['emit'],_0x208894['exports']=_0x5b8acc;},0x2458:_0x38412a=>{'use strict';_0x38412a['exports']={'addTimeout':function(_0x3594fd,_0x1b1a7b,_0x40579f,_0x537ede){if(this['_timeouts']=this['_timeouts']||{},!this['_timeouts']['hasOwnProp'+'erty'](_0x3594fd)){var _0x229bd3=this;this['_timeouts'][_0x3594fd]=global['setTimeout'](function(){delete _0x229bd3['_timeouts'][_0x3594fd],_0x40579f['call'](_0x537ede);},(0x110f+0x19*-0x10f+0xd50)*_0x1b1a7b);}},'removeTimeout':function(_0x101854){this['_timeouts']=this['_timeouts']||{};var _0x38c96f=this['_timeouts'][_0x101854];_0x38c96f&&(global['clearTimeo'+'ut'](_0x38c96f),delete this['_timeouts'][_0x101854]);},'removeAllTimeouts':function(){for(var _0x59cc4e in(this['_timeouts']=this['_timeouts']||{},this['_timeouts']))this['removeTime'+'out'](_0x59cc4e);}};},0x202b:(_0x40b471,_0x5e43d3,_0x2886cc)=>{'use strict';var _0x3f9f36=_0x2886cc(0x19*0x7+0x17d+-0x18*-0x94),_0x877084=_0x2886cc(0x73+0x26cb*-0x1+0x339b),_0x3740b4=_0x2886cc(0x32cf+0x56f*-0x1+-0x12f6),_0xc2ad1c=_0x2886cc(-0xcca+0xf7e+-0x1*-0x9ad),_0x47de9a=_0x3f9f36({'initialize':function(_0x144c12){this['id']=this['name']=_0x144c12;},'push':function(_0x2046d3){this['trigger']('message',_0x2046d3);},'isUnused':function(){return 0x1d8d+0x2200+-0x3f8d===this['countListe'+'ners']('message');}});_0x877084(_0x47de9a['prototype'],_0x3740b4),_0x877084(_0x47de9a,{'HANDSHAKE':'/meta/hand'+'shake','CONNECT':'/meta/conn'+'ect','SUBSCRIBE':'/meta/subs'+'cribe','UNSUBSCRIBE':'/meta/unsu'+'bscribe','DISCONNECT':'/meta/disc'+'onnect','META':'meta','SERVICE':'service','expand':function(_0x31fa75){var _0xeeee89=this['parse'](_0x31fa75),_0x531251=['/**',_0x31fa75],_0x5b3a60=_0xeeee89['slice']();_0x5b3a60[_0x5b3a60['length']-(0x1a96+0x1*-0x539+-0x155c)]='*',_0x531251['push'](this['unparse'](_0x5b3a60));for(var _0x449167=-0x1430+0x1*-0xfa1+0x5*0x72a,_0x19f9d0=_0xeeee89['length'];_0x449167<_0x19f9d0;_0x449167++)(_0x5b3a60=_0xeeee89['slice'](-0x23*-0x47+-0x1e0e+0x1459,_0x449167))['push']('**'),_0x531251['push'](this['unparse'](_0x5b3a60));return _0x531251;},'isValid':function(_0x144922){return _0xc2ad1c['CHANNEL_NA'+'ME']['test'](_0x144922)||_0xc2ad1c['CHANNEL_PA'+'TTERN']['test'](_0x144922);},'parse':function(_0xe250b4){return this['isValid'](_0xe250b4)?_0xe250b4['split']('/')['slice'](0x57b*0x1+-0x802+0x6*0x6c):null;},'unparse':function(_0x21d5b1){return'/'+_0x21d5b1['join']('/');},'isMeta':function(_0x895f1a){var _0x18b527=this['parse'](_0x895f1a);return _0x18b527?_0x18b527[-0x7cc+-0x233b+0x2b07]===this['META']:null;},'isService':function(_0x611e0d){var _0x5754be=this['parse'](_0x611e0d);return _0x5754be?_0x5754be[-0x1bc4+0x727+0x149d]===this['SERVICE']:null;},'isSubscribable':function(_0x213a68){return this['isValid'](_0x213a68)?!this['isMeta'](_0x213a68)&&!this['isService'](_0x213a68):null;},'Set':_0x3f9f36({'initialize':function(){this['_channels']={};},'getKeys':function(){var _0x30e4e7=[];for(var _0x3cd9e2 in this['_channels'])_0x30e4e7['push'](_0x3cd9e2);return _0x30e4e7;},'remove':function(_0x31384b){delete this['_channels'][_0x31384b];},'hasSubscription':function(_0x9cc0ca){return this['_channels']['hasOwnProp'+'erty'](_0x9cc0ca);},'subscribe':function(_0x5a5e9a,_0x141856){for(var _0x391fed,_0x222a57=0x47*0x37+0x1cf4+-0x2c35*0x1,_0xfc015d=_0x5a5e9a['length'];_0x222a57<_0xfc015d;_0x222a57++)_0x391fed=_0x5a5e9a[_0x222a57],(this['_channels'][_0x391fed]=this['_channels'][_0x391fed]||new _0x47de9a(_0x391fed))['bind']('message',_0x141856);},'unsubscribe':function(_0x39484d,_0x11ba1a){var _0x554804=this['_channels'][_0x39484d];return!!_0x554804&&(_0x554804['unbind']('message',_0x11ba1a),!!_0x554804['isUnused']()&&(this['remove'](_0x39484d),!(-0x22c5+0x11*0xcc+0x1539)));},'distributeMessage':function(_0x489c0e){for(var _0x3fed1b=_0x47de9a['expand'](_0x489c0e['channel']),_0x14b6d6=-0x1*0x2203+0x17c4+0xa3f,_0x28ca59=_0x3fed1b['length'];_0x14b6d6<_0x28ca59;_0x14b6d6++){var _0x59816b=this['_channels'][_0x3fed1b[_0x14b6d6]];_0x59816b&&_0x59816b['trigger']('message',_0x489c0e);}}})}),_0x40b471['exports']=_0x47de9a;},0x761:(_0x57f9a6,_0x528f34,_0x287d11)=>{'use strict';var _0x5a1fec=_0x287d11(-0x1d55+0x16*-0x14e+0x3de0),_0x4a6d41=_0x287d11(0x81c+-0x1*0x1324+0x1b14),_0x87b5c1=(_0x287d11(0x1626+-0x17be*-0x1+-0x2d8f),_0x287d11(0x104e+0x12db+-0x10*0x21e)),_0x589870=_0x287d11(0xe*-0x1fd+0x1559+0x1700),_0x8a300f=_0x287d11(0x1a8a+0x187+-0x13cc),_0x1ca117=_0x287d11(-0x48*-0x47+-0x2178+0x1ac3),_0x1209ef=_0x287d11(0x3df*-0x3+0x1*0x7b5+-0x134d*-0x1),_0x6140ae=_0x287d11(-0x152b*-0x1+0x2f18+-0x2c39),_0x35a1a8=_0x287d11(-0x1b11*-0x1+-0x1635+-0x1*-0xcbb),_0x300371=_0x287d11(0x3022+0x3d3*0x4+0x2*-0x1282),_0x1799be=_0x287d11(-0x86*0x12+-0x34*-0x92+0xeb*0xd),_0x17c15e=_0x287d11(0x1d6a+0x221f*-0x1+0x6fc),_0x618b11=_0x287d11(-0x2164*-0x1+0xaad*0x1+-0x2447),_0x5c4df9=_0x287d11(-0x55*0x7d+0x23d1+-0x1*-0x240b),_0x42bf2e=_0x287d11(-0x18e3+-0x13c+0x1*0x1a35),_0x4eb9e0=_0x287d11(0x299f+0x2219+-0x34c5),_0x1ec41c=_0x4a6d41({'className':'Client','UNCONNECTED':0x1,'CONNECTING':0x2,'CONNECTED':0x3,'DISCONNECTED':0x4,'HANDSHAKE':'handshake','RETRY':'retry','NONE':'none','CONNECTION_TIMEOUT':0x3c,'DEFAULT_ENDPOINT':'/bayeux','INTERVAL':0x0,'initialize':function(_0x21dd5a,_0x386a2a){this['info']('New\x20client'+'\x20created\x20f'+'or\x20?',_0x21dd5a),_0x1209ef(_0x386a2a=_0x386a2a||{},['interval','timeout','endpoints','proxy','retry','scheduler','websocketE'+'xtensions','tls','ca']),this['_channels']=new _0x1799be['Set'](),this['_dispatche'+'r']=_0x17c15e['create'](this,_0x21dd5a||this['DEFAULT_EN'+'DPOINT'],_0x386a2a),this['_messageId']=-0x20ed+0x4*-0x1f3+0x825*0x5,this['_state']=this['UNCONNECTE'+'D'],this['_responseC'+'allbacks']={},this['_advice']={'reconnect':this['RETRY'],'interval':(-0xbc4+-0xc9d+-0x1*-0x1c49)*(_0x386a2a['interval']||this['INTERVAL']),'timeout':(-0x1a09+0x47*0x79+-0x39e)*(_0x386a2a['timeout']||this['CONNECTION'+'_TIMEOUT'])},this['_dispatche'+'r']['timeout']=this['_advice']['timeout']/(-0x130d+0x23df+-0xcea),this['_dispatche'+'r']['bind']('message',this['_receiveMe'+'ssage'],this),_0x589870['Event']&&void(-0x250c+-0x3a7+-0xd91*-0x3)!==global['onbeforeun'+'load']&&_0x589870['Event']['on'](global,'beforeunlo'+'ad',function(){_0x87b5c1['indexOf'](this['_dispatche'+'r']['_disabled'],'autodiscon'+'nect')<-0x1*-0x78d+0x16ca*0x1+-0x9*0x35f&&this['disconnect']();},this);},'addWebsocketExtension':function(_0x15437f){return this['_dispatche'+'r']['addWebsock'+'etExtensio'+'n'](_0x15437f);},'disable':function(_0x2d2d6b){return this['_dispatche'+'r']['disable'](_0x2d2d6b);},'setHeader':function(_0x16809b,_0x770704){return this['_dispatche'+'r']['setHeader'](_0x16809b,_0x770704);},'handshake':function(_0x5deeab,_0x4a505f){if(this['_advice']['reconnect']!==this['NONE']&&this['_state']===this['UNCONNECTE'+'D']){this['_state']=this['CONNECTING'];var _0x282911=this;this['info']('Initiating'+'\x20handshake'+'\x20with\x20?',this['_dispatche'+'r']['endpoint']['href']),this['_dispatche'+'r']['selectTran'+'sport'](_0x8a300f['MANDATORY_'+'CONNECTION'+'_TYPES']),this['_sendMessa'+'ge']({'channel':_0x1799be['HANDSHAKE'],'version':_0x8a300f['BAYEUX_VER'+'SION'],'supportedConnectionTypes':this['_dispatche'+'r']['getConnect'+'ionTypes']()},{},function(_0x5a5520){_0x5a5520['successful']?(this['_state']=this['CONNECTED'],this['_dispatche'+'r']['clientId']=_0x5a5520['clientId'],this['_dispatche'+'r']['selectTran'+'sport'](_0x5a5520['supportedC'+'onnectionT'+'ypes']),this['info']('Handshake\x20'+'successful'+':\x20?',this['_dispatche'+'r']['clientId']),this['subscribe'](this['_channels']['getKeys'](),!(0x823*-0x1+-0x49*0x51+-0x1*-0x1f3c)),_0x5deeab&&_0x5a1fec(function(){_0x5deeab['call'](_0x4a505f);})):(this['info']('Handshake\x20'+'unsuccessf'+'ul'),global['setTimeout'](function(){_0x282911['handshake'](_0x5deeab,_0x4a505f);},(-0x1bf0*-0x1+0x1552*-0x1+-0x2b6)*this['_dispatche'+'r']['retry']),this['_state']=this['UNCONNECTE'+'D']);},this);}},'connect':function(_0x23ed9d,_0x2bc165){if(this['_advice']['reconnect']!==this['NONE']&&this['_state']!==this['DISCONNECT'+'ED']){if(this['_state']===this['UNCONNECTE'+'D'])return this['handshake'](function(){this['connect'](_0x23ed9d,_0x2bc165);},this);this['callback'](_0x23ed9d,_0x2bc165),this['_state']===this['CONNECTED']&&(this['info']('Calling\x20de'+'ferred\x20act'+'ions\x20for\x20?',this['_dispatche'+'r']['clientId']),this['setDeferre'+'dStatus']('succeeded'),this['setDeferre'+'dStatus']('unknown'),this['_connectRe'+'quest']||(this['_connectRe'+'quest']=!(-0x985*0x1+-0x20c9+0x1527*0x2),this['info']('Initiating'+'\x20connectio'+'n\x20for\x20?',this['_dispatche'+'r']['clientId']),this['_sendMessa'+'ge']({'channel':_0x1799be['CONNECT'],'clientId':this['_dispatche'+'r']['clientId'],'connectionType':this['_dispatche'+'r']['connection'+'Type']},{},this['_cycleConn'+'ection'],this)));}},'disconnect':function(){if(this['_state']===this['CONNECTED']){this['_state']=this['DISCONNECT'+'ED'],this['info']('Disconnect'+'ing\x20?',this['_dispatche'+'r']['clientId']);var _0x99c7a2=new _0x42bf2e();return this['_sendMessa'+'ge']({'channel':_0x1799be['DISCONNECT'],'clientId':this['_dispatche'+'r']['clientId']},{},function(_0x31257e){_0x31257e['successful']?(this['_dispatche'+'r']['close'](),_0x99c7a2['setDeferre'+'dStatus']('succeeded')):_0x99c7a2['setDeferre'+'dStatus']('failed',_0x618b11['parse'](_0x31257e['error']));},this),this['info']('Clearing\x20c'+'hannel\x20lis'+'teners\x20for'+'\x20?',this['_dispatche'+'r']['clientId']),this['_channels']=new _0x1799be['Set'](),_0x99c7a2;}},'subscribe':function(_0x2afbbf,_0x1a2d44,_0x2d4738){if(_0x2afbbf instanceof Array)return _0x87b5c1['map'](_0x2afbbf,function(_0x3f845a){return this['subscribe'](_0x3f845a,_0x1a2d44,_0x2d4738);},this);var _0x4e8428=new _0x4eb9e0(this,_0x2afbbf,_0x1a2d44,_0x2d4738),_0x50b6a5=!(-0xe73+0x7fc*-0x2+0x1*0x1e6b)===_0x1a2d44;return this['_channels']['hasSubscri'+'ption'](_0x2afbbf)&&!_0x50b6a5?(this['_channels']['subscribe']([_0x2afbbf],_0x4e8428),_0x4e8428['setDeferre'+'dStatus']('succeeded'),_0x4e8428):(this['connect'](function(){this['info']('Client\x20?\x20a'+'ttempting\x20'+'to\x20subscri'+'be\x20to\x20?',this['_dispatche'+'r']['clientId'],_0x2afbbf),_0x50b6a5||this['_channels']['subscribe']([_0x2afbbf],_0x4e8428),this['_sendMessa'+'ge']({'channel':_0x1799be['SUBSCRIBE'],'clientId':this['_dispatche'+'r']['clientId'],'subscription':_0x2afbbf},{},function(_0x5d8564){if(!_0x5d8564['successful'])return _0x4e8428['setDeferre'+'dStatus']('failed',_0x618b11['parse'](_0x5d8564['error'])),this['_channels']['unsubscrib'+'e'](_0x2afbbf,_0x4e8428);var _0x3bb2b9=[]['concat'](_0x5d8564['subscripti'+'on']);this['info']('Subscripti'+'on\x20acknowl'+'edged\x20for\x20'+'?\x20to\x20?',this['_dispatche'+'r']['clientId'],_0x3bb2b9),_0x4e8428['setDeferre'+'dStatus']('succeeded');},this);},this),_0x4e8428);},'unsubscribe':function(_0x3523e2,_0x2f54e1){if(_0x3523e2 instanceof Array)return _0x87b5c1['map'](_0x3523e2,function(_0x226712){return this['unsubscrib'+'e'](_0x226712,_0x2f54e1);},this);this['_channels']['unsubscrib'+'e'](_0x3523e2,_0x2f54e1)&&this['connect'](function(){this['info']('Client\x20?\x20a'+'ttempting\x20'+'to\x20unsubsc'+'ribe\x20from\x20'+'?',this['_dispatche'+'r']['clientId'],_0x3523e2),this['_sendMessa'+'ge']({'channel':_0x1799be['UNSUBSCRIB'+'E'],'clientId':this['_dispatche'+'r']['clientId'],'subscription':_0x3523e2},{},function(_0x24b015){if(_0x24b015['successful']){var _0x250aa8=[]['concat'](_0x24b015['subscripti'+'on']);this['info']('Unsubscrip'+'tion\x20ackno'+'wledged\x20fo'+'r\x20?\x20from\x20?',this['_dispatche'+'r']['clientId'],_0x250aa8);}},this);},this);},'publish':function(_0x188c7e,_0x3af818,_0xdc5a22){_0x1209ef(_0xdc5a22||{},['attempts','deadline']);var _0x21b3ee=new _0x42bf2e();return this['connect'](function(){this['info']('Client\x20?\x20q'+'ueueing\x20pu'+'blished\x20me'+'ssage\x20to\x20?'+':\x20?',this['_dispatche'+'r']['clientId'],_0x188c7e,_0x3af818),this['_sendMessa'+'ge']({'channel':_0x188c7e,'data':_0x3af818,'clientId':this['_dispatche'+'r']['clientId']},_0xdc5a22,function(_0x17e300){_0x17e300['successful']?_0x21b3ee['setDeferre'+'dStatus']('succeeded'):_0x21b3ee['setDeferre'+'dStatus']('failed',_0x618b11['parse'](_0x17e300['error']));},this);},this),_0x21b3ee;},'_sendMessage':function(_0x2778ee,_0x223e07,_0x45d2ac,_0x379ce8){_0x2778ee['id']=this['_generateM'+'essageId']();var _0x3d1673=this['_advice']['timeout']?(0x137e*-0x1+0x170*-0xe+0x279f+0.19999999999999996)*this['_advice']['timeout']/(0x106b+0x231+-0xeb4):(-0x1fc8+0xc7*-0xd+0xe*0x2fe+0.19999999999999996)*this['_dispatche'+'r']['retry'];this['pipeThroug'+'hExtension'+'s']('outgoing',_0x2778ee,null,function(_0x49d591){_0x49d591&&(_0x45d2ac&&(this['_responseC'+'allbacks'][_0x49d591['id']]=[_0x45d2ac,_0x379ce8]),this['_dispatche'+'r']['sendMessag'+'e'](_0x49d591,_0x3d1673,_0x223e07||{}));},this);},'_generateMessageId':function(){return this['_messageId']+=-0x5d2*-0x1+-0x7*0x26+-0x4c7,this['_messageId']>=Math['pow'](-0xdfb+0x1bc+0xc41*0x1,-0x2*0x5de+-0x3dd+-0xfb9*-0x1)&&(this['_messageId']=-0x3*0x45a+0xc77+0x97),this['_messageId']['toString'](-0x2223+-0xf26+0x316d*0x1);},'_receiveMessage':function(_0x28b999){var _0x528cf4,_0x55ce7a=_0x28b999['id'];void(-0xb*0x1df+0x2074+-0xbdf*0x1)!==_0x28b999['successful']&&(_0x528cf4=this['_responseC'+'allbacks'][_0x55ce7a],delete this['_responseC'+'allbacks'][_0x55ce7a]),this['pipeThroug'+'hExtension'+'s']('incoming',_0x28b999,null,function(_0x4c167e){_0x4c167e&&(_0x4c167e['advice']&&this['_handleAdv'+'ice'](_0x4c167e['advice']),this['_deliverMe'+'ssage'](_0x4c167e),_0x528cf4&&_0x528cf4[-0x2420+0x19d8+0xe*0xbc]['call'](_0x528cf4[0x167a+0x191*-0xa+-0x6cf],_0x4c167e));},this);},'_handleAdvice':function(_0xdbae47){_0x1ca117(this['_advice'],_0xdbae47),this['_dispatche'+'r']['timeout']=this['_advice']['timeout']/(0x663+-0x1*-0xcd1+0x2*-0x7a6),this['_advice']['reconnect']===this['HANDSHAKE']&&this['_state']!==this['DISCONNECT'+'ED']&&(this['_state']=this['UNCONNECTE'+'D'],this['_dispatche'+'r']['clientId']=null,this['_cycleConn'+'ection']());},'_deliverMessage':function(_0x1850f0){_0x1850f0['channel']&&void(0x8*0x14b+-0x2de+-0x77a)!==_0x1850f0['data']&&(this['info']('Client\x20?\x20c'+'alling\x20lis'+'teners\x20for'+'\x20?\x20with\x20?',this['_dispatche'+'r']['clientId'],_0x1850f0['channel'],_0x1850f0['data']),this['_channels']['distribute'+'Message'](_0x1850f0));},'_cycleConnection':function(){this['_connectRe'+'quest']&&(this['_connectRe'+'quest']=null,this['info']('Closed\x20con'+'nection\x20fo'+'r\x20?',this['_dispatche'+'r']['clientId']));var _0x38da8a=this;global['setTimeout'](function(){_0x38da8a['connect']();},this['_advice']['interval']);}});_0x1ca117(_0x1ec41c['prototype'],_0x6140ae),_0x1ca117(_0x1ec41c['prototype'],_0x300371),_0x1ca117(_0x1ec41c['prototype'],_0x35a1a8),_0x1ca117(_0x1ec41c['prototype'],_0x5c4df9),_0x57f9a6['exports']=_0x1ec41c;},0x247:(_0x570d7b,_0x457d32,_0x3054f8)=>{'use strict';var _0x15a419=_0x3054f8(-0x2*0x48f+-0x9b*-0x2b+-0xdf*0x1),_0x40f6dd=_0x3054f8(-0x171f+-0xd6e+0x2c4b),_0x436be5=_0x3054f8(0x3325*0x1+0x18c3+-0x3046*0x1),_0x18be7c=_0x3054f8(-0x290+-0x2155+0x3128),_0x38557b=_0x3054f8(-0x14be+0xb23+0x1b32),_0x52d1ff=_0x3054f8(0x10f3+0x2384+-0x1a0d),_0x3592c6=_0x3054f8(0x20ec+-0x1c66+0x367*0x4),_0x1e0c35=_0x3054f8(0x15*0x36+-0xff7+-0x1*-0x25de),_0x9aad80=_0x15a419({'className':'Dispatcher','MAX_REQUEST_SIZE':0x800,'DEFAULT_RETRY':0x5,'UP':0x1,'DOWN':0x2,'initialize':function(_0x547de7,_0x318f40,_0x3fa90f){this['_client']=_0x547de7,this['endpoint']=_0x40f6dd['parse'](_0x318f40),this['_alternate'+'s']=_0x3fa90f['endpoints']||{},this['cookies']=_0x436be5['CookieJar']&&new _0x436be5['CookieJar'](),this['_disabled']=[],this['_envelopes']={},this['headers']={},this['retry']=_0x3fa90f['retry']||this['DEFAULT_RE'+'TRY'],this['_scheduler']=_0x3fa90f['scheduler']||_0x1e0c35,this['_state']=0x446*0x1+-0x18f7+0x14b1,this['transports']={},this['wsExtensio'+'ns']=[],this['proxy']=_0x3fa90f['proxy']||{},'string'==typeof this['_proxy']&&(this['_proxy']={'origin':this['_proxy']});var _0x3b9f8b=_0x3fa90f['websocketE'+'xtensions'];if(_0x3b9f8b){for(var _0x5b7793=0x142d+-0x1be3+0x7b6,_0x4ccbfe=(_0x3b9f8b=[]['concat'](_0x3b9f8b))['length'];_0x5b7793<_0x4ccbfe;_0x5b7793++)this['addWebsock'+'etExtensio'+'n'](_0x3b9f8b[_0x5b7793]);}for(var _0x3a0864 in(this['tls']=_0x3fa90f['tls']||{},this['tls']['ca']=this['tls']['ca']||_0x3fa90f['ca'],this['_alternate'+'s']))this['_alternate'+'s'][_0x3a0864]=_0x40f6dd['parse'](this['_alternate'+'s'][_0x3a0864]);this['maxRequest'+'Size']=this['MAX_REQUES'+'T_SIZE'];},'endpointFor':function(_0x444079){return this['_alternate'+'s'][_0x444079]||this['endpoint'];},'addWebsocketExtension':function(_0x1a36d6){this['wsExtensio'+'ns']['push'](_0x1a36d6);},'disable':function(_0x4f3c28){this['_disabled']['push'](_0x4f3c28),_0x3592c6['disable'](_0x4f3c28);},'setHeader':function(_0x2b41d3,_0x273a08){this['headers'][_0x2b41d3]=_0x273a08;},'close':function(){var _0x534e30=this['_transport'];delete this['_transport'],_0x534e30&&_0x534e30['close']();},'getConnectionTypes':function(){return _0x3592c6['getConnect'+'ionTypes']();},'selectTransport':function(_0x360c6e){_0x3592c6['get'](this,_0x360c6e,this['_disabled'],function(_0x1d8490){this['debug']('Selected\x20?'+'\x20transport'+'\x20for\x20?',_0x1d8490['connection'+'Type'],_0x1d8490['endpoint']['href']),_0x1d8490!==this['_transport']&&(this['_transport']&&this['_transport']['close'](),this['_transport']=_0x1d8490,this['connection'+'Type']=_0x1d8490['connection'+'Type']);},this);},'sendMessage':function(_0xa50e41,_0x2c20b7,_0x1f4a7c){_0x1f4a7c=_0x1f4a7c||{};var _0x3cb58f,_0x46747d=_0xa50e41['id'],_0x23f242=_0x1f4a7c['attempts'],_0x5a14f9=_0x1f4a7c['deadline']&&new Date()['getTime']()+(0x4*-0x343+-0x71e*0x1+-0x9e*-0x27)*_0x1f4a7c['deadline'],_0x9ff744=this['_envelopes'][_0x46747d];_0x9ff744||(_0x3cb58f=new this['_scheduler'](_0xa50e41,{'timeout':_0x2c20b7,'interval':this['retry'],'attempts':_0x23f242,'deadline':_0x5a14f9}),_0x9ff744=this['_envelopes'][_0x46747d]={'message':_0xa50e41,'scheduler':_0x3cb58f}),this['_sendEnvel'+'ope'](_0x9ff744);},'_sendEnvelope':function(_0x23daa1){if(this['_transport']&&!_0x23daa1['request']&&!_0x23daa1['timer']){var _0x4f6c39=_0x23daa1['message'],_0x1026a9=_0x23daa1['scheduler'],_0x57a607=this;if(!_0x1026a9['isDelivera'+'ble']())return _0x1026a9['abort'](),void delete this['_envelopes'][_0x4f6c39['id']];_0x23daa1['timer']=global['setTimeout'](function(){_0x57a607['handleErro'+'r'](_0x4f6c39);},(-0x257e*0x1+0x2645+0x321)*_0x1026a9['getTimeout']()),_0x1026a9['send'](),_0x23daa1['request']=this['_transport']['sendMessag'+'e'](_0x4f6c39);}},'handleResponse':function(_0x2488e0){var _0xc97f03=this['_envelopes'][_0x2488e0['id']];void(0x1*-0xf02+-0x2698+0x2*0x1acd)!==_0x2488e0['successful']&&_0xc97f03&&(_0xc97f03['scheduler']['succeed'](),delete this['_envelopes'][_0x2488e0['id']],global['clearTimeo'+'ut'](_0xc97f03['timer'])),this['trigger']('message',_0x2488e0),this['_state']!==this['UP']&&(this['_state']=this['UP'],this['_client']['trigger']('transport:'+'up'));},'handleError':function(_0x25ced6,_0x1dd135){var _0x1f9350=this['_envelopes'][_0x25ced6['id']],_0x3a5a82=_0x1f9350&&_0x1f9350['request'],_0x2ac0b4=this;if(_0x3a5a82){_0x3a5a82['then'](function(_0x51b1bf){_0x51b1bf&&_0x51b1bf['abort']&&_0x51b1bf['abort']();});var _0x59acfd=_0x1f9350['scheduler'];_0x59acfd['fail'](),global['clearTimeo'+'ut'](_0x1f9350['timer']),_0x1f9350['request']=_0x1f9350['timer']=null,_0x1dd135?this['_sendEnvel'+'ope'](_0x1f9350):_0x1f9350['timer']=global['setTimeout'](function(){_0x1f9350['timer']=null,_0x2ac0b4['_sendEnvel'+'ope'](_0x1f9350);},(0xd0e*-0x1+-0x2204*-0x1+-0x1*0x110e)*_0x59acfd['getInterva'+'l']()),this['_state']!==this['DOWN']&&(this['_state']=this['DOWN'],this['_client']['trigger']('transport:'+'down'));}}});_0x9aad80['create']=function(_0x45e0e9,_0xa6628e,_0xcd0321){return new _0x9aad80(_0x45e0e9,_0xa6628e,_0xcd0321);},_0x18be7c(_0x9aad80['prototype'],_0x52d1ff),_0x18be7c(_0x9aad80['prototype'],_0x38557b),_0x570d7b['exports']=_0x9aad80;},0x7ca:(_0x1f7f3f,_0x5b60bf,_0x1053f3)=>{'use strict';var _0x18348e=_0x1053f3(0x1488+-0x3*0x4a2+0x96a),_0x2588d3=_0x1053f3(-0x3ac+0x1*-0x461+-0x5*-0x416),_0x3617c1=_0x18348e({'initialize':function(_0x339626,_0x482802,_0x667540){this['code']=_0x339626,this['params']=Array['prototype']['slice']['call'](_0x482802),this['message']=_0x667540;},'toString':function(){return this['code']+':'+this['params']['join'](',')+':'+this['message'];}});_0x3617c1['parse']=function(_0x312a54){if(_0x312a54=_0x312a54||'',!_0x2588d3['ERROR']['test'](_0x312a54))return new _0x3617c1(null,[],_0x312a54);var _0x311b37=_0x312a54['split'](':'),_0x382992=parseInt(_0x311b37[-0x10bb*-0x1+0x3*0x673+-0x2414]),_0x44e3b4=_0x311b37[-0xda1+-0x1b4*0xb+0x205e]['split'](',');return _0x312a54=_0x311b37[-0x6fe+0x2*-0x18d+0xa1a],new _0x3617c1(_0x382992,_0x44e3b4,_0x312a54);};var _0x3db092={'versionMismatch':[0x2258+-0x6*0x47b+-0x64a,'Version\x20mi'+'smatch'],'conntypeMismatch':[0x1*0x4d5+-0x25de+0x2236,'Connection'+'\x20types\x20not'+'\x20supported'],'extMismatch':[0x5*-0x4c4+0x869+-0x1*-0x1099,'Extension\x20'+'mismatch'],'badRequest':[0x23fd+0xb*0x253+-0x892*0x7,'Bad\x20reques'+'t'],'clientUnknown':[0x2192+0xd89+0xae*-0x43,'Unknown\x20cl'+'ient'],'parameterMissing':[-0x1b4c+-0x1ae3*-0x1+0x1fb,'Missing\x20re'+'quired\x20par'+'ameter'],'channelForbidden':[0xdc2+0xe1b*-0x1+-0xa4*-0x3,'Forbidden\x20'+'channel'],'channelUnknown':[0xd3a+0x1a4e+0x2b6*-0xe,'Unknown\x20ch'+'annel'],'channelInvalid':[-0x18ce+0xd*0x9e+0x61f*0x3,'Invalid\x20ch'+'annel'],'extUnknown':[-0x7af+-0xc4c*0x2+0x21dd,'Unknown\x20ex'+'tension'],'publishFailed':[0x1d85+-0xdaf+0xe3f*-0x1,'Failed\x20to\x20'+'publish'],'serverError':[-0x1931+-0x52f+0x2*0x102a,'Internal\x20s'+'erver\x20erro'+'r']};for(var _0x5488d3 in _0x3db092)!function(_0x3a244d){_0x3617c1[_0x3a244d]=function(){return new _0x3617c1(_0x3db092[_0x3a244d][-0xa*0x31f+0x77*0x1f+-0x11*-0xfd],arguments,_0x3db092[_0x3a244d][-0x3e3+0x1*-0x3a7+-0x78b*-0x1])['toString']();};}(_0x5488d3);_0x1f7f3f['exports']=_0x3617c1;},0x1e5b:(_0x26124a,_0x327ab3,_0x144bec)=>{'use strict';var _0x206524={'addExtension':function(_0x5d5375){this['_extension'+'s']=this['_extension'+'s']||[],this['_extension'+'s']['push'](_0x5d5375),_0x5d5375['added']&&_0x5d5375['added'](this);},'removeExtension':function(_0x4a1981){if(this['_extension'+'s']){for(var _0x53db02=this['_extension'+'s']['length'];_0x53db02--;)this['_extension'+'s'][_0x53db02]===_0x4a1981&&(this['_extension'+'s']['splice'](_0x53db02,0x253+-0xd3*-0x2b+-0x25c3),_0x4a1981['removed']&&_0x4a1981['removed'](this));}},'pipeThroughExtensions':function(_0x1c3625,_0x587770,_0x53ea46,_0xbe0bd4,_0x254067){if(this['debug']('Passing\x20th'+'rough\x20?\x20ex'+'tensions:\x20'+'?',_0x1c3625,_0x587770),!this['_extension'+'s'])return _0xbe0bd4['call'](_0x254067,_0x587770);var _0x514de8=this['_extension'+'s']['slice'](),_0x29955c=function(_0x516b6d){if(!_0x516b6d)return _0xbe0bd4['call'](_0x254067,_0x516b6d);var _0x5f015f=_0x514de8['shift']();if(!_0x5f015f)return _0xbe0bd4['call'](_0x254067,_0x516b6d);var _0xbe768d=_0x5f015f[_0x1c3625];if(!_0xbe768d)return _0x29955c(_0x516b6d);_0xbe768d['length']>=-0xd4d+0x95*0x42+-0x191a?_0x5f015f[_0x1c3625](_0x516b6d,_0x53ea46,_0x29955c):_0x5f015f[_0x1c3625](_0x516b6d,_0x29955c);};_0x29955c(_0x587770);}};_0x144bec(0x1233*0x2+-0xb*-0x22e+-0x2f1d)(_0x206524,_0x144bec(0xbec+-0x2440+0x3*0xdf9)),_0x26124a['exports']=_0x206524;},0xc61:_0x495cda=>{'use strict';_0x495cda['exports']={'CHANNEL_NAME':/^\/(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)))+(\/(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)))+)*$/,'CHANNEL_PATTERN':/^(\/(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)))+)*\/\*{1,2}$/,'ERROR':/^([0-9][0-9][0-9]:(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)| |\/|\*|\.))*(,(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)| |\/|\*|\.))*)*:(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)| |\/|\*|\.))*|[0-9][0-9][0-9]::(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)| |\/|\*|\.))*)$/,'VERSION':/^([0-9])+(\.(([a-z]|[A-Z])|[0-9])(((([a-z]|[A-Z])|[0-9])|\-|\_))*)*$/};},0x16:(_0x336621,_0x24e0b8,_0x6350be)=>{'use strict';var _0x56c515=_0x6350be(-0x32e+0xc0a+0x170*0x5),_0x19cb6=_0x6350be(0x15b9*0x1+0x1475+-0x1224);_0x336621['exports']=_0x56c515(_0x19cb6);},0x1a55:(_0x23286e,_0x322ac6,_0x5c7f08)=>{'use strict';var _0x53f78e=function(_0x353e1b,_0x43e44d){this['message']=_0x353e1b,this['options']=_0x43e44d,this['attempts']=-0x3a*0x43+0x1f73+-0x253*0x7;};_0x5c7f08(0x2368+-0x2df+0x9a3*-0x2)(_0x53f78e['prototype'],{'getTimeout':function(){return this['options']['timeout'];},'getInterval':function(){return this['options']['interval'];},'isDeliverable':function(){var _0x2195b4=this['options']['attempts'],_0x55f21b=this['attempts'],_0x3fb106=this['options']['deadline'],_0x2e16d4=new Date()['getTime']();return!(void(-0x1dc4+-0x147f+-0x3*-0x10c1)!==_0x2195b4&&_0x55f21b>=_0x2195b4||void(-0xdf4+0x24b+-0x3e3*-0x3)!==_0x3fb106&&_0x2e16d4>_0x3fb106);},'send':function(){this['attempts']+=0x122a+0xacd+-0x1cf6;},'succeed':function(){},'fail':function(){},'abort':function(){}}),_0x23286e['exports']=_0x53f78e;},0xc65:(_0x3567e5,_0x19e298,_0x2f2f91)=>{'use strict';var _0x1a92a3=_0x2f2f91(0x22c*-0x1+0x1*0x2bb+0x3d*0x41),_0xfacf6f=_0x2f2f91(0x2003+-0x733+-0x1787),_0x286544=_0x2f2f91(-0xb8d+0x485+0x144b),_0xa83d6d=_0x2f2f91(-0x3c5*0x1+-0x2*-0x99b+0x396*-0x2),_0x2c8d6a=_0x2f2f91(-0xdbf+-0x319*-0xc+0xa6*-0x9),_0x333e98=_0x2f2f91(-0x390b+0x433c+0xd3f*0x2),_0x375058=_0x2f2f91(-0x2a7e+-0x26c*-0x7+0x39b5),_0x396be0=_0x2f2f91(0x341+0xf7e+0x33*-0x37),_0x53265b=_0x2f2f91(-0x2e03+-0x17ef+0x9*0xb25),_0x4ba52e=_0x2f2f91(-0x6bb*0x1+-0xc41+0x1f5d),_0x5bdfa8=_0x2f2f91(-0x1046*-0x1+0xd*0x2df+-0xe*0x205),_0x17d9e4=_0x1a92a3({'className':'Server','initialize':function(_0x1c8015){this['_options']=_0x1c8015||{};var _0x5e8f14=this['_options']['engine']||{};_0x5e8f14['timeout']=this['_options']['timeout'],this['_engine']=_0x333e98['get'](_0x5e8f14),this['info']('Created\x20ne'+'w\x20server:\x20'+'?',this['_options']);},'close':function(){return this['_engine']['close']();},'openSocket':function(_0x22d496,_0x450178,_0x51cc11){_0x22d496&&_0x450178&&this['_engine']['openSocket'](_0x22d496,new _0x5bdfa8(this,_0x450178,_0x51cc11));},'closeSocket':function(_0x445e7f,_0x3d1431){this['_engine']['flushConne'+'ction'](_0x445e7f,_0x3d1431);},'process':function(_0x248ecb,_0x3b911f,_0x20c01b,_0x4225c3){var _0x5377d6=null===_0x3b911f;if(_0x248ecb=[]['concat'](_0x248ecb),this['info']('Processing'+'\x20messages:'+'\x20?\x20(local:'+'\x20?)',_0x248ecb,_0x5377d6),0x108e+-0x226d*-0x1+-0x32fb===_0x248ecb['length'])return _0x20c01b['call'](_0x4225c3,[]);for(var _0x1bb3bb=0x2405+0x24e*0x2+-0x28a1,_0x134681=[],_0x945983=this,_0x5237cb=function(_0xb15537){if(_0x134681=_0x134681['concat'](_0xb15537),!((_0x1bb3bb+=0x25da+-0x11d*0xd+-0x1760)<_0x248ecb['length'])){for(var _0x2eae7d=_0x134681['length'];_0x2eae7d--;)_0x134681[_0x2eae7d]||_0x134681['splice'](_0x2eae7d,-0x83e+0x14*0x79+-0x135);_0x945983['info']('Returning\x20'+'replies:\x20?',_0x134681),_0x20c01b['call'](_0x4225c3,_0x134681);}},_0x432fc7=function(_0xf6948c){var _0x3f7555=0x315*-0x2+-0x1*-0x1dbe+-0x1794,_0x1d08fd=_0xf6948c['length'];0x246b*0x1+-0x8*-0xe9+-0x2bb3===_0x1d08fd&&_0x5237cb(_0xf6948c);for(var _0x13d130=-0x4a7*-0x1+-0x24fe+0x2057,_0x29a24b=_0xf6948c['length'];_0x13d130<_0x29a24b;_0x13d130++)this['debug']('Processing'+'\x20reply:\x20?',_0xf6948c[_0x13d130]),function(_0x48abd4){_0x945983['pipeThroug'+'hExtension'+'s']('outgoing',_0xf6948c[_0x48abd4],_0x3b911f,function(_0x4d42ff){_0xf6948c[_0x48abd4]=_0x4d42ff,(_0x3f7555+=-0x269d+0xb*-0xdf+0x3033)===_0x1d08fd&&_0x5237cb(_0xf6948c);});}(_0x13d130);},_0x4de09e=0x22d1+-0x1bd2+-0x6ff,_0x5e936b=_0x248ecb['length'];_0x4de09e<_0x5e936b;_0x4de09e++)this['pipeThroug'+'hExtension'+'s']('incoming',_0x248ecb[_0x4de09e],_0x3b911f,function(_0x122f4c){this['_handle'](_0x122f4c,_0x5377d6,_0x432fc7,this);},this);},'_makeResponse':function(_0x463155){var _0x1ec0cb={};return _0x463155['id']&&(_0x1ec0cb['id']=_0x463155['id']),_0x463155['clientId']&&(_0x1ec0cb['clientId']=_0x463155['clientId']),_0x463155['channel']&&(_0x1ec0cb['channel']=_0x463155['channel']),_0x463155['error']&&(_0x1ec0cb['error']=_0x463155['error']),_0x1ec0cb['successful']=!_0x1ec0cb['error'],_0x1ec0cb;},'_handle':function(_0x39e568,_0x47e05b,_0x6dc0e7,_0x1a3058){if(!_0x39e568)return _0x6dc0e7['call'](_0x1a3058,[]);this['info']('Handling\x20m'+'essage:\x20?\x20'+'(local:\x20?)',_0x39e568,_0x47e05b);var _0x5d002d,_0xb36dbd=_0x39e568['channel'],_0x13aa8b=_0x39e568['error'];if(_0x375058['isMeta'](_0xb36dbd))return this['_handleMet'+'a'](_0x39e568,_0x47e05b,_0x6dc0e7,_0x1a3058);_0x4ba52e['CHANNEL_NA'+'ME']['test'](_0xb36dbd)||(_0x13aa8b=_0x396be0['channelInv'+'alid'](_0xb36dbd)),void(-0x8f8+0x1*0x175a+-0x7*0x20e)===_0x39e568['data']&&(_0x13aa8b=_0x396be0['parameterM'+'issing']('data')),_0x13aa8b||this['_engine']['publish'](_0x39e568),_0x5d002d=this['_makeRespo'+'nse'](_0x39e568),_0x13aa8b&&(_0x5d002d['error']=_0x13aa8b),_0x5d002d['successful']=!_0x5d002d['error'],_0x6dc0e7['call'](_0x1a3058,[_0x5d002d]);},'_handleMeta':function(_0x307c41,_0x1b7c9b,_0x5d375a,_0x51e10b){var _0x47140e,_0x5a5b36=this['_methodFor'](_0x307c41);if(null===_0x5a5b36)return(_0x47140e=this['_makeRespo'+'nse'](_0x307c41))['error']=_0x396be0['channelFor'+'bidden'](_0x307c41['channel']),_0x47140e['successful']=!(-0x1918+0x8b5+0x1064),_0x5d375a['call'](_0x51e10b,[_0x47140e]);this[_0x5a5b36](_0x307c41,_0x1b7c9b,function(_0x3f2c91){for(var _0x3f648b=-0xd0b+-0x2554*-0x1+0x1849*-0x1,_0x2460a9=(_0x3f2c91=[]['concat'](_0x3f2c91))['length'];_0x3f648b<_0x2460a9;_0x3f648b++)this['_advize'](_0x3f2c91[_0x3f648b],_0x307c41['connection'+'Type']);_0x5d375a['call'](_0x51e10b,_0x3f2c91);},this);},'_methodFor':function(_0x369ec5){var _0x54f5a7=_0x369ec5['channel'];return _0x54f5a7===_0x375058['HANDSHAKE']?'handshake':_0x54f5a7===_0x375058['CONNECT']?'connect':_0x54f5a7===_0x375058['SUBSCRIBE']?'subscribe':_0x54f5a7===_0x375058['UNSUBSCRIB'+'E']?'unsubscrib'+'e':_0x54f5a7===_0x375058['DISCONNECT']?'disconnect':null;},'_advize':function(_0x27a584,_0x3a1224){var _0x4a89a6,_0x5df45d;_0xfacf6f['indexOf']([_0x375058['HANDSHAKE'],_0x375058['CONNECT']],_0x27a584['channel'])<0x16b6+-0x2227+0xb71||('eventsourc'+'e'===_0x3a1224?(_0x4a89a6=Math['floor']((0xcc+-0x11a4+0x14c0)*this['_engine']['timeout']),_0x5df45d=-0x4*-0x27f+0x3*0x1d+-0x1*0xa53):(_0x4a89a6=Math['floor']((0x87b+0x30*-0x5a+0xc4d)*this['_engine']['interval']),_0x5df45d=Math['floor']((0xda0+-0x7*-0x96+-0x3a*0x3d)*this['_engine']['timeout'])),_0x27a584['advice']=_0x27a584['advice']||{},_0x27a584['error']?_0x286544(_0x27a584['advice'],{'reconnect':'handshake'},!(-0xa4*-0x5+-0x12*0xca+-0x139*-0x9)):_0x286544(_0x27a584['advice'],{'reconnect':'retry','interval':_0x4a89a6,'timeout':_0x5df45d},!(-0xefb+0xe33+-0x3*-0x43)));},'handshake':function(_0x3be58f,_0x3554f5,_0x414cbd,_0x46d562){var _0x1f7b8d=this['_makeRespo'+'nse'](_0x3be58f);_0x1f7b8d['version']=_0xa83d6d['BAYEUX_VER'+'SION'],_0x3be58f['version']||(_0x1f7b8d['error']=_0x396be0['parameterM'+'issing']('version'));var _0x2399bc=_0x3be58f['supportedC'+'onnectionT'+'ypes'];if(_0x1f7b8d['supportedC'+'onnectionT'+'ypes']=_0xa83d6d['CONNECTION'+'_TYPES'],_0x2399bc?-0x23fb*-0x1+0xcd3*0x3+-0x4a74===_0xfacf6f['filter'](_0x2399bc,function(_0x188408){return _0xfacf6f['indexOf'](_0xa83d6d['CONNECTION'+'_TYPES'],_0x188408)>=-0xc*-0x2da+-0x8*0x22a+-0x874*0x2;})['length']&&(_0x1f7b8d['error']=_0x396be0['conntypeMi'+'smatch'](_0x2399bc)):_0x1f7b8d['error']=_0x396be0['parameterM'+'issing']('supportedC'+'onnectionT'+'ypes'),_0x1f7b8d['successful']=!_0x1f7b8d['error'],!_0x1f7b8d['successful'])return _0x414cbd['call'](_0x46d562,_0x1f7b8d);this['_engine']['createClie'+'nt'](function(_0x1366da){_0x1f7b8d['clientId']=_0x1366da,_0x414cbd['call'](_0x46d562,_0x1f7b8d);},this);},'connect':function(_0x21bd46,_0x3659c3,_0x4bf0d9,_0x113f43){var _0x2ac18a=this['_makeRespo'+'nse'](_0x21bd46),_0x53b3da=_0x21bd46['clientId'],_0x363a0c=_0x21bd46['connection'+'Type'];this['_engine']['clientExis'+'ts'](_0x53b3da,function(_0x3eb692){if(_0x3eb692||(_0x2ac18a['error']=_0x396be0['clientUnkn'+'own'](_0x53b3da)),_0x53b3da||(_0x2ac18a['error']=_0x396be0['parameterM'+'issing']('clientId')),_0xfacf6f['indexOf'](_0xa83d6d['CONNECTION'+'_TYPES'],_0x363a0c)<0x805*0x1+-0x180*0x15+0x1*0x177b&&(_0x2ac18a['error']=_0x396be0['conntypeMi'+'smatch'](_0x363a0c)),_0x363a0c||(_0x2ac18a['error']=_0x396be0['parameterM'+'issing']('connection'+'Type')),_0x2ac18a['successful']=!_0x2ac18a['error'],!_0x2ac18a['successful'])return delete _0x2ac18a['clientId'],_0x4bf0d9['call'](_0x113f43,_0x2ac18a);'eventsourc'+'e'===_0x21bd46['connection'+'Type']&&(_0x21bd46['advice']=_0x21bd46['advice']||{},_0x21bd46['advice']['timeout']=0x1e4+-0x4*-0x124+-0x674),this['_engine']['connect'](_0x2ac18a['clientId'],_0x21bd46['advice'],function(_0x4977d5){_0x4bf0d9['call'](_0x113f43,[_0x2ac18a]['concat'](_0x4977d5));});},this);},'disconnect':function(_0x5500d6,_0x4cfd30,_0x20ea0e,_0x294ee3){var _0x111542=this['_makeRespo'+'nse'](_0x5500d6),_0xec887f=_0x5500d6['clientId'];this['_engine']['clientExis'+'ts'](_0xec887f,function(_0x3878df){_0x3878df||(_0x111542['error']=_0x396be0['clientUnkn'+'own'](_0xec887f)),_0xec887f||(_0x111542['error']=_0x396be0['parameterM'+'issing']('clientId')),_0x111542['successful']=!_0x111542['error'],_0x111542['successful']||delete _0x111542['clientId'],_0x111542['successful']&&this['_engine']['destroyCli'+'ent'](_0xec887f),_0x20ea0e['call'](_0x294ee3,_0x111542);},this);},'subscribe':function(_0x3e4753,_0x58120f,_0x340b29,_0x283106){var _0x286f44,_0x1d8e89=this['_makeRespo'+'nse'](_0x3e4753),_0x84d102=_0x3e4753['clientId'],_0x20c165=_0x3e4753['subscripti'+'on'];_0x20c165=_0x20c165?[]['concat'](_0x20c165):[],this['_engine']['clientExis'+'ts'](_0x84d102,function(_0x3cc522){_0x3cc522||(_0x1d8e89['error']=_0x396be0['clientUnkn'+'own'](_0x84d102)),_0x84d102||(_0x1d8e89['error']=_0x396be0['parameterM'+'issing']('clientId')),_0x3e4753['subscripti'+'on']||(_0x1d8e89['error']=_0x396be0['parameterM'+'issing']('subscripti'+'on')),_0x1d8e89['subscripti'+'on']=_0x3e4753['subscripti'+'on']||[];for(var _0x398d26=-0x43*-0x20+-0x1eaf+0x164f,_0x366522=_0x20c165['length'];_0x398d26<_0x366522&&(_0x286f44=_0x20c165[_0x398d26],!_0x1d8e89['error'])&&(_0x58120f||_0x375058['isSubscrib'+'able'](_0x286f44)||(_0x1d8e89['error']=_0x396be0['channelFor'+'bidden'](_0x286f44)),_0x375058['isValid'](_0x286f44)||(_0x1d8e89['error']=_0x396be0['channelInv'+'alid'](_0x286f44)),!_0x1d8e89['error']);_0x398d26++)this['_engine']['subscribe'](_0x84d102,_0x286f44);_0x1d8e89['successful']=!_0x1d8e89['error'],_0x340b29['call'](_0x283106,_0x1d8e89);},this);},'unsubscribe':function(_0x567006,_0x475710,_0x38433b,_0x46c689){var _0x3295c6,_0x1e1511=this['_makeRespo'+'nse'](_0x567006),_0x4ec668=_0x567006['clientId'],_0x1e6223=_0x567006['subscripti'+'on'];_0x1e6223=_0x1e6223?[]['concat'](_0x1e6223):[],this['_engine']['clientExis'+'ts'](_0x4ec668,function(_0x16d2d7){_0x16d2d7||(_0x1e1511['error']=_0x396be0['clientUnkn'+'own'](_0x4ec668)),_0x4ec668||(_0x1e1511['error']=_0x396be0['parameterM'+'issing']('clientId')),_0x567006['subscripti'+'on']||(_0x1e1511['error']=_0x396be0['parameterM'+'issing']('subscripti'+'on')),_0x1e1511['subscripti'+'on']=_0x567006['subscripti'+'on']||[];for(var _0x5850e2=0x7a9+-0x77a+-0x2f,_0x1563c9=_0x1e6223['length'];_0x5850e2<_0x1563c9&&(_0x3295c6=_0x1e6223[_0x5850e2],!_0x1e1511['error'])&&(_0x475710||_0x375058['isSubscrib'+'able'](_0x3295c6)||(_0x1e1511['error']=_0x396be0['channelFor'+'bidden'](_0x3295c6)),_0x375058['isValid'](_0x3295c6)||(_0x1e1511['error']=_0x396be0['channelInv'+'alid'](_0x3295c6)),!_0x1e1511['error']);_0x5850e2++)this['_engine']['unsubscrib'+'e'](_0x4ec668,_0x3295c6);_0x1e1511['successful']=!_0x1e1511['error'],_0x38433b['call'](_0x46c689,_0x1e1511);},this);}});_0x17d9e4['create']=function(_0x53f16e){return new _0x17d9e4(_0x53f16e);},_0x286544(_0x17d9e4['prototype'],_0x2c8d6a),_0x286544(_0x17d9e4['prototype'],_0x53265b),_0x3567e5['exports']=_0x17d9e4;},0x1953:(_0x2de830,_0x416684,_0x55e68c)=>{'use strict';var _0x46a991=_0x55e68c(-0x7*-0x457+0x266f*0x1+-0x34c4),_0x4b1b85=_0x55e68c(0x1d62*0x1+-0x75*-0x7f+-0x3a01);_0x2de830['exports']=_0x46a991({'initialize':function(_0x1ecda,_0x4899b0,_0x10e92a){this['_server']=_0x1ecda,this['_socket']=_0x4899b0,this['_request']=_0x10e92a;},'send':function(_0x490dd0){this['_server']['pipeThroug'+'hExtension'+'s']('outgoing',_0x490dd0,this['_request'],function(_0x275a66){this['_socket']&&this['_socket']['send'](_0x4b1b85([_0x275a66]));},this);},'close':function(){this['_socket']&&this['_socket']['close'](),delete this['_socket'];}});},0x16f3:(_0x1a3d42,_0x4cd082,_0x4536ff)=>{'use strict';var _0x31106f=_0x4536ff(-0x2*-0x5d+-0x25e5+0x39*0xef),_0x2a79fa=_0x4536ff(0x27*-0x5c+0x762+0x13e5),_0x470d76=_0x4536ff(-0x1*-0x25f9+0x252+0x1*-0x1041),_0x5dd26d=_0x31106f({'initialize':function(_0x163892,_0x21e9c6,_0x714e8a,_0x3a056b){this['_client']=_0x163892,this['_channels']=_0x21e9c6,this['_callback']=_0x714e8a,this['_context']=_0x3a056b,this['_cancelled']=!(-0x7*-0x2+-0x35a+0x34d);},'withChannel':function(_0xdd400e,_0x223cf2){return this['_withChann'+'el']=[_0xdd400e,_0x223cf2],this;},'apply':function(_0x19ca93,_0x2868ac){var _0x578f6a=_0x2868ac[0x5*0x7a+-0x121f*0x1+0xfbd];this['_callback']&&this['_callback']['call'](this['_context'],_0x578f6a['data']),this['_withChann'+'el']&&this['_withChann'+'el'][0x1fb1+-0x1*0x1f46+0x6b*-0x1]['call'](this['_withChann'+'el'][-0x14db*0x1+0x21a6+0x2*-0x665],_0x578f6a['channel'],_0x578f6a['data']);},'cancel':function(){this['_cancelled']||(this['_client']['unsubscrib'+'e'](this['_channels'],this),this['_cancelled']=!(0x1776+-0xc8b*-0x3+-0x3d17));},'unsubscribe':function(){this['cancel']();}});_0x2a79fa(_0x5dd26d['prototype'],_0x470d76),_0x1a3d42['exports']=_0x5dd26d;},0xbe0:(_0x1b88c5,_0x32979a,_0x2c40f5)=>{'use strict';var _0x620428=_0x2c40f5(-0x79c+0x91*0x2b+-0x2e*0x1f)['Buffer'],_0x2647c7=_0x2c40f5(0x1*-0x1f01+0x2*0x282+0xc*0x4f8),_0x304b71=_0x2c40f5(0x1*-0x13c1+0xf16+0x1ae7),_0x2844e4=_0x2c40f5(0xda3*0x1+-0x3*0xc7f+0x7f*0x4f),_0x1b4bfb=_0x2c40f5(-0x236*-0x6+0xdb4*0x2+-0x18a0),_0x34aba1=_0x2c40f5(-0x1c8*0x1+0x308+0x2*0x33f),_0xb29e=_0x2c40f5(0xdd*0x15+0x17bf*-0x1+0x12e1*0x1),_0x47e991=_0x2c40f5(0x27fd+-0x734+-0x35d),_0x1c3167=_0x2c40f5(0x2*-0xa37+0x21d1+0xcc1),_0x2484e1=_0xb29e(_0x1b4bfb(_0x1c3167,{'className':'NodeHttp','SECURE_PROTOCOLS':['https:','wss:'],'initialize':function(){_0x1c3167['prototype']['initialize']['apply'](this,arguments),this['_endpointS'+'ecure']=this['SECURE_PRO'+'TOCOLS']['indexOf'](this['endpoint']['protocol'])>=0x11b7+0x124b*0x2+-0x364d*0x1,this['_httpClien'+'t']=this['_endpointS'+'ecure']?_0x304b71:_0x2647c7;var _0x5a1a9d=this['_proxy'];if(_0x5a1a9d['origin']){if(this['_proxyUri']=_0x34aba1['parse'](_0x5a1a9d['origin']),this['_proxySecu'+'re']=this['SECURE_PRO'+'TOCOLS']['indexOf'](this['_proxyUri']['protocol'])>=0x651+-0x665*0x6+-0x669*-0x5,this['_endpointS'+'ecure']){var _0x7c50b1=_0xb29e({'proxy':{'host':this['_proxyUri']['hostname'],'port':this['_proxyUri']['port']||this['DEFAULT_PO'+'RTS'][this['_proxyUri']['protocol']],'proxyAuth':this['_proxyUri']['auth'],'headers':_0xb29e({'host':this['endpoint']['host']},_0x5a1a9d['headers'])}},this['_dispatche'+'r']['tls']);this['_proxySecu'+'re']?(_0xb29e(_0x7c50b1['proxy'],_0x5a1a9d['tls']),this['_tunnel']=_0x2844e4['httpsOverH'+'ttps'](_0x7c50b1)):this['_tunnel']=_0x2844e4['httpsOverH'+'ttp'](_0x7c50b1);}else this['_httpClien'+'t']=this['_proxySecu'+'re']?_0x304b71:_0x2647c7;}},'encode':function(_0x408b3d){return _0x47e991(_0x408b3d);},'request':function(_0x2d4cde){var _0x30e705=_0x620428['from'](this['encode'](_0x2d4cde),'utf8'),_0x40488f=this['_buildPara'+'ms'](_0x30e705),_0x3ccfa9=this['_httpClien'+'t']['request'](_0x40488f),_0x44d262=this;return _0x3ccfa9['on']('response',function(_0x2e2c48){_0x44d262['_handleRes'+'ponse'](_0x2d4cde,_0x2e2c48),_0x44d262['_storeCook'+'ies'](_0x2e2c48['headers']['set-cookie']);}),_0x3ccfa9['on']('error',function(_0x6bd1c5){_0x44d262['error']('HTTP\x20error'+':\x20'+_0x6bd1c5['message']),_0x44d262['_handleErr'+'or'](_0x2d4cde);}),_0x3ccfa9['end'](_0x30e705),_0x3ccfa9;},'_buildParams':function(_0xce700b){var _0x4cae34=this['endpoint'],_0x1f23a6=this['_proxyUri'],_0x63d795=this['_tunnel']?_0x4cae34:_0x1f23a6||_0x4cae34,_0x74e0c2={'Content-Length':_0xce700b['length'],'Content-Type':'applicatio'+'n/json','Host':_0x4cae34['host']};_0x4cae34['auth']&&(_0x74e0c2['Authorizat'+'ion']='Basic\x20'+_0x620428['from'](_0x4cae34['auth'],'utf8')['toString']('base64'));var _0x9d7c6f={'method':'POST','host':_0x63d795['hostname'],'port':_0x63d795['port']||this['DEFAULT_PO'+'RTS'][_0x63d795['protocol']],'path':_0x4cae34['path'],'headers':_0xb29e(_0x74e0c2,this['_dispatche'+'r']['headers'])},_0x5dcb6b=this['_getCookie'+'s']();return''!==_0x5dcb6b&&(_0x9d7c6f['headers']['Cookie']=_0x5dcb6b),this['_tunnel']?_0x9d7c6f['agent']=this['_tunnel']:this['_endpointS'+'ecure']?_0xb29e(_0x9d7c6f,this['_dispatche'+'r']['tls']):_0x1f23a6&&(_0x9d7c6f['path']=this['endpoint']['href'],_0xb29e(_0x9d7c6f,this['_proxy']['tls']),_0x1f23a6['auth']&&(_0x9d7c6f['headers']['Proxy-Auth'+'orization']=_0x620428['from'](_0x1f23a6['auth'],'utf8')['toString']('base64'))),_0x9d7c6f;},'_handleResponse':function(_0x358ce1,_0x8e555a){var _0x2e9a43='',_0x5ccfcc=this;_0x8e555a['setEncodin'+'g']('utf8'),_0x8e555a['on']('data',function(_0x56d3d6){_0x2e9a43+=_0x56d3d6;}),_0x8e555a['on']('end',function(){var _0xcc338b;try{_0xcc338b=JSON['parse'](_0x2e9a43);}catch(_0x578810){}_0xcc338b?_0x5ccfcc['_receive'](_0xcc338b):_0x5ccfcc['_handleErr'+'or'](_0x358ce1);});}}),{'isUsable':function(_0x5bcb05,_0x599974,_0x4333fb,_0x1ca9bc){_0x4333fb['call'](_0x1ca9bc,_0x34aba1['isURI'](_0x599974));}});_0x1b88c5['exports']=_0x2484e1;},0x1aed:(_0x25053f,_0x2fe37a,_0x187f83)=>{'use strict';var _0x493bdc=_0x187f83(-0x2*-0x80e+-0x2276+0x1631),_0x111b7f=_0x187f83(-0x1a6b+-0x1*0x22a3+0x4d1a),_0x2cf043=(_0x187f83(0x7ef*-0x2+-0x6*0x644+-0x1e9a*-0x2),_0x187f83(0x12*0x20c+-0x111e+-0x621)),_0x3165c5=_0x187f83(-0x412*0x4+0x1*-0x1feb+0x3d76),_0x3a0e5a=_0x187f83(0x1045+-0x11*0x1de+-0x3*-0x94a),_0x4eeeb1=_0x3165c5(_0x111b7f(_0x187f83(-0x2d30+0x1d00+0x2a54),{'batching':!(-0x35*0x9+-0x23c2+0x25a0),'request':function(_0x14b684){_0x14b684=_0x2cf043(_0x14b684);var _0x4741a3=this;_0x493bdc(function(){_0x4741a3['endpoint']['process'](_0x14b684,null,function(_0x1ce1a5){_0x4741a3['_receive'](_0x2cf043(_0x1ce1a5));});});}}),{'isUsable':function(_0x1caad9,_0x50b746,_0x41d6c5,_0x48e509){_0x41d6c5['call'](_0x48e509,_0x50b746 instanceof _0x3a0e5a);}});_0x25053f['exports']=_0x4eeeb1;},0x1222:(_0x42211e,_0x5a6953,_0x3aaace)=>{'use strict';var _0xea5eba=_0x3aaace(0x1dc9+-0x1*0x1e4d+0x1aa8);_0xea5eba['register']('in-process',_0x3aaace(-0x1eb7+-0x33*0xc4+0x60b0)),_0xea5eba['register']('websocket',_0x3aaace(0xef9+-0x1*-0x172c+-0x90a*0x3)),_0xea5eba['register']('long-polli'+'ng',_0x3aaace(0x60*-0x4f+0x86b+0x2115)),_0x42211e['exports']=_0xea5eba;},0x1a24:(_0x4ca9c3,_0x34f56a,_0x42a002)=>{'use strict';var _0x3783b3=_0x42a002(-0x11a*-0x19+0x1*-0xf6d+0x35*0x13),_0x6e032=_0x42a002(0xb06+-0x557+-0x751*-0x3)['Cookie'],_0x2c5959=_0x42a002(-0x132c+-0x25c4+0x3945),_0x95983c=_0x42a002(-0xc76+-0x1c1+0xf80),_0x2dc892=_0x42a002(0x2638+0xdaf+0x9a9*-0x4),_0x31d63f=_0x42a002(0x1*0xc9a+0x1*0x19b0+-0x7*0x2f5),_0x4b8b06=_0x42a002(-0x24ee+0xd*-0x286+-0x5d*-0x124),_0x555ee8=_0x42a002(-0x8*-0x47b+-0x402*0x4+-0x1*-0xc5b),_0x318fb0=_0x2dc892(_0x3783b3({'className':'Transport','DEFAULT_PORTS':{'http:':0x50,'https:':0x1bb,'ws:':0x50,'wss:':0x1bb},'MAX_DELAY':0x0,'batching':!(-0x79f*0x4+-0xb6d+0x29e9*0x1),'initialize':function(_0x25f149,_0x6ce6f9){this['_dispatche'+'r']=_0x25f149,this['endpoint']=_0x6ce6f9,this['_outbox']=[],this['_proxy']=_0x2dc892({},this['_dispatche'+'r']['proxy']),this['_proxy']['origin']||(this['_proxy']['origin']=this['_findProxy']());},'close':function(){},'encode':function(_0x594701){return'';},'sendMessage':function(_0x97100a){return this['debug']('Client\x20?\x20s'+'ending\x20mes'+'sage\x20to\x20?:'+'\x20?',this['_dispatche'+'r']['clientId'],this['endpoint']['href'],_0x97100a),this['batching']?(this['_outbox']['push'](_0x97100a),this['_flushLarg'+'eBatch'](),_0x97100a['channel']===_0x555ee8['HANDSHAKE']?this['_publish'](0x1859+0x2*-0x1193+0xacd+0.01):(_0x97100a['channel']===_0x555ee8['CONNECT']&&(this['_connectMe'+'ssage']=_0x97100a),this['_publish'](this['MAX_DELAY']))):_0x2c5959['resolve'](this['request']([_0x97100a]));},'_makePromise':function(){var _0x4dfefc=this;this['_requestPr'+'omise']=this['_requestPr'+'omise']||new _0x2c5959(function(_0x1068cf){_0x4dfefc['_resolvePr'+'omise']=_0x1068cf;});},'_publish':function(_0x30a213){return this['_makePromi'+'se'](),this['addTimeout']('publish',_0x30a213,function(){this['_flush'](),delete this['_requestPr'+'omise'];},this),this['_requestPr'+'omise'];},'_flush':function(){this['removeTime'+'out']('publish'),this['_outbox']['length']>-0x6*0x47f+0x17fa+0x301&&this['_connectMe'+'ssage']&&(this['_connectMe'+'ssage']['advice']={'timeout':0x0}),this['_resolvePr'+'omise'](this['request'](this['_outbox'])),this['_connectMe'+'ssage']=null,this['_outbox']=[];},'_flushLargeBatch':function(){if(!(this['encode'](this['_outbox'])['length']<this['_dispatche'+'r']['maxRequest'+'Size'])){var _0xeede9e=this['_outbox']['pop']();this['_makePromi'+'se'](),this['_flush'](),_0xeede9e&&this['_outbox']['push'](_0xeede9e);}},'_receive':function(_0xd61114){if(_0xd61114){_0xd61114=[]['concat'](_0xd61114),this['debug']('Client\x20?\x20r'+'eceived\x20fr'+'om\x20?\x20via\x20?'+':\x20?',this['_dispatche'+'r']['clientId'],this['endpoint']['href'],this['connection'+'Type'],_0xd61114);for(var _0x8a257f=0x2317+0x1*-0x21dd+-0x13a*0x1,_0x285751=_0xd61114['length'];_0x8a257f<_0x285751;_0x8a257f++)this['_dispatche'+'r']['handleResp'+'onse'](_0xd61114[_0x8a257f]);}},'_handleError':function(_0x9504d8,_0x19f9ca){_0x9504d8=[]['concat'](_0x9504d8),this['debug']('Client\x20?\x20f'+'ailed\x20to\x20s'+'end\x20to\x20?\x20v'+'ia\x20?:\x20?',this['_dispatche'+'r']['clientId'],this['endpoint']['href'],this['connection'+'Type'],_0x9504d8);for(var _0x255186=-0x775+0x2*-0x10a7+-0x5*-0x827,_0x5cfed0=_0x9504d8['length'];_0x255186<_0x5cfed0;_0x255186++)this['_dispatche'+'r']['handleErro'+'r'](_0x9504d8[_0x255186]);},'_getCookies':function(){var _0x281a2e=this['_dispatche'+'r']['cookies'],_0x1f6ddd=this['endpoint']['href'];return _0x281a2e?_0x95983c['map'](_0x281a2e['getCookies'+'Sync'](_0x1f6ddd),function(_0x1bca59){return _0x1bca59['cookieStri'+'ng']();})['join'](';\x20'):'';},'_storeCookies':function(_0x119647){var _0x56532f,_0x32a29c=this['_dispatche'+'r']['cookies'],_0x3c4ef6=this['endpoint']['href'];if(_0x119647&&_0x32a29c){for(var _0x159c50=-0x171d+-0x11ef*0x2+0x3afb,_0x21df31=(_0x119647=[]['concat'](_0x119647))['length'];_0x159c50<_0x21df31;_0x159c50++)_0x56532f=_0x6e032['parse'](_0x119647[_0x159c50]),_0x32a29c['setCookieS'+'ync'](_0x56532f,_0x3c4ef6);}},'_findProxy':function(){if('undefined'!=typeof process){var _0x54d802=this['endpoint']['protocol'];if(_0x54d802){var _0x41d0ef,_0x1f7405,_0x2e25e1=_0x54d802['replace'](/:$/,'')['toLowerCas'+'e']()+'_proxy',_0x4000c3=_0x2e25e1['toUpperCas'+'e'](),_0x234704=process['env'];return'http_proxy'===_0x2e25e1&&_0x234704['REQUEST_ME'+'THOD']?(0x22e6*-0x1+0x1381+0x36*0x49===(_0x41d0ef=Object['keys'](_0x234704)['filter'](function(_0x226881){return/^http_proxy$/i['test'](_0x226881);}))['length']?_0x41d0ef[0x1*0x1697+-0xd21*-0x2+-0x30d9]===_0x2e25e1&&void(0x37f*0x3+0x320+-0xd9d)===_0x234704[_0x4000c3]&&(_0x1f7405=_0x234704[_0x2e25e1]):_0x41d0ef['length']>0x1*0x1297+0x1*-0x557+0xd3f*-0x1&&(_0x1f7405=_0x234704[_0x2e25e1]),_0x1f7405=_0x1f7405||_0x234704['CGI_'+_0x4000c3]):(_0x1f7405=_0x234704[_0x2e25e1]||_0x234704[_0x4000c3])&&!_0x234704[_0x2e25e1]&&console['warn']('The\x20enviro'+'nment\x20vari'+'able\x20'+_0x4000c3+('\x20is\x20discou'+'raged.\x20Use'+'\x20')+_0x2e25e1+'.'),_0x1f7405;}}}}),{'get':function(_0x24b91c,_0x115bf7,_0x57b3f6,_0x3e0807,_0x61d620){var _0x2870f2=_0x24b91c['endpoint'];_0x95983c['asyncEach'](this['_transport'+'s'],function(_0x5b6158,_0x390181){var _0x2fa445=_0x5b6158[0xc0c+-0x19*-0x14d+-0x1*0x2c91],_0x51b203=_0x5b6158[-0xc3*-0x1a+0x1*0x242a+-0x37f7*0x1],_0x5b2fd3=_0x24b91c['endpointFo'+'r'](_0x2fa445);return _0x95983c['indexOf'](_0x57b3f6,_0x2fa445)>=0x2090+-0x1ea3+0x11*-0x1d?_0x390181():_0x95983c['indexOf'](_0x115bf7,_0x2fa445)<-0x3*0xe2+0x19b+0x10b?(_0x51b203['isUsable'](_0x24b91c,_0x5b2fd3,function(){}),_0x390181()):void _0x51b203['isUsable'](_0x24b91c,_0x5b2fd3,function(_0x47197e){if(!_0x47197e)return _0x390181();var _0x25f528=_0x51b203['hasOwnProp'+'erty']('create')?_0x51b203['create'](_0x24b91c,_0x5b2fd3):new _0x51b203(_0x24b91c,_0x5b2fd3);_0x3e0807['call'](_0x61d620,_0x25f528);});},function(){throw new Error('Could\x20not\x20'+'find\x20a\x20usa'+'ble\x20connec'+'tion\x20type\x20'+'for\x20'+_0x2870f2['href']);});},'register':function(_0x2174a1,_0x371154){this['_transport'+'s']['push']([_0x2174a1,_0x371154]),_0x371154['prototype']['connection'+'Type']=_0x2174a1;},'getConnectionTypes':function(){return _0x95983c['map'](this['_transport'+'s'],function(_0x51d007){return _0x51d007[0x2fe+0x11ab*0x1+-0x14a9];});},'disable':function(_0x4251f1){if('autodiscon'+'nect'===_0x4251f1){for(var _0x38925e=-0x24e9*-0x1+0x15*-0x175+-0x650;_0x38925e<this['_transport'+'s']['length'];_0x38925e++)this['_transport'+'s'][_0x38925e][-0x22a2+-0x2*0xf91+0x41c5]['_unloaded']=!(0x22*-0x101+-0x1f87+0x5*0xd22);}},'_transports':[]});_0x2dc892(_0x318fb0['prototype'],_0x31d63f),_0x2dc892(_0x318fb0['prototype'],_0x4b8b06),_0x4ca9c3['exports']=_0x318fb0;},0xb07:(_0x25d4e4,_0x2497d7,_0x1566d3)=>{'use strict';var _0x13134e=_0x1566d3(-0x9*-0x403+0x1145+-0x2554),_0x4586a0=_0x1566d3(-0x3*0x50b+-0x2*-0xe0d+-0x329*0x4),_0x1ac5ee=_0x1566d3(-0x1*-0x1ed3+0x16*0x59+-0x12d9),_0x41633d=_0x1566d3(0x17f5*0x1+0x1d*0x143+-0x34ce),_0x23590a=_0x1566d3(-0x1f07+-0x2178+0x2881*0x2),_0x5469fe=_0x1566d3(-0x49+-0xb23+0x1ab*0xf),_0x3de1d6=_0x1566d3(0x16d7+-0xa4c+-0x17*-0x8),_0x5d6304=_0x1566d3(0x115*0x1f+-0x7*0x565+-0x21a4*-0x1),_0x401532=_0x1566d3(0xe9b+-0x19*0x167+0x171e),_0x19aeb0=_0x1566d3(-0x242f*-0x1+-0x1*-0x48a+-0x10af*0x1),_0x2fb69a=_0x3de1d6(_0x13134e(_0x1566d3(-0x2f*-0xe5+0xbd*-0x14+-0x61*0x3),{'UNCONNECTED':0x1,'CONNECTING':0x2,'CONNECTED':0x3,'batching':!(-0x2*-0x57a+0x31*-0x3d+0xba),'isUsable':function(_0x52c0c3,_0x8533f4){this['callback'](function(){_0x52c0c3['call'](_0x8533f4,!(-0x477+-0x661*0x1+-0x8*-0x15b));}),this['errback'](function(){_0x52c0c3['call'](_0x8533f4,!(-0xa2f*-0x1+-0x5*-0x533+-0x1b*0x157));}),this['connect']();},'request':function(_0x3f153b){this['_pending']=this['_pending']||new _0x1ac5ee();for(var _0x5a4b2a=-0xf29+0x19a9*-0x1+0x28d2,_0x326722=_0x3f153b['length'];_0x5a4b2a<_0x326722;_0x5a4b2a++)this['_pending']['add'](_0x3f153b[_0x5a4b2a]);var _0x1562f4=this,_0x38d42d=new _0x4586a0(function(_0x2f6c5d,_0x182ff8){_0x1562f4['callback'](function(_0x4daf98){_0x4daf98&&-0x45a*-0x2+0x2*-0xf6b+0x761*0x3===_0x4daf98['readyState']&&(_0x4daf98['send'](_0x5d6304(_0x3f153b)),_0x2f6c5d(_0x4daf98));}),_0x1562f4['connect']();});return{'abort':function(){_0x38d42d['then'](function(_0x345d0b){_0x345d0b['close']();});}};},'connect':function(){if(!_0x2fb69a['_unloaded']&&(this['_state']=this['_state']||this['UNCONNECTE'+'D'],this['_state']===this['UNCONNECTE'+'D'])){this['_state']=this['CONNECTING'];var _0x3840de=this['_createSoc'+'ket']();if(!_0x3840de)return this['setDeferre'+'dStatus']('failed');var _0x47eb52=this;_0x3840de['onopen']=function(){_0x3840de['headers']&&_0x47eb52['_storeCook'+'ies'](_0x3840de['headers']['set-cookie']),_0x47eb52['_socket']=_0x3840de,_0x47eb52['_state']=_0x47eb52['CONNECTED'],_0x47eb52['_everConne'+'cted']=!(0x8e7+0x451+-0x6*0x234),_0x47eb52['setDeferre'+'dStatus']('succeeded',_0x3840de);};var _0x470f5f=!(0x609*0x6+0x2df+0xf4*-0x29);_0x3840de['onclose']=_0x3840de['onerror']=function(){if(!_0x470f5f){_0x470f5f=!(0x20dc+-0x1ea+-0x1ef2);var _0x3600e5=_0x47eb52['_state']===_0x47eb52['CONNECTED'];_0x3840de['onopen']=_0x3840de['onclose']=_0x3840de['onerror']=_0x3840de['onmessage']=null,delete _0x47eb52['_socket'],_0x47eb52['_state']=_0x47eb52['UNCONNECTE'+'D'];var _0x4d5d92=_0x47eb52['_pending']?_0x47eb52['_pending']['toArray']():[];delete _0x47eb52['_pending'],_0x3600e5||_0x47eb52['_everConne'+'cted']?(_0x47eb52['setDeferre'+'dStatus']('unknown'),_0x47eb52['_handleErr'+'or'](_0x4d5d92,_0x3600e5)):_0x47eb52['setDeferre'+'dStatus']('failed');}},_0x3840de['onmessage']=function(_0x5e3a7a){var _0x1aaab9;try{_0x1aaab9=JSON['parse'](_0x5e3a7a['data']);}catch(_0x2f74e5){}if(_0x1aaab9){for(var _0x555dcd=-0x1d46+-0x60f+-0x14f*-0x1b,_0x1c8263=(_0x1aaab9=[]['concat'](_0x1aaab9))['length'];_0x555dcd<_0x1c8263;_0x555dcd++)void(-0x2311+0x146+0x21cb)!==_0x1aaab9[_0x555dcd]['successful']&&_0x47eb52['_pending']['remove'](_0x1aaab9[_0x555dcd]);_0x47eb52['_receive'](_0x1aaab9);}};}},'close':function(){this['_socket']&&this['_socket']['close']();},'_createSocket':function(){var _0xc2189d=_0x2fb69a['getSocketU'+'rl'](this['endpoint']),_0x34b891=this['_dispatche'+'r']['headers'],_0x3849f8=this['_dispatche'+'r']['wsExtensio'+'ns'],_0x1e36ad=this['_getCookie'+'s'](),_0x94fa36=this['_dispatche'+'r']['tls'],_0x249e9f={'extensions':_0x3849f8,'headers':_0x34b891,'proxy':this['_proxy'],'tls':_0x94fa36};''!==_0x1e36ad&&(_0x249e9f['headers']['Cookie']=_0x1e36ad);try{return _0x401532['create'](_0xc2189d,[],_0x249e9f);}catch(_0x99abe2){}}}),{'PROTOCOLS':{'http:':'ws:','https:':'wss:'},'create':function(_0x3efc66,_0x21b4ef){var _0x4e984b=_0x3efc66['transports']['websocket']=_0x3efc66['transports']['websocket']||{};return _0x4e984b[_0x21b4ef['href']]=_0x4e984b[_0x21b4ef['href']]||new this(_0x3efc66,_0x21b4ef),_0x4e984b[_0x21b4ef['href']];},'getSocketUrl':function(_0x11d7cc){return(_0x11d7cc=_0x5469fe(_0x11d7cc))['protocol']=this['PROTOCOLS'][_0x11d7cc['protocol']],_0x41633d['stringify'](_0x11d7cc);},'isUsable':function(_0x2df511,_0x2e06ec,_0x393ab8,_0x10e1d0){this['create'](_0x2df511,_0x2e06ec)['isUsable'](_0x393ab8,_0x10e1d0);}});_0x3de1d6(_0x2fb69a['prototype'],_0x19aeb0),_0x23590a['Event']&&void(0x59f*0x1+-0x19ac+0x6af*0x3)!==global['onbeforeun'+'load']&&_0x23590a['Event']['on'](global,'beforeunlo'+'ad',function(){void(-0x17*0x1c+0x21b*-0x1+0xd*0x5b)===_0x2fb69a['_unloaded']&&(_0x2fb69a['_unloaded']=!(0x8fe*-0x4+0x3*0x27f+-0x1c7b*-0x1));}),_0x25d4e4['exports']=_0x2fb69a;},0x149:_0x555ab0=>{'use strict';_0x555ab0['exports']={'commonElement':function(_0x3f142b,_0xfe46ac){for(var _0x2de899=-0x2ad*-0x2+0x3e1+-0x93b*0x1,_0x5507de=_0x3f142b['length'];_0x2de899<_0x5507de;_0x2de899++)if(-(-0x1039+-0x2a5*-0x3+-0xc1*-0xb)!==this['indexOf'](_0xfe46ac,_0x3f142b[_0x2de899]))return _0x3f142b[_0x2de899];return null;},'indexOf':function(_0x3c02a5,_0x176a34){if(_0x3c02a5['indexOf'])return _0x3c02a5['indexOf'](_0x176a34);for(var _0x34ee06=-0x7e3+-0x20dc+-0x9*-0x487,_0x1e83ee=_0x3c02a5['length'];_0x34ee06<_0x1e83ee;_0x34ee06++)if(_0x3c02a5[_0x34ee06]===_0x176a34)return _0x34ee06;return-(0x55*-0x47+-0xcf3*0x3+0x3e6d);},'map':function(_0x5d482d,_0x5e5f89,_0xd1594c){if(_0x5d482d['map'])return _0x5d482d['map'](_0x5e5f89,_0xd1594c);var _0x2d53ed=[];if(_0x5d482d instanceof Array){for(var _0x48f177=-0x1*-0x1807+-0x228b+0xa84,_0x384c5c=_0x5d482d['length'];_0x48f177<_0x384c5c;_0x48f177++)_0x2d53ed['push'](_0x5e5f89['call'](_0xd1594c||null,_0x5d482d[_0x48f177],_0x48f177));}else{for(var _0x3150a2 in _0x5d482d)_0x5d482d['hasOwnProp'+'erty'](_0x3150a2)&&_0x2d53ed['push'](_0x5e5f89['call'](_0xd1594c||null,_0x3150a2,_0x5d482d[_0x3150a2]));}return _0x2d53ed;},'filter':function(_0x104cc0,_0x2f40c8,_0x55a8ef){if(_0x104cc0['filter'])return _0x104cc0['filter'](_0x2f40c8,_0x55a8ef);for(var _0x3c81e4=[],_0x581266=0x657+-0x2*-0x1ae+-0x9b3,_0x19fa7f=_0x104cc0['length'];_0x581266<_0x19fa7f;_0x581266++)_0x2f40c8['call'](_0x55a8ef||null,_0x104cc0[_0x581266],_0x581266)&&_0x3c81e4['push'](_0x104cc0[_0x581266]);return _0x3c81e4;},'asyncEach':function(_0x2e57ae,_0x5ccf9a,_0x409a16,_0x2b3571){var _0x355ffa=_0x2e57ae['length'],_0x27de92=-(-0x1*-0x230f+-0x23d7+-0x3*-0x43),_0x2d0f23=0x26d1+-0x1570+-0x1161,_0x5562fc=!(-0x150b+-0xabc*0x1+0x1fc8),_0x3373ae=function(){if(_0x2d0f23-=-0x2*0xacf+-0x433+0x19d2,(_0x27de92+=0x211*0x6+0x2*-0x525+-0x21b)===_0x355ffa)return _0x409a16&&_0x409a16['call'](_0x2b3571);_0x5ccf9a(_0x2e57ae[_0x27de92],_0x35f241);},_0x35f241=function(){_0x2d0f23+=0xdcb+-0x5*-0x397+-0x1fbd,(function(){if(!_0x5562fc){for(_0x5562fc=!(-0xecf+-0x25f8+0xe5*0x3b);_0x2d0f23>0xee7+0xc5d+-0x14*0x15d;)_0x3373ae();_0x5562fc=!(0x1be0+0x1549+0xd*-0x3c8);}}());};_0x35f241();}};},0xd43:_0x22d2ae=>{'use strict';var _0x3e292c=Array['prototype']['forEach'],_0x30b70c=Object['prototype']['hasOwnProp'+'erty'];_0x22d2ae['exports']=function(_0x784790){return _0x3e292c['call'](arguments,function(_0x4dbd45,_0x2830b9){if(-0x5*-0x2b0+-0x8d*0x16+-0x152!==_0x2830b9){for(var _0x287031 in _0x4dbd45)_0x30b70c['call'](_0x4dbd45,_0x287031)&&(_0x784790[_0x287031]=_0x4dbd45[_0x287031]);}}),_0x784790;};},0x1083:_0x39abe6=>{'use strict';_0x39abe6['exports']={};},0x100c:(_0x5e5102,_0xbe4858,_0x10107f)=>{'use strict';var _0xc2f0c5=_0x10107f(0x1*-0x92b+0x8c3*0x1+0xdab);_0x5e5102['exports']=function(_0x59bfdd,_0x17a281){'function'!=typeof _0x59bfdd&&(_0x17a281=_0x59bfdd,_0x59bfdd=Object);var _0x33bdd9=function(){return this['initialize']&&this['initialize']['apply'](this,arguments)||this;},_0x3fcbf5=function(){};return _0x3fcbf5['prototype']=_0x59bfdd['prototype'],_0x33bdd9['prototype']=new _0x3fcbf5(),_0xc2f0c5(_0x33bdd9['prototype'],_0x17a281),_0x33bdd9;};},0x845:_0x47d6ce=>{_0x47d6ce['exports']={'VERSION':'1.4.0','BAYEUX_VERSION':'1.0','ID_LENGTH':0xa0,'JSONP_CALLBACK':'jsonpcallb'+'ack','CONNECTION_TYPES':['long-polli'+'ng','cross-orig'+'in-long-po'+'lling','callback-p'+'olling','websocket','eventsourc'+'e','in-process'],'MANDATORY_CONNECTION_TYPES':['long-polli'+'ng','callback-p'+'olling','in-process']};},0x1ba2:(_0x25d45a,_0xefa62a,_0x22a3b3)=>{'use strict';_0x25d45a['exports']=_0x22a3b3(-0x50*-0x26+-0xf52+0xedd);},0xd99:_0x51a479=>{'use strict';var _0x262675=function(_0x446522){var _0x52eb04,_0x974276,_0x3daef6;if(_0x446522 instanceof Array){for(_0x52eb04=[],_0x974276=_0x446522['length'];_0x974276--;)_0x52eb04[_0x974276]=_0x262675(_0x446522[_0x974276]);return _0x52eb04;}if('object'==typeof _0x446522){for(_0x3daef6 in(_0x52eb04=null===_0x446522?null:{},_0x446522))_0x52eb04[_0x3daef6]=_0x262675(_0x446522[_0x3daef6]);return _0x52eb04;}return _0x446522;};_0x51a479['exports']=_0x262675;},0x289:_0x98f52=>{var _0x452f52='function'==typeof Array['isArray']?Array['isArray']:function(_0x4f7880){return'[object\x20Ar'+'ray]'===Object['prototype']['toString']['call'](_0x4f7880);};function _0x31a218(){}_0x98f52['exports']=_0x31a218,_0x31a218['prototype']['emit']=function(_0x312f6a){if('error'===_0x312f6a&&(!this['_events']||!this['_events']['error']||_0x452f52(this['_events']['error'])&&!this['_events']['error']['length']))throw arguments[-0x2*0xfef+-0x2ec+0x22cb]instanceof Error?arguments[-0xee6+-0x5cd+0x14b4]:new Error('Uncaught,\x20'+'unspecifie'+'d\x20\x27error\x27\x20'+'event.');if(!this['_events'])return!(-0x17*-0x49+0xf27+0x15b5*-0x1);var _0x1a695c=this['_events'][_0x312f6a];if(!_0x1a695c)return!(-0x13f3+-0x3*-0xef+0x1127*0x1);if('function'==typeof _0x1a695c){switch(arguments['length']){case 0x2027+0x6b2+-0x26d8:_0x1a695c['call'](this);break;case-0x2*0x265+0x7a9+-0x2dd*0x1:_0x1a695c['call'](this,arguments[-0x1e63+0x1*-0x2005+0x3e69]);break;case-0x5ed+0x246a+-0x1e7a:_0x1a695c['call'](this,arguments[-0x7bf*-0x1+-0xfb*-0x13+0x1a5f*-0x1],arguments[-0x15a0+-0x3*-0xa15+-0x89d]);break;default:var _0x40d4f5=Array['prototype']['slice']['call'](arguments,-0x2*-0x823+-0xbf1+-0x454);_0x1a695c['apply'](this,_0x40d4f5);}return!(0x1f53+-0xa91*-0x3+-0x3f06);}if(_0x452f52(_0x1a695c)){_0x40d4f5=Array['prototype']['slice']['call'](arguments,0x1*-0x1481+0x1*-0xe35+-0x22b7*-0x1);for(var _0x39e8fe=_0x1a695c['slice'](),_0x27fd25=0x6ee*0x4+-0x1*0x1041+-0xb77*0x1,_0x5b2000=_0x39e8fe['length'];_0x27fd25<_0x5b2000;_0x27fd25++)_0x39e8fe[_0x27fd25]['apply'](this,_0x40d4f5);return!(-0x7c2*0x2+0x2041*-0x1+0x2fc5);}return!(0x1034+-0x7a8+-0x88b);},_0x31a218['prototype']['addListene'+'r']=function(_0x386b36,_0x851b26){if('function'!=typeof _0x851b26)throw new Error('addListene'+'r\x20only\x20tak'+'es\x20instanc'+'es\x20of\x20Func'+'tion');return this['_events']||(this['_events']={}),this['emit']('newListene'+'r',_0x386b36,_0x851b26),this['_events'][_0x386b36]?_0x452f52(this['_events'][_0x386b36])?this['_events'][_0x386b36]['push'](_0x851b26):this['_events'][_0x386b36]=[this['_events'][_0x386b36],_0x851b26]:this['_events'][_0x386b36]=_0x851b26,this;},_0x31a218['prototype']['on']=_0x31a218['prototype']['addListene'+'r'],_0x31a218['prototype']['once']=function(_0x2746a4,_0x189479){var _0x3c62b5=this;return _0x3c62b5['on'](_0x2746a4,function _0xbaedf(){_0x3c62b5['removeList'+'ener'](_0x2746a4,_0xbaedf),_0x189479['apply'](this,arguments);}),this;},_0x31a218['prototype']['removeList'+'ener']=function(_0x41fe7a,_0x287520){if('function'!=typeof _0x287520)throw new Error('removeList'+'ener\x20only\x20'+'takes\x20inst'+'ances\x20of\x20F'+'unction');if(!this['_events']||!this['_events'][_0x41fe7a])return this;var _0x75d6cb=this['_events'][_0x41fe7a];if(_0x452f52(_0x75d6cb)){var _0x4b3b1b=function(_0x15fd5a,_0xefab52){if(_0x15fd5a['indexOf'])return _0x15fd5a['indexOf'](_0xefab52);for(var _0x52804a=0x2*-0xbe3+-0x1ff*-0x3+0x11c9;_0x52804a<_0x15fd5a['length'];_0x52804a++)if(_0xefab52===_0x15fd5a[_0x52804a])return _0x52804a;return-(0x6d*-0x59+-0x1*0x87f+0x2e65);}(_0x75d6cb,_0x287520);if(_0x4b3b1b<0x1bd3+-0x1622+-0x5b1)return this;_0x75d6cb['splice'](_0x4b3b1b,0x2c0+-0x1a29+0x3*0x7ce),0xd84+-0x1413+-0x68f*-0x1==_0x75d6cb['length']&&delete this['_events'][_0x41fe7a];}else this['_events'][_0x41fe7a]===_0x287520&&delete this['_events'][_0x41fe7a];return this;},_0x31a218['prototype']['removeAllL'+'isteners']=function(_0x21a03b){return 0x2*-0xb79+-0x1ca1+0x1*0x3393===arguments['length']?(this['_events']={},this):(_0x21a03b&&this['_events']&&this['_events'][_0x21a03b]&&(this['_events'][_0x21a03b]=null),this);},_0x31a218['prototype']['listeners']=function(_0xe6b278){return this['_events']||(this['_events']={}),this['_events'][_0xe6b278]||(this['_events'][_0xe6b278]=[]),_0x452f52(this['_events'][_0xe6b278])||(this['_events'][_0xe6b278]=[this['_events'][_0xe6b278]]),this['_events'][_0xe6b278];};},0x1d75:(_0x315bdc,_0x9f9daa,_0x421450)=>{'use strict';var _0x1b1b22=_0x421450(-0x1fe+0xd7b+0x1*-0xa34);_0x315bdc['exports']=function(_0x19c63f){var _0x5ad34f=_0x1b1b22['filter']([]['concat'](_0x19c63f),function(_0x41c39d){return'/meta/conn'+'ect'===_0x41c39d['channel'];});return _0x5ad34f[-0x3b2+0x1*-0x1f61+0x2313]&&_0x5ad34f[-0x159f+0x70a*-0x4+0x31c7]['clientId'];};},0x10d7:(_0x57946,_0x4ccc0a,_0x2dc6f1)=>{'use strict';var _0x5d6cd2=_0x2dc6f1(0x24aa+0x2*0x1143+-0x3724),_0x4c4523=_0x2dc6f1(-0x74*-0x38+-0x2210+0x12b5);_0x57946['exports']=_0x5d6cd2({'initialize':function(){this['_used']={};},'exists':function(_0x102bd9){return this['_used']['hasOwnProp'+'erty'](_0x102bd9);},'generate':function(){for(var _0x4af3b7=_0x4c4523();this['_used']['hasOwnProp'+'erty'](_0x4af3b7);)_0x4af3b7=_0x4c4523();return this['_used'][_0x4af3b7]=_0x4af3b7;},'release':function(_0xdabadc){delete this['_used'][_0xdabadc];}});},0x55:(_0x168ec9,_0xafdedb,_0x2a2efd)=>{'use strict';var _0x36aabc=_0x2a2efd(0xca2+0xea3+0x176e*-0x1),_0x1a40e1=function(_0xce4121){this['_state']=-(0x2*0x3cb+-0x3f*0xd+-0x33*0x16),this['_value']=null,this['_defer']=[],_0x13247e(this,_0xce4121);};_0x1a40e1['prototype']['then']=function(_0x79124,_0x510b01){var _0xc211fc=new _0x1a40e1(),_0x23db6f={'promise':_0xc211fc,'onFulfilled':_0x79124,'onRejected':_0x510b01};return-(0x1513+0xb33+-0x2045)===this['_state']?this['_defer']['push'](_0x23db6f):_0x4d30fb(this,_0x23db6f),_0xc211fc;},_0x1a40e1['prototype']['catch']=function(_0x2f4222){return this['then'](null,_0x2f4222);};var _0x13247e=function(_0x1ab42b,_0x5ddb94){if('function'==typeof _0x5ddb94){var _0x2bcb53=0x8f8*-0x2+0x215b+0x1*-0xf6b,_0x406495=function(_0x3b5487){-0x75f+0xb9*0x1+0x6a6==_0x2bcb53++&&_0x5c7ba4(_0x1ab42b,_0x3b5487);};try{_0x5ddb94(function(_0x6b4679){0x191+0x156b*0x1+-0x5bf*0x4==_0x2bcb53++&&_0x3c5e9f(_0x1ab42b,_0x6b4679);},_0x406495);}catch(_0x3975cf){_0x406495(_0x3975cf);}}},_0x4d30fb=function(_0x11ae16,_0x2716d9){var _0x65fd6c=_0x11ae16['_state'],_0x66eee1=_0x11ae16['_value'],_0x5d1657=_0x2716d9['promise'],_0x56a855=[_0x2716d9['onFulfille'+'d'],_0x2716d9['onRejected']][_0x65fd6c];if('function'!=typeof _0x56a855)return(-0x5*0x38b+-0x1*0x187c+0x2a33,[_0x3c5e9f,_0x5c7ba4][_0x65fd6c])(_0x5d1657,_0x66eee1);_0x36aabc(function(){try{_0x3c5e9f(_0x5d1657,_0x56a855(_0x66eee1));}catch(_0x3ec300){_0x5c7ba4(_0x5d1657,_0x3ec300);}});},_0x3c5e9f=function(_0x409792,_0x149efb){if(_0x409792===_0x149efb)return _0x5c7ba4(_0x409792,new TypeError('Recursive\x20'+'promise\x20ch'+'ain\x20detect'+'ed'));var _0x3e8d5b;try{_0x3e8d5b=_0x294fbb(_0x149efb);}catch(_0x73e659){return _0x5c7ba4(_0x409792,_0x73e659);}if(!_0x3e8d5b)return _0x59b0b3(_0x409792,_0x149efb);_0x13247e(_0x409792,function(_0x4224aa,_0x59719f){_0x3e8d5b['call'](_0x149efb,_0x4224aa,_0x59719f);});},_0x294fbb=function(_0x85dbfc){var _0x41e064=typeof _0x85dbfc,_0x3f02c6=('object'===_0x41e064||'function'===_0x41e064)&&_0x85dbfc&&_0x85dbfc['then'];return'function'==typeof _0x3f02c6?_0x3f02c6:null;},_0x59b0b3=function(_0x1dcc7f,_0x52073d){_0x1b0e1e(_0x1dcc7f,0x160e*0x1+-0xe3+-0x152b,_0x52073d);},_0x5c7ba4=function(_0x2b37b1,_0xb44257){_0x1b0e1e(_0x2b37b1,-0x47+0x12*0x15c+-0x1830,_0xb44257);},_0x1b0e1e=function(_0x3d61f5,_0x3b6fde,_0x56ed9f){var _0x4de236=_0x3d61f5['_defer'],_0x5bc122=-0x4cf*0x4+0x19a3*-0x1+-0x15*-0x223;if(_0x3d61f5['_state']=_0x3b6fde,_0x3d61f5['_value']=_0x56ed9f,_0x3d61f5['_defer']=null,0x53a+0x8f5*0x1+-0xe2f!==_0x4de236['length']){for(;_0x5bc122<_0x4de236['length'];)_0x4d30fb(_0x3d61f5,_0x4de236[_0x5bc122++]);}};_0x1a40e1['resolve']=function(_0x4c4613){try{if(_0x294fbb(_0x4c4613))return _0x4c4613;}catch(_0x5d4a4f){return _0x1a40e1['reject'](_0x5d4a4f);}return new _0x1a40e1(function(_0x46c7d7,_0x57532f){_0x46c7d7(_0x4c4613);});},_0x1a40e1['reject']=function(_0x238500){return new _0x1a40e1(function(_0x17cb70,_0x59fdab){_0x59fdab(_0x238500);});},_0x1a40e1['all']=function(_0x3a9e91){return new _0x1a40e1(function(_0x491a3c,_0x1e8321){var _0x4394cb,_0x52c766=[],_0x1bce0a=_0x3a9e91['length'];if(0x224*-0x10+0x1669+0xbd7*0x1===_0x1bce0a)return _0x491a3c(_0x52c766);var _0x43b6db=function(_0x22d908,_0x45e347){_0x1a40e1['resolve'](_0x22d908)['then'](function(_0x2c9b8a){_0x52c766[_0x45e347]=_0x2c9b8a,0x1*-0x1f92+0x71*0x1a+0x1418==--_0x1bce0a&&_0x491a3c(_0x52c766);},_0x1e8321);};for(_0x4394cb=0x228f+0x165e+-0x3b*0xf7;_0x4394cb<_0x1bce0a;_0x4394cb++)_0x43b6db(_0x3a9e91[_0x4394cb],_0x4394cb);});},_0x1a40e1['race']=function(_0x58d397){return new _0x1a40e1(function(_0x25f907,_0x589964){for(var _0x56519c=0x13*-0x1c6+0x14a2+0xd10,_0x53abbc=_0x58d397['length'];_0x56519c<_0x53abbc;_0x56519c++)_0x1a40e1['resolve'](_0x58d397[_0x56519c])['then'](_0x25f907,_0x589964);});},_0x1a40e1['deferred']=function(){var _0x272aa6={};return _0x272aa6['promise']=new _0x1a40e1(function(_0x2cdede,_0x56f133){_0x272aa6['resolve']=_0x2cdede,_0x272aa6['reject']=_0x56f133;}),_0x272aa6;},_0x168ec9['exports']=_0x1a40e1;},0xa05:(_0x216d2c,_0x33fd7b,_0x9a437)=>{'use strict';var _0x2a067c=_0x9a437(-0x2*0xc4d+-0x160+0x231d),_0x553a15=_0x9a437(-0x101f*0x2+-0x1f85+0x4808);_0x216d2c['exports']=function(_0x3a1bd6){_0x3a1bd6=_0x3a1bd6||_0x553a15['ID_LENGTH'];for(var _0x3f5a4e=Math['ceil'](_0x3a1bd6*Math['log'](0x1*0x1dda+0x1f09+-0x3ce1)/Math['log'](-0x115*0x20+0xd1c+0x7*0x318)),_0x4e3e4b=_0x2a067c(_0x3a1bd6,0x253c+0x3*0x801+-0x3d1b);_0x4e3e4b['length']<_0x3f5a4e;)_0x4e3e4b='0'+_0x4e3e4b;return _0x4e3e4b;};},0x13a0:(_0x46da53,_0xfa0911,_0x4a58ea)=>{'use strict';var _0x175891=_0x4a58ea(0x422*0x9+0x635*0x4+-0x6b*0x6e);_0x46da53['exports']=_0x175891({'initialize':function(){this['_index']={};},'add':function(_0x47cc55){var _0x5272dd=void(-0x235b+-0x2138+0x4493)!==_0x47cc55['id']?_0x47cc55['id']:_0x47cc55;return!this['_index']['hasOwnProp'+'erty'](_0x5272dd)&&(this['_index'][_0x5272dd]=_0x47cc55,!(0x1c7+0x12c+-0x2f3));},'forEach':function(_0x3ae1ce,_0x38918f){for(var _0x25b978 in this['_index'])this['_index']['hasOwnProp'+'erty'](_0x25b978)&&_0x3ae1ce['call'](_0x38918f,this['_index'][_0x25b978]);},'isEmpty':function(){for(var _0x4dbc10 in this['_index'])if(this['_index']['hasOwnProp'+'erty'](_0x4dbc10))return!(-0x4a9+-0x151*0x17+0x22f1);return!(0x2056+0x692*-0x5+0x84);},'member':function(_0x44321f){for(var _0x475b5e in this['_index'])if(this['_index'][_0x475b5e]===_0x44321f)return!(0x21a6+-0x1676+-0xb30);return!(0x1218+-0xe9*-0x25+-0x4*0xcf1);},'remove':function(_0x6cbce4){var _0x35c256=void(0xb*-0x1a5+-0x2*0x905+0x2421)!==_0x6cbce4['id']?_0x6cbce4['id']:_0x6cbce4,_0xabcaef=this['_index'][_0x35c256];return delete this['_index'][_0x35c256],_0xabcaef;},'toArray':function(){var _0x3747ac=[];return this['forEach'](function(_0x577dba){_0x3747ac['push'](_0x577dba);}),_0x3747ac;}});},0x1d6c:_0x1d7be7=>{'use strict';_0x1d7be7['exports']=function(_0x1d31b4){return JSON['stringify'](_0x1d31b4,function(_0x51e05e,_0xd95540){return this[_0x51e05e]instanceof Array?this[_0x51e05e]:_0xd95540;});};},0x7be:_0x298265=>{'use strict';_0x298265['exports']={'isURI':function(_0x23c358){return _0x23c358&&_0x23c358['protocol']&&_0x23c358['host']&&_0x23c358['path'];},'isSameOrigin':function(_0xe8a8a2){return _0xe8a8a2['protocol']===location['protocol']&&_0xe8a8a2['hostname']===location['hostname']&&_0xe8a8a2['port']===location['port'];},'parse':function(_0x5945f5){if('string'!=typeof _0x5945f5)return _0x5945f5;var _0xccc8c2,_0x1d3721,_0x3c04c8,_0x17cc44,_0x902d4d,_0x22e64f,_0x1605e9={},_0x1088b7=function(_0x50e9e0,_0x176ace){_0x5945f5=_0x5945f5['replace'](_0x176ace,function(_0x10e8a6){return _0x1605e9[_0x50e9e0]=_0x10e8a6,'';}),_0x1605e9[_0x50e9e0]=_0x1605e9[_0x50e9e0]||'';};for(_0x1088b7('protocol',/^[a-z]+\:/i),_0x1088b7('host',/^\/\/[^\/\?#]+/),/^\//['test'](_0x5945f5)||_0x1605e9['host']||(_0x5945f5=location['pathname']['replace'](/[^\/]*$/,'')+_0x5945f5),_0x1088b7('pathname',/^[^\?#]*/),_0x1088b7('search',/^\?[^#]*/),_0x1088b7('hash',/^#.*/),_0x1605e9['protocol']=_0x1605e9['protocol']||location['protocol'],_0x1605e9['host']?(_0x1605e9['host']=_0x1605e9['host']['substr'](-0x2fd+-0xaf1+0x1be*0x8),/@/['test'](_0x1605e9['host'])&&(_0x1605e9['auth']=_0x1605e9['host']['split']('@')[0x1*-0x1f45+0xc2*-0x16+0x3*0xffb],_0x1605e9['host']=_0x1605e9['host']['split']('@')[0x1ffa+-0x8df+-0x171a*0x1]),_0xccc8c2=_0x1605e9['host']['match'](/^\[([^\]]+)\]|^[^:]+/),_0x1605e9['hostname']=_0xccc8c2[0x54e*0x6+0x3*0x22f+0x266*-0x10]||_0xccc8c2[-0x55*0x25+0xf76+-0x32d],_0x1605e9['port']=(_0x1605e9['host']['match'](/:(\d+)$/)||[])[-0xe0*0x27+-0x1bd0*0x1+0x3df1]||''):(_0x1605e9['host']=location['host'],_0x1605e9['hostname']=location['hostname'],_0x1605e9['port']=location['port']),_0x1605e9['pathname']=_0x1605e9['pathname']||'/',_0x1605e9['path']=_0x1605e9['pathname']+_0x1605e9['search'],_0x22e64f={},_0x17cc44=-0x16ac+-0x11b3+0x285f,_0x902d4d=(_0x3c04c8=(_0x1d3721=_0x1605e9['search']['replace'](/^\?/,''))?_0x1d3721['split']('&'):[])['length'];_0x17cc44<_0x902d4d;_0x17cc44++)_0xccc8c2=_0x3c04c8[_0x17cc44]['split']('='),_0x22e64f[decodeURIComponent(_0xccc8c2[0x7ac+-0x1c4f+-0x24b*-0x9]||'')]=decodeURIComponent(_0xccc8c2[-0x17*0x2b+0x2080+-0xa*0x2dd]||'');return _0x1605e9['query']=_0x22e64f,_0x1605e9['href']=this['stringify'](_0x1605e9),_0x1605e9;},'stringify':function(_0xca59a0){var _0x1bd255=_0xca59a0['auth']?_0xca59a0['auth']+'@':'';return _0xca59a0['protocol']+'//'+_0x1bd255+_0xca59a0['host']+(_0xca59a0['pathname']+this['queryStrin'+'g'](_0xca59a0['query'])+(_0xca59a0['hash']||''));},'queryString':function(_0x5161e3){var _0x4241bf=[];for(var _0xc885d2 in _0x5161e3)_0x5161e3['hasOwnProp'+'erty'](_0xc885d2)&&_0x4241bf['push'](encodeURIComponent(_0xc885d2)+'='+encodeURIComponent(_0x5161e3[_0xc885d2]));return-0xac0+0x2*-0x163+0xd86===_0x4241bf['length']?'':'?'+_0x4241bf['join']('&');}};},0xf65:(_0x53eb7c,_0x45e10a,_0x395bdd)=>{'use strict';var _0xae810e=_0x395bdd(0x16cd+-0x2*0x1309+-0x1*-0x108e);_0x53eb7c['exports']=function(_0x401379,_0x1998db){for(var _0x5b373a in _0x401379)if(_0xae810e['indexOf'](_0x1998db,_0x5b373a)<0x1356+0xf2e+-0x2284)throw new Error('Unrecogniz'+'ed\x20option:'+'\x20'+_0x5b373a);};},0x2aa:(_0x53857a,_0x27b0f0,_0x310709)=>{'use strict';var _0xa6807d=_0x310709(0x16c8+0x1d1*-0x7+0x372*-0x2)['Client'];_0x53857a['exports']={'create':function(_0x134646,_0x2c864f,_0x135f4a){return new _0xa6807d(_0x134646,_0x2c864f,_0x135f4a);}};},0x1711:(_0x45d83d,_0x93960c,_0x124a6f)=>{var _0x214f66=_0x124a6f(-0x43*0x4d+0xb7b+0x12e1);function _0x1c1c4f(_0x4f654b){_0x214f66['ok'](_0x4f654b===_0x1c1c4f['REQUEST']||_0x4f654b===_0x1c1c4f['RESPONSE']||void(-0x2*0xb15+0x1792+0x6*-0x3c)===_0x4f654b),void(0x3*-0x3f6+0x2549+-0x1967)===_0x4f654b||this['initialize'](_0x4f654b);}_0x93960c['e']=_0x1c1c4f,_0x1c1c4f['prototype']['initialize']=function(_0x2e13a9,_0x2233f0){_0x214f66['ok'](_0x2e13a9===_0x1c1c4f['REQUEST']||_0x2e13a9===_0x1c1c4f['RESPONSE']),this['type']=_0x2e13a9,this['state']=_0x2e13a9+'_LINE',this['info']={'headers':[],'upgrade':!(-0x8d1+0x74*0x36+-0xfa6)},this['trailers']=[],this['line']='',this['isChunked']=!(-0x1359+-0xdd9+-0x2133*-0x1),this['connection']='',this['headerSize']=0x135b+-0x215f+0xe04,this['body_bytes']=null,this['isUserCall']=!(-0x8d*0xf+0xf*-0xd4+0x10*0x14b),this['hadError']=!(-0x10*0x124+-0xd*0x81+0x18ce);},_0x1c1c4f['encoding']='ascii',_0x1c1c4f['maxHeaderS'+'ize']=-0x71*-0x593+-0x2761+0x7d*-0x22a,_0x1c1c4f['REQUEST']='REQUEST',_0x1c1c4f['RESPONSE']='RESPONSE';var _0x36c251=_0x1c1c4f['kOnHeaders']=0x1c0c+-0x1ddb+0x1d0,_0x5325e6=_0x1c1c4f['kOnHeaders'+'Complete']=-0x61*-0x32+0x10ef+0x1*-0x23df,_0x2588c7=_0x1c1c4f['kOnBody']=-0x1*0x198e+-0x24b3+0xc74*0x5,_0x2cd6a8=_0x1c1c4f['kOnMessage'+'Complete']=0x3*-0x13+0x2dd*-0x1+0x31a;_0x1c1c4f['prototype'][_0x36c251]=_0x1c1c4f['prototype'][_0x5325e6]=_0x1c1c4f['prototype'][_0x2588c7]=_0x1c1c4f['prototype'][_0x2cd6a8]=function(){};var _0x47a96a=!(0x2*0xcb+-0x9d6+0x60*0x16);Object['defineProp'+'erty'](_0x1c1c4f,'kOnExecute',{'get':function(){return _0x47a96a=!(0xb*-0x115+0x5b+0xb8d),-0x2217+-0x1fbb+0x4235;}});var _0x237a8a=_0x1c1c4f['methods']=['DELETE','GET','HEAD','POST','PUT','CONNECT','OPTIONS','TRACE','COPY','LOCK','MKCOL','MOVE','PROPFIND','PROPPATCH','SEARCH','UNLOCK','BIND','REBIND','UNBIND','ACL','REPORT','MKACTIVITY','CHECKOUT','MERGE','M-SEARCH','NOTIFY','SUBSCRIBE','UNSUBSCRIB'+'E','PATCH','PURGE','MKCALENDAR','LINK','UNLINK'],_0x40da91=_0x237a8a['indexOf']('CONNECT');_0x1c1c4f['prototype']['reinitiali'+'ze']=_0x1c1c4f,_0x1c1c4f['prototype']['close']=_0x1c1c4f['prototype']['pause']=_0x1c1c4f['prototype']['resume']=_0x1c1c4f['prototype']['free']=function(){},_0x1c1c4f['prototype']['_compatMod'+'e0_11']=!(0x263b*-0x1+0xd*0x16+-0x2*-0x128f),_0x1c1c4f['prototype']['getAsyncId']=function(){return-0x1e5f+-0xe35+0x2c94;};var _0x393888={'REQUEST_LINE':!(0x1ae*0x11+-0x4*0x581+-0x68a),'RESPONSE_LINE':!(0x221b*0x1+0x2124+-0x433f),'HEADER':!(0x20f1+-0xb79+-0x1578)};_0x1c1c4f['prototype']['execute']=function(_0x645f5e,_0x3b032e,_0x2723b4){if(!(this instanceof _0x1c1c4f))throw new TypeError('not\x20a\x20HTTP'+'Parser');_0x3b032e=_0x3b032e||-0x13f9+0x1f3+-0x602*-0x3,_0x2723b4='number'==typeof _0x2723b4?_0x2723b4:_0x645f5e['length'],this['chunk']=_0x645f5e,this['offset']=_0x3b032e;var _0x10b6ce=this['end']=_0x3b032e+_0x2723b4;try{for(;this['offset']<_0x10b6ce&&!this[this['state']](););}catch(_0x34d03c){if(this['isUserCall'])throw _0x34d03c;return this['hadError']=!(-0x62*0x4f+0x1f17*-0x1+0x3d55*0x1),_0x34d03c;}return this['chunk']=null,_0x2723b4=this['offset']-_0x3b032e,_0x393888[this['state']]&&(this['headerSize']+=_0x2723b4,this['headerSize']>_0x1c1c4f['maxHeaderS'+'ize'])?new Error('max\x20header'+'\x20size\x20exce'+'eded'):_0x2723b4;};var _0x36358={'REQUEST_LINE':!(-0xabe+-0x19*-0x95+-0x3cf),'RESPONSE_LINE':!(-0x1647+-0x13*0xb5+0x23b6),'BODY_RAW':!(-0x3b8*-0x2+-0x227e+0x1b0e)};_0x1c1c4f['prototype']['finish']=function(){if(!this['hadError'])return _0x36358[this['state']]?void('BODY_RAW'===this['state']&&this['userCall']()(this[_0x2cd6a8]())):new Error('invalid\x20st'+'ate\x20for\x20EO'+'F');},_0x1c1c4f['prototype']['consume']=_0x1c1c4f['prototype']['unconsume']=_0x1c1c4f['prototype']['getCurrent'+'Buffer']=function(){},_0x1c1c4f['prototype']['userCall']=function(){this['isUserCall']=!(0x141c+0x299+-0x16b5);var _0x29b84c=this;return function(_0x322772){return _0x29b84c['isUserCall']=!(-0x2*-0x4d2+-0x4eb*0x1+-0x4b8),_0x322772;};},_0x1c1c4f['prototype']['nextReques'+'t']=function(){this['userCall']()(this[_0x2cd6a8]()),this['reinitiali'+'ze'](this['type']);},_0x1c1c4f['prototype']['consumeLin'+'e']=function(){for(var _0x591609=this['end'],_0x22caa7=this['chunk'],_0x490711=this['offset'];_0x490711<_0x591609;_0x490711++)if(-0xda3+-0xe2+0x1*0xe8f===_0x22caa7[_0x490711]){var _0x5f1d7e=this['line']+_0x22caa7['toString'](_0x1c1c4f['encoding'],this['offset'],_0x490711);return'\x0d'===_0x5f1d7e['charAt'](_0x5f1d7e['length']-(0x81f*0x1+0x1987+0x129*-0x1d))&&(_0x5f1d7e=_0x5f1d7e['substr'](-0x16de*0x1+-0x532+-0x2*-0xe08,_0x5f1d7e['length']-(-0x1459+-0x15b3+-0x5*-0x869))),this['line']='',this['offset']=_0x490711+(0x1c03*-0x1+-0x667*-0x1+0x1*0x159d),_0x5f1d7e;}this['line']+=_0x22caa7['toString'](_0x1c1c4f['encoding'],this['offset'],this['end']),this['offset']=this['end'];};var _0x56dd2d=/^([^: \t]+):[ \t]*((?:.*[^ \t])|)/,_0x380c84=/^[ \t]+(.*[^ \t])/;_0x1c1c4f['prototype']['parseHeade'+'r']=function(_0x50d35a,_0xa5d812){if(-(0x3d*0x1d+0x16*-0xd7+0xb92)!==_0x50d35a['indexOf']('\x0d'))throw _0x37457e('HPE_LF_EXP'+'ECTED');var _0x5e78f8=_0x56dd2d['exec'](_0x50d35a),_0x4b3690=_0x5e78f8&&_0x5e78f8[-0xc1*-0x25+-0x26c7+0xae3];if(_0x4b3690)_0xa5d812['push'](_0x4b3690),_0xa5d812['push'](_0x5e78f8[-0x1713+0x26b+0x5*0x422]);else{var _0x4b6e38=_0x380c84['exec'](_0x50d35a);_0x4b6e38&&_0xa5d812['length']&&(_0xa5d812[_0xa5d812['length']-(0x1205+0x1feb*0x1+-0x31ef)]&&(_0xa5d812[_0xa5d812['length']-(-0xe5f+-0x449*-0x1+0xa17)]+='\x20'),_0xa5d812[_0xa5d812['length']-(-0x1b33+0x845*-0x1+-0x9*-0x3f1)]+=_0x4b6e38[-0xffa+-0x99*-0x41+-0x16de]);}};var _0x51ad08=/^([A-Z-]+) ([^ ]+) HTTP\/(\d)\.(\d)$/;_0x1c1c4f['prototype']['REQUEST_LI'+'NE']=function(){var _0x3bd88c=this['consumeLin'+'e']();if(_0x3bd88c){var _0x18b967=_0x51ad08['exec'](_0x3bd88c);if(null===_0x18b967)throw _0x37457e('HPE_INVALI'+'D_CONSTANT');if(this['info']['method']=this['_compatMod'+'e0_11']?_0x18b967[0xe35+0xaa5+-0x18d9]:_0x237a8a['indexOf'](_0x18b967[-0x19*0x38+-0x321*-0x3+0x1f5*-0x2]),-(0xb89*0x1+0x209*-0x7+0x2b7)===this['info']['method'])throw new Error('invalid\x20re'+'quest\x20meth'+'od');this['info']['url']=_0x18b967[0x1*-0x1867+0x15eb+0x13f*0x2],this['info']['versionMaj'+'or']=+_0x18b967[-0xb03+0x5e+0xaa8],this['info']['versionMin'+'or']=+_0x18b967[-0xd89+0x15c*0x1a+-0x15cb],this['body_bytes']=0x12a3*0x1+-0x1d2d+0xa8a,this['state']='HEADER';}};var _0x48d56e=/^HTTP\/(\d)\.(\d) (\d{3}) ?(.*)$/;function _0x37457e(_0x1286ee){var _0x3cdd14=new Error('Parse\x20Erro'+'r');return _0x3cdd14['code']=_0x1286ee,_0x3cdd14;}_0x1c1c4f['prototype']['RESPONSE_L'+'INE']=function(){var _0x243bb2=this['consumeLin'+'e']();if(_0x243bb2){var _0x72f101=_0x48d56e['exec'](_0x243bb2);if(null===_0x72f101)throw _0x37457e('HPE_INVALI'+'D_CONSTANT');this['info']['versionMaj'+'or']=+_0x72f101[0x129e+0x125*0x3+-0x160c],this['info']['versionMin'+'or']=+_0x72f101[-0x21*0x5f+0x10d7+-0x496];var _0x527df8=this['info']['statusCode']=+_0x72f101[-0x165d+-0x131e+0x297e];this['info']['statusMess'+'age']=_0x72f101[-0x3*-0xa2a+0x1*-0x20e0+0x266*0x1],-0x20cc+0x7*-0x32b+0x36fa!=(_0x527df8/(-0x3*-0x8e1+-0x921+-0x111e)|-0x2492+-0x1*-0x1d27+0x76b)&&-0x384+0x167b*0x1+-0x122b!==_0x527df8&&0x2*-0x1153+0x6ec+-0x1*-0x1cea!==_0x527df8||(this['body_bytes']=-0xbd+0x134f+-0x1292),this['state']='HEADER';}},_0x1c1c4f['prototype']['shouldKeep'+'Alive']=function(){if(this['info']['versionMaj'+'or']>0x1*0xdca+-0xe*0xdf+-0x198&&this['info']['versionMin'+'or']>-0x662+-0x1bc9*0x1+0x222b){if(-(-0x15d1+0x18ee+0x2*-0x18e)!==this['connection']['indexOf']('close'))return!(0x1d43+-0x1*-0x111d+-0xf75*0x3);}else{if(-(-0x16d+0x2*0xfc4+-0x1e1a*0x1)===this['connection']['indexOf']('keep-alive'))return!(0x3*0xd3+-0xe1+0xb*-0x25);}return!(null===this['body_bytes']&&!this['isChunked']);},_0x1c1c4f['prototype']['HEADER']=function(){var _0x217e06=this['consumeLin'+'e']();if(void(0x98c*0x3+0x1e70+0x3b14*-0x1)!==_0x217e06){var _0x53dd40=this['info'];if(_0x217e06)this['parseHeade'+'r'](_0x217e06,_0x53dd40['headers']);else{for(var _0x3714d5,_0x1b1168,_0x44d66d=_0x53dd40['headers'],_0x5cd139=!(-0x7*0x139+0x1112+0x9*-0xf2),_0x198fbe=!(0x24b1+0x1bfc+-0x40ac),_0x5997c9=-0x1261+0x220c+-0xfab;_0x5997c9<_0x44d66d['length'];_0x5997c9+=0xe71*0x1+-0x2413+-0x569*-0x4)switch(_0x44d66d[_0x5997c9]['toLowerCas'+'e']()){case'transfer-e'+'ncoding':this['isChunked']='chunked'===_0x44d66d[_0x5997c9+(-0x17ad+-0x7aa+0x1f58)]['toLowerCas'+'e']();break;case'content-le'+'ngth':if(_0x3714d5=+_0x44d66d[_0x5997c9+(0x262*0x1+-0x22*-0x11c+-0x2819)],_0x5cd139){if(_0x3714d5!==this['body_bytes'])throw _0x37457e('HPE_UNEXPE'+'CTED_CONTE'+'NT_LENGTH');}else _0x5cd139=!(0x1*-0xaef+-0x7*-0x10f+0x386),this['body_bytes']=_0x3714d5;break;case'connection':this['connection']+=_0x44d66d[_0x5997c9+(-0xaf0+-0x118b+0x1c7c)]['toLowerCas'+'e']();break;case'upgrade':_0x198fbe=!(0xbf8*-0x2+0x24a0+-0xcb*0x10);}if(this['isChunked']&&_0x5cd139&&(_0x5cd139=!(-0x263+-0x42e+0x692),this['body_bytes']=null),_0x198fbe&&-(-0xed2*0x1+0x2*-0xaf7+0x24c1)!=this['connection']['indexOf']('upgrade')?_0x53dd40['upgrade']=this['type']===_0x1c1c4f['REQUEST']||-0x2004+0x1*-0x1aa+-0xb*-0x319===_0x53dd40['statusCode']:_0x53dd40['upgrade']=_0x53dd40['method']===_0x40da91,this['isChunked']&&_0x53dd40['upgrade']&&(this['isChunked']=!(-0x1*0xb2d+-0x35e+0x31*0x4c)),_0x53dd40['shouldKeep'+'Alive']=this['shouldKeep'+'Alive'](),-0x1a12+0x1e26+-0x412===(_0x1b1168=_0x47a96a?this['userCall']()(this[_0x5325e6](_0x53dd40)):this['userCall']()(this[_0x5325e6](_0x53dd40['versionMaj'+'or'],_0x53dd40['versionMin'+'or'],_0x53dd40['headers'],_0x53dd40['method'],_0x53dd40['url'],_0x53dd40['statusCode'],_0x53dd40['statusMess'+'age'],_0x53dd40['upgrade'],_0x53dd40['shouldKeep'+'Alive']))))return this['nextReques'+'t'](),!(-0x125*0xb+0x1dca+-0x1*0x1133);if(this['isChunked']&&!_0x1b1168)this['state']='BODY_CHUNK'+'HEAD';else{if(_0x1b1168||0x171b+-0x952*0x4+0xe2d===this['body_bytes'])return this['nextReques'+'t'](),_0x53dd40['upgrade'];null===this['body_bytes']?this['state']='BODY_RAW':this['state']='BODY_SIZED';}}}},_0x1c1c4f['prototype']['BODY_CHUNK'+'HEAD']=function(){var _0x582cfd=this['consumeLin'+'e']();void(-0x1*0x225b+0x11*0x15d+0xb2e)!==_0x582cfd&&(this['body_bytes']=parseInt(_0x582cfd,-0x23ea+0x1450+0x2*0x7d5),this['body_bytes']?this['state']='BODY_CHUNK':this['state']='BODY_CHUNK'+'TRAILERS');},_0x1c1c4f['prototype']['BODY_CHUNK']=function(){var _0x1c4a80=Math['min'](this['end']-this['offset'],this['body_bytes']);this['userCall']()(this[_0x2588c7](this['chunk'],this['offset'],_0x1c4a80)),this['offset']+=_0x1c4a80,this['body_bytes']-=_0x1c4a80,this['body_bytes']||(this['state']='BODY_CHUNK'+'EMPTYLINE');},_0x1c1c4f['prototype']['BODY_CHUNK'+'EMPTYLINE']=function(){var _0x199c5a=this['consumeLin'+'e']();void(0x1f*0xbb+-0x9b7*-0x1+0x817*-0x4)!==_0x199c5a&&(_0x214f66['equal'](_0x199c5a,''),this['state']='BODY_CHUNK'+'HEAD');},_0x1c1c4f['prototype']['BODY_CHUNK'+'TRAILERS']=function(){var _0x59ce8f=this['consumeLin'+'e']();void(-0x13ed+0x214c+-0x475*0x3)!==_0x59ce8f&&(_0x59ce8f?this['parseHeade'+'r'](_0x59ce8f,this['trailers']):(this['trailers']['length']&&this['userCall']()(this[_0x36c251](this['trailers'],'')),this['nextReques'+'t']()));},_0x1c1c4f['prototype']['BODY_RAW']=function(){var _0xbd53eb=this['end']-this['offset'];this['userCall']()(this[_0x2588c7](this['chunk'],this['offset'],_0xbd53eb)),this['offset']=this['end'];},_0x1c1c4f['prototype']['BODY_SIZED']=function(){var _0x2ba3eb=Math['min'](this['end']-this['offset'],this['body_bytes']);this['userCall']()(this[_0x2588c7](this['chunk'],this['offset'],_0x2ba3eb)),this['offset']+=_0x2ba3eb,this['body_bytes']-=_0x2ba3eb,this['body_bytes']||this['nextReques'+'t']();},['Headers','HeadersCom'+'plete','Body','MessageCom'+'plete']['forEach'](function(_0x2d65e8){var _0x523344=_0x1c1c4f['kOn'+_0x2d65e8];Object['defineProp'+'erty'](_0x1c1c4f['prototype'],'on'+_0x2d65e8,{'get':function(){return this[_0x523344];},'set':function(_0x28c43f){return this['_compatMod'+'e0_11']=!(-0x1*0x65+-0x14d+0x1f*0xe),_0x40da91='CONNECT',this[_0x523344]=_0x28c43f;}});});},0x7e8:(_0x437dd6,_0x1022fe,_0x4b4c8a)=>{'use strict';var _0x3d343d=_0x4b4c8a(0x12c+-0x7ff*0x2+0xff*0x22),_0x42c0ce={};_0x42c0ce['rules']=_0x4b4c8a(0x3b3*-0x1+0xa29+0x19f*0x1)['map'](function(_0x409a3d){return{'rule':_0x409a3d,'suffix':_0x409a3d['replace'](/^(\*\.|\!)/,''),'punySuffix':-(0x1*0xe27+-0xbb3*-0x3+-0x7*0x709),'wildcard':'*'===_0x409a3d['charAt'](-0x15*-0x1d1+0xb*-0x1e4+-0x1159),'exception':'!'===_0x409a3d['charAt'](-0x72*-0x22+0x82*-0xd+-0x88a*0x1)};}),_0x42c0ce['endsWith']=function(_0x22179d,_0xb9b812){return-(-0x1*-0x185e+-0x1829+0x4*-0xd)!==_0x22179d['indexOf'](_0xb9b812,_0x22179d['length']-_0xb9b812['length']);},_0x42c0ce['findRule']=function(_0x32ae0b){var _0x43ccba=_0x3d343d['toASCII'](_0x32ae0b);return _0x42c0ce['rules']['reduce'](function(_0x519bb5,_0x3c3971){return-(0xbdb*0x1+0x5*-0x148+-0x52*0x11)===_0x3c3971['punySuffix']&&(_0x3c3971['punySuffix']=_0x3d343d['toASCII'](_0x3c3971['suffix'])),_0x42c0ce['endsWith'](_0x43ccba,'.'+_0x3c3971['punySuffix'])||_0x43ccba===_0x3c3971['punySuffix']?_0x3c3971:_0x519bb5;},null);},_0x1022fe['errorCodes']={'DOMAIN_TOO_SHORT':'Domain\x20nam'+'e\x20too\x20shor'+'t.','DOMAIN_TOO_LONG':'Domain\x20nam'+'e\x20too\x20long'+'.\x20It\x20shoul'+'d\x20be\x20no\x20mo'+'re\x20than\x2025'+'5\x20chars.','LABEL_STARTS_WITH_DASH':'Domain\x20nam'+'e\x20label\x20ca'+'n\x20not\x20star'+'t\x20with\x20a\x20d'+'ash.','LABEL_ENDS_WITH_DASH':'Domain\x20nam'+'e\x20label\x20ca'+'n\x20not\x20end\x20'+'with\x20a\x20das'+'h.','LABEL_TOO_LONG':'Domain\x20nam'+'e\x20label\x20sh'+'ould\x20be\x20at'+'\x20most\x2063\x20c'+'hars\x20long.','LABEL_TOO_SHORT':'Domain\x20nam'+'e\x20label\x20sh'+'ould\x20be\x20at'+'\x20least\x201\x20c'+'haracter\x20l'+'ong.','LABEL_INVALID_CHARS':'Domain\x20nam'+'e\x20label\x20ca'+'n\x20only\x20con'+'tain\x20alpha'+'numeric\x20ch'+'aracters\x20o'+'r\x20dashes.'},_0x42c0ce['validate']=function(_0x2191f3){var _0x1c784d=_0x3d343d['toASCII'](_0x2191f3);if(_0x1c784d['length']<0x221a+-0x737+-0x1ae2)return'DOMAIN_TOO'+'_SHORT';if(_0x1c784d['length']>-0xee0+-0x1*-0xdbe+0x5*0x6d)return'DOMAIN_TOO'+'_LONG';for(var _0x3995f1,_0x29b4d0=_0x1c784d['split']('.'),_0x30c27f=-0x24a5+-0x5+0x24aa;_0x30c27f<_0x29b4d0['length'];++_0x30c27f){if(!(_0x3995f1=_0x29b4d0[_0x30c27f])['length'])return'LABEL_TOO_'+'SHORT';if(_0x3995f1['length']>-0x133a+0xd03*-0x1+0x207c)return'LABEL_TOO_'+'LONG';if('-'===_0x3995f1['charAt'](0x2613+0x24b0+-0x4ac3))return'LABEL_STAR'+'TS_WITH_DA'+'SH';if('-'===_0x3995f1['charAt'](_0x3995f1['length']-(0x21f9+0xab0+-0x2ca8)))return'LABEL_ENDS'+'_WITH_DASH';if(!/^[a-z0-9\-]+$/['test'](_0x3995f1))return'LABEL_INVA'+'LID_CHARS';}},_0x1022fe['parse']=function(_0x146dc2){if('string'!=typeof _0x146dc2)throw new TypeError('Domain\x20nam'+'e\x20must\x20be\x20'+'a\x20string.');var _0x165b7d=_0x146dc2['slice'](-0x8*0x18d+0x10ef+-0x487)['toLowerCas'+'e']();'.'===_0x165b7d['charAt'](_0x165b7d['length']-(-0x1a87*0x1+-0x121b*0x1+-0x27*-0x125))&&(_0x165b7d=_0x165b7d['slice'](0x271+0x202a*0x1+-0x229b,_0x165b7d['length']-(-0x24b5*-0x1+0x1b20+-0x3fd4)));var _0x5e8746=_0x42c0ce['validate'](_0x165b7d);if(_0x5e8746)return{'input':_0x146dc2,'error':{'message':_0x1022fe['errorCodes'][_0x5e8746],'code':_0x5e8746}};var _0x1ba33f={'input':_0x146dc2,'tld':null,'sld':null,'domain':null,'subdomain':null,'listed':!(-0x1bcb*-0x1+0x23c7+-0x3f91)},_0x89ed5c=_0x165b7d['split']('.');if('local'===_0x89ed5c[_0x89ed5c['length']-(-0x209b+0x2*0x405+0x1892)])return _0x1ba33f;var _0x29b64b=function(){return/xn--/['test'](_0x165b7d)?(_0x1ba33f['domain']&&(_0x1ba33f['domain']=_0x3d343d['toASCII'](_0x1ba33f['domain'])),_0x1ba33f['subdomain']&&(_0x1ba33f['subdomain']=_0x3d343d['toASCII'](_0x1ba33f['subdomain'])),_0x1ba33f):_0x1ba33f;},_0x2691bc=_0x42c0ce['findRule'](_0x165b7d);if(!_0x2691bc)return _0x89ed5c['length']<0x172c+0x2b*-0xe5+0x1*0xf4d?_0x1ba33f:(_0x1ba33f['tld']=_0x89ed5c['pop'](),_0x1ba33f['sld']=_0x89ed5c['pop'](),_0x1ba33f['domain']=[_0x1ba33f['sld'],_0x1ba33f['tld']]['join']('.'),_0x89ed5c['length']&&(_0x1ba33f['subdomain']=_0x89ed5c['pop']()),_0x29b64b());_0x1ba33f['listed']=!(0x2211+-0x2044+-0x1cd);var _0x5be8fd=_0x2691bc['suffix']['split']('.'),_0x468445=_0x89ed5c['slice'](-0x1c9f+0x1*0x14a6+0x7f9,_0x89ed5c['length']-_0x5be8fd['length']);return _0x2691bc['exception']&&_0x468445['push'](_0x5be8fd['shift']()),_0x1ba33f['tld']=_0x5be8fd['join']('.'),_0x468445['length']?(_0x2691bc['wildcard']&&(_0x5be8fd['unshift'](_0x468445['pop']()),_0x1ba33f['tld']=_0x5be8fd['join']('.')),_0x468445['length']?(_0x1ba33f['sld']=_0x468445['pop'](),_0x1ba33f['domain']=[_0x1ba33f['sld'],_0x1ba33f['tld']]['join']('.'),_0x468445['length']&&(_0x1ba33f['subdomain']=_0x468445['join']('.')),_0x29b64b()):_0x29b64b()):_0x29b64b();},_0x1022fe['get']=function(_0x52bc6c){return _0x52bc6c&&_0x1022fe['parse'](_0x52bc6c)['domain']||null;},_0x1022fe['isValid']=function(_0x2cfa7f){var _0x11fd6b=_0x1022fe['parse'](_0x2cfa7f);return Boolean(_0x11fd6b['domain']&&_0x11fd6b['listed']);};},0x20bb:(_0x4b7cf3,_0x1d2829,_0x3d5258)=>{'use strict';_0x3d5258['r'](_0x1d2829),_0x3d5258['d'](_0x1d2829,{'decode':()=>_0x1550ae,'default':()=>_0x1999c2,'encode':()=>_0x4db17e,'toASCII':()=>_0x488102,'toUnicode':()=>_0xb8f20c,'ucs2decode':()=>_0x5ecfdc,'ucs2encode':()=>_0x7dc99f});const _0x3515e3=0x816c6591+0x14*-0xaa4eed+0xbe1c4f2,_0x660a3f=0x1*0x3cb+0x197f+-0x7*0x42a,_0x1c25d9=/^xn--/,_0x567d94=/[^\0-\x7E]/,_0x343450=/[\x2E\u3002\uFF0E\uFF61]/g,_0x494a68={'overflow':'Overflow:\x20'+'input\x20need'+'s\x20wider\x20in'+'tegers\x20to\x20'+'process','not-basic':'Illegal\x20in'+'put\x20>=\x200x8'+'0\x20(not\x20a\x20b'+'asic\x20code\x20'+'point)','invalid-input':'Invalid\x20in'+'put'},_0x12e6d1=Math['floor'],_0x1a9b65=String['fromCharCo'+'de'];function _0x312fcc(_0x118a2e){throw new RangeError(_0x494a68[_0x118a2e]);}function _0x8d9e5e(_0x1e29c0,_0x2ac8a7){const _0x1c24b0=_0x1e29c0['split']('@');let _0x449cf4='';_0x1c24b0['length']>0x1*-0x269+0x89+0x1e1&&(_0x449cf4=_0x1c24b0[-0x1372+-0x92c+0x21*0xde]+'@',_0x1e29c0=_0x1c24b0[0xc25+-0x3d*-0x27+-0x156f]);const _0x2aaddb=function(_0x20ebc4,_0x12177e){const _0x37e875=[];let _0x21d752=_0x20ebc4['length'];for(;_0x21d752--;)_0x37e875[_0x21d752]=_0x12177e(_0x20ebc4[_0x21d752]);return _0x37e875;}((_0x1e29c0=_0x1e29c0['replace'](_0x343450,'.'))['split']('.'),_0x2ac8a7)['join']('.');return _0x449cf4+_0x2aaddb;}function _0x5ecfdc(_0x30b346){const _0x5bfc7f=[];let _0x2df4e0=0xcd*0x2b+-0x1f3*0x2+-0x1e89*0x1;const _0x458259=_0x30b346['length'];for(;_0x2df4e0<_0x458259;){const _0x978869=_0x30b346['charCodeAt'](_0x2df4e0++);if(_0x978869>=0x19cb+0x18f4*-0x11+0x26669&&_0x978869<=0x18229+0xe822+-0x18e4c&&_0x2df4e0<_0x458259){const _0x1e321e=_0x30b346['charCodeAt'](_0x2df4e0++);-0x15e29+-0x1456d+0x8de*0x65==(-0x2*-0xb495+-0x7*-0x2a97+0x1*-0x1974b&_0x1e321e)?_0x5bfc7f['push'](((0x4*0x3a7+-0x19ec+0xf4f&_0x978869)<<0x1*0x12fc+0x911*-0x3+-0x1*-0x841)+(0x1fb1+0x6*-0x59b+-0xa*-0x98&_0x1e321e)+(0xe74*0xf+-0x2462*0x2+0x6ff8)):(_0x5bfc7f['push'](_0x978869),_0x2df4e0--);}else _0x5bfc7f['push'](_0x978869);}return _0x5bfc7f;}const _0x7dc99f=_0x816979=>String['fromCodePo'+'int'](..._0x816979),_0x2441b7=function(_0x5c003b,_0x5c56cd){return _0x5c003b+(0x1*0x2147+-0x13d+0xa*-0x332)+(-0x647*0x5+0x29*0xe9+-0x5a3)*(_0x5c003b<0x3d*0x5d+0x2476+-0x3a85)-((-0x25ff+0x217e+0x481!=_0x5c56cd)<<0x13a*-0x17+-0x1ba*0xb+0x2f39);},_0x204c31=function(_0x4af9eb,_0x3ed5dc,_0xbc10e0){let _0x572e55=-0x1b85+0x44*-0x8c+0x40b5;for(_0x4af9eb=_0xbc10e0?_0x12e6d1(_0x4af9eb/(-0x2180+0x1065+0x13d7*0x1)):_0x4af9eb>>-0x9*-0x29d+-0x7f*-0xa+-0xe3d*0x2,_0x4af9eb+=_0x12e6d1(_0x4af9eb/_0x3ed5dc);_0x4af9eb>0x1e5*-0x13+-0x1*0x1836+0x3dfc;_0x572e55+=_0x660a3f)_0x4af9eb=_0x12e6d1(_0x4af9eb/(0x245e+-0x1626+-0xe15));return _0x12e6d1(_0x572e55+(-0x1*0x178f+0x21a*-0xb+0x2ed1)*_0x4af9eb/(_0x4af9eb+(-0x23e+0x2*0xc7+0xd6)));},_0x1550ae=function(_0x3604d0){const _0x5b231a=[],_0x66bc5e=_0x3604d0['length'];let _0x426a86=0x4bd+-0x2*0x127f+0x167*0x17,_0x3b3e5e=-0x17a2+-0xc*0x1c8+0x1*0x2d82,_0x3972d0=-0x23*0x11c+-0x1f*-0xdb+0xc97,_0x268355=_0x3604d0['lastIndexO'+'f']('-');_0x268355<0xf5+-0x1210+0x111b&&(_0x268355=0xcb2+-0xfe1+-0x1*-0x32f);for(let _0x282757=0x1*0x103+0x15c6+-0x16c9*0x1;_0x282757<_0x268355;++_0x282757)_0x3604d0['charCodeAt'](_0x282757)>=0xba9+0x1292+0x2b*-0xb1&&_0x312fcc('not-basic'),_0x5b231a['push'](_0x3604d0['charCodeAt'](_0x282757));for(let _0x25dd8b=_0x268355>-0x11*-0x31+0x216d+-0x24ae?_0x268355+(-0x1*0xd4e+0x1f1*0x7+-0x48):-0x3*0x2ec+0x19e2+-0x88f*0x2;_0x25dd8b<_0x66bc5e;){let _0x5933c7=_0x426a86;for(let _0x2d327b=0xe9*-0x6+-0x1587+0x1afe,_0xa56c6f=_0x660a3f;;_0xa56c6f+=_0x660a3f){_0x25dd8b>=_0x66bc5e&&_0x312fcc('invalid-in'+'put');const _0x52f45a=(_0x15113c=_0x3604d0['charCodeAt'](_0x25dd8b++))-(-0x1cb9+-0x47f*0x7+0x3b*0x106)<0x5b3+0x2304+-0x28ad?_0x15113c-(-0x1388+-0x7f*-0x13+0x1*0xa31):_0x15113c-(0x1*-0x1cfb+0xc8*0x31+-0xc*0xc1)<-0xeff+-0xaf*0x8+0x1491?_0x15113c-(-0x1cb+-0x1*-0x1756+0xa*-0x221):_0x15113c-(-0x2e*0x9a+0x6*0x175+0x134f)<-0xd*0x217+-0x2*0x9c2+0x2ec9?_0x15113c-(0x210e+-0x2606+0x559*0x1):_0x660a3f;(_0x52f45a>=_0x660a3f||_0x52f45a>_0x12e6d1((_0x3515e3-_0x426a86)/_0x2d327b))&&_0x312fcc('overflow'),_0x426a86+=_0x52f45a*_0x2d327b;const _0x4698fc=_0xa56c6f<=_0x3972d0?-0x5de+-0x7a7+0xd86:_0xa56c6f>=_0x3972d0+(0x1*0x8d5+-0x2188+0x18cd)?-0x6b3*0x3+-0x1b41+-0x4*-0xbdd:_0xa56c6f-_0x3972d0;if(_0x52f45a<_0x4698fc)break;const _0x2ed7b1=_0x660a3f-_0x4698fc;_0x2d327b>_0x12e6d1(_0x3515e3/_0x2ed7b1)&&_0x312fcc('overflow'),_0x2d327b*=_0x2ed7b1;}const _0xb92fb6=_0x5b231a['length']+(-0x1caf+-0x133f+0x2fef);_0x3972d0=_0x204c31(_0x426a86-_0x5933c7,_0xb92fb6,-0x9*0x17d+-0x171b+0x2480==_0x5933c7),_0x12e6d1(_0x426a86/_0xb92fb6)>_0x3515e3-_0x3b3e5e&&_0x312fcc('overflow'),_0x3b3e5e+=_0x12e6d1(_0x426a86/_0xb92fb6),_0x426a86%=_0xb92fb6,_0x5b231a['splice'](_0x426a86++,-0x11f7+-0x3d*-0xc+0xf1b,_0x3b3e5e);}var _0x15113c;return String['fromCodePo'+'int'](..._0x5b231a);},_0x4db17e=function(_0x5e763d){const _0x4701b5=[];let _0x47c00d=(_0x5e763d=_0x5ecfdc(_0x5e763d))['length'],_0x1f0cae=0xd6b+-0x1256+-0x13*-0x49,_0x402712=0x1*-0x18df+-0x1*0x118d+0x2a6c,_0x46c58d=0x1007+0x15b*-0x17+-0x9e*-0x19;for(const _0x1a4d74 of _0x5e763d)_0x1a4d74<-0x773*-0x5+0x1930+-0x3def&&_0x4701b5['push'](_0x1a9b65(_0x1a4d74));let _0x1ca435=_0x4701b5['length'],_0x161a72=_0x1ca435;for(_0x1ca435&&_0x4701b5['push']('-');_0x161a72<_0x47c00d;){let _0x28210f=_0x3515e3;for(const _0x296232 of _0x5e763d)_0x296232>=_0x1f0cae&&_0x296232<_0x28210f&&(_0x28210f=_0x296232);const _0x5ca12c=_0x161a72+(0x18f8+0x6f2+-0x1fe9);_0x28210f-_0x1f0cae>_0x12e6d1((_0x3515e3-_0x402712)/_0x5ca12c)&&_0x312fcc('overflow'),_0x402712+=(_0x28210f-_0x1f0cae)*_0x5ca12c,_0x1f0cae=_0x28210f;for(const _0x563f97 of _0x5e763d)if(_0x563f97<_0x1f0cae&&++_0x402712>_0x3515e3&&_0x312fcc('overflow'),_0x563f97==_0x1f0cae){let _0x28255f=_0x402712;for(let _0x125c96=_0x660a3f;;_0x125c96+=_0x660a3f){const _0x12771d=_0x125c96<=_0x46c58d?-0xa8+0x7*-0x311+-0x162*-0x10:_0x125c96>=_0x46c58d+(0x13d*-0x6+-0x1a8b+0x3d*0x8f)?-0xcd*-0x28+-0x1*0x2284+0x296:_0x125c96-_0x46c58d;if(_0x28255f<_0x12771d)break;const _0x35bf75=_0x28255f-_0x12771d,_0x41eb4c=_0x660a3f-_0x12771d;_0x4701b5['push'](_0x1a9b65(_0x2441b7(_0x12771d+_0x35bf75%_0x41eb4c,0xc38+-0x25b3+-0xb*-0x251))),_0x28255f=_0x12e6d1(_0x35bf75/_0x41eb4c);}_0x4701b5['push'](_0x1a9b65(_0x2441b7(_0x28255f,0x5c9*0x2+-0x20b1+-0x151f*-0x1))),_0x46c58d=_0x204c31(_0x402712,_0x5ca12c,_0x161a72==_0x1ca435),_0x402712=-0x1*0x2119+-0x17*-0x17a+-0x11*0xd,++_0x161a72;}++_0x402712,++_0x1f0cae;}return _0x4701b5['join']('');},_0xb8f20c=function(_0x47eb73){return _0x8d9e5e(_0x47eb73,function(_0x5bab0d){return _0x1c25d9['test'](_0x5bab0d)?_0x1550ae(_0x5bab0d['slice'](-0x1*-0x232d+0x1*-0x24fb+-0x1*-0x1d2)['toLowerCas'+'e']()):_0x5bab0d;});},_0x488102=function(_0x505950){return _0x8d9e5e(_0x505950,function(_0x20ddd8){return _0x567d94['test'](_0x20ddd8)?'xn--'+_0x4db17e(_0x20ddd8):_0x20ddd8;});},_0x1999c2={'version':'2.1.0','ucs2':{'decode':_0x5ecfdc,'encode':_0x7dc99f},'decode':_0x1550ae,'encode':_0x4db17e,'toASCII':_0x488102,'toUnicode':_0xb8f20c};},0xf98:(_0x334054,_0x4f1fd0)=>{'use strict';var _0x18649c=Object['prototype']['hasOwnProp'+'erty'];function _0x474db3(_0xb284c1){try{return decodeURIComponent(_0xb284c1['replace'](/\+/g,'\x20'));}catch(_0xe3489b){return null;}}function _0x4c4344(_0x195668){try{return encodeURIComponent(_0x195668);}catch(_0x374791){return null;}}_0x4f1fd0['stringify']=function(_0x8bc4c8,_0x4d8610){_0x4d8610=_0x4d8610||'';var _0xd85e30,_0x438398,_0xa8305b=[];for(_0x438398 in('string'!=typeof _0x4d8610&&(_0x4d8610='?'),_0x8bc4c8))if(_0x18649c['call'](_0x8bc4c8,_0x438398)){if((_0xd85e30=_0x8bc4c8[_0x438398])||null!=_0xd85e30&&!isNaN(_0xd85e30)||(_0xd85e30=''),_0x438398=_0x4c4344(_0x438398),_0xd85e30=_0x4c4344(_0xd85e30),null===_0x438398||null===_0xd85e30)continue;_0xa8305b['push'](_0x438398+'='+_0xd85e30);}return _0xa8305b['length']?_0x4d8610+_0xa8305b['join']('&'):'';},_0x4f1fd0['parse']=function(_0xb6f247){for(var _0x29efad,_0x292c24=/([^=?#&]+)=?([^&]*)/g,_0x541c3c={};_0x29efad=_0x292c24['exec'](_0xb6f247);){var _0x39f623=_0x474db3(_0x29efad[0xccb+-0x1*0x269a+0x76*0x38]),_0x46843b=_0x474db3(_0x29efad[-0x188c+0x1193*-0x2+0x4*0xeed]);null===_0x39f623||null===_0x46843b||_0x39f623 in _0x541c3c||(_0x541c3c[_0x39f623]=_0x46843b);}return _0x541c3c;};},0x80f:_0x3fd0e6=>{'use strict';_0x3fd0e6['exports']=function(_0x28e00e,_0x26b7e8){if(_0x26b7e8=_0x26b7e8['split'](':')[-0x209*0x4+-0x1925*0x1+-0x1*-0x2149],!(_0x28e00e=+_0x28e00e))return!(0x8*0x1cf+-0x1*0x18f5+-0xa7e*-0x1);switch(_0x26b7e8){case'http':case'ws':return-0xf*-0x3+0x4*-0xa3+-0x1*-0x2af!==_0x28e00e;case'https':case'wss':return 0x22a7+0x24ae+0x3b*-0x12e!==_0x28e00e;case'ftp':return 0x1631+-0x6f*0x1d+-0x989*0x1!==_0x28e00e;case'gopher':return 0x1655+0x23b5+-0x1*0x39c4!==_0x28e00e;case'file':return!(-0x20eb+-0x5*-0x4e7+0x869*0x1);}return-0xa*-0x1c8+-0x124*0xe+-0xec*0x2!==_0x28e00e;};},0xb2d:(_0x317d34,_0x1ae4ec,_0x5a7916)=>{var _0x1685a9=_0x5a7916(0x196+-0x81e+0x73d),_0x4ef096=_0x1685a9['Buffer'];function _0x2d4593(_0xa3df51,_0x4da38c){for(var _0x37b7d4 in _0xa3df51)_0x4da38c[_0x37b7d4]=_0xa3df51[_0x37b7d4];}function _0x2f447c(_0x2b2f09,_0x3346d8,_0x334741){return _0x4ef096(_0x2b2f09,_0x3346d8,_0x334741);}_0x4ef096['from']&&_0x4ef096['alloc']&&_0x4ef096['allocUnsaf'+'e']&&_0x4ef096['allocUnsaf'+'eSlow']?_0x317d34['exports']=_0x1685a9:(_0x2d4593(_0x1685a9,_0x1ae4ec),_0x1ae4ec['Buffer']=_0x2f447c),_0x2f447c['prototype']=Object['create'](_0x4ef096['prototype']),_0x2d4593(_0x4ef096,_0x2f447c),_0x2f447c['from']=function(_0x5a3143,_0x1ce019,_0x1e8c20){if('number'==typeof _0x5a3143)throw new TypeError('Argument\x20m'+'ust\x20not\x20be'+'\x20a\x20number');return _0x4ef096(_0x5a3143,_0x1ce019,_0x1e8c20);},_0x2f447c['alloc']=function(_0x36fe77,_0x36bbb9,_0x361258){if('number'!=typeof _0x36fe77)throw new TypeError('Argument\x20m'+'ust\x20be\x20a\x20n'+'umber');var _0xda2059=_0x4ef096(_0x36fe77);return void(-0x1590+-0x1d15+0x1*0x32a5)!==_0x36bbb9?'string'==typeof _0x361258?_0xda2059['fill'](_0x36bbb9,_0x361258):_0xda2059['fill'](_0x36bbb9):_0xda2059['fill'](0x2*-0x551+0x2*0x883+-0x664),_0xda2059;},_0x2f447c['allocUnsaf'+'e']=function(_0x4db6a7){if('number'!=typeof _0x4db6a7)throw new TypeError('Argument\x20m'+'ust\x20be\x20a\x20n'+'umber');return _0x4ef096(_0x4db6a7);},_0x2f447c['allocUnsaf'+'eSlow']=function(_0x11b6af){if('number'!=typeof _0x11b6af)throw new TypeError('Argument\x20m'+'ust\x20be\x20a\x20n'+'umber');return _0x1685a9['SlowBuffer'](_0x11b6af);};},0x25d3:_0x8971d4=>{'use strict';var _0x1705a5=function(_0x51dbdf,_0x3e87f6){_0x3e87f6=_0x3e87f6||(_0x51dbdf instanceof Buffer?-0x1*-0x18a7+-0x21b5+0x2*0x48b:0x178e+-0x5f*-0x5e+-0x7*0x859);var _0x32859e,_0x2af29c,_0x5b40ae,_0xaee247='';for(_0x2af29c=0x1*-0x1f91+-0x6*0x44d+0x395f,_0x5b40ae=_0x51dbdf['length'];_0x2af29c<_0x5b40ae;_0x2af29c++){for(_0x32859e=this['_get'](_0x51dbdf,_0x2af29c)['toString'](0x196a+0x46d*-0x2+-0x108e);_0x32859e['length']<_0x3e87f6;)_0x32859e='0'+_0x32859e;_0xaee247+=_0x32859e;}_0xaee247=_0xaee247['split']('')['map'](function(_0x15449a){return parseInt(_0x15449a,-0x1b2e+0x13e4+0x2*0x3a6);}),this['_bases']={0x2:_0xaee247};};_0x1705a5['prototype']['generate']=function(_0x4642b9,_0x289996,_0x3a9c8b){_0x289996=_0x289996||0x1*0xf9+0x2370+0x2467*-0x1;var _0x3aa44a,_0x24f80f=_0x4642b9,_0x4b3759=Math['ceil'](Math['log'](_0x4642b9)/Math['log'](_0x289996)),_0x394847=Math['pow'](_0x289996,_0x4b3759)-_0x4642b9;_0x347a90:for(;_0x24f80f>=_0x4642b9;){if(!(_0x3aa44a=this['_shift'](_0x289996,_0x4b3759)))return _0x3a9c8b?_0x4642b9:null;if((_0x24f80f=this['_evaluate'](_0x3aa44a,_0x289996))>=_0x4642b9){if(0x140d+0x3*0x5cf+-0x2579===_0x394847)continue _0x347a90;this['_push'](_0x394847,_0x24f80f-_0x4642b9),_0x24f80f=this['generate'](_0x4642b9,_0x394847,!(-0x21d3+-0x551+0x2724));}}return _0x24f80f;},_0x1705a5['prototype']['_get']=function(_0x3ab4cf,_0x329d20){return _0x3ab4cf['readUInt8']?_0x3ab4cf['readUInt8'](_0x329d20):_0x3ab4cf[_0x329d20];},_0x1705a5['prototype']['_evaluate']=function(_0x7954f3,_0x4ee81e){for(var _0x4079ce=0x16a*0x9+0x675*0x1+-0x132f,_0x26c208=_0x7954f3['length'];_0x26c208--;)_0x4079ce+=_0x7954f3[_0x26c208]*Math['pow'](_0x4ee81e,_0x7954f3['length']-(_0x26c208+(0x893*-0x1+0x150b*0x1+0x1*-0xc77)));return _0x4079ce;},_0x1705a5['prototype']['_push']=function(_0x1a9a57,_0x564489){this['_bases'][_0x1a9a57]=this['_bases'][_0x1a9a57]||[],this['_bases'][_0x1a9a57]['push'](_0x564489);},_0x1705a5['prototype']['_shift']=function(_0x43e119,_0x758d44){var _0x51595d=this['_bases'][_0x43e119];return!_0x51595d||_0x51595d['length']<_0x758d44?null:_0x51595d['splice'](0x290*-0x5+0x56a+-0x3b3*-0x2,_0x758d44);},_0x8971d4['exports']=_0x1705a5;},0xb6b:(_0x476331,_0x50c7f9,_0x301dee)=>{'use strict';const _0xf3f995=_0x301dee(-0x2fc8+-0x2287*0x1+-0x9b*-0xbe),_0x4a7256=_0x301dee(-0x3*0x17b+-0x3*0x4c1+0x1*0x173c),_0x36b600=_0x301dee(-0xeb4+0xc70+0x6dd),_0x3282f2=_0x301dee(-0xf94+0x1e0d+0x3*0x179)['i'],_0x147b27=_0x301dee(0x1049+0x1f4e*0x1+-0x2514)['n'],_0x3a6c05=_0x301dee(0x24bf+-0x106e+0x3*0x28)['z'],_0xd62e93=_0x301dee(0x8cb*0x4+0x1*-0x2ec+-0x149a),_0x5257ba=_0x301dee(0x18a9+-0x79+-0xc1b),{fromCallback:_0x144664}=_0x301dee(-0x1808+-0x20a6+0x1*0x3d82),{getCustomInspectSymbol:_0x1513e1}=_0x301dee(0x2792+0x329e+-0x336f),_0x56bef6=/^[\x21\x23-\x2B\x2D-\x3A\x3C-\x5B\x5D-\x7E]+$/,_0x193833=/[\x00-\x1F]/,_0x3d80f6=['\x0a','\x0d','\x00'],_0x2e2028=/[\x20-\x3A\x3C-\x7E]+/,_0x328dbf=/[\x09\x20-\x2F\x3B-\x40\x5B-\x60\x7B-\x7E]/,_0x5eaaf4={'jan':0x0,'feb':0x1,'mar':0x2,'apr':0x3,'may':0x4,'jun':0x5,'jul':0x6,'aug':0x7,'sep':0x8,'oct':0x9,'nov':0xa,'dec':0xb},_0x3d5306=-0x2029b6429fb+-0x784ae*-0x152d17+0x357661ea471,_0x1bead7='Invalid\x20sa'+'meSiteCont'+'ext\x20option'+'\x20for\x20getCo'+'okies();\x20e'+'xpected\x20on'+'e\x20of\x20\x22stri'+'ct\x22,\x20\x22lax\x22'+',\x20or\x20\x22none'+'\x22';function _0xae6891(_0xf06df0){_0xd62e93['validate'](_0xd62e93['isNonEmpty'+'String'](_0xf06df0),_0xf06df0);const _0x3f0e01=String(_0xf06df0)['toLowerCas'+'e']();return'none'===_0x3f0e01||'lax'===_0x3f0e01||'strict'===_0x3f0e01?_0x3f0e01:null;}const _0x104153=Object['freeze']({'SILENT':'silent','STRICT':'strict','DISABLED':'unsafe-dis'+'abled'}),_0x2e88a6=/(?:^(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}$)|(?:^(?:(?:[a-f\d]{1,4}:){7}(?:[a-f\d]{1,4}|:)|(?:[a-f\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|:[a-f\d]{1,4}|:)|(?:[a-f\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-f\d]{1,4}){1,2}|:)|(?:[a-f\d]{1,4}:){4}(?:(?::[a-f\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-f\d]{1,4}){1,3}|:)|(?:[a-f\d]{1,4}:){3}(?:(?::[a-f\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-f\d]{1,4}){1,4}|:)|(?:[a-f\d]{1,4}:){2}(?:(?::[a-f\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-f\d]{1,4}){1,5}|:)|(?:[a-f\d]{1,4}:){1}(?:(?::[a-f\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-f\d]{1,4}){1,6}|:)|(?::(?:(?::[a-f\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}|(?::[a-f\d]{1,4}){1,7}|:)))$)/,_0x55c260=('\x0a\x5c[?(?:\x0a(?'+':[a-fA-F\x5cd'+']{1,4}:){7'+'}(?:[a-fA-'+'F\x5cd]{1,4}|'+':)|\x0a(?:[a-'+'fA-F\x5cd]{1,'+'4}:){6}(?:'+'(?:25[0-5]'+'|2[0-4]\x5cd|'+'1\x5cd\x5cd|[1-9'+']\x5cd|\x5cd)(?:'+'\x5c.(?:25[0-'+'5]|2[0-4]\x5c'+'d|1\x5cd\x5cd|[1'+'-9]\x5cd|\x5cd))'+'{3}|:[a-fA'+'-F\x5cd]{1,4}'+'|:)|\x0a(?:[a'+'-fA-F\x5cd]{1'+',4}:){5}(?'+'::(?:25[0-'+'5]|2[0-4]\x5c'+'d|1\x5cd\x5cd|[1'+'-9]\x5cd|\x5cd)('+'?:\x5c.(?:25['+'0-5]|2[0-4'+']\x5cd|1\x5cd\x5cd|'+'[1-9]\x5cd|\x5cd'+')){3}|(?::'+'[a-fA-F\x5cd]'+'{1,4}){1,2'+'}|:)|\x0a(?:['+'a-fA-F\x5cd]{'+'1,4}:){4}('+'?:(?::[a-f'+'A-F\x5cd]{1,4'+'}){0,1}:(?'+':25[0-5]|2'+'[0-4]\x5cd|1\x5c'+'d\x5cd|[1-9]\x5c'+'d|\x5cd)(?:\x5c.'+'(?:25[0-5]'+'|2[0-4]\x5cd|'+'1\x5cd\x5cd|[1-9'+']\x5cd|\x5cd)){3'+'}|(?::[a-f'+'A-F\x5cd]{1,4'+'}){1,3}|:)'+'|\x0a(?:[a-fA'+'-F\x5cd]{1,4}'+':){3}(?:(?'+'::[a-fA-F\x5c'+'d]{1,4}){0'+',2}:(?:25['+'0-5]|2[0-4'+']\x5cd|1\x5cd\x5cd|'+'[1-9]\x5cd|\x5cd'+')(?:\x5c.(?:2'+'5[0-5]|2[0'+'-4]\x5cd|1\x5cd\x5c'+'d|[1-9]\x5cd|'+'\x5cd)){3}|(?'+'::[a-fA-F\x5c'+'d]{1,4}){1'+',4}|:)|\x0a(?'+':[a-fA-F\x5cd'+']{1,4}:){2'+'}(?:(?::[a'+'-fA-F\x5cd]{1'+',4}){0,3}:'+'(?:25[0-5]'+'|2[0-4]\x5cd|'+'1\x5cd\x5cd|[1-9'+']\x5cd|\x5cd)(?:'+'\x5c.(?:25[0-'+'5]|2[0-4]\x5c'+'d|1\x5cd\x5cd|[1'+'-9]\x5cd|\x5cd))'+'{3}|(?::[a'+'-fA-F\x5cd]{1'+',4}){1,5}|'+':)|\x0a(?:[a-'+'fA-F\x5cd]{1,'+'4}:){1}(?:'+'(?::[a-fA-'+'F\x5cd]{1,4})'+'{0,4}:(?:2'+'5[0-5]|2[0'+'-4]\x5cd|1\x5cd\x5c'+'d|[1-9]\x5cd|'+'\x5cd)(?:\x5c.(?'+':25[0-5]|2'+'[0-4]\x5cd|1\x5c'+'d\x5cd|[1-9]\x5c'+'d|\x5cd)){3}|'+'(?::[a-fA-'+'F\x5cd]{1,4})'+'{1,6}|:)|\x0a'+'(?::(?:(?:'+(':[a-fA-F\x5cd'+']{1,4}){0,'+'5}:(?:25[0'+'-5]|2[0-4]'+'\x5cd|1\x5cd\x5cd|['+'1-9]\x5cd|\x5cd)'+'(?:\x5c.(?:25'+'[0-5]|2[0-'+'4]\x5cd|1\x5cd\x5cd'+'|[1-9]\x5cd|\x5c'+'d)){3}|(?:'+':[a-fA-F\x5cd'+']{1,4}){1,'+'7}|:))\x0a)(?'+':%[0-9a-zA'+'-Z]{1,})?\x5c'+']?\x0a'))['replace'](/\s*\/\/.*$/gm,'')['replace'](/\n/g,'')['trim'](),_0x3dc2c7=new RegExp('^'+_0x55c260+'$');function _0x53aa3e(_0x55af9a,_0x2566a6,_0xbd4d7a,_0x53a39d){let _0x345c9e=0xbd4*-0x2+-0x3*-0xb06+-0x96a;for(;_0x345c9e<_0x55af9a['length'];){const _0x525040=_0x55af9a['charCodeAt'](_0x345c9e);if(_0x525040<=-0xb*0x2ef+0xdb2+0x961*0x2||_0x525040>=0x2*-0x50b+0x23*0x9d+-0xb27)break;_0x345c9e++;}return _0x345c9e<_0x2566a6||_0x345c9e>_0xbd4d7a?null:_0x53a39d||_0x345c9e==_0x55af9a['length']?parseInt(_0x55af9a['substr'](0x1fbe+-0x103c+-0xf82,_0x345c9e),-0x17d0+-0xa*-0x339+-0x10*0x86):null;}function _0x2e1581(_0x403e24){const _0x51e5f1=_0x403e24['split'](':'),_0x1bcceb=[-0x18b5+-0x3fb*0x5+0x2c9c,-0x6*0x629+-0xfa2+0x3498,-0x83b+0x1*0x13cf+-0xb94];if(-0x8c9*-0x3+-0x19d5+-0x83!==_0x51e5f1['length'])return null;for(let _0x5d8b2c=0x1d1b+-0x67e+-0x169d;_0x5d8b2c<-0x5*-0x6fd+-0x15eb+-0xd03;_0x5d8b2c++){const _0x469d3e=-0x5*-0x766+-0x827+-0x1cd5==_0x5d8b2c,_0x5de04c=_0x53aa3e(_0x51e5f1[_0x5d8b2c],-0x228c+-0x74b+0x29d8,-0x711*-0x1+0x254f*-0x1+-0x79*-0x40,_0x469d3e);if(null===_0x5de04c)return null;_0x1bcceb[_0x5d8b2c]=_0x5de04c;}return _0x1bcceb;}function _0x43a357(_0x5bf0ff){_0x5bf0ff=String(_0x5bf0ff)['substr'](-0x823*0x1+0x22*-0x55+0x136d,-0x1*0x760+0x2048+-0x18e5)['toLowerCas'+'e']();const _0x4bcb5c=_0x5eaaf4[_0x5bf0ff];return _0x4bcb5c>=0x1676+-0x1344+-0x332?_0x4bcb5c:null;}function _0x2ce66c(_0x470f92){if(!_0x470f92)return;const _0x4a9e92=_0x470f92['split'](_0x328dbf);if(!_0x4a9e92)return;let _0x1c275c=null,_0x30b155=null,_0x3916cf=null,_0x47acfe=null,_0x32b268=null,_0xaf7c83=null;for(let _0x5e7206=0x1*0x2c6+-0x7d*0x39+0x190f;_0x5e7206<_0x4a9e92['length'];_0x5e7206++){const _0x3d7762=_0x4a9e92[_0x5e7206]['trim']();if(!_0x3d7762['length'])continue;let _0x5952c2;null===_0x3916cf&&(_0x5952c2=_0x2e1581(_0x3d7762),_0x5952c2)?(_0x1c275c=_0x5952c2[-0x18ed+-0x1*0x2+-0x1eb*-0xd],_0x30b155=_0x5952c2[0xadb*-0x1+0x106b*0x1+-0x1*0x58f],_0x3916cf=_0x5952c2[0x102*-0xf+0x100d+-0xed]):null!==_0x47acfe||(_0x5952c2=_0x53aa3e(_0x3d7762,-0x1*0x6fd+-0x8*-0x11b+-0x1da,-0x3*0x183+-0x1*0x2329+-0x2c*-0xe7,!(0x2*0x224+-0xe38+0x9f0)),null===_0x5952c2)?null!==_0x32b268||(_0x5952c2=_0x43a357(_0x3d7762),null===_0x5952c2)?null===_0xaf7c83&&(_0x5952c2=_0x53aa3e(_0x3d7762,0x16c+-0x1*0x383+0x219,0x22ad+-0x3fa+-0x1eaf,!(0x3*0x4+-0x11c6+0x1*0x11ba)),null!==_0x5952c2&&(_0xaf7c83=_0x5952c2,_0xaf7c83>=0x1ab*-0x17+-0x1*-0x1276+-0x409*-0x5&&_0xaf7c83<=0x152c+0x1*0x1109+-0x25d2?_0xaf7c83+=-0x1d90+0x24fb+0x1:_0xaf7c83>=0x26f6+0xb31+-0x3227&&_0xaf7c83<=0x1597+0x7*0x1b9+0x1*-0x2161&&(_0xaf7c83+=-0x1*0x2069+0x5c*-0x3a+0x3d11))):_0x32b268=_0x5952c2:_0x47acfe=_0x5952c2;}return null===_0x47acfe||null===_0x32b268||null===_0xaf7c83||null===_0x3916cf||_0x47acfe<0x1452+0x9*0x5d+0x2*-0xbcb||_0x47acfe>-0x4b7+-0xc50+-0x1*-0x1126||_0xaf7c83<0x11b*-0x15+0x2645*0x1+-0x1*0x8cd||_0x1c275c>0x1f7d+0x1*-0xc63+-0x9d*0x1f||_0x30b155>-0x15f8+0x1*-0x35b+0x198e||_0x3916cf>-0x18*-0x40+0xc2e*-0x3+0x1ec5*0x1?void(0xd*0x279+-0x8bf+-0x1766):new Date(Date['UTC'](_0xaf7c83,_0x32b268,_0x47acfe,_0x1c275c,_0x30b155,_0x3916cf));}function _0x143722(_0x2bbef5){return _0xd62e93['validate'](_0xd62e93['isDate'](_0x2bbef5),_0x2bbef5),_0x2bbef5['toUTCStrin'+'g']();}function _0x1f7bcd(_0xe1bf18){return null==_0xe1bf18?null:(_0xe1bf18=_0xe1bf18['trim']()['replace'](/^\./,''),_0x3dc2c7['test'](_0xe1bf18)&&(_0xe1bf18=_0xe1bf18['replace']('[','')['replace'](']','')),_0xf3f995&&/[^\u0001-\u007f]/['test'](_0xe1bf18)&&(_0xe1bf18=_0xf3f995['toASCII'](_0xe1bf18)),_0xe1bf18['toLowerCas'+'e']());}function _0x489824(_0x419cba,_0x2ba672,_0x56214d){if(null==_0x419cba||null==_0x2ba672)return null;if(!(0x143a+-0x89*0xa+-0x1b*0x8d)!==_0x56214d&&(_0x419cba=_0x1f7bcd(_0x419cba),_0x2ba672=_0x1f7bcd(_0x2ba672)),_0x419cba==_0x2ba672)return!(0x6*-0x475+0x1ed6+-0x418);const _0x39702e=_0x419cba['lastIndexO'+'f'](_0x2ba672);return!(_0x39702e<=-0x259*0x4+0x1c6b+0x1*-0x1307||_0x419cba['length']!==_0x2ba672['length']+_0x39702e||'.'!==_0x419cba['substr'](_0x39702e-(0x262d+0x1ac+-0x4b*0x88),0x2394+-0x11ab+-0x11e8)||_0x2e88a6['test'](_0x419cba));}function _0x18a4dc(_0xfba962){if(!_0xfba962||'/'!==_0xfba962['substr'](-0x8ff+0xba1+0x1*-0x2a2,0x13a1+-0xa16*-0x3+-0x31e2))return'/';if('/'===_0xfba962)return _0xfba962;const _0x442801=_0xfba962['lastIndexO'+'f']('/');return 0x4bc+0x1994+-0x1e50===_0x442801?'/':_0xfba962['slice'](-0x1bcc+-0xfcb*0x2+-0x2*-0x1db1,_0x442801);}function _0x35d8c0(_0x3981a4,_0x4417cc){if(_0x4417cc&&'object'==typeof _0x4417cc||(_0x4417cc={}),_0xd62e93['isEmptyStr'+'ing'](_0x3981a4)||!_0xd62e93['isString'](_0x3981a4))return null;const _0x495e18=(_0x3981a4=_0x3981a4['trim']())['indexOf'](';'),_0x7c6b41=function(_0x131728,_0x503257){_0x131728=function(_0xb5e647){if(_0xd62e93['isEmptyStr'+'ing'](_0xb5e647))return _0xb5e647;for(let _0x1be33f=0xe0d+0x1c80+-0x2a8d;_0x1be33f<_0x3d80f6['length'];_0x1be33f++){const _0x358627=_0xb5e647['indexOf'](_0x3d80f6[_0x1be33f]);-(-0xf50+-0x1b95+0x121*0x26)!==_0x358627&&(_0xb5e647=_0xb5e647['substr'](-0x7*-0x48b+0x1*0x167b+-0xc*0x486,_0x358627));}return _0xb5e647;}(_0x131728),_0xd62e93['validate'](_0xd62e93['isString'](_0x131728),_0x131728);let _0x1cc63f,_0x26518f,_0x48f380=_0x131728['indexOf']('=');if(_0x503257)-0xd49+-0xd6*0x28+0xf93*0x3===_0x48f380&&(_0x48f380=(_0x131728=_0x131728['substr'](-0x143b*0x1+-0x1949+-0x1*-0x2d85))['indexOf']('='));else{if(_0x48f380<=0x1799*0x1+-0x59*-0x13+-0x1e34)return;}if(_0x48f380<=0x149c+0xbd+0x5*-0x445?(_0x1cc63f='',_0x26518f=_0x131728['trim']()):(_0x1cc63f=_0x131728['substr'](-0x56*0x44+-0x7*-0x14+0x164c,_0x48f380)['trim'](),_0x26518f=_0x131728['substr'](_0x48f380+(0x804+-0x18c2+0x10bf))['trim']()),_0x193833['test'](_0x1cc63f)||_0x193833['test'](_0x26518f))return;const _0x2f98e2=new _0x2eb39e();return _0x2f98e2['key']=_0x1cc63f,_0x2f98e2['value']=_0x26518f,_0x2f98e2;}(-(-0x43a+0xa92+0x3*-0x21d)===_0x495e18?_0x3981a4:_0x3981a4['substr'](-0xabe+0x45*-0x83+0x2e0d,_0x495e18),!!_0x4417cc['loose']);if(!_0x7c6b41)return;if(-(-0x1e64+0x7b4+-0x9d*-0x25)===_0x495e18)return _0x7c6b41;const _0x41aaa6=_0x3981a4['slice'](_0x495e18+(-0x6be+-0x1fc+0x95*0xf))['trim']();if(0x1*0xe43+0x1*0x1933+-0x2776===_0x41aaa6['length'])return _0x7c6b41;const _0x5c02a5=_0x41aaa6['split'](';');for(;_0x5c02a5['length'];){const _0x5af304=_0x5c02a5['shift']()['trim']();if(-0x24d2+-0x2*-0xa70+0xff2===_0x5af304['length'])continue;const _0x2f521d=_0x5af304['indexOf']('=');let _0x2ac82d,_0x35b9e8;switch(-(-0x79*-0x3e+0xf10+-0x2c5d)===_0x2f521d?(_0x2ac82d=_0x5af304,_0x35b9e8=null):(_0x2ac82d=_0x5af304['substr'](0x20ad+-0xd5f+0xe*-0x161,_0x2f521d),_0x35b9e8=_0x5af304['substr'](_0x2f521d+(0x71*0x38+0x55a+0x1e11*-0x1))),_0x2ac82d=_0x2ac82d['trim']()['toLowerCas'+'e'](),_0x35b9e8&&(_0x35b9e8=_0x35b9e8['trim']()),_0x2ac82d){case'expires':if(_0x35b9e8){const _0x1c4529=_0x2ce66c(_0x35b9e8);_0x1c4529&&(_0x7c6b41['expires']=_0x1c4529);}break;case'max-age':if(_0x35b9e8&&/^-?[0-9]+$/['test'](_0x35b9e8)){const _0x3a152b=parseInt(_0x35b9e8,-0xeed*-0x1+0x3*-0x9f7+0xf02);_0x7c6b41['setMaxAge'](_0x3a152b);}break;case'domain':if(_0x35b9e8){const _0x319730=_0x35b9e8['trim']()['replace'](/^\./,'');_0x319730&&(_0x7c6b41['domain']=_0x319730['toLowerCas'+'e']());}break;case'path':_0x7c6b41['path']=_0x35b9e8&&'/'===_0x35b9e8[-0x1804+0x1*0x14b1+0x353]?_0x35b9e8:null;break;case'secure':_0x7c6b41['secure']=!(-0x2*0x137+0x1c20+-0x19b2);break;case'httponly':_0x7c6b41['httpOnly']=!(-0x1c7d+0x5ec+-0x1691*-0x1);break;case'samesite':switch(_0x35b9e8?_0x35b9e8['toLowerCas'+'e']():''){case'strict':_0x7c6b41['sameSite']='strict';break;case'lax':_0x7c6b41['sameSite']='lax';break;case'none':_0x7c6b41['sameSite']='none';break;default:_0x7c6b41['sameSite']=void(-0x68c*-0x3+-0x1fe5+0xc41);}break;default:_0x7c6b41['extensions']=_0x7c6b41['extensions']||[],_0x7c6b41['extensions']['push'](_0x5af304);}}return _0x7c6b41;}function _0xa26b3d(_0x1cdcf8){let _0x334f71;try{_0x334f71=JSON['parse'](_0x1cdcf8);}catch(_0x1eb2cc){return _0x1eb2cc;}return _0x334f71;}function _0x4294c7(_0xa1539b){if(!_0xa1539b||_0xd62e93['isEmptyStr'+'ing'](_0xa1539b))return null;let _0x5f2a25;if('string'==typeof _0xa1539b){if(_0x5f2a25=_0xa26b3d(_0xa1539b),_0x5f2a25 instanceof Error)return null;}else _0x5f2a25=_0xa1539b;const _0xf4c0da=new _0x2eb39e();for(let _0x116d71=0x583+-0x26f*0x1+0x18a*-0x2;_0x116d71<_0x2eb39e['serializab'+'leProperti'+'es']['length'];_0x116d71++){const _0x449273=_0x2eb39e['serializab'+'leProperti'+'es'][_0x116d71];void(-0x229a+-0xfaf+0x1*0x3249)!==_0x5f2a25[_0x449273]&&_0x5f2a25[_0x449273]!==_0x5aed28[_0x449273]&&('expires'===_0x449273||'creation'===_0x449273||'lastAccess'+'ed'===_0x449273?null===_0x5f2a25[_0x449273]?_0xf4c0da[_0x449273]=null:_0xf4c0da[_0x449273]='Infinity'==_0x5f2a25[_0x449273]?'Infinity':new Date(_0x5f2a25[_0x449273]):_0xf4c0da[_0x449273]=_0x5f2a25[_0x449273]);}return _0xf4c0da;}function _0x5a2376(_0x54dda4,_0x4ce3eb){_0xd62e93['validate'](_0xd62e93['isObject'](_0x54dda4),_0x54dda4),_0xd62e93['validate'](_0xd62e93['isObject'](_0x4ce3eb),_0x4ce3eb);let _0x2eb663=-0x1*-0x2149+-0x2*-0xf9+-0x137*0x1d;const _0xb14e6f=_0x54dda4['path']?_0x54dda4['path']['length']:0x58+0x1*-0x1d32+0x1cda;return _0x2eb663=(_0x4ce3eb['path']?_0x4ce3eb['path']['length']:-0xde7*0x1+-0x15b1+0x43*0x88)-_0xb14e6f,-0x1105+-0x17*0x118+-0x3d*-0xb1!==_0x2eb663||(_0x2eb663=(_0x54dda4['creation']?_0x54dda4['creation']['getTime']():_0x3d5306)-(_0x4ce3eb['creation']?_0x4ce3eb['creation']['getTime']():_0x3d5306),0xb0c+-0x1*0x397+-0x775!==_0x2eb663||(_0x2eb663=_0x54dda4['creationIn'+'dex']-_0x4ce3eb['creationIn'+'dex'])),_0x2eb663;}function _0x54f882(_0x3c1582){if(_0x3c1582 instanceof Object)return _0x3c1582;try{_0x3c1582=decodeURI(_0x3c1582);}catch(_0x57bbf5){}return _0x4a7256(_0x3c1582);}const _0x5aed28={'key':'','value':'','expires':'Infinity','maxAge':null,'domain':null,'path':null,'secure':!(0x779+-0x22de+0x1*0x1b66),'httpOnly':!(0x25b*-0x1+-0x13*-0x1d1+-0x2027*0x1),'extensions':null,'hostOnly':null,'pathIsDefault':null,'creation':null,'lastAccessed':null,'sameSite':void(-0x25db+-0x1ddf+0x43ba*0x1)};class _0x2eb39e{constructor(_0x786d3a={}){const _0x26ca15=_0x1513e1();_0x26ca15&&(this[_0x26ca15]=this['inspect']),Object['assign'](this,_0x5aed28,_0x786d3a),this['creation']=this['creation']||new Date(),Object['defineProp'+'erty'](this,'creationIn'+'dex',{'configurable':!(0x6a*-0x1c+0x27*0xc6+-0x1291),'enumerable':!(-0x1a88+0x78a*0x1+0x12ff),'writable':!(-0xf44+0x23a1+-0x145d),'value':++_0x2eb39e['cookiesCre'+'ated']});}['inspect'](){const _0x5d0a81=Date['now'](),_0x578b6d=null!=this['hostOnly']?this['hostOnly']:'?',_0x2c9378=this['creation']?_0x5d0a81-this['creation']['getTime']()+'ms':'?',_0x2f4224=this['lastAccess'+'ed']?_0x5d0a81-this['lastAccess'+'ed']['getTime']()+'ms':'?';return'Cookie=\x22'+this['toString']()+(';\x20hostOnly'+'=')+_0x578b6d+';\x20aAge='+_0x2f4224+';\x20cAge='+_0x2c9378+'\x22';}['toJSON'](){const _0x33714f={};for(const _0x193478 of _0x2eb39e['serializab'+'leProperti'+'es'])this[_0x193478]!==_0x5aed28[_0x193478]&&('expires'===_0x193478||'creation'===_0x193478||'lastAccess'+'ed'===_0x193478?null===this[_0x193478]?_0x33714f[_0x193478]=null:_0x33714f[_0x193478]='Infinity'==this[_0x193478]?'Infinity':this[_0x193478]['toISOStrin'+'g']():'maxAge'===_0x193478?null!==this[_0x193478]&&(_0x33714f[_0x193478]=this[_0x193478]==(-0x2141+0x1*-0xcb+0x220d)/(-0xc43+0x1c34+-0x35*0x4d)||this[_0x193478]==-(-0x1a1d+0x2350+0xd6*-0xb)/(0xc2+-0x1a84+0x19c2)?this[_0x193478]['toString']():this[_0x193478]):this[_0x193478]!==_0x5aed28[_0x193478]&&(_0x33714f[_0x193478]=this[_0x193478]));return _0x33714f;}['clone'](){return _0x4294c7(this['toJSON']());}['validate'](){if(!_0x56bef6['test'](this['value']))return!(-0x134b+-0x2e7*0x9+-0x421*-0xb);if(!(this['expires']==(-0x7*0x25+0x1f2c+-0x1e28)/(-0x23d*0x8+0x1c1d*-0x1+-0x11*-0x2b5)||this['expires']instanceof Date||_0x2ce66c(this['expires'])))return!(0x149c+-0x2*0x855+-0x3f1);if(null!=this['maxAge']&&this['maxAge']<=-0x1f79+0xd04+-0x15*-0xe1)return!(0x2316+0xb6c+0x5*-0x94d);if(null!=this['path']&&!_0x2e2028['test'](this['path']))return!(0x8e0*0x3+-0x5ab*-0x1+-0x204a);const _0x12d96a=this['cdomain']();if(_0x12d96a){if(_0x12d96a['match'](/\.$/))return!(-0x1fb9*0x1+-0x1482+0x343c);if(null==_0x36b600['getPublicS'+'uffix'](_0x12d96a))return!(-0x978*-0x1+-0x104e*-0x1+-0x897*0x3);}return!(-0x73*-0x13+0x1*-0x3e3+-0x4a6);}['setExpires'](_0x5c6646){_0x5c6646 instanceof Date?this['expires']=_0x5c6646:this['expires']=_0x2ce66c(_0x5c6646)||'Infinity';}['setMaxAge'](_0x58fa18){this['maxAge']=_0x58fa18===(0x331*-0x2+-0x11*0x1e7+0x26ba)/(0x110d+0x1155+0xb76*-0x3)||_0x58fa18===-(0x1*0xb9c+-0x11a9+0x60e)/(-0xd48+0xb5*-0x31+0x2fed*0x1)?_0x58fa18['toString']():_0x58fa18;}['cookieStri'+'ng'](){let _0x45d815=this['value'];return null==_0x45d815&&(_0x45d815=''),''===this['key']?_0x45d815:this['key']+'='+_0x45d815;}['toString'](){let _0x5d191d=this['cookieStri'+'ng']();if(this['expires']!=(-0x11a5+0xf*-0x1b6+0x8*0x56a)/(-0x17cb*0x1+-0x1346+0x89d*0x5)&&(this['expires']instanceof Date?_0x5d191d+=';\x20Expires='+_0x143722(this['expires']):_0x5d191d+=';\x20Expires='+this['expires']),null!=this['maxAge']&&this['maxAge']!=(-0x17*0x17a+0x1*-0x203d+-0xdf*-0x4c)/(0x26c1+0x7*-0x19+0x2*-0x1309)&&(_0x5d191d+=';\x20Max-Age='+this['maxAge']),this['domain']&&!this['hostOnly']&&(_0x5d191d+=';\x20Domain='+this['domain']),this['path']&&(_0x5d191d+=';\x20Path='+this['path']),this['secure']&&(_0x5d191d+=';\x20Secure'),this['httpOnly']&&(_0x5d191d+=';\x20HttpOnly'),this['sameSite']&&'none'!==this['sameSite']){const _0x40bd22=_0x2eb39e['sameSiteCa'+'nonical'][this['sameSite']['toLowerCas'+'e']()];_0x5d191d+=';\x20SameSite'+'='+(_0x40bd22||this['sameSite']);}return this['extensions']&&this['extensions']['forEach'](_0x2c879d=>{_0x5d191d+=';\x20'+_0x2c879d;}),_0x5d191d;}['TTL'](_0x92aedb){if(null!=this['maxAge'])return this['maxAge']<=-0x229a+0x2482+-0x1e8?0x9f4+-0xb5*-0x1f+0x1fdf*-0x1:(-0x11e9*0x1+0x6*0x50f+-0x889)*this['maxAge'];let _0x111d54=this['expires'];return _0x111d54!=(-0x129c+-0xe97+0x2134)/(-0x1*0x1849+0xa*0x1d9+0x5cf*0x1)?(_0x111d54 instanceof Date||(_0x111d54=_0x2ce66c(_0x111d54)||(0x1ef5+0xf*0xb3+-0x2971)/(-0x86c+-0x1*-0xa09+-0x19d)),_0x111d54==(-0x1497+-0x1399+-0x1*-0x2831)/(0x4*0x3c1+-0x16d1+0x7cd)?(0x16a2+-0x1e5c+0x7bb)/(0x892+-0x4a9*-0x5+-0x1fdf):_0x111d54['getTime']()-(_0x92aedb||Date['now']())):(-0xc24+0x1adf+-0xeba)/(-0x11ef*-0x1+0x1d3*-0xa+0x4f*0x1);}['expiryTime'](_0x3d99a6){if(null!=this['maxAge']){const _0x385dc6=_0x3d99a6||this['creation']||new Date(),_0x3ed532=this['maxAge']<=-0x4ac*0x8+-0x1*0x1da+0x273a?-(0x98f+-0x1463+-0xad5*-0x1)/(-0x116a+-0x17*-0x16c+-0xf4a):(0x31*0xb+0x797*-0x1+0x259*0x4)*this['maxAge'];return _0x385dc6['getTime']()+_0x3ed532;}return this['expires']==(-0x105*0xa+-0x534+0xf67)/(0x1d48+0x11*-0xd7+0xf01*-0x1)?(0x2*-0xd95+-0x1f6c+0x3a97)/(0x1a2e+0x3*0x767+-0x3063):this['expires']['getTime']();}['expiryDate'](_0x444158){const _0x56e843=this['expiryTime'](_0x444158);return _0x56e843==(0x1faa+-0x128f*0x1+0x45e*-0x3)/(0x1bb+-0x1*-0x1aab+-0x1c66)?new Date(_0x3d5306):_0x56e843==-(0x7*0x4c7+-0x370*0x2+-0x11*0x190)/(0x23b5+-0x4*0x475+-0x11e1)?new Date(0x2565*-0x1+-0x5cc+-0x1*-0x2b31):new Date(_0x56e843);}['isPersiste'+'nt'](){return null!=this['maxAge']||this['expires']!=(0x14bf*0x1+-0xf5c+-0x562)/(0xe9b*-0x1+0x9*0x38c+0xd*-0x155);}['canonicali'+'zedDomain'](){return null==this['domain']?null:_0x1f7bcd(this['domain']);}['cdomain'](){return this['canonicali'+'zedDomain']();}}function _0x28c534(_0x4e5025){if(null!=_0x4e5025){const _0x544c55=_0x4e5025['toLowerCas'+'e']();switch(_0x544c55){case _0x104153['STRICT']:case _0x104153['SILENT']:case _0x104153['DISABLED']:return _0x544c55;}}return _0x104153['SILENT'];}_0x2eb39e['cookiesCre'+'ated']=0x1b*0xf3+-0xffd*-0x2+-0x399b*0x1,_0x2eb39e['parse']=_0x35d8c0,_0x2eb39e['fromJSON']=_0x4294c7,_0x2eb39e['serializab'+'leProperti'+'es']=Object['keys'](_0x5aed28),_0x2eb39e['sameSiteLe'+'vel']={'strict':0x3,'lax':0x2,'none':0x1},_0x2eb39e['sameSiteCa'+'nonical']={'strict':'Strict','lax':'Lax'};class _0x4c6f15{constructor(_0x158620,_0x523279={'rejectPublicSuffixes':!(-0x12e7*-0x1+0x2310+-0xf*0x399)}){'boolean'==typeof _0x523279&&(_0x523279={'rejectPublicSuffixes':_0x523279}),_0xd62e93['validate'](_0xd62e93['isObject'](_0x523279),_0x523279),this['rejectPubl'+'icSuffixes']=_0x523279['rejectPubl'+'icSuffixes'],this['enableLoos'+'eMode']=!!_0x523279['looseMode'],this['allowSpeci'+'alUseDomai'+'n']='boolean'!=typeof _0x523279['allowSpeci'+'alUseDomai'+'n']||_0x523279['allowSpeci'+'alUseDomai'+'n'],this['store']=_0x158620||new _0x147b27(),this['prefixSecu'+'rity']=_0x28c534(_0x523279['prefixSecu'+'rity']),this['_cloneSync']=_0x20189f('clone'),this['_importCoo'+'kiesSync']=_0x20189f('_importCoo'+'kies'),this['getCookies'+'Sync']=_0x20189f('getCookies'),this['getCookieS'+'tringSync']=_0x20189f('getCookieS'+'tring'),this['getSetCook'+'ieStringsS'+'ync']=_0x20189f('getSetCook'+'ieStrings'),this['removeAllC'+'ookiesSync']=_0x20189f('removeAllC'+'ookies'),this['setCookieS'+'ync']=_0x20189f('setCookie'),this['serializeS'+'ync']=_0x20189f('serialize');}['setCookie'](_0x540bdf,_0x171ac7,_0x39f997,_0x59a2ea){let _0x5cfb45;if(_0xd62e93['validate'](_0xd62e93['isNonEmpty'+'String'](_0x171ac7),_0x59a2ea,_0x39f997),_0xd62e93['isFunction'](_0x171ac7))return(_0x59a2ea=_0x171ac7)(new Error('No\x20URL\x20was'+'\x20specified'));const _0x5de341=_0x54f882(_0x171ac7);if(_0xd62e93['isFunction'](_0x39f997)&&(_0x59a2ea=_0x39f997,_0x39f997={}),_0xd62e93['validate'](_0xd62e93['isFunction'](_0x59a2ea),_0x59a2ea),!_0xd62e93['isNonEmpty'+'String'](_0x540bdf)&&!_0xd62e93['isObject'](_0x540bdf)&&_0x540bdf instanceof String&&0x17*-0xfa+0xe49+-0x12b*-0x7==_0x540bdf['length'])return _0x59a2ea(null);const _0x50a315=_0x1f7bcd(_0x5de341['hostname']),_0x277bb0=_0x39f997['loose']||this['enableLoos'+'eMode'];let _0x5111c0=null;if(_0x39f997['sameSiteCo'+'ntext']&&(_0x5111c0=_0xae6891(_0x39f997['sameSiteCo'+'ntext']),!_0x5111c0))return _0x59a2ea(new Error(_0x1bead7));if('string'==typeof _0x540bdf||_0x540bdf instanceof String){if(!(_0x540bdf=_0x2eb39e['parse'](_0x540bdf,{'loose':_0x277bb0})))return _0x5cfb45=new Error('Cookie\x20fai'+'led\x20to\x20par'+'se'),_0x59a2ea(_0x39f997['ignoreErro'+'r']?null:_0x5cfb45);}else{if(!(_0x540bdf instanceof _0x2eb39e))return _0x5cfb45=new Error('First\x20argu'+'ment\x20to\x20se'+'tCookie\x20mu'+'st\x20be\x20a\x20Co'+'okie\x20objec'+'t\x20or\x20strin'+'g'),_0x59a2ea(_0x39f997['ignoreErro'+'r']?null:_0x5cfb45);}const _0x401a11=_0x39f997['now']||new Date();if(this['rejectPubl'+'icSuffixes']&&_0x540bdf['domain']&&null==_0x36b600['getPublicS'+'uffix'](_0x540bdf['cdomain'](),{'allowSpecialUseDomain':this['allowSpeci'+'alUseDomai'+'n'],'ignoreError':_0x39f997['ignoreErro'+'r']})&&!_0x3dc2c7['test'](_0x540bdf['domain']))return _0x5cfb45=new Error('Cookie\x20has'+'\x20domain\x20se'+'t\x20to\x20a\x20pub'+'lic\x20suffix'),_0x59a2ea(_0x39f997['ignoreErro'+'r']?null:_0x5cfb45);if(_0x540bdf['domain']){if(!_0x489824(_0x50a315,_0x540bdf['cdomain'](),!(0x58d*0x7+0x974+0x1*-0x304e)))return _0x5cfb45=new Error('Cookie\x20not'+'\x20in\x20this\x20h'+'ost\x27s\x20doma'+'in.\x20Cookie'+':'+_0x540bdf['cdomain']()+'\x20Request:'+_0x50a315),_0x59a2ea(_0x39f997['ignoreErro'+'r']?null:_0x5cfb45);null==_0x540bdf['hostOnly']&&(_0x540bdf['hostOnly']=!(0x67e*0x4+-0x353*-0x4+0x1b5*-0x17));}else _0x540bdf['hostOnly']=!(-0xbe*-0x1f+-0x9*-0x37d+-0x3667),_0x540bdf['domain']=_0x50a315;if(_0x540bdf['path']&&'/'===_0x540bdf['path'][0x68f+-0x2701*-0x1+0x4*-0xb64]||(_0x540bdf['path']=_0x18a4dc(_0x5de341['pathname']),_0x540bdf['pathIsDefa'+'ult']=!(0xf8f*0x2+-0xbe4*-0x2+-0x36e6)),!(-0x1004+-0x1*-0x1381+-0xdf*0x4)===_0x39f997['http']&&_0x540bdf['httpOnly'])return _0x5cfb45=new Error('Cookie\x20is\x20'+'HttpOnly\x20a'+'nd\x20this\x20is'+'n\x27t\x20an\x20HTT'+'P\x20API'),_0x59a2ea(_0x39f997['ignoreErro'+'r']?null:_0x5cfb45);if('none'!==_0x540bdf['sameSite']&&void(0x3*0x10b+-0x1239+0x114*0xe)!==_0x540bdf['sameSite']&&_0x5111c0&&'none'===_0x5111c0)return _0x5cfb45=new Error('Cookie\x20is\x20'+'SameSite\x20b'+'ut\x20this\x20is'+'\x20a\x20cross-o'+'rigin\x20requ'+'est'),_0x59a2ea(_0x39f997['ignoreErro'+'r']?null:_0x5cfb45);const _0x475732=this['prefixSecu'+'rity']===_0x104153['SILENT'];if(this['prefixSecu'+'rity']!==_0x104153['DISABLED']){let _0x5ba472,_0x48f6c2=!(-0x2033+-0x1f*0xe+0x21e6*0x1);if(function(_0x4af6f3){return _0xd62e93['validate'](_0xd62e93['isObject'](_0x4af6f3),_0x4af6f3),!_0x4af6f3['key']['startsWith']('__Secure-')||_0x4af6f3['secure'];}(_0x540bdf)?function(_0x2f3b24){return _0xd62e93['validate'](_0xd62e93['isObject'](_0x2f3b24)),!_0x2f3b24['key']['startsWith']('__Host-')||_0x2f3b24['secure']&&_0x2f3b24['hostOnly']&&null!=_0x2f3b24['path']&&'/'===_0x2f3b24['path'];}(_0x540bdf)||(_0x48f6c2=!(-0x1bb+0x7*0x10+0x1*0x14b),_0x5ba472='Cookie\x20has'+'\x20__Host\x20pr'+'efix\x20but\x20e'+'ither\x20Secu'+'re\x20or\x20Host'+'Only\x20attri'+'bute\x20is\x20no'+'t\x20set\x20or\x20P'+'ath\x20is\x20not'+'\x20\x27/\x27'):(_0x48f6c2=!(-0x1a7d+-0x363*0x9+-0xe3e*-0x4),_0x5ba472='Cookie\x20has'+'\x20__Secure\x20'+'prefix\x20but'+'\x20Secure\x20at'+'tribute\x20is'+'\x20not\x20set'),_0x48f6c2)return _0x59a2ea(_0x39f997['ignoreErro'+'r']||_0x475732?null:new Error(_0x5ba472));}const _0x42e416=this['store'];_0x42e416['updateCook'+'ie']||(_0x42e416['updateCook'+'ie']=function(_0x3e6bcf,_0x16c6d3,_0x14028c){this['putCookie'](_0x16c6d3,_0x14028c);}),_0x42e416['findCookie'](_0x540bdf['domain'],_0x540bdf['path'],_0x540bdf['key'],function(_0x1e749f,_0xf703ae){if(_0x1e749f)return _0x59a2ea(_0x1e749f);const _0x4f258d=function(_0xc38749){if(_0xc38749)return _0x59a2ea(_0xc38749);_0x59a2ea(null,_0x540bdf);};if(_0xf703ae){if(!(0x1cb9+0x1ff0+-0x3ca8)===_0x39f997['http']&&_0xf703ae['httpOnly'])return _0x1e749f=new Error('old\x20Cookie'+'\x20is\x20HttpOn'+'ly\x20and\x20thi'+'s\x20isn\x27t\x20an'+'\x20HTTP\x20API'),_0x59a2ea(_0x39f997['ignoreErro'+'r']?null:_0x1e749f);_0x540bdf['creation']=_0xf703ae['creation'],_0x540bdf['creationIn'+'dex']=_0xf703ae['creationIn'+'dex'],_0x540bdf['lastAccess'+'ed']=_0x401a11,_0x42e416['updateCook'+'ie'](_0xf703ae,_0x540bdf,_0x4f258d);}else _0x540bdf['creation']=_0x540bdf['lastAccess'+'ed']=_0x401a11,_0x42e416['putCookie'](_0x540bdf,_0x4f258d);});}['getCookies'](_0xe60227,_0x499a15,_0x4d9d90){_0xd62e93['validate'](_0xd62e93['isNonEmpty'+'String'](_0xe60227),_0x4d9d90,_0xe60227);const _0x24986a=_0x54f882(_0xe60227);_0xd62e93['isFunction'](_0x499a15)&&(_0x4d9d90=_0x499a15,_0x499a15={}),_0xd62e93['validate'](_0xd62e93['isObject'](_0x499a15),_0x4d9d90,_0x499a15),_0xd62e93['validate'](_0xd62e93['isFunction'](_0x4d9d90),_0x4d9d90);const _0x1c3fe4=_0x1f7bcd(_0x24986a['hostname']),_0x32c8cf=_0x24986a['pathname']||'/';let _0x117ec1=_0x499a15['secure'];null!=_0x117ec1||!_0x24986a['protocol']||'https:'!=_0x24986a['protocol']&&'wss:'!=_0x24986a['protocol']||(_0x117ec1=!(-0x15a+0x1*-0x277+0x3d1));let _0xdf1e2e=0x195a+0x16eb+-0x3045;if(_0x499a15['sameSiteCo'+'ntext']){const _0x3edcf1=_0xae6891(_0x499a15['sameSiteCo'+'ntext']);if(_0xdf1e2e=_0x2eb39e['sameSiteLe'+'vel'][_0x3edcf1],!_0xdf1e2e)return _0x4d9d90(new Error(_0x1bead7));}let _0x235d04=_0x499a15['http'];null==_0x235d04&&(_0x235d04=!(-0x3*0x3d7+0x1a36+-0xeb1));const _0x390179=_0x499a15['now']||Date['now'](),_0x17d277=!(-0x1593+0x12a1+0x5*0x97)!==_0x499a15['expire'],_0x5334c5=!!_0x499a15['allPaths'],_0x4e87ff=this['store'];function _0x55fb20(_0x2223ab){if(_0x2223ab['hostOnly']){if(_0x2223ab['domain']!=_0x1c3fe4)return!(-0xcfd+0x1*0x1361+0x6d*-0xf);}else{if(!_0x489824(_0x1c3fe4,_0x2223ab['domain'],!(0xfe8+-0x141+-0xea6)))return!(0x6d4+-0x3*0x3c7+0x482);}return!(!_0x5334c5&&!_0x3a6c05(_0x32c8cf,_0x2223ab['path']))&&(!(_0x2223ab['secure']&&!_0x117ec1)&&(!(_0x2223ab['httpOnly']&&!_0x235d04)&&(!(_0xdf1e2e&&_0x2eb39e['sameSiteLe'+'vel'][_0x2223ab['sameSite']||'none']>_0xdf1e2e)&&!(_0x17d277&&_0x2223ab['expiryTime']()<=_0x390179&&(_0x4e87ff['removeCook'+'ie'](_0x2223ab['domain'],_0x2223ab['path'],_0x2223ab['key'],()=>{}),-0xf29*-0x1+0xdc3+-0x1ceb)))));}_0x4e87ff['findCookie'+'s'](_0x1c3fe4,_0x5334c5?null:_0x32c8cf,this['allowSpeci'+'alUseDomai'+'n'],(_0x4c37df,_0x3c51cd)=>{if(_0x4c37df)return _0x4d9d90(_0x4c37df);_0x3c51cd=_0x3c51cd['filter'](_0x55fb20),!(-0x1367*0x1+-0x1*-0x977+0x9f1)!==_0x499a15['sort']&&(_0x3c51cd=_0x3c51cd['sort'](_0x5a2376));const _0x4e8f3f=new Date();for(const _0x5c12d8 of _0x3c51cd)_0x5c12d8['lastAccess'+'ed']=_0x4e8f3f;_0x4d9d90(null,_0x3c51cd);});}['getCookieS'+'tring'](..._0x2857ca){const _0x14abc9=_0x2857ca['pop']();_0xd62e93['validate'](_0xd62e93['isFunction'](_0x14abc9),_0x14abc9),_0x2857ca['push'](function(_0xc62496,_0x10bfae){_0xc62496?_0x14abc9(_0xc62496):_0x14abc9(null,_0x10bfae['sort'](_0x5a2376)['map'](_0x15b51a=>_0x15b51a['cookieStri'+'ng']())['join'](';\x20'));}),this['getCookies']['apply'](this,_0x2857ca);}['getSetCook'+'ieStrings'](..._0x443829){const _0x4dc1ce=_0x443829['pop']();_0xd62e93['validate'](_0xd62e93['isFunction'](_0x4dc1ce),_0x4dc1ce),_0x443829['push'](function(_0xc2ba33,_0x3fb28b){_0xc2ba33?_0x4dc1ce(_0xc2ba33):_0x4dc1ce(null,_0x3fb28b['map'](_0x5b8644=>_0x5b8644['toString']()));}),this['getCookies']['apply'](this,_0x443829);}['serialize'](_0x975cf0){_0xd62e93['validate'](_0xd62e93['isFunction'](_0x975cf0),_0x975cf0);let _0x16ed26=this['store']['constructo'+'r']['name'];_0xd62e93['isObject'](_0x16ed26)&&(_0x16ed26=null);const _0x46d0ec={'version':'tough-cook'+'ie@'+_0x5257ba,'storeType':_0x16ed26,'rejectPublicSuffixes':!!this['rejectPubl'+'icSuffixes'],'enableLooseMode':!!this['enableLoos'+'eMode'],'allowSpecialUseDomain':!!this['allowSpeci'+'alUseDomai'+'n'],'prefixSecurity':_0x28c534(this['prefixSecu'+'rity']),'cookies':[]};if(!this['store']['getAllCook'+'ies']||'function'!=typeof this['store']['getAllCook'+'ies'])return _0x975cf0(new Error('store\x20does'+'\x20not\x20suppo'+'rt\x20getAllC'+'ookies\x20and'+'\x20cannot\x20be'+'\x20serialize'+'d'));this['store']['getAllCook'+'ies']((_0x41cd03,_0x10573d)=>_0x41cd03?_0x975cf0(_0x41cd03):(_0x46d0ec['cookies']=_0x10573d['map'](_0x1231ee=>(delete(_0x1231ee=_0x1231ee instanceof _0x2eb39e?_0x1231ee['toJSON']():_0x1231ee)['creationIn'+'dex'],_0x1231ee)),_0x975cf0(null,_0x46d0ec)));}['toJSON'](){return this['serializeS'+'ync']();}['_importCoo'+'kies'](_0x4f3f55,_0x407847){let _0x304e15=_0x4f3f55['cookies'];if(!_0x304e15||!Array['isArray'](_0x304e15))return _0x407847(new Error('serialized'+'\x20jar\x20has\x20n'+'o\x20cookies\x20'+'array'));_0x304e15=_0x304e15['slice']();const _0x20ec2b=_0x3c028c=>{if(_0x3c028c)return _0x407847(_0x3c028c);if(!_0x304e15['length'])return _0x407847(_0x3c028c,this);let _0x11c902;try{_0x11c902=_0x4294c7(_0x304e15['shift']());}catch(_0x6ecb){return _0x407847(_0x6ecb);}if(null===_0x11c902)return _0x20ec2b(null);this['store']['putCookie'](_0x11c902,_0x20ec2b);};_0x20ec2b();}['clone'](_0x3ae76a,_0xc69622){0xa36+-0x67*-0x61+-0x89*0x5c===arguments['length']&&(_0xc69622=_0x3ae76a,_0x3ae76a=null),this['serialize']((_0x28d264,_0x6dd948)=>{if(_0x28d264)return _0xc69622(_0x28d264);_0x4c6f15['deserializ'+'e'](_0x6dd948,_0x3ae76a,_0xc69622);});}['cloneSync'](_0x4cdd48){if(0x2511+0x2*0x4+-0x1*0x2519===arguments['length'])return this['_cloneSync']();if(!_0x4cdd48['synchronou'+'s'])throw new Error('CookieJar\x20'+'clone\x20dest'+'ination\x20st'+'ore\x20is\x20not'+'\x20synchrono'+'us;\x20use\x20as'+'ync\x20API\x20in'+'stead.');return this['_cloneSync'](_0x4cdd48);}['removeAllC'+'ookies'](_0x1b5951){_0xd62e93['validate'](_0xd62e93['isFunction'](_0x1b5951),_0x1b5951);const _0x27baa9=this['store'];if('function'==typeof _0x27baa9['removeAllC'+'ookies']&&_0x27baa9['removeAllC'+'ookies']!==_0x3282f2['prototype']['removeAllC'+'ookies'])return _0x27baa9['removeAllC'+'ookies'](_0x1b5951);_0x27baa9['getAllCook'+'ies']((_0x3ffeb7,_0x341843)=>{if(_0x3ffeb7)return _0x1b5951(_0x3ffeb7);if(-0xec4+-0x2018+0x2edc===_0x341843['length'])return _0x1b5951(null);let _0x45e1cd=-0x62e+0x376+0x57*0x8;const _0xc0b5da=[];function _0x4f67e2(_0x3d88e0){if(_0x3d88e0&&_0xc0b5da['push'](_0x3d88e0),_0x45e1cd++,_0x45e1cd===_0x341843['length'])return _0x1b5951(_0xc0b5da['length']?_0xc0b5da[0x10b2*0x2+-0x174+0x248*-0xe]:null);}_0x341843['forEach'](_0x582e36=>{_0x27baa9['removeCook'+'ie'](_0x582e36['domain'],_0x582e36['path'],_0x582e36['key'],_0x4f67e2);});});}static['deserializ'+'e'](_0x5594f1,_0x2c100e,_0x3697c9){let _0x22fc85;if(0x1491+-0x1daf+0x921!==arguments['length']&&(_0x3697c9=_0x2c100e,_0x2c100e=null),_0xd62e93['validate'](_0xd62e93['isFunction'](_0x3697c9),_0x3697c9),'string'==typeof _0x5594f1){if(_0x22fc85=_0xa26b3d(_0x5594f1),_0x22fc85 instanceof Error)return _0x3697c9(_0x22fc85);}else _0x22fc85=_0x5594f1;const _0x58b74a=new _0x4c6f15(_0x2c100e,{'rejectPublicSuffixes':_0x22fc85['rejectPubl'+'icSuffixes'],'looseMode':_0x22fc85['enableLoos'+'eMode'],'allowSpecialUseDomain':_0x22fc85['allowSpeci'+'alUseDomai'+'n'],'prefixSecurity':_0x22fc85['prefixSecu'+'rity']});_0x58b74a['_importCoo'+'kies'](_0x22fc85,_0x9cbf6e=>{if(_0x9cbf6e)return _0x3697c9(_0x9cbf6e);_0x3697c9(null,_0x58b74a);});}static['deserializ'+'eSync'](_0x28ae58,_0x46312c){const _0x45585d='string'==typeof _0x28ae58?JSON['parse'](_0x28ae58):_0x28ae58,_0x3782ff=new _0x4c6f15(_0x46312c,{'rejectPublicSuffixes':_0x45585d['rejectPubl'+'icSuffixes'],'looseMode':_0x45585d['enableLoos'+'eMode']});if(!_0x3782ff['store']['synchronou'+'s'])throw new Error('CookieJar\x20'+'store\x20is\x20n'+'ot\x20synchro'+'nous;\x20use\x20'+'async\x20API\x20'+'instead.');return _0x3782ff['_importCoo'+'kiesSync'](_0x45585d),_0x3782ff;}}function _0x20189f(_0xa6f0a1){return function(..._0x1c1a2b){if(!this['store']['synchronou'+'s'])throw new Error('CookieJar\x20'+'store\x20is\x20n'+'ot\x20synchro'+'nous;\x20use\x20'+'async\x20API\x20'+'instead.');let _0x33aa32,_0x312e08;if(this[_0xa6f0a1](..._0x1c1a2b,(_0x23de69,_0x5d0009)=>{_0x33aa32=_0x23de69,_0x312e08=_0x5d0009;}),_0x33aa32)throw _0x33aa32;return _0x312e08;};}_0x4c6f15['fromJSON']=_0x4c6f15['deserializ'+'eSync'],['_importCoo'+'kies','clone','getCookies','getCookieS'+'tring','getSetCook'+'ieStrings','removeAllC'+'ookies','serialize','setCookie']['forEach'](_0x2c9143=>{_0x4c6f15['prototype'][_0x2c9143]=_0x144664(_0x4c6f15['prototype'][_0x2c9143]);}),_0x4c6f15['deserializ'+'e']=_0x144664(_0x4c6f15['deserializ'+'e']),_0x50c7f9['version']=_0x5257ba,_0x50c7f9['CookieJar']=_0x4c6f15,_0x50c7f9['Cookie']=_0x2eb39e,_0x50c7f9['Store']=_0x3282f2,_0x50c7f9['MemoryCook'+'ieStore']=_0x147b27,_0x50c7f9['parseDate']=_0x2ce66c,_0x50c7f9['formatDate']=_0x143722,_0x50c7f9['parse']=_0x35d8c0,_0x50c7f9['fromJSON']=_0x4294c7,_0x50c7f9['domainMatc'+'h']=_0x489824,_0x50c7f9['defaultPat'+'h']=_0x18a4dc,_0x50c7f9['pathMatch']=_0x3a6c05,_0x50c7f9['getPublicS'+'uffix']=_0x36b600['getPublicS'+'uffix'],_0x50c7f9['cookieComp'+'are']=_0x5a2376,_0x50c7f9['permuteDom'+'ain']=_0x301dee(0x777+0x1483+0x275)['permuteDom'+'ain'],_0x50c7f9['permutePat'+'h']=function(_0x283eeb){if(_0xd62e93['validate'](_0xd62e93['isString'](_0x283eeb)),'/'===_0x283eeb)return['/'];const _0x4ac146=[_0x283eeb];for(;_0x283eeb['length']>0xe6b+0xb2f+-0x1999;){const _0x43f2c6=_0x283eeb['lastIndexO'+'f']('/');if(-0x17*-0x184+-0x104+0x1c8*-0x13===_0x43f2c6)break;_0x283eeb=_0x283eeb['substr'](0x17f6+-0x7d5*0x1+-0x1*0x1021,_0x43f2c6),_0x4ac146['push'](_0x283eeb);}return _0x4ac146['push']('/'),_0x4ac146;},_0x50c7f9['canonicalD'+'omain']=_0x1f7bcd,_0x50c7f9['PrefixSecu'+'rityEnum']=_0x104153,_0x50c7f9['ParameterE'+'rror']=_0xd62e93['ParameterE'+'rror'];},0xa83:(_0x431d0a,_0x513dc4,_0x41d1dd)=>{'use strict';const {fromCallback:_0x32827a}=_0x41d1dd(0x61d+0x258e+-0x26d7),_0x242f69=_0x41d1dd(-0xeef*0x2+0x44*0x85+-0x9*-0x17e)['i'],_0x24a8d8=_0x41d1dd(0xe6+-0x3a74+0x55*0x109)['permuteDom'+'ain'],_0x591efc=_0x41d1dd(0x351*-0x3+-0x3*0x88d+0x3863)['z'],{getCustomInspectSymbol:_0x445a68,getUtilInspect:_0x51eeeb}=_0x41d1dd(0x1a89*0x1+0x1aa2+0x9*-0x19a);class _0x2136fd extends _0x242f69{constructor(){super(),this['synchronou'+'s']=!(-0xbe+-0x777*0x3+0x1723),this['idx']=Object['create'](null);const _0x4b638e=_0x445a68();_0x4b638e&&(this[_0x4b638e]=this['inspect']);}['inspect'](){return'{\x20idx:\x20'+_0x51eeeb(_0x4d5b7a)(this['idx'],!(0x3*-0xb96+0x14*-0xbd+0x1*0x3187),-0xe+-0x63*-0x59+-0x225b)+'\x20}';}['findCookie'](_0x2639d6,_0x5d838e,_0x51c84d,_0x53ce56){return this['idx'][_0x2639d6]&&this['idx'][_0x2639d6][_0x5d838e]?_0x53ce56(null,this['idx'][_0x2639d6][_0x5d838e][_0x51c84d]||null):_0x53ce56(null,void(-0x199c+-0x502*0x6+0x37a8));}['findCookie'+'s'](_0x4bff15,_0x289b2e,_0x2968a4,_0xe35872){const _0x5546d5=[];if('function'==typeof _0x2968a4&&(_0xe35872=_0x2968a4,_0x2968a4=!(-0x16f5+-0x1b87+0x327c)),!_0x4bff15)return _0xe35872(null,[]);let _0x3853f5;_0x3853f5=_0x289b2e?function(_0x559c90){Object['keys'](_0x559c90)['forEach'](_0x21947d=>{if(_0x591efc(_0x289b2e,_0x21947d)){const _0x3ae0b9=_0x559c90[_0x21947d];for(const _0x8b7081 in _0x3ae0b9)_0x5546d5['push'](_0x3ae0b9[_0x8b7081]);}});}:function(_0x43bc41){for(const _0x5c96a6 in _0x43bc41){const _0x3572de=_0x43bc41[_0x5c96a6];for(const _0xf0107f in _0x3572de)_0x5546d5['push'](_0x3572de[_0xf0107f]);}};const _0x235306=_0x24a8d8(_0x4bff15,_0x2968a4)||[_0x4bff15],_0x40866c=this['idx'];_0x235306['forEach'](_0x3a45bc=>{const _0x4c6d03=_0x40866c[_0x3a45bc];_0x4c6d03&&_0x3853f5(_0x4c6d03);}),_0xe35872(null,_0x5546d5);}['putCookie'](_0x51fee9,_0x2fa370){this['idx'][_0x51fee9['domain']]||(this['idx'][_0x51fee9['domain']]=Object['create'](null)),this['idx'][_0x51fee9['domain']][_0x51fee9['path']]||(this['idx'][_0x51fee9['domain']][_0x51fee9['path']]=Object['create'](null)),this['idx'][_0x51fee9['domain']][_0x51fee9['path']][_0x51fee9['key']]=_0x51fee9,_0x2fa370(null);}['updateCook'+'ie'](_0x165051,_0x1fa78d,_0x52a41a){this['putCookie'](_0x1fa78d,_0x52a41a);}['removeCook'+'ie'](_0x4f169b,_0x3655f1,_0x302ab8,_0x230a73){this['idx'][_0x4f169b]&&this['idx'][_0x4f169b][_0x3655f1]&&this['idx'][_0x4f169b][_0x3655f1][_0x302ab8]&&delete this['idx'][_0x4f169b][_0x3655f1][_0x302ab8],_0x230a73(null);}['removeCook'+'ies'](_0x2d20e6,_0x314ef6,_0x4404c9){return this['idx'][_0x2d20e6]&&(_0x314ef6?delete this['idx'][_0x2d20e6][_0x314ef6]:delete this['idx'][_0x2d20e6]),_0x4404c9(null);}['removeAllC'+'ookies'](_0x32cca4){return this['idx']=Object['create'](null),_0x32cca4(null);}['getAllCook'+'ies'](_0x1cd6af){const _0x51d416=[],_0x36ee09=this['idx'];Object['keys'](_0x36ee09)['forEach'](_0x479dee=>{Object['keys'](_0x36ee09[_0x479dee])['forEach'](_0x245729=>{Object['keys'](_0x36ee09[_0x479dee][_0x245729])['forEach'](_0x1d70c4=>{null!==_0x1d70c4&&_0x51d416['push'](_0x36ee09[_0x479dee][_0x245729][_0x1d70c4]);});});}),_0x51d416['sort']((_0x128d15,_0x330a50)=>(_0x128d15['creationIn'+'dex']||-0x7*0x453+-0xc80*0x1+0x2ac5*0x1)-(_0x330a50['creationIn'+'dex']||0x212+0x9a9*-0x3+-0x1ae9*-0x1)),_0x1cd6af(null,_0x51d416);}}function _0x4d5b7a(_0x40fd5b){const _0xeeed72=Object['keys'](_0x40fd5b);if(0x2c7*0x7+-0x3*-0x63a+-0xcb5*0x3===_0xeeed72['length'])return'[Object:\x20n'+'ull\x20protot'+'ype]\x20{}';let _0x373306='[Object:\x20n'+'ull\x20protot'+'ype]\x20{\x0a';return Object['keys'](_0x40fd5b)['forEach']((_0x2422ad,_0x48f72e)=>{_0x373306+=function(_0xfef937,_0x430697){let _0xa88a5='\x20\x20\x27'+_0xfef937+('\x27:\x20[Object'+':\x20null\x20pro'+'totype]\x20{\x0a');return Object['keys'](_0x430697)['forEach']((_0x1bdc8c,_0x55d29e,_0x3c0fc2)=>{_0xa88a5+=function(_0x48d8ff,_0x199aa2){const _0xa25df='\x20\x20\x20\x20';let _0x113fd6=_0xa25df+'\x27'+_0x48d8ff+('\x27:\x20[Object'+':\x20null\x20pro'+'totype]\x20{\x0a');return Object['keys'](_0x199aa2)['forEach']((_0xda461,_0x22a775,_0x4c3824)=>{const _0x35532d=_0x199aa2[_0xda461];_0x113fd6+='\x20\x20\x20\x20\x20\x20'+_0xda461+':\x20'+_0x35532d['inspect'](),_0x22a775<_0x4c3824['length']-(0xa6*0x31+0xc*-0x29+0x1dd9*-0x1)&&(_0x113fd6+=','),_0x113fd6+='\x0a';}),_0x113fd6+=_0xa25df+'}',_0x113fd6;}(_0x1bdc8c,_0x430697[_0x1bdc8c]),_0x55d29e<_0x3c0fc2['length']-(0x1*0x21bd+-0x1*-0x13+-0x21cf)&&(_0xa88a5+=','),_0xa88a5+='\x0a';}),_0xa88a5+='\x20\x20}',_0xa88a5;}(_0x2422ad,_0x40fd5b[_0x2422ad]),_0x48f72e<_0xeeed72['length']-(-0x5b5+-0x79d*0x3+0x1c8d)&&(_0x373306+=','),_0x373306+='\x0a';}),_0x373306+='}',_0x373306;}['findCookie','findCookie'+'s','putCookie','updateCook'+'ie','removeCook'+'ie','removeCook'+'ies','removeAllC'+'ookies','getAllCook'+'ies']['forEach'](_0x1edcb8=>{_0x2136fd['prototype'][_0x1edcb8]=_0x32827a(_0x2136fd['prototype'][_0x1edcb8]);}),_0x513dc4['n']=_0x2136fd;},0x14c9:(_0xedbdcc,_0x60d189)=>{'use strict';_0x60d189['z']=function(_0x4a824e,_0x512f12){if(_0x512f12===_0x4a824e)return!(-0xd92+-0x707*0x1+0x1499);if(0x22db+-0xeb9*-0x1+-0x29c*0x13===_0x4a824e['indexOf'](_0x512f12)){if('/'===_0x512f12['substr'](-(-0x7*-0x20e+0x1d8c+-0x2bed*0x1)))return!(-0x22*0x64+0x1a82+-0xd3a);if('/'===_0x4a824e['substr'](_0x512f12['length'],-0x38e*-0x2+0x13fa+-0x1*0x1b15))return!(-0x3*-0x1df+0x4*-0x7f0+0x1a23);}return!(0x1a2*0x7+0x3d1*-0x7+0xf4a);};},0x1e6f:(_0x54a3bf,_0x5ee85e,_0x3dd85e)=>{'use strict';const _0x78a2cd=_0x3dd85e(-0x18f*0xa+0x2595+-0x1*0x1166);_0x5ee85e['permuteDom'+'ain']=function(_0xad7958,_0xa1d7e0){const _0x245c4b=_0x78a2cd['getPublicS'+'uffix'](_0xad7958,{'allowSpecialUseDomain':_0xa1d7e0});if(!_0x245c4b)return null;if(_0x245c4b==_0xad7958)return[_0xad7958];'.'==_0xad7958['slice'](-(-0x193a+0x2621+-0xce6))&&(_0xad7958=_0xad7958['slice'](0x1ca6+0x483+-0x2129,-(-0x229+-0x5fe+-0x8*-0x105)));const _0xd0c045=_0xad7958['slice'](0x1c7*0xb+0x1*0x523+-0x18b0,-(_0x245c4b['length']+(-0x1858+-0xd*-0x1aa+0x2b7)))['split']('.')['reverse']();let _0x25d2f7=_0x245c4b;const _0x5b9e71=[_0x25d2f7];for(;_0xd0c045['length'];)_0x25d2f7=_0xd0c045['shift']()+'.'+_0x25d2f7,_0x5b9e71['push'](_0x25d2f7);return _0x5b9e71;};},0x499:(_0x249305,_0x539d82,_0x2d3fd0)=>{'use strict';const _0x564ae5=_0x2d3fd0(-0x11f*-0x5+0x1*-0x1a6f+0x1cbc),_0x5c6c4f=['local','example','invalid','localhost','test'],_0x15cc20=['localhost','invalid'];_0x539d82['getPublicS'+'uffix']=function(_0x52e898,_0x40fffe={}){const _0xbb59d5=_0x52e898['split']('.'),_0x2a071d=_0xbb59d5[_0xbb59d5['length']-(0x986+-0x220b+0x92*0x2b)],_0x5ae58d=!!_0x40fffe['allowSpeci'+'alUseDomai'+'n'],_0x2386a4=!!_0x40fffe['ignoreErro'+'r'];if(_0x5ae58d&&_0x5c6c4f['includes'](_0x2a071d)){if(_0xbb59d5['length']>-0x1fde+0xd31+0x12ae)return _0xbb59d5[_0xbb59d5['length']-(-0x967+-0x13ff+0x1d68)]+'.'+_0x2a071d;if(_0x15cc20['includes'](_0x2a071d))return''+_0x2a071d;}if(!_0x2386a4&&_0x5c6c4f['includes'](_0x2a071d))throw new Error('Cookie\x20has'+'\x20domain\x20se'+'t\x20to\x20the\x20p'+'ublic\x20suff'+'ix\x20\x22'+_0x2a071d+('\x22\x20which\x20is'+'\x20a\x20special'+'\x20use\x20domai'+'n.\x20To\x20allo'+'w\x20this,\x20co'+'nfigure\x20yo'+'ur\x20CookieJ'+'ar\x20with\x20{a'+'llowSpecia'+'lUseDomain'+':true,\x20rej'+'ectPublicS'+'uffixes:\x20f'+'alse}.'));return _0x564ae5['get'](_0x52e898);};},0x12e4:(_0x345024,_0x24b611)=>{'use strict';_0x24b611['i']=class{constructor(){this['synchronou'+'s']=!(-0x20*-0x133+0xd*0xdf+-0x31b2);}['findCookie'](_0x3c8f2c,_0x5bc24d,_0x51363b,_0x265890){throw new Error('findCookie'+'\x20is\x20not\x20im'+'plemented');}['findCookie'+'s'](_0x11ff4b,_0x552b61,_0x4b0c67,_0x4d023a){throw new Error('findCookie'+'s\x20is\x20not\x20i'+'mplemented');}['putCookie'](_0x5082da,_0x2a0d04){throw new Error('putCookie\x20'+'is\x20not\x20imp'+'lemented');}['updateCook'+'ie'](_0x269c57,_0x3a0331,_0x166691){throw new Error('updateCook'+'ie\x20is\x20not\x20'+'implemente'+'d');}['removeCook'+'ie'](_0x4ff0fe,_0x1073e3,_0x50be14,_0x19acf1){throw new Error('removeCook'+'ie\x20is\x20not\x20'+'implemente'+'d');}['removeCook'+'ies'](_0x1fe36b,_0x3ecce3,_0x40e42f){throw new Error('removeCook'+'ies\x20is\x20not'+'\x20implement'+'ed');}['removeAllC'+'ookies'](_0x14959d){throw new Error('removeAllC'+'ookies\x20is\x20'+'not\x20implem'+'ented');}['getAllCook'+'ies'](_0x424d38){throw new Error('getAllCook'+'ies\x20is\x20not'+'\x20implement'+'ed\x20(theref'+'ore\x20jar\x20ca'+'nnot\x20be\x20se'+'rialized)');}};},0x26c1:(_0x3eee9c,_0x361426,_0x55f159)=>{function _0x47c917(){try{return _0x55f159(-0x30e0+0x7c2+-0xad*-0x71);}catch(_0x44828d){return null;}}function _0x498e6b(){return Symbol['for']('nodejs.uti'+'l.inspect.'+'custom');}_0x361426['getUtilIns'+'pect']=function(_0x2a0ca2,_0x23c020={}){const _0x23c3a5=(_0x23c020['requireUti'+'l']||_0x47c917)();return function(_0x38cbcd,_0x20251a,_0x1009e1){return _0x23c3a5?_0x23c3a5['inspect'](_0x38cbcd,_0x20251a,_0x1009e1):_0x2a0ca2(_0x38cbcd);};},_0x361426['getCustomI'+'nspectSymb'+'ol']=function(_0x387506={}){return(_0x387506['lookupCust'+'omInspectS'+'ymbol']||_0x498e6b)()||function(_0x5e1cbb){const _0x290037=(_0x5e1cbb['requireUti'+'l']||_0x47c917)();return _0x290037?_0x290037['inspect']['custom']:null;}(_0x387506);};},0xba6:(_0x4b6aa3,_0x17ce51)=>{'use strict';function _0x196702(_0x2ac0f7){return'function'==typeof _0x2ac0f7;}function _0x507d57(_0x5567a4){return'string'==typeof _0x5567a4||_0x5567a4 instanceof String;}function _0x3324b5(_0x32ab17){return'[object\x20Ob'+'ject]'===toString['call'](_0x32ab17);}class _0x898777 extends Error{constructor(..._0x1e6cb7){super(..._0x1e6cb7);}}_0x17ce51['ParameterE'+'rror']=_0x898777,_0x17ce51['isFunction']=_0x196702,_0x17ce51['isNonEmpty'+'String']=function(_0xfc331){return _0x507d57(_0xfc331)&&''!==_0xfc331;},_0x17ce51['isDate']=function(_0x48e8b2){return function(_0x5a8b85,_0x577402){try{return _0x5a8b85 instanceof _0x577402;}catch(_0x24b0c4){return!(-0x1db0+0x2184+-0x3d3);}}(_0x48e8b2,Date)&&function(_0x810eb9){return'number'==typeof _0x810eb9&&_0x810eb9%(0x5*-0x125+-0x1255+-0x805*-0x3)==-0x1*0x155f+-0x25ab*0x1+0x21*0x1ca;}(_0x48e8b2['getTime']());},_0x17ce51['isEmptyStr'+'ing']=function(_0x51aa79){return''===_0x51aa79||_0x51aa79 instanceof String&&''===_0x51aa79['toString']();},_0x17ce51['isString']=_0x507d57,_0x17ce51['isObject']=_0x3324b5,_0x17ce51['validate']=function(_0x56fc49,_0x1583cc,_0x42c503){if(_0x196702(_0x1583cc)||(_0x42c503=_0x1583cc,_0x1583cc=null),_0x3324b5(_0x42c503)||(_0x42c503={'Error':'Failed\x20Che'+'ck'}),!_0x56fc49){if(!_0x1583cc)throw new _0x898777(_0x42c503);_0x1583cc(new _0x898777(_0x42c503));}};},0xc15:_0x9f09f5=>{_0x9f09f5['exports']='4.1.3';},0x2708:function(_0xa0d2b4,_0x3d0cdd,_0x3d0386){'use strict';var _0x539a4b,_0x3121c1,_0x1118da,_0x21d5a2=this&&this['__createBi'+'nding']||(Object['create']?function(_0x159018,_0x4b0e70,_0x305a51,_0x38069b){void(-0x1*0x2177+-0x1*0x17b1+0x3928)===_0x38069b&&(_0x38069b=_0x305a51);var _0x376e30=Object['getOwnProp'+'ertyDescri'+'ptor'](_0x4b0e70,_0x305a51);_0x376e30&&!('get'in _0x376e30?!_0x4b0e70['__esModule']:_0x376e30['writable']||_0x376e30['configurab'+'le'])||(_0x376e30={'enumerable':!(0x1ea1+-0x1c55+0x1c*-0x15),'get':function(){return _0x4b0e70[_0x305a51];}}),Object['defineProp'+'erty'](_0x159018,_0x38069b,_0x376e30);}:function(_0x12a94e,_0x5eb100,_0x581398,_0x5ba49f){void(0x1*0x94d+-0x113f+0x153*0x6)===_0x5ba49f&&(_0x5ba49f=_0x581398),_0x12a94e[_0x5ba49f]=_0x5eb100[_0x581398];}),_0x1eab7b=this&&this['__setModul'+'eDefault']||(Object['create']?function(_0xa4bbef,_0x361059){Object['defineProp'+'erty'](_0xa4bbef,'default',{'enumerable':!(-0x17a5+-0x2227+0x39cc),'value':_0x361059});}:function(_0x494d51,_0x2c8f66){_0x494d51['default']=_0x2c8f66;}),_0x404876=this&&this['__importSt'+'ar']||function(_0x4ee0ae){if(_0x4ee0ae&&_0x4ee0ae['__esModule'])return _0x4ee0ae;var _0x475823={};if(null!=_0x4ee0ae){for(var _0x3b1775 in _0x4ee0ae)'default'!==_0x3b1775&&Object['prototype']['hasOwnProp'+'erty']['call'](_0x4ee0ae,_0x3b1775)&&_0x21d5a2(_0x475823,_0x4ee0ae,_0x3b1775);}return _0x1eab7b(_0x475823,_0x4ee0ae),_0x475823;},_0xf4e226=this&&this['__awaiter']||function(_0x24ab3a,_0xce7404,_0x457c9f,_0x5449f0){return new(_0x457c9f||(_0x457c9f=Promise))(function(_0x2c424a,_0x639ef6){function _0x3edacc(_0x4ad5fe){try{_0xa6c92(_0x5449f0['next'](_0x4ad5fe));}catch(_0x3029c8){_0x639ef6(_0x3029c8);}}function _0x2cb209(_0x207bad){try{_0xa6c92(_0x5449f0['throw'](_0x207bad));}catch(_0x4acd2e){_0x639ef6(_0x4acd2e);}}function _0xa6c92(_0x25acee){var _0x9731bc;_0x25acee['done']?_0x2c424a(_0x25acee['value']):(_0x9731bc=_0x25acee['value'],_0x9731bc instanceof _0x457c9f?_0x9731bc:new _0x457c9f(function(_0x282f20){_0x282f20(_0x9731bc);}))['then'](_0x3edacc,_0x2cb209);}_0xa6c92((_0x5449f0=_0x5449f0['apply'](_0x24ab3a,_0xce7404||[]))['next']());});};Object['defineProp'+'erty'](_0x3d0cdd,'__esModule',{'value':!(0x1*-0x1b7a+0x17c+0x19fe)}),_0x3d0cdd['MatlabConn'+'ection']=_0x3d0cdd['LifecycleE'+'ventType']=void(0x12*-0xaf+0x1023+-0x9*0x6d);const _0x348ea6=_0x3d0386(-0x64*-0x5+-0x1*-0x17b3+0x4e2*-0x1),_0x4fa564=_0x3d0386(0x4f6*0x2+-0x5*-0x439+-0x3c3),_0x19a1b7=_0x404876(_0x3d0386(-0x23a0+0xf2a+-0x2*-0xea0)),_0x4fa97d=_0x404876(_0x3d0386(-0x21c2+-0x37*0x46+0x1*0x3863)),_0x3d8be8=_0x404876(_0x3d0386(0x128d+0x146a+0x61*-0x5e)),_0x244175=_0x404876(_0x3d0386(-0x2*-0x188d+-0x2052+0xa48)),_0x1d39fc=_0x3d0386(-0x5b2*0x1+-0x20fc+-0x30e5*-0x1);var _0x157d89;!function(_0x5c3d51){_0x5c3d51[_0x5c3d51['CONNECTED']=-0x19f6+-0x39*0x80+0x3676]='CONNECTED',_0x5c3d51[_0x5c3d51['DISCONNECT'+'ED']=-0x9*-0x22f+0x1792+0xace*-0x4]='DISCONNECT'+'ED';}(_0x157d89=_0x3d0cdd['LifecycleE'+'ventType']||(_0x3d0cdd['LifecycleE'+'ventType']={}));const _0x2c3c5e=null!==(_0x539a4b=process['env']['HTTP_PROXY'])&&void(-0x871*0x4+0x24bd+-0x2f9)!==_0x539a4b?_0x539a4b:process['env']['http_proxy'],_0x114769=null!==(_0x3121c1=process['env']['HTTPS_PROX'+'Y'])&&void(-0x22*-0x54+-0x2447+0x191f)!==_0x3121c1?_0x3121c1:process['env']['https_prox'+'y'],_0x346b2e=null!==(_0x1118da=process['env']['NO_PROXY'])&&void(0x3f*0x1f+0x19*-0x17f+0x1dc6)!==_0x1118da?_0x1118da:process['env']['no_proxy'];delete process['env']['HTTP_PROXY'],delete process['env']['http_proxy'],delete process['env']['HTTPS_PROX'+'Y'],delete process['env']['https_prox'+'y'],delete process['env']['NO_PROXY'],delete process['env']['no_proxy'];class _0xb77007{constructor(){this['_lifecycle'+'Callback']=null,this['_channelId'+'Ct']=0x11f2+-0x828+-0x166*0x7;}['close'](){var _0x426330;null===(_0x426330=this['_client'])||void(0x231c*0x1+-0x25d8+-0x19*-0x1c)===_0x426330||_0x426330['disconnect'](),this['_lifecycle'+'Callback']=null;}['getChannel'+'Id'](){return(this['_channelId'+'Ct']++)['toString']();}['publish'](_0x50152f,_0x61b4e4){this['_client']['publish'](this['_prependCh'+'annel'](_0x50152f),_0x61b4e4);}['subscribe'](_0x5c9b91,_0x4b1569){return this['_client']['subscribe'](this['_prependCh'+'annel'](_0x5c9b91),_0x4b1569);}['unsubscrib'+'e'](_0x27eb35){_0x27eb35['cancel']();}['setLifecyc'+'leListener'](_0xe2c096){this['_lifecycle'+'Callback']=_0xe2c096;}['onConnecti'+'onSuccess'](){var _0x35a2eb;null===(_0x35a2eb=this['_lifecycle'+'Callback'])||void(-0xc77*-0x1+0xc33+-0x18aa)===_0x35a2eb||_0x35a2eb['call'](this,_0x157d89['CONNECTED']);}['onConnecti'+'onFailure'](){var _0x26eec7;null===(_0x26eec7=this['_lifecycle'+'Callback'])||void(0x65d+0x2121+-0x277e)===_0x26eec7||_0x26eec7['call'](this,_0x157d89['DISCONNECT'+'ED']);}['setupConne'+'ctionCallb'+'acks'](){this['_client']['on']('transport:'+'up',this['onConnecti'+'onSuccess']['bind'](this)),this['_client']['on']('transport:'+'down',this['onConnecti'+'onFailure']['bind'](this));}['_prependCh'+'annel'](_0x285077){return'/matlab'+_0x285077;}}_0x3d0cdd['MatlabConn'+'ection']=_0xb77007;class _0x238c95 extends _0xb77007{constructor(_0x3517f8){super(),this['_apiKey']=_0x3517f8;}['initialize'](_0x4b5691,_0x270df7){return _0xf4e226(this,void(-0xac2+-0xd15*-0x1+-0x253),void(-0x219e+0x1cd*-0x1+-0x236b*-0x1),function*(){const _0x3dca68=yield _0x4fa97d['readFile'](_0x270df7);_0x19a1b7['setDefault'+'ResultOrde'+'r']('ipv4first');const _0x542140='https://lo'+'calhost:'+_0x4b5691+('/messagese'+'rvice/asyn'+'c');this['_client']=new _0x1d39fc['Client'](_0x542140,{'tls':{'ca':_0x3dca68}}),this['_client']['setHeader']('mwapikey',this['_apiKey']),this['setupConne'+'ctionCallb'+'acks']();});}}class _0xab2a1b extends _0xb77007{constructor(_0x108e93){super(),this['_url']=_0x108e93;}['initialize'](){return _0xf4e226(this,void(-0x1dad+0x4*0x54a+0x885),void(-0x17fc+-0x1966+0x3162),function*(){this['_client']=new _0x1d39fc['Client'](this['_url']),this['setupConne'+'ctionCallb'+'acks'](),this['publish']('matlabls/c'+'onnection/'+'startup',{});});}}_0x3d0cdd['default']=new class{['launchNewM'+'atlab'](_0x330395,_0x280fab,_0x414117,_0x5cca83={}){const _0xc526d7=(function(){const _0x1e32c4='abcdefghij'+'klmnopqrst'+'uvwxyzABCD'+'EFGHIJKLMN'+'OPQRSTUVWX'+'YZ01234567'+'89-._~';let _0x30d440='';for(let _0x2cc697=-0x1de5+0x2*0x9e5+-0x1*-0xa1b;_0x2cc697<0x14a1+0x15c8*0x1+0x2669*-0x1;_0x2cc697++)_0x30d440+=_0x1e32c4['charAt']((-0x11d1*0x2+0x10f3*0x1+0x12af,_0x4fa564['randomInt'])(0xa7b*-0x1+-0x25bd+0xaa*0x49));return _0x30d440;}());let _0x26b37c;try{const _0x5b34c9=Object['assign'](Object['assign'](Object['assign']({},process['env']),_0x5cca83),{'MATLAB_LOG_DIR':_0x414117,'MWAPIKEY':_0xc526d7});null==_0x2c3c5e&&null==_0x114769&&null==_0x346b2e||(_0x5b34c9['HTTP_PROXY']=_0x2c3c5e,_0x5b34c9['HTTPS_PROX'+'Y']=_0x114769,_0x5b34c9['NO_PROXY']=_0x346b2e);let _0x58af8d=process['env']['HOME'];if('darwin'===_0x3d8be8['platform']()&&'arm64'===_0x3d8be8['arch']()&&'matlab'!==_0x330395){const _0x30575a=_0x330395['split'](_0x244175['sep']);_0x58af8d=_0x30575a['slice'](-0xd*0x121+0x4ba+0x9f3,_0x30575a['length']-(-0x2385+0x161*0x12+0xab5))['join'](_0x244175['sep']);}_0x26b37c=(0x10cd+-0x1f00+0xe33,_0x348ea6['spawn'])(_0x330395,_0x280fab,{'cwd':_0x58af8d,'env':_0x5b34c9});}catch(_0x5915d3){return null;}return{'matlabProcess':_0x26b37c,'matlabConnection':new _0x238c95(_0xc526d7)};}['connectToE'+'xistingMat'+'lab'](_0x1e7646){return _0xf4e226(this,void(0x221*0x12+-0x1a*0x17f+0x25*0x4),void(0x1bce+-0x297*-0x9+0x331d*-0x1),function*(){return new _0xab2a1b(_0x1e7646);});}}();},0xf57:(_0x47b276,_0x2b3bd1,_0x23feee)=>{'use strict';_0x23feee(0x5*0x3b+0x3c8e+0x35*-0x7b);var _0x559439,_0x26f419=_0x23feee(-0x187e+0xbc8+0x1f4a),_0x27b2e8=_0x23feee(0x3c44+-0x1aff+0x5e*0x1),_0x302f70=_0x23feee(0xf*-0x119+-0x3*0xa54+0x45af),_0x12c604=_0x23feee(-0x1d*-0x2f+-0x2*-0x368+0x1*0x52f),_0x35db3d=_0x23feee(-0x85b+-0x2183+0x3413*0x1),_0x1fbc75=_0x23feee(0x7d+0x815*0x1+-0x1aad*-0x1),_0x1587c9=_0x23feee(-0x24b8+0x2391+0xc54)['Buffer'];function _0x20a4c0(_0x5bfdc8){var _0x433912=this;_0x433912['options']=_0x5bfdc8||{},_0x433912['proxyOptio'+'ns']=_0x433912['options']['proxy']||{},_0x433912['maxSockets']=_0x433912['options']['maxSockets']||_0x27b2e8['Agent']['defaultMax'+'Sockets'],_0x433912['requests']=[],_0x433912['sockets']=[],_0x433912['on']('free',function(_0x28b753,_0x5cc233,_0x24b075){for(var _0x136796=-0x18f7+0x131*0xd+0x4bd*0x2,_0x2f5160=_0x433912['requests']['length'];_0x136796<_0x2f5160;++_0x136796){var _0x21fdb7=_0x433912['requests'][_0x136796];if(_0x21fdb7['host']===_0x5cc233&&_0x21fdb7['port']===_0x24b075)return _0x433912['requests']['splice'](_0x136796,0x1502+0x61f*-0x6+0x17*0xaf),void _0x21fdb7['request']['onSocket'](_0x28b753);}_0x28b753['destroy'](),_0x433912['removeSock'+'et'](_0x28b753);});}function _0x445191(_0x50912b,_0x1d3bc9){var _0x5ee98a=this;_0x20a4c0['prototype']['createSock'+'et']['call'](_0x5ee98a,_0x50912b,function(_0x50b7c5){var _0x4bc791=_0x26f419['connect'](0x4ea+0x105a+-0x1544,_0x474064({},_0x5ee98a['options'],{'servername':_0x50912b['host'],'socket':_0x50b7c5}));_0x5ee98a['sockets'][_0x5ee98a['sockets']['indexOf'](_0x50b7c5)]=_0x4bc791,_0x1d3bc9(_0x4bc791);});}function _0x474064(_0x33537e){for(var _0x5bcc32=-0x1*0x1fed+0xa6+0x16*0x16c,_0x37f067=arguments['length'];_0x5bcc32<_0x37f067;++_0x5bcc32){var _0x1474a6=arguments[_0x5bcc32];if('object'==typeof _0x1474a6)for(var _0x548265=Object['keys'](_0x1474a6),_0x1af422=-0x1*-0x93f+0x3*-0x176+-0x4dd,_0x4ea688=_0x548265['length'];_0x1af422<_0x4ea688;++_0x1af422){var _0x4f566d=_0x548265[_0x1af422];void(-0x1775*0x1+0x2*-0x99+0x18a7)!==_0x1474a6[_0x4f566d]&&(_0x33537e[_0x4f566d]=_0x1474a6[_0x4f566d]);}}return _0x33537e;}_0x2b3bd1['httpOverHt'+'tp']=function(_0x1b42bd){var _0x4b94e5=new _0x20a4c0(_0x1b42bd);return _0x4b94e5['request']=_0x27b2e8['request'],_0x4b94e5;},_0x2b3bd1['httpsOverH'+'ttp']=function(_0x166cc3){var _0x8e6aab=new _0x20a4c0(_0x166cc3);return _0x8e6aab['request']=_0x27b2e8['request'],_0x8e6aab['createSock'+'et']=_0x445191,_0x8e6aab['defaultPor'+'t']=-0x1fb6+0x1e10+0x1*0x361,_0x8e6aab;},_0x2b3bd1['httpOverHt'+'tps']=function(_0x11785){var _0x29667a=new _0x20a4c0(_0x11785);return _0x29667a['request']=_0x302f70['request'],_0x29667a;},_0x2b3bd1['httpsOverH'+'ttps']=function(_0x2b52a0){var _0xa5cc0=new _0x20a4c0(_0x2b52a0);return _0xa5cc0['request']=_0x302f70['request'],_0xa5cc0['createSock'+'et']=_0x445191,_0xa5cc0['defaultPor'+'t']=0x1*0x1a3f+0x392*0x7+-0x1*0x3182,_0xa5cc0;},_0x1fbc75['inherits'](_0x20a4c0,_0x12c604['EventEmitt'+'er']),_0x20a4c0['prototype']['addRequest']=function(_0x298cde,_0x22309a){var _0x1e9236=this;'string'==typeof _0x22309a&&(_0x22309a={'host':_0x22309a,'port':arguments[0x2171+-0x2*-0x32e+-0x27cb*0x1],'path':arguments[-0x4*-0x285+-0x193a+-0x1*-0xf29]}),_0x1e9236['sockets']['length']>=this['maxSockets']?_0x1e9236['requests']['push']({'host':_0x22309a['host'],'port':_0x22309a['port'],'request':_0x298cde}):_0x1e9236['createConn'+'ection']({'host':_0x22309a['host'],'port':_0x22309a['port'],'request':_0x298cde});},_0x20a4c0['prototype']['createConn'+'ection']=function(_0x1be169){var _0x201d46=this;_0x201d46['createSock'+'et'](_0x1be169,function(_0x51425c){function _0x35217c(){_0x201d46['emit']('free',_0x51425c,_0x1be169['host'],_0x1be169['port']);}function _0x3f3b24(_0x4e524e){_0x201d46['removeSock'+'et'](_0x51425c),_0x51425c['removeList'+'ener']('free',_0x35217c),_0x51425c['removeList'+'ener']('close',_0x3f3b24),_0x51425c['removeList'+'ener']('agentRemov'+'e',_0x3f3b24);}_0x51425c['on']('free',_0x35217c),_0x51425c['on']('close',_0x3f3b24),_0x51425c['on']('agentRemov'+'e',_0x3f3b24),_0x1be169['request']['onSocket'](_0x51425c);});},_0x20a4c0['prototype']['createSock'+'et']=function(_0x18c17c,_0xad217){var _0x189c42=this,_0x52cd98={};_0x189c42['sockets']['push'](_0x52cd98);var _0x5dfaeb=_0x474064({},_0x189c42['proxyOptio'+'ns'],{'method':'CONNECT','path':_0x18c17c['host']+':'+_0x18c17c['port'],'agent':!(-0x20e6+-0x1c18+0x1455*0x3)});_0x5dfaeb['proxyAuth']&&(_0x5dfaeb['headers']=_0x5dfaeb['headers']||{},_0x5dfaeb['headers']['Proxy-Auth'+'orization']='Basic\x20'+_0x1587c9['from'](_0x5dfaeb['proxyAuth'])['toString']('base64')),_0x559439('making\x20CON'+'NECT\x20reque'+'st');var _0x2320f0=_0x189c42['request'](_0x5dfaeb);function _0x1c6ce0(_0x5f51aa,_0x5b4f9e,_0x31581c){if(_0x2320f0['removeAllL'+'isteners'](),_0x5b4f9e['removeAllL'+'isteners'](),-0x19b4+-0x6fe+0x217a===_0x5f51aa['statusCode'])_0x35db3d['equal'](_0x31581c['length'],-0x2092+-0x2*0x1124+0x42da),_0x559439('tunneling\x20'+'connection'+'\x20has\x20estab'+'lished'),_0x189c42['sockets'][_0x189c42['sockets']['indexOf'](_0x52cd98)]=_0x5b4f9e,_0xad217(_0x5b4f9e);else{_0x559439('tunneling\x20'+'socket\x20cou'+'ld\x20not\x20be\x20'+'establishe'+'d,\x20statusC'+'ode=%d',_0x5f51aa['statusCode']);var _0x18d145=new Error('tunneling\x20'+'socket\x20cou'+'ld\x20not\x20be\x20'+'establishe'+'d,\x20statusC'+'ode='+_0x5f51aa['statusCode']);_0x18d145['code']='ECONNRESET',_0x18c17c['request']['emit']('error',_0x18d145),_0x189c42['removeSock'+'et'](_0x52cd98);}}_0x2320f0['useChunked'+'EncodingBy'+'Default']=!(-0x23e8+0x1d33+-0x6b6*-0x1),_0x2320f0['once']('response',function(_0x21ccc6){_0x21ccc6['upgrade']=!(-0x135f+0xaf0+0x1*0x86f);}),_0x2320f0['once']('upgrade',function(_0x1a711b,_0x1efe59,_0x43db4f){process['nextTick'](function(){_0x1c6ce0(_0x1a711b,_0x1efe59,_0x43db4f);});}),_0x2320f0['once']('connect',_0x1c6ce0),_0x2320f0['once']('error',function(_0x531543){_0x2320f0['removeAllL'+'isteners'](),_0x559439('tunneling\x20'+'socket\x20cou'+'ld\x20not\x20be\x20'+'establishe'+'d,\x20cause=%'+'s\x0a',_0x531543['message'],_0x531543['stack']);var _0x2c1ec6=new Error('tunneling\x20'+'socket\x20cou'+'ld\x20not\x20be\x20'+'establishe'+'d,\x20cause='+_0x531543['message']);_0x2c1ec6['code']='ECONNRESET',_0x18c17c['request']['emit']('error',_0x2c1ec6),_0x189c42['removeSock'+'et'](_0x52cd98);}),_0x2320f0['end']();},_0x20a4c0['prototype']['removeSock'+'et']=function(_0x366ddc){var _0x156b5c=this['sockets']['indexOf'](_0x366ddc);if(-(0xadc+0x183e+-0x2319)!==_0x156b5c){this['sockets']['splice'](_0x156b5c,0x1eed+-0x6bb*-0x1+-0x99*0x3f);var _0xa14733=this['requests']['shift']();_0xa14733&&this['createConn'+'ection'](_0xa14733);}},_0x559439=process['env']['NODE_DEBUG']&&/\btunnel\b/['test'](process['env']['NODE_DEBUG'])?function(){var _0x2ea9b6=Array['prototype']['slice']['call'](arguments);'string'==typeof _0x2ea9b6[-0x1a3e*0x1+0xbbf*0x2+0x2c0]?_0x2ea9b6[-0x2d8+-0x41f*0x2+0xb16]='TUNNEL:\x20'+_0x2ea9b6[0x1590+-0x39*-0x24+-0x1d94]:_0x2ea9b6['unshift']('TUNNEL:'),console['error']['apply'](console,_0x2ea9b6);}:function(){},_0x2b3bd1['debug']=_0x559439;},0x4d4:(_0x3ccc5f,_0x5b4d94)=>{'use strict';_0x5b4d94['fromCallba'+'ck']=function(_0x21292c){return Object['defineProp'+'erty'](function(){if('function'!=typeof arguments[arguments['length']-(-0x35c*-0xb+-0x4*-0x563+-0x3a7f)])return new Promise((_0x54e9df,_0x4dbfb7)=>{arguments[arguments['length']]=(_0x2c2cfb,_0x5e80d1)=>{if(_0x2c2cfb)return _0x4dbfb7(_0x2c2cfb);_0x54e9df(_0x5e80d1);},arguments['length']++,_0x21292c['apply'](this,arguments);});_0x21292c['apply'](this,arguments);},'name',{'value':_0x21292c['name']});},_0x5b4d94['fromPromis'+'e']=function(_0x5c6e94){return Object['defineProp'+'erty'](function(){const _0x459243=arguments[arguments['length']-(-0x480+0x61e+-0x19d)];if('function'!=typeof _0x459243)return _0x5c6e94['apply'](this,arguments);delete arguments[arguments['length']-(-0x77d*-0x1+0xee0*0x1+-0x165c)],arguments['length']--,_0x5c6e94['apply'](this,arguments)['then'](_0x3b0235=>_0x459243(null,_0x3b0235),_0x459243);},'name',{'value':_0x5c6e94['name']});};},0x488:(_0x3db13a,_0x34edaf,_0x3bc6ea)=>{'use strict';var _0x2f5811=_0x3bc6ea(0x22c9+0x1169*0x1+0x1*-0x2c23),_0x1cd86=_0x3bc6ea(0x32b+-0x21b*0xb+0x11cb*0x2),_0xf3ee99=/^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/,_0x2ded45=/[\n\r\t]/g,_0x29177c=/^[A-Za-z][A-Za-z0-9+-.]*:\/\//,_0x5075bf=/:\d+$/,_0x2aab0b=/^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i,_0x4d610e=/^[a-zA-Z]:/;function _0x30e79b(_0x1b3ac2){return(_0x1b3ac2||'')['toString']()['replace'](_0xf3ee99,'');}var _0x4b9f59=[['#','hash'],['?','query'],function(_0x4ee1d8,_0x24cc43){return _0x2e1588(_0x24cc43['protocol'])?_0x4ee1d8['replace'](/\\/g,'/'):_0x4ee1d8;},['/','pathname'],['@','auth',0x250e+-0x1f5c+-0x2f*0x1f],[NaN,'host',void(-0x1d6b*0x1+0x15f8+0x1*0x773),-0x39e+-0x1165+0x14*0x10d,-0xa51+-0x20b*0x3+0x1073],[/:(\d*)$/,'port',void(-0x1ebb+-0xe53*-0x1+0x1068),-0xa49*-0x3+-0x4ef+-0x19eb],[NaN,'hostname',void(-0x1813+0x1814+-0x1*0x1),-0x1c10+0x2d7+-0x193a*-0x1,-0x11ba+-0x1d6a+0x2f25]],_0x2abd90={'hash':0x1,'query':0x1};function _0xfd2eb2(_0x26b3f5){var _0x44ec5c,_0x2d3e76=('undefined'!=typeof window?window:'undefined'!=typeof global?global:'undefined'!=typeof self?self:{})['location']||{},_0x52b7dd={},_0x1ba0a1=typeof(_0x26b3f5=_0x26b3f5||_0x2d3e76);if('blob:'===_0x26b3f5['protocol'])_0x52b7dd=new _0x185297(unescape(_0x26b3f5['pathname']),{});else{if('string'===_0x1ba0a1){for(_0x44ec5c in(_0x52b7dd=new _0x185297(_0x26b3f5,{}),_0x2abd90))delete _0x52b7dd[_0x44ec5c];}else{if('object'===_0x1ba0a1){for(_0x44ec5c in _0x26b3f5)_0x44ec5c in _0x2abd90||(_0x52b7dd[_0x44ec5c]=_0x26b3f5[_0x44ec5c]);void(0x11e5+-0xae9+0x6fc*-0x1)===_0x52b7dd['slashes']&&(_0x52b7dd['slashes']=_0x29177c['test'](_0x26b3f5['href']));}}}return _0x52b7dd;}function _0x2e1588(_0x1f3f38){return'file:'===_0x1f3f38||'ftp:'===_0x1f3f38||'http:'===_0x1f3f38||'https:'===_0x1f3f38||'ws:'===_0x1f3f38||'wss:'===_0x1f3f38;}function _0x17ce98(_0x5e781e,_0x285565){_0x5e781e=(_0x5e781e=_0x30e79b(_0x5e781e))['replace'](_0x2ded45,''),_0x285565=_0x285565||{};var _0x24b904,_0x2a6dfa=_0x2aab0b['exec'](_0x5e781e),_0x39ff44=_0x2a6dfa[-0xef0*0x1+0x4*-0x6e0+0x2a71]?_0x2a6dfa[0x18f*-0xd+-0x1212+0x7*0x57a]['toLowerCas'+'e']():'',_0x16a835=!!_0x2a6dfa[-0x27*-0x25+0x38*0x4c+-0x1641],_0x2d59d9=!!_0x2a6dfa[0xd15+-0x2193+0x1481],_0x52963b=0xdf*0x29+-0xd19+-0x169e;return _0x16a835?_0x2d59d9?(_0x24b904=_0x2a6dfa[0xa75+0x249d+-0x2f10]+_0x2a6dfa[0x1f*0x13d+-0xd5*0x2c+0x4*-0x71]+_0x2a6dfa[0x5*0x21a+-0xa*0x241+-0x606*-0x2],_0x52963b=_0x2a6dfa[0x5*0x36d+0x1*-0x162b+0x50c]['length']+_0x2a6dfa[-0x1839+-0xed5*0x1+-0x89*-0x49]['length']):(_0x24b904=_0x2a6dfa[0x2170+0x1*-0x1be6+-0x588]+_0x2a6dfa[0x16d*-0x16+0x8*-0xde+0x2652],_0x52963b=_0x2a6dfa[-0x582+-0x1*0x24a7+0x5*0x86f]['length']):_0x2d59d9?(_0x24b904=_0x2a6dfa[-0x1a01+0x4*-0x9af+-0x38*-0x128]+_0x2a6dfa[0x3*-0xc87+-0x1*-0x25cf+-0x36*0x1],_0x52963b=_0x2a6dfa[-0x12*-0xe3+0xc7*0x1c+-0x1*0x25b7]['length']):_0x24b904=_0x2a6dfa[0x1529*0x1+0x83d+-0x1d62],'file:'===_0x39ff44?_0x52963b>=-0x17b1+-0x66b+0x303*0xa&&(_0x24b904=_0x24b904['slice'](0x1556+-0x650+-0xf04)):_0x2e1588(_0x39ff44)?_0x24b904=_0x2a6dfa[-0xc61*-0x1+-0xe3*-0x3+-0xf06]:_0x39ff44?_0x16a835&&(_0x24b904=_0x24b904['slice'](-0x2*0x5ea+-0x11ee+0x1dc4)):_0x52963b>=0x2*-0xf20+0x47f*-0x5+0x34bd&&_0x2e1588(_0x285565['protocol'])&&(_0x24b904=_0x2a6dfa[-0x1*0xb63+-0x9bf+0x1526*0x1]),{'protocol':_0x39ff44,'slashes':_0x16a835||_0x2e1588(_0x39ff44),'slashesCount':_0x52963b,'rest':_0x24b904};}function _0x185297(_0x1551da,_0x5baf97,_0xd4489f){if(_0x1551da=(_0x1551da=_0x30e79b(_0x1551da))['replace'](_0x2ded45,''),!(this instanceof _0x185297))return new _0x185297(_0x1551da,_0x5baf97,_0xd4489f);var _0x49dfcd,_0x3bd6d4,_0x4c91fe,_0x34c752,_0x508b74,_0x20a39f,_0x1a3704=_0x4b9f59['slice'](),_0x2b794e=typeof _0x5baf97,_0x48e08a=this,_0x41ec52=0xfd2*-0x1+-0xf6d+0x1f3f*0x1;for('object'!==_0x2b794e&&'string'!==_0x2b794e&&(_0xd4489f=_0x5baf97,_0x5baf97=null),_0xd4489f&&'function'!=typeof _0xd4489f&&(_0xd4489f=_0x1cd86['parse']),_0x49dfcd=!(_0x3bd6d4=_0x17ce98(_0x1551da||'',_0x5baf97=_0xfd2eb2(_0x5baf97)))['protocol']&&!_0x3bd6d4['slashes'],_0x48e08a['slashes']=_0x3bd6d4['slashes']||_0x49dfcd&&_0x5baf97['slashes'],_0x48e08a['protocol']=_0x3bd6d4['protocol']||_0x5baf97['protocol']||'',_0x1551da=_0x3bd6d4['rest'],('file:'===_0x3bd6d4['protocol']&&(-0x5f+-0x1c50+-0x71*-0x41!==_0x3bd6d4['slashesCou'+'nt']||_0x4d610e['test'](_0x1551da))||!_0x3bd6d4['slashes']&&(_0x3bd6d4['protocol']||_0x3bd6d4['slashesCou'+'nt']<-0x33+0x253c+-0x2507*0x1||!_0x2e1588(_0x48e08a['protocol'])))&&(_0x1a3704[0xe9*-0xb+-0x1*0x241+0xc47]=[/(.*)/,'pathname']);_0x41ec52<_0x1a3704['length'];_0x41ec52++)'function'!=typeof(_0x34c752=_0x1a3704[_0x41ec52])?(_0x4c91fe=_0x34c752[-0xd5*0x25+-0xb9*-0x1+0x1e10],_0x20a39f=_0x34c752[0x130*-0x1f+0x1e6c+0x665],_0x4c91fe!=_0x4c91fe?_0x48e08a[_0x20a39f]=_0x1551da:'string'==typeof _0x4c91fe?~(_0x508b74='@'===_0x4c91fe?_0x1551da['lastIndexO'+'f'](_0x4c91fe):_0x1551da['indexOf'](_0x4c91fe))&&('number'==typeof _0x34c752[-0x75a+-0x1*0x178d+0x1ee9*0x1]?(_0x48e08a[_0x20a39f]=_0x1551da['slice'](-0x18d5+-0x1*0x25da+-0x14e5*-0x3,_0x508b74),_0x1551da=_0x1551da['slice'](_0x508b74+_0x34c752[0x1*0x17a6+-0x2432+0xc8e*0x1])):(_0x48e08a[_0x20a39f]=_0x1551da['slice'](_0x508b74),_0x1551da=_0x1551da['slice'](0x245*0x11+-0x11c9+-0x14cc,_0x508b74))):(_0x508b74=_0x4c91fe['exec'](_0x1551da))&&(_0x48e08a[_0x20a39f]=_0x508b74[-0x240+-0x1f09+-0x1*-0x214a],_0x1551da=_0x1551da['slice'](-0x2331+0x22b7+-0x2*-0x3d,_0x508b74['index'])),_0x48e08a[_0x20a39f]=_0x48e08a[_0x20a39f]||_0x49dfcd&&_0x34c752[0x1*-0x2239+-0xe*-0x1ab+-0x18e*-0x7]&&_0x5baf97[_0x20a39f]||'',_0x34c752[0xc0f+0x38f*0x3+-0x16b8]&&(_0x48e08a[_0x20a39f]=_0x48e08a[_0x20a39f]['toLowerCas'+'e']())):_0x1551da=_0x34c752(_0x1551da,_0x48e08a);_0xd4489f&&(_0x48e08a['query']=_0xd4489f(_0x48e08a['query'])),_0x49dfcd&&_0x5baf97['slashes']&&'/'!==_0x48e08a['pathname']['charAt'](-0x1*0x205+-0x7*-0x101+-0x502)&&(''!==_0x48e08a['pathname']||''!==_0x5baf97['pathname'])&&(_0x48e08a['pathname']=function(_0x155f2f,_0x166193){if(''===_0x155f2f)return _0x166193;for(var _0xe8ad61=(_0x166193||'/')['split']('/')['slice'](0x796*-0x2+-0x1dab+-0x373*-0xd,-(0x1d7e+0x10c7+0x292*-0x12))['concat'](_0x155f2f['split']('/')),_0x541c83=_0xe8ad61['length'],_0xecd1ef=_0xe8ad61[_0x541c83-(0xc84+-0x360*0x2+0x19*-0x3b)],_0x2c31d7=!(0x1*-0x1277+-0x1634*-0x1+-0x3bc*0x1),_0x3698ea=0x1*0xcd4+-0x198*0x4+-0x674;_0x541c83--;)'.'===_0xe8ad61[_0x541c83]?_0xe8ad61['splice'](_0x541c83,-0xf27+-0x2*0xd1+-0x10ca*-0x1):'..'===_0xe8ad61[_0x541c83]?(_0xe8ad61['splice'](_0x541c83,0xb94+-0xfb*-0x25+-0x32*0xf5),_0x3698ea++):_0x3698ea&&(-0x5*-0x1e7+0xd2d*0x2+-0x23dd===_0x541c83&&(_0x2c31d7=!(-0x1f91*-0x1+0x1b7b+0xec3*-0x4)),_0xe8ad61['splice'](_0x541c83,-0x1*-0x1b78+-0xf7a+-0xbfd),_0x3698ea--);return _0x2c31d7&&_0xe8ad61['unshift'](''),'.'!==_0xecd1ef&&'..'!==_0xecd1ef||_0xe8ad61['push'](''),_0xe8ad61['join']('/');}(_0x48e08a['pathname'],_0x5baf97['pathname'])),'/'!==_0x48e08a['pathname']['charAt'](0x101c*-0x1+0x1bbc*-0x1+0x2bd8)&&_0x2e1588(_0x48e08a['protocol'])&&(_0x48e08a['pathname']='/'+_0x48e08a['pathname']),_0x2f5811(_0x48e08a['port'],_0x48e08a['protocol'])||(_0x48e08a['host']=_0x48e08a['hostname'],_0x48e08a['port']=''),_0x48e08a['username']=_0x48e08a['password']='',_0x48e08a['auth']&&(~(_0x508b74=_0x48e08a['auth']['indexOf'](':'))?(_0x48e08a['username']=_0x48e08a['auth']['slice'](-0x9cd+0x117*-0x1f+-0x2b96*-0x1,_0x508b74),_0x48e08a['username']=encodeURIComponent(decodeURIComponent(_0x48e08a['username'])),_0x48e08a['password']=_0x48e08a['auth']['slice'](_0x508b74+(-0x2557+0xa17+0x1b41*0x1)),_0x48e08a['password']=encodeURIComponent(decodeURIComponent(_0x48e08a['password']))):_0x48e08a['username']=encodeURIComponent(decodeURIComponent(_0x48e08a['auth'])),_0x48e08a['auth']=_0x48e08a['password']?_0x48e08a['username']+':'+_0x48e08a['password']:_0x48e08a['username']),_0x48e08a['origin']='file:'!==_0x48e08a['protocol']&&_0x2e1588(_0x48e08a['protocol'])&&_0x48e08a['host']?_0x48e08a['protocol']+'//'+_0x48e08a['host']:'null',_0x48e08a['href']=_0x48e08a['toString']();}_0x185297['prototype']={'set':function(_0x505a6a,_0x12bc3f,_0xffbe49){var _0x2abf19=this;switch(_0x505a6a){case'query':'string'==typeof _0x12bc3f&&_0x12bc3f['length']&&(_0x12bc3f=(_0xffbe49||_0x1cd86['parse'])(_0x12bc3f)),_0x2abf19[_0x505a6a]=_0x12bc3f;break;case'port':_0x2abf19[_0x505a6a]=_0x12bc3f,_0x2f5811(_0x12bc3f,_0x2abf19['protocol'])?_0x12bc3f&&(_0x2abf19['host']=_0x2abf19['hostname']+':'+_0x12bc3f):(_0x2abf19['host']=_0x2abf19['hostname'],_0x2abf19[_0x505a6a]='');break;case'hostname':_0x2abf19[_0x505a6a]=_0x12bc3f,_0x2abf19['port']&&(_0x12bc3f+=':'+_0x2abf19['port']),_0x2abf19['host']=_0x12bc3f;break;case'host':_0x2abf19[_0x505a6a]=_0x12bc3f,_0x5075bf['test'](_0x12bc3f)?(_0x12bc3f=_0x12bc3f['split'](':'),_0x2abf19['port']=_0x12bc3f['pop'](),_0x2abf19['hostname']=_0x12bc3f['join'](':')):(_0x2abf19['hostname']=_0x12bc3f,_0x2abf19['port']='');break;case'protocol':_0x2abf19['protocol']=_0x12bc3f['toLowerCas'+'e'](),_0x2abf19['slashes']=!_0xffbe49;break;case'pathname':case'hash':if(_0x12bc3f){var _0x5c50d4='pathname'===_0x505a6a?'/':'#';_0x2abf19[_0x505a6a]=_0x12bc3f['charAt'](0xed*0x16+-0x1c6+-0x1298)!==_0x5c50d4?_0x5c50d4+_0x12bc3f:_0x12bc3f;}else _0x2abf19[_0x505a6a]=_0x12bc3f;break;case'username':case'password':_0x2abf19[_0x505a6a]=encodeURIComponent(_0x12bc3f);break;case'auth':var _0x30f152=_0x12bc3f['indexOf'](':');~_0x30f152?(_0x2abf19['username']=_0x12bc3f['slice'](-0x1f03+-0xc9d*0x2+0x383d,_0x30f152),_0x2abf19['username']=encodeURIComponent(decodeURIComponent(_0x2abf19['username'])),_0x2abf19['password']=_0x12bc3f['slice'](_0x30f152+(-0x191b*-0x1+0x4*0x14+0xcb5*-0x2)),_0x2abf19['password']=encodeURIComponent(decodeURIComponent(_0x2abf19['password']))):_0x2abf19['username']=encodeURIComponent(decodeURIComponent(_0x12bc3f));}for(var _0x15b91=-0x1*-0x851+0xbaa*-0x2+0xf03;_0x15b91<_0x4b9f59['length'];_0x15b91++){var _0xec8a62=_0x4b9f59[_0x15b91];_0xec8a62[0x121d+0x12eb+-0x2504]&&(_0x2abf19[_0xec8a62[0x256d+-0x18b1+-0xcbb]]=_0x2abf19[_0xec8a62[-0x7*-0xce+0x30*-0x82+-0x12bf*-0x1]]['toLowerCas'+'e']());}return _0x2abf19['auth']=_0x2abf19['password']?_0x2abf19['username']+':'+_0x2abf19['password']:_0x2abf19['username'],_0x2abf19['origin']='file:'!==_0x2abf19['protocol']&&_0x2e1588(_0x2abf19['protocol'])&&_0x2abf19['host']?_0x2abf19['protocol']+'//'+_0x2abf19['host']:'null',_0x2abf19['href']=_0x2abf19['toString'](),_0x2abf19;},'toString':function(_0x170141){_0x170141&&'function'==typeof _0x170141||(_0x170141=_0x1cd86['stringify']);var _0x44292f,_0x5a3de6=this,_0x324aea=_0x5a3de6['host'],_0x4d3743=_0x5a3de6['protocol'];_0x4d3743&&':'!==_0x4d3743['charAt'](_0x4d3743['length']-(-0x1a7c+-0x1*0x2239+0x3cb6))&&(_0x4d3743+=':');var _0x40827f=_0x4d3743+(_0x5a3de6['protocol']&&_0x5a3de6['slashes']||_0x2e1588(_0x5a3de6['protocol'])?'//':'');return _0x5a3de6['username']?(_0x40827f+=_0x5a3de6['username'],_0x5a3de6['password']&&(_0x40827f+=':'+_0x5a3de6['password']),_0x40827f+='@'):_0x5a3de6['password']?(_0x40827f+=':'+_0x5a3de6['password'],_0x40827f+='@'):'file:'!==_0x5a3de6['protocol']&&_0x2e1588(_0x5a3de6['protocol'])&&!_0x324aea&&'/'!==_0x5a3de6['pathname']&&(_0x40827f+='@'),(':'===_0x324aea[_0x324aea['length']-(-0x1b6+0x65*-0xe+0x73d)]||_0x5075bf['test'](_0x5a3de6['hostname'])&&!_0x5a3de6['port'])&&(_0x324aea+=':'),_0x40827f+=_0x324aea+_0x5a3de6['pathname'],(_0x44292f='object'==typeof _0x5a3de6['query']?_0x170141(_0x5a3de6['query']):_0x5a3de6['query'])&&(_0x40827f+='?'!==_0x44292f['charAt'](0x1*-0x1269+-0x22*-0x1f+0x1*0xe4b)?'?'+_0x44292f:_0x44292f),_0x5a3de6['hash']&&(_0x40827f+=_0x5a3de6['hash']),_0x40827f;}},_0x185297['extractPro'+'tocol']=_0x17ce98,_0x185297['location']=_0xfd2eb2,_0x185297['trimLeft']=_0x30e79b,_0x185297['qs']=_0x1cd86,_0x3db13a['exports']=_0x185297;},0x863:(_0x5078c7,_0x9386b,_0x5a8534)=>{'use strict';var _0x12281e=_0x5a8534(0x4f4+-0x3a*0x10+-0x5cf*-0x1),_0x4a3180=_0x5a8534(0x7e*0x2f+-0x1036+0x409),_0x4be5f5=_0x5a8534(-0x41*0x83+0x2026+0xdce),_0x633de1={'client':function(_0x41a713,_0x2a3f0f){return void(0x24cf+0x2*-0x1059+-0x15f*0x3)===(_0x2a3f0f=_0x2a3f0f||{})['masking']&&(_0x2a3f0f['masking']=!(-0x14cd*-0x1+-0x251a+-0x141*-0xd)),new _0x4a3180(_0x41a713,_0x2a3f0f);},'server':function(_0x171712){return void(0x1*-0xde8+0x2441*-0x1+0x3229)===(_0x171712=_0x171712||{})['requireMas'+'king']&&(_0x171712['requireMas'+'king']=!(0xb8f*-0x3+-0x24d6+0x1*0x4783)),new _0x4be5f5(_0x171712);},'http':function(){return _0x4be5f5['http']['apply'](_0x4be5f5,arguments);},'isSecureRequest':function(_0x2595f2){return _0x4be5f5['isSecureRe'+'quest'](_0x2595f2);},'isWebSocket':function(_0x167de7){return _0x12281e['isWebSocke'+'t'](_0x167de7);},'validateOptions':function(_0x119121,_0x5b311c){_0x12281e['validateOp'+'tions'](_0x119121,_0x5b311c);}};_0x5078c7['exports']=_0x633de1;},0x723:(_0xd7382,_0x4079c8,_0x119509)=>{'use strict';var _0x4be08b=_0x119509(0x2b*-0x36+0x16bc+-0x27d)['Buffer'],_0x25e8b4=_0x119509(-0xf58*0x1+-0x1*0x1431+0x34db)['EventEmitt'+'er'],_0x4c97ff=_0x119509(-0x1e52+-0x1*-0x2948+0x1*0x1849),_0x3228d1=_0x119509(-0x34f*0x9+-0xf8b*0x2+0x4ea5),_0x72b473=_0x119509(-0x19d*0x13+0x103d*0x2+-0x79*-0x13),_0x92393=_0x119509(0x1a68+-0x1d1*0x13+0x7*0x617),_0x5bd1d2=function(_0x39c1a9,_0x55e4e7,_0x22ce43){_0x25e8b4['call'](this),_0x5bd1d2['validateOp'+'tions'](_0x22ce43||{},['maxLength','masking','requireMas'+'king','protocols']),this['_request']=_0x39c1a9,this['_reader']=new _0x92393(),this['_options']=_0x22ce43||{},this['_maxLength']=this['_options']['maxLength']||this['MAX_LENGTH'],this['_headers']=new _0x72b473(),this['__queue']=[],this['readyState']=-0xa76+0x45b+0x61b,this['url']=_0x55e4e7,this['io']=new _0x3228d1['IO'](this),this['messages']=new _0x3228d1['Messages'](this),this['_bindEvent'+'Listeners']();};_0x4c97ff['inherits'](_0x5bd1d2,_0x25e8b4),_0x5bd1d2['isWebSocke'+'t']=function(_0x114757){var _0xae0a49=_0x114757['headers']['connection']||'',_0x4f9d15=_0x114757['headers']['upgrade']||'';return'GET'===_0x114757['method']&&_0xae0a49['toLowerCas'+'e']()['split'](/ *, */)['indexOf']('upgrade')>=0xc8b+0x10c7+-0x1d52&&'websocket'===_0x4f9d15['toLowerCas'+'e']();},_0x5bd1d2['validateOp'+'tions']=function(_0x13da6e,_0x5162f5){for(var _0x157e1a in _0x13da6e)if(_0x5162f5['indexOf'](_0x157e1a)<-0x2ce*-0x1+-0x1b66*-0x1+0x1*-0x1e34)throw new Error('Unrecogniz'+'ed\x20option:'+'\x20'+_0x157e1a);};var _0x73139b={'MAX_LENGTH':0x3ffffff,'STATES':['connecting','open','closing','closed'],'_bindEventListeners':function(){var _0x57c3bf=this;this['messages']['on']('error',function(){}),this['on']('message',function(_0x50c505){var _0x10c0c9=_0x57c3bf['messages'];_0x10c0c9['readable']&&_0x10c0c9['emit']('data',_0x50c505['data']);}),this['on']('error',function(_0x7c31e){var _0x15fdcd=_0x57c3bf['messages'];_0x15fdcd['readable']&&_0x15fdcd['emit']('error',_0x7c31e);}),this['on']('close',function(){var _0x18e060=_0x57c3bf['messages'];_0x18e060['readable']&&(_0x18e060['readable']=_0x18e060['writable']=!(0x1e92+-0x73b+0xbab*-0x2),_0x18e060['emit']('end'));});},'getState':function(){return this['STATES'][this['readyState']]||null;},'addExtension':function(_0x367ce1){return!(-0x1cb9+-0x153*0x9+0x1*0x28a5);},'setHeader':function(_0x184927,_0x269c8a){return!(this['readyState']>-0x1c3+-0x3e3*0x1+0x5a6||(this['_headers']['set'](_0x184927,_0x269c8a),0x3e2*-0x5+-0x4*0x8e4+0x36fa));},'start':function(){if(-0x157*-0xf+-0xff*-0x23+-0x29e*0x15!==this['readyState'])return!(-0x1a95+0x1*0x131b+0x77b*0x1);if(!_0x5bd1d2['isWebSocke'+'t'](this['_request']))return this['_failHands'+'hake'](new Error('Not\x20a\x20WebS'+'ocket\x20requ'+'est'));var _0x436909;try{_0x436909=this['_handshake'+'Response']();}catch(_0x218336){return this['_failHands'+'hake'](_0x218336);}return this['_write'](_0x436909),-(-0x1b84+-0x101*-0x22+-0x1*0x69d)!==this['_stage']&&this['_open'](),!(-0x53*0x1+0xdfc+-0xda9);},'_failHandshake':function(_0x25f1d2){var _0x20a5eb=new _0x72b473();return _0x20a5eb['set']('Content-Ty'+'pe','text/plain'),_0x20a5eb['set']('Content-Le'+'ngth',_0x4be08b['byteLength'](_0x25f1d2['message'],'utf8')),_0x20a5eb=['HTTP/1.1\x204'+'00\x20Bad\x20Req'+'uest',_0x20a5eb['toString'](),_0x25f1d2['message']],this['_write'](_0x4be08b['from'](_0x20a5eb['join']('\x0d\x0a'),'utf8')),this['_fail']('protocol_e'+'rror',_0x25f1d2['message']),!(-0x240f+-0x4*-0x305+0x17fc);},'text':function(_0x162c1c){return this['frame'](_0x162c1c);},'binary':function(_0x28362a){return!(-0xbcf*-0x1+0x4c6+-0x1094);},'ping':function(){return!(-0xa*0xc4+-0x1372+-0x101*-0x1b);},'pong':function(){return!(-0x2313+0x753+0x1bc1);},'close':function(_0x1821cf,_0xf3a1bf){return-0x2519+0x2034+0x13*0x42===this['readyState']&&(this['readyState']=-0xcea+0x2f*-0x2f+0x3e*0x59,this['emit']('close',new _0x5bd1d2['CloseEvent'](null,null)),!(-0x3c6+-0x1b3d+-0x1d3*-0x11));},'_open':function(){this['readyState']=0x1811+-0x5*-0x433+-0xf05*0x3,this['__queue']['forEach'](function(_0x1af0ba){this['frame']['apply'](this,_0x1af0ba);},this),this['__queue']=[],this['emit']('open',new _0x5bd1d2['OpenEvent']());},'_queue':function(_0x121f6c){return this['__queue']['push'](_0x121f6c),!(0x2f0+0x1cd6+0x1fc6*-0x1);},'_write':function(_0x1ebd3b){var _0x9fae2a=this['io'];_0x9fae2a['readable']&&_0x9fae2a['emit']('data',_0x1ebd3b);},'_fail':function(_0x1c1a23,_0x50d5fa){this['readyState']=0x2*-0xf29+-0x1189*-0x1+0xccb,this['emit']('error',new Error(_0x50d5fa)),this['close']();}};for(var _0x42810c in _0x73139b)_0x5bd1d2['prototype'][_0x42810c]=_0x73139b[_0x42810c];_0x5bd1d2['ConnectEve'+'nt']=function(){},_0x5bd1d2['OpenEvent']=function(){},_0x5bd1d2['CloseEvent']=function(_0x576d24,_0x42a026){this['code']=_0x576d24,this['reason']=_0x42a026;},_0x5bd1d2['MessageEve'+'nt']=function(_0x4c5503){this['data']=_0x4c5503;},_0x5bd1d2['PingEvent']=function(_0x218bf1){this['data']=_0x218bf1;},_0x5bd1d2['PongEvent']=function(_0x33164e){this['data']=_0x33164e;},_0xd7382['exports']=_0x5bd1d2;},0xaf5:(_0x4b1d46,_0x340de7,_0x2ed371)=>{'use strict';var _0xcca5d1=_0x2ed371(-0x1*0x151d+-0xd*-0x24b+-0x5*-0x7f)['Buffer'],_0x1e451a=_0x2ed371(0x1e08+-0x257*0xd+-0x1*-0x1ba9),_0x232a31=_0x2ed371(0x820+0x21ef+-0xea7),_0x4ce489=_0x2ed371(0x4082+-0x1*-0x3455+0xa33*-0x8),_0x253f5d=_0x2ed371(0x1*0x1fbb+0xd21+0x118d*-0x1),_0x29b673=_0x2ed371(-0x1f39+-0x174f+0x3dab),_0x475551=_0x2ed371(-0x1aa3+-0x3156+-0x37*-0x1fb),_0x1670a9=_0x2ed371(-0x380+-0x1114+0x2430),_0x22184c=function(_0x3e7ab6,_0x7288ba){this['version']='hybi-'+_0x475551['VERSION'],_0x475551['call'](this,null,_0x3e7ab6,_0x7288ba),this['readyState']=-(-0x3*-0xce5+0xb8*-0x1+-0x25f6),this['_key']=_0x22184c['generateKe'+'y'](),this['_accept']=_0x475551['generateAc'+'cept'](this['_key']),this['_http']=new _0x253f5d('response');var _0x1330ff=_0x232a31['parse'](this['url']),_0x29b518=_0x1330ff['auth']&&_0xcca5d1['from'](_0x1330ff['auth'],'utf8')['toString']('base64');if(this['VALID_PROT'+'OCOLS']['indexOf'](_0x1330ff['protocol'])<-0x214d+-0xc0f+0x2*0x16ae)throw new Error(this['url']+('\x20is\x20not\x20a\x20'+'valid\x20WebS'+'ocket\x20URL'));this['_pathname']=(_0x1330ff['pathname']||'/')+(_0x1330ff['search']||''),this['_headers']['set']('Host',_0x1330ff['host']),this['_headers']['set']('Upgrade','websocket'),this['_headers']['set']('Connection','Upgrade'),this['_headers']['set']('Sec-WebSoc'+'ket-Key',this['_key']),this['_headers']['set']('Sec-WebSoc'+'ket-Versio'+'n',_0x475551['VERSION']),this['_protocols']['length']>-0xf63*0x2+0xdff+0x10c7&&this['_headers']['set']('Sec-WebSoc'+'ket-Protoc'+'ol',this['_protocols']['join'](',\x20')),_0x29b518&&this['_headers']['set']('Authorizat'+'ion','Basic\x20'+_0x29b518);};_0x4ce489['inherits'](_0x22184c,_0x475551),_0x22184c['generateKe'+'y']=function(){return _0x1e451a['randomByte'+'s'](-0xa38+0xa89+-0xd*0x5)['toString']('base64');};var _0x384f4a={'VALID_PROTOCOLS':['ws:','wss:'],'proxy':function(_0x837dad,_0x321505){return new _0x1670a9(this,_0x837dad,_0x321505);},'start':function(){return-(0x231e+0x1575+-0x3892)===this['readyState']&&(this['_write'](this['_handshake'+'Request']()),this['readyState']=0xc*0x214+-0xd5b+0x1*-0xb95,!(0x2433*0x1+0xc+-0x243f));},'parse':function(_0x3fb2bf){if(0x104+0x8e7+-0x13d*0x8!==this['readyState']){if(this['readyState']>-0x1*-0x16a1+0x42*0x52+-0x2bc5)return _0x475551['prototype']['parse']['call'](this,_0x3fb2bf);this['_http']['parse'](_0x3fb2bf),this['_http']['isComplete']()&&(this['_validateH'+'andshake'](),0x624*0x2+0x66*0x36+-0x21c9!==this['readyState']&&(this['_open'](),this['parse'](this['_http']['body'])));}},'_handshakeRequest':function(){var _0x4e9485=this['_extension'+'s']['generateOf'+'fer']();_0x4e9485&&this['_headers']['set']('Sec-WebSoc'+'ket-Extens'+'ions',_0x4e9485);var _0x3b61a1=['GET\x20'+this['_pathname']+'\x20HTTP/1.1',this['_headers']['toString'](),''];return _0xcca5d1['from'](_0x3b61a1['join']('\x0d\x0a'),'utf8');},'_failHandshake':function(_0x199b97){_0x199b97='Error\x20duri'+'ng\x20WebSock'+'et\x20handsha'+'ke:\x20'+_0x199b97,this['readyState']=-0x15bc*0x1+0x8ae+0xd11,this['emit']('error',new Error(_0x199b97)),this['emit']('close',new _0x29b673['CloseEvent'](this['ERRORS']['protocol_e'+'rror'],_0x199b97));},'_validateHandshake':function(){if(this['statusCode']=this['_http']['statusCode'],this['headers']=this['_http']['headers'],this['_http']['error'])return this['_failHands'+'hake'](this['_http']['error']['message']);if(-0x5a7+0x2207+-0x1bfb!==this['_http']['statusCode'])return this['_failHands'+'hake']('Unexpected'+'\x20response\x20'+'code:\x20'+this['_http']['statusCode']);var _0x42cda3=this['_http']['headers'],_0x13e031=_0x42cda3['upgrade']||'',_0x18b85f=_0x42cda3['connection']||'',_0x3b65df=_0x42cda3['sec-websoc'+'ket-accept']||'',_0x39d1b5=_0x42cda3['sec-websoc'+'ket-protoc'+'ol']||'';if(''===_0x13e031)return this['_failHands'+'hake']('\x27Upgrade\x27\x20'+'header\x20is\x20'+'missing');if('websocket'!==_0x13e031['toLowerCas'+'e']())return this['_failHands'+'hake']('\x27Upgrade\x27\x20'+'header\x20val'+'ue\x20is\x20not\x20'+'\x27WebSocket'+'\x27');if(''===_0x18b85f)return this['_failHands'+'hake']('\x27Connectio'+'n\x27\x20header\x20'+'is\x20missing');if('upgrade'!==_0x18b85f['toLowerCas'+'e']())return this['_failHands'+'hake']('\x27Connectio'+'n\x27\x20header\x20'+'value\x20is\x20n'+'ot\x20\x27Upgrad'+'e\x27');if(_0x3b65df!==this['_accept'])return this['_failHands'+'hake']('Sec-WebSoc'+'ket-Accept'+'\x20mismatch');if(this['protocol']=null,''!==_0x39d1b5){if(this['_protocols']['indexOf'](_0x39d1b5)<-0x2014+-0xcb3+-0x1*-0x2cc7)return this['_failHands'+'hake']('Sec-WebSoc'+'ket-Protoc'+'ol\x20mismatc'+'h');this['protocol']=_0x39d1b5;}try{this['_extension'+'s']['activate'](this['headers']['sec-websoc'+'ket-extens'+'ions']);}catch(_0x27041c){return this['_failHands'+'hake'](_0x27041c['message']);}}};for(var _0x4b27d3 in _0x384f4a)_0x22184c['prototype'][_0x4b27d3]=_0x384f4a[_0x4b27d3];_0x4b1d46['exports']=_0x22184c;},0xc9f:(_0x1db984,_0xc3bd28,_0x14c7eb)=>{'use strict';var _0x44f96b=_0x14c7eb(0x1*0x16f4+-0x8*-0x3b8+0x1*-0x2987)['Buffer'],_0x2ebbc8=_0x14c7eb(-0x1e71+0x866+-0x9*-0x33e),_0x20ccf=function(_0x499bcc,_0xb2b93d,_0x533aa7){_0x2ebbc8['apply'](this,arguments),this['_stage']=0x1715*0x1+-0x76*0xa+-0x1279,this['version']='hixie-75',this['_headers']['set']('Upgrade','WebSocket'),this['_headers']['set']('Connection','Upgrade'),this['_headers']['set']('WebSocket-'+'Origin',this['_request']['headers']['origin']),this['_headers']['set']('WebSocket-'+'Location',this['url']);};_0x14c7eb(0x1*0x247d+0x40*-0x3d+0xe02)['inherits'](_0x20ccf,_0x2ebbc8);var _0x40cfe4={'close':function(){return-0x3fa*-0x7+-0x7*-0x30d+-0x2*0x1897!==this['readyState']&&(this['readyState']=0x120f+-0x14c*-0x15+-0xb52*0x4,this['emit']('close',new _0x2ebbc8['CloseEvent'](null,null)),!(0x3*-0xbb7+-0x499+-0x13df*-0x2));},'parse':function(_0xceba43){this['readyState']>0x1*0xeef+0x679+-0x1567||(this['_reader']['put'](_0xceba43),this['_reader']['eachByte'](function(_0x5bf9f5){var _0x39dfbc;switch(this['_stage']){case-(0x3*0xc4d+-0x8f5*0x1+-0x1bf1*0x1):this['_body']['push'](_0x5bf9f5),this['_sendHands'+'hakeBody']();break;case 0x16a1+-0xb*-0x2ad+-0x3410:this['_parseLead'+'ingByte'](_0x5bf9f5);break;case-0x11fc*0x1+-0x1*-0x6fd+-0x2*-0x580:if(this['_length']=(0x209b+0x1*0x251+-0x226d&_0x5bf9f5)+(0x6*0x1f0+0x15*-0x2a+-0x7ae)*this['_length'],this['_closing']&&0x4ad+0x1*0x8dd+-0x2*0x6c5===this['_length'])return this['close']();-0x1*-0x2571+-0x9f0+-0x1b01&~_0x5bf9f5&&(-0x1b71+-0xc41+0x27b2===this['_length']?this['_stage']=-0x29*0x19+-0x1*0x17ee+0x1*0x1bef:(this['_skipped']=0x1456*-0x1+0x1cd4+-0x87e,this['_stage']=-0x792*0x4+-0x7*0x3c7+0x38bb));break;case 0x21*0x109+0x1719+-0x3940:if(-0x1fb0+0x10f6+0xfb9===_0x5bf9f5)this['_stage']=0x143f*0x1+-0x784+-0xcbb,_0x39dfbc=_0x44f96b['from'](this['_buffer'])['toString']('utf8',0x2c*-0x25+0x11*0x89+-0x1*0x2bd,this['_buffer']['length']),this['emit']('message',new _0x2ebbc8['MessageEve'+'nt'](_0x39dfbc));else{if(this['_length'])this['_skipped']+=0xa*-0x1f7+0x2078+-0xcd1,this['_skipped']===this['_length']&&(this['_stage']=0xa3*-0x37+0x33e+0x1fc7*0x1);else{if(this['_buffer']['push'](_0x5bf9f5),this['_buffer']['length']>this['_maxLength'])return this['close']();}}}},this));},'frame':function(_0x344e23){if(-0x181b+0x3f3*0x7+-0x6*0x97===this['readyState'])return this['_queue']([_0x344e23]);if(this['readyState']>-0x20c7+-0x1692+0x375a)return!(-0xa*0x19+0xb31*-0x1+0xc2c);'string'!=typeof _0x344e23&&(_0x344e23=_0x344e23['toString']());var _0x154490=_0x44f96b['byteLength'](_0x344e23),_0x52a2f4=_0x44f96b['allocUnsaf'+'e'](_0x154490+(0xa65+0x1c2f+0x1349*-0x2));return _0x52a2f4[-0x3fa+0xa16+-0x61c]=0xe82+0x1c4d+-0xd*0x34b,_0x52a2f4['write'](_0x344e23,-0x1f53+-0x2043+0x3f97),_0x52a2f4[_0x52a2f4['length']-(-0x133*-0x19+0x219c+-0xa99*0x6)]=0x92b*0x2+-0x1bdd*0x1+0xa86,this['_write'](_0x52a2f4),!(0x214c+-0x247*0x11+0x56b);},'_handshakeResponse':function(){var _0x2405b6=['HTTP/1.1\x201'+'01\x20Web\x20Soc'+'ket\x20Protoc'+'ol\x20Handsha'+'ke',this['_headers']['toString'](),''];return _0x44f96b['from'](_0x2405b6['join']('\x0d\x0a'),'utf8');},'_parseLeadingByte':function(_0x19977f){0x347*0x5+0x62*0x1c+0x7*-0x3cd&~_0x19977f?(delete this['_length'],delete this['_skipped'],this['_buffer']=[],this['_stage']=-0x3*0x7f4+0x6*-0x450+0x31be):(this['_length']=0x1f1b+0x19ab*-0x1+0x57*-0x10,this['_stage']=-0x185e+-0x1b7*0xa+-0x9*-0x49d);}};for(var _0x5376d6 in _0x40cfe4)_0x20ccf['prototype'][_0x5376d6]=_0x40cfe4[_0x5376d6];_0x1db984['exports']=_0x20ccf;},0x1922:(_0x2fa99e,_0x566bbb,_0x13b6ef)=>{'use strict';var _0x45d696=_0x13b6ef(0x35f+-0x8b*0x1d+0x178d)['Buffer'],_0x5180bd=_0x13b6ef(-0xca5+-0x167*-0xd+0x18d),_0x4abccf=_0x13b6ef(-0x1*0x1930+0x39*-0x8e+0x456d),_0x3b0390=_0x13b6ef(0x693*0x3+0x2d36+-0x25a9),_0xc157f6=_0x13b6ef(-0x3c84+0x447*0x1+-0x2dbe*-0x2),_0xdb818a=function(_0x2daece){return parseInt((_0x2daece['match'](/[0-9]/g)||[])['join'](''),-0x1072+-0xdeb+0x1e67);},_0x5e5442=function(_0xa47bce){return(_0xa47bce['match'](/ /g)||[])['length'];},_0x3e0680=function(_0x12085a,_0x1a4a81,_0x1bb77a){_0x4abccf['apply'](this,arguments),this['_stage']=-(-0x7*-0x3be+-0x4d3+-0x155e),this['_body']=[],this['version']='hixie-76',this['_headers']['clear'](),this['_headers']['set']('Upgrade','WebSocket'),this['_headers']['set']('Connection','Upgrade'),this['_headers']['set']('Sec-WebSoc'+'ket-Origin',this['_request']['headers']['origin']),this['_headers']['set']('Sec-WebSoc'+'ket-Locati'+'on',this['url']);};_0xc157f6['inherits'](_0x3e0680,_0x4abccf);var _0x22c66d={'BODY_SIZE':0x8,'start':function(){return!!_0x4abccf['prototype']['start']['call'](this)&&(this['_started']=!(0x259c+0x20f1+-0x468d*0x1),this['_sendHands'+'hakeBody'](),!(0x14*-0x1df+0x1bdc+0x990));},'close':function(){return-0x8*-0x4d5+0x83f+-0x2ee4!==this['readyState']&&(0x735+-0x1c85+0x1*0x1551===this['readyState']&&this['_write'](_0x45d696['from']([-0x2*0x137c+0x10*-0xdf+0x35e7,0xaa*-0xb+-0x6+0x754])),this['readyState']=0x23b9+0x1b1d+-0x3ed3,this['emit']('close',new _0x5180bd['CloseEvent'](null,null)),!(-0x1355+0x47f+0xed6));},'_handshakeResponse':function(){var _0xc289a4=(_0x3b40c3=this['_request']['headers'])['sec-websoc'+'ket-key1'],_0x2dcf19=_0x3b40c3['sec-websoc'+'ket-key2'];if(!_0xc289a4)throw new Error('Missing\x20re'+'quired\x20hea'+'der:\x20Sec-W'+'ebSocket-K'+'ey1');if(!_0x2dcf19)throw new Error('Missing\x20re'+'quired\x20hea'+'der:\x20Sec-W'+'ebSocket-K'+'ey2');var _0x515925=_0xdb818a(_0xc289a4),_0x263567=_0x5e5442(_0xc289a4),_0x166fb1=_0xdb818a(_0x2dcf19),_0x51c2d1=_0x5e5442(_0x2dcf19);if(_0x515925%_0x263567!=-0x4*0x683+0x2*-0x1dd+-0x4a*-0x67||_0x166fb1%_0x51c2d1!=0x1*-0x177b+-0xea4*-0x1+0x8d7)throw new Error('Client\x20sen'+'t\x20invalid\x20'+'Sec-WebSoc'+'ket-Key\x20he'+'aders');this['_keyValues']=[_0x515925/_0x263567,_0x166fb1/_0x51c2d1];var _0x3b40c3=['HTTP/1.1\x201'+'01\x20WebSock'+'et\x20Protoco'+'l\x20Handshak'+'e',this['_headers']['toString'](),''];return _0x45d696['from'](_0x3b40c3['join']('\x0d\x0a'),'binary');},'_handshakeSignature':function(){if(this['_body']['length']<this['BODY_SIZE'])return null;var _0x3dcdb7=_0x3b0390['createHash']('md5'),_0x36661f=_0x45d696['allocUnsaf'+'e'](-0x2694+0x483+0x4df*0x7+this['BODY_SIZE']);return _0x36661f['writeUInt3'+'2BE'](this['_keyValues'][-0x1017+0x211a+-0x1103],-0x18b1+-0x4*-0xbc+0x15c1),_0x36661f['writeUInt3'+'2BE'](this['_keyValues'][0x5*0x549+0x1064+-0x2ad0*0x1],-0x2504*0x1+-0x1a9b+-0x1*-0x3fa3),_0x45d696['from'](this['_body'])['copy'](_0x36661f,0x1c1d+0x2*0x68e+-0x2931*0x1,-0x183b+-0x1*-0x268f+-0xe54,this['BODY_SIZE']),_0x3dcdb7['update'](_0x36661f),_0x45d696['from'](_0x3dcdb7['digest']('binary'),'binary');},'_sendHandshakeBody':function(){if(this['_started']){var _0x2a8a08=this['_handshake'+'Signature']();_0x2a8a08&&(this['_write'](_0x2a8a08),this['_stage']=0x8*-0xb6+-0x1e*-0x10+0x3d0,this['_open'](),this['_body']['length']>this['BODY_SIZE']&&this['parse'](this['_body']['slice'](this['BODY_SIZE'])));}},'_parseLeadingByte':function(_0x1828c5){if(-0x15ad+-0x1*-0x80e+0x1*0xe9e!==_0x1828c5)return _0x4abccf['prototype']['_parseLead'+'ingByte']['call'](this,_0x1828c5);this['_closing']=!(0xb1*-0x36+0x8a9+0x1cad),this['_length']=0x602*0x2+-0x1b3+-0xa51,this['_stage']=0x355+0x12f1+-0x1645;}};for(var _0x735d97 in _0x22c66d)_0x3e0680['prototype'][_0x735d97]=_0x22c66d[_0x735d97];_0x2fa99e['exports']=_0x3e0680;},0xace:_0x483599=>{'use strict';var _0x5b4c7e=function(){this['clear']();};_0x5b4c7e['prototype']['ALLOWED_DU'+'PLICATES']=['set-cookie','set-cookie'+'2','warning','www-authen'+'ticate'],_0x5b4c7e['prototype']['clear']=function(){this['_sent']={},this['_lines']=[];},_0x5b4c7e['prototype']['set']=function(_0x15d8b6,_0x588343){if(void(0x2f6*-0x6+-0x1d*-0x125+0x1*-0xf6d)!==_0x588343){_0x15d8b6=this['_strip'](_0x15d8b6),_0x588343=this['_strip'](_0x588343);var _0xa2cc94=_0x15d8b6['toLowerCas'+'e']();(!this['_sent']['hasOwnProp'+'erty'](_0xa2cc94)||this['ALLOWED_DU'+'PLICATES']['indexOf'](_0xa2cc94)>=-0x25c2+-0x1019+0x35db)&&(this['_sent'][_0xa2cc94]=!(-0x14b8+-0x26ec+-0x2*-0x1dd2),this['_lines']['push'](_0x15d8b6+':\x20'+_0x588343+'\x0d\x0a'));}},_0x5b4c7e['prototype']['toString']=function(){return this['_lines']['join']('');},_0x5b4c7e['prototype']['_strip']=function(_0x15620b){return _0x15620b['toString']()['replace'](/^ */,'')['replace'](/ *$/,'');},_0x483599['exports']=_0x5b4c7e;},0x20f4:(_0x2916c6,_0xadb9c6,_0x2b454f)=>{'use strict';var _0x309870=_0x2b454f(-0x269d+-0x1a1c+0x14f*0x3a)['Buffer'],_0x163655=_0x2b454f(0x1b2f+-0x3*0x351+0x101*0xa),_0x203e2d=_0x2b454f(0x13c*0x2+0x1d09*-0x1+-0xb8*-0x56),_0x320c17=_0x2b454f(0x8f8*0x3+0xb93+-0x12c8),_0x2d4ed8=_0x2b454f(0x37c*-0x2+-0x6*0x3f3+0x1*0x25cd),_0x407dcf=_0x2b454f(0x5*-0x1bd+0x1*0x877+0xdf0),_0x31e39c=_0x2b454f(0x23fa+-0x2*-0xa93+-0x9bf*0x4),_0x5f08b3=function(_0x3be264,_0x1181b3,_0xf2f473){if(_0x2d4ed8['apply'](this,arguments),this['_extension'+'s']=new _0x320c17(),this['_stage']=-0xc17+-0x6*-0x2ff+-0x5e3,this['_masking']=this['_options']['masking'],this['_protocols']=this['_options']['protocols']||[],this['_requireMa'+'sking']=this['_options']['requireMas'+'king'],this['_pingCallb'+'acks']={},'string'==typeof this['_protocols']&&(this['_protocols']=this['_protocols']['split'](/ *, */)),this['_request']){var _0x4c06b4=this['_request']['headers']['sec-websoc'+'ket-protoc'+'ol'],_0x6310c5=this['_protocols'];void(-0xe37*-0x2+-0x1*-0x1af+-0x1e1d)!==_0x4c06b4&&('string'==typeof _0x4c06b4&&(_0x4c06b4=_0x4c06b4['split'](/ *, */)),this['protocol']=_0x4c06b4['filter'](function(_0x5bfd7f){return _0x6310c5['indexOf'](_0x5bfd7f)>=0x1356+-0x527+0xe2f*-0x1;})[-0x36e*-0x8+0xa*0x300+0x8*-0x72e]),this['version']='hybi-'+_0x5f08b3['VERSION'];}};_0x203e2d['inherits'](_0x5f08b3,_0x2d4ed8),_0x5f08b3['VERSION']='13',_0x5f08b3['mask']=function(_0x807793,_0x1d430e,_0x2323fa){if(!_0x1d430e||0x1e8*-0x10+0xa5e*-0x1+0x28de===_0x1d430e['length'])return _0x807793;_0x2323fa=_0x2323fa||-0x7*0x23+0x2646+-0x2551;for(var _0x4d1459=-0x40f*-0x1+-0x1b9*-0x3+-0x93a,_0x17585a=_0x807793['length']-_0x2323fa;_0x4d1459<_0x17585a;_0x4d1459++)_0x807793[_0x2323fa+_0x4d1459]=_0x807793[_0x2323fa+_0x4d1459]^_0x1d430e[_0x4d1459%(0x1*-0x181d+0x1*0x6b9+0x1168)];return _0x807793;},_0x5f08b3['generateAc'+'cept']=function(_0x8e0ca9){var _0x48dc95=_0x163655['createHash']('sha1');return _0x48dc95['update'](_0x8e0ca9+_0x5f08b3['GUID']),_0x48dc95['digest']('base64');},_0x5f08b3['GUID']='258EAFA5-E'+'914-47DA-9'+'5CA-C5AB0D'+'C85B11';var _0x2dd29f={'FIN':0x80,'MASK':0x80,'RSV1':0x40,'RSV2':0x20,'RSV3':0x10,'OPCODE':0xf,'LENGTH':0x7f,'OPCODES':{'continuation':0x0,'text':0x1,'binary':0x2,'close':0x8,'ping':0x9,'pong':0xa},'OPCODE_CODES':[-0xd72+0xc5*0x9+-0x685*-0x1,0x1799+0x427*0x9+-0x3cf7,-0x252d+-0x1163*0x2+0x47f5,-0x81f+0x16c5+-0xe9e,0x1069*-0x1+-0xc88*-0x3+-0x1*0x1526,0xa9*0x9+0xf9a+0x16f*-0xf],'MESSAGE_OPCODES':[-0x2019+0x254d+-0x6f*0xc,0x5*0x55b+-0x2312*-0x1+-0x3dd8,-0xf94+0x224e*-0x1+0x31e4*0x1],'OPENING_OPCODES':[-0x2093+0x1296*-0x1+0x332a,0x22e4+0x2347+-0x1*0x4629],'ERRORS':{'normal_closure':0x3e8,'going_away':0x3e9,'protocol_error':0x3ea,'unacceptable':0x3eb,'encoding_error':0x3ef,'policy_violation':0x3f0,'too_large':0x3f1,'extension_error':0x3f2,'unexpected_condition':0x3f3},'ERROR_CODES':[-0x1*-0x1715+0x472+-0x179f,0xe*-0x1d2+-0x171f*-0x1+-0x646*-0x1,-0x69e+-0x1*0x1735+0x21bd,-0x18fc+0x565+-0xbc1*-0x2,0x1000+0x1*0x1fcf+-0x2be0,0x1cac+0x156b+0x11*-0x2b7,-0x1*-0x2065+-0x12d7+-0x99d,0x1d3+-0x9*0x2c4+0x5*0x567,0x1*-0xb94+0xa44+0x543],'DEFAULT_ERROR_CODE':0x3e8,'MIN_RESERVED_ERROR':0xbb8,'MAX_RESERVED_ERROR':0x1387,'UTF8_MATCH':/^([\x00-\x7F]|[\xC2-\xDF][\x80-\xBF]|\xE0[\xA0-\xBF][\x80-\xBF]|[\xE1-\xEC\xEE\xEF][\x80-\xBF]{2}|\xED[\x80-\x9F][\x80-\xBF]|\xF0[\x90-\xBF][\x80-\xBF]{2}|[\xF1-\xF3][\x80-\xBF]{3}|\xF4[\x80-\x8F][\x80-\xBF]{2})*$/,'addExtension':function(_0x1b945){return this['_extension'+'s']['add'](_0x1b945),!(0x2fa*-0x3+-0x12d8+0x316*0x9);},'parse':function(_0x4fe810){this['_reader']['put'](_0x4fe810);for(var _0x5bc484=!(0x38f+-0x137f+0xff0*0x1);_0x5bc484;)switch(this['_stage']){case 0x26f*0xd+-0xcc8+-0x649*0x3:(_0x5bc484=this['_reader']['read'](-0x2665+0x6*0x21d+0x19b8))&&this['_parseOpco'+'de'](_0x5bc484[0x17c5+-0x1137+-0x68e]);break;case-0xe6f+-0x1987+-0xd*-0x313:(_0x5bc484=this['_reader']['read'](0x233*0x10+-0x21a9*0x1+0xa*-0x27))&&this['_parseLeng'+'th'](_0x5bc484[0x220f*0x1+0x4*-0x2c6+-0x16f7]);break;case 0x32a+-0x9a3+-0x7*-0xed:(_0x5bc484=this['_reader']['read'](this['_frame']['lengthByte'+'s']))&&this['_parseExte'+'ndedLength'](_0x5bc484);break;case 0x76d+0xe2+-0x3*0x2c4:(_0x5bc484=this['_reader']['read'](0x17f+-0x6df+0x564))&&(this['_stage']=0x1*0x26f9+-0x4f0+0x1*-0x2205,this['_frame']['maskingKey']=_0x5bc484);break;case 0xd*-0x13d+-0x1fe+-0x5*-0x39f:(_0x5bc484=this['_reader']['read'](this['_frame']['length']))&&(this['_stage']=-0x738*-0x4+-0x58c*-0x7+-0x1*0x43b4,this['_emitFrame'](_0x5bc484));break;default:_0x5bc484=null;}},'text':function(_0x2a1a64){return!(this['readyState']>-0x8c9+-0x3*-0x7ae+-0x4c0*0x3)&&this['frame'](_0x2a1a64,'text');},'binary':function(_0x2c9994){return!(this['readyState']>-0x1a9c+-0xbf7+-0xcdc*-0x3)&&this['frame'](_0x2c9994,'binary');},'ping':function(_0x44ce81,_0x1edac3){return!(this['readyState']>-0x1*-0x259+0x1cbd+-0x1f15)&&(_0x44ce81=_0x44ce81||'',_0x1edac3&&(this['_pingCallb'+'acks'][_0x44ce81]=_0x1edac3),this['frame'](_0x44ce81,'ping'));},'pong':function(_0x3caff0){return!(this['readyState']>0x1*-0x164f+0x15c5*-0x1+0x3d*0xb9)&&(_0x3caff0=_0x3caff0||'',this['frame'](_0x3caff0,'pong'));},'close':function(_0xf8c998,_0x6e0bda){return _0xf8c998=_0xf8c998||'',_0x6e0bda=_0x6e0bda||this['ERRORS']['normal_clo'+'sure'],this['readyState']<=0x1f*-0x47+0xe*-0x28f+0x1*0x2c6b?(this['readyState']=0xe*-0xeb+-0x2*0xe54+0x2985,this['emit']('close',new _0x2d4ed8['CloseEvent'](_0x6e0bda,_0xf8c998)),!(-0x22d7+0x22e8+-0x11)):-0x17ea*0x1+-0x1*-0x2363+0x4*-0x2de===this['readyState']&&(this['readyState']=-0xde*-0x14+-0x8*0x1ac+-0x2*0x1fb,this['_extension'+'s']['close'](function(){this['frame'](_0xf8c998,'close',_0x6e0bda);},this),!(0x24a8+0xb9b*-0x2+-0xd72));},'frame':function(_0x419862,_0x50b9df,_0x18720e){if(this['readyState']<=-0x16ac+0x9*-0xe+-0x1*-0x172a)return this['_queue']([_0x419862,_0x50b9df,_0x18720e]);if(this['readyState']>-0x1e1e+0x10bb+0xd65)return!(-0x1*0x1816+0x38f*-0x3+0x22c4);_0x419862 instanceof Array&&(_0x419862=_0x309870['from'](_0x419862)),'number'==typeof _0x419862&&(_0x419862=_0x419862['toString']());var _0xc8e829,_0x415ce8,_0x204d63=new _0x31e39c(),_0x523ef7='string'==typeof _0x419862;_0x204d63['rsv1']=_0x204d63['rsv2']=_0x204d63['rsv3']=!(0x1213*-0x1+-0x1c8d+-0x207*-0x17),_0x204d63['opcode']=this['OPCODES'][_0x50b9df||(_0x523ef7?'text':'binary')],_0xc8e829=_0x523ef7?_0x309870['from'](_0x419862,'utf8'):_0x419862,_0x18720e&&(_0x415ce8=_0xc8e829,(_0xc8e829=_0x309870['allocUnsaf'+'e'](-0xd09+0x1b9d+0xe92*-0x1+_0x415ce8['length']))['writeUInt1'+'6BE'](_0x18720e,0x1745+-0x47f*-0x6+0x13*-0x2a5),_0x415ce8['copy'](_0xc8e829,0x260e+-0xd78+-0x1894)),_0x204d63['data']=_0xc8e829;var _0x166b76=function(_0xaea56){var _0x4e49fa=new _0x407dcf();_0x4e49fa['final']=!(0x17ac*-0x1+-0x13a0*0x1+0x2b4c),_0x4e49fa['rsv1']=_0xaea56['rsv1'],_0x4e49fa['rsv2']=_0xaea56['rsv2'],_0x4e49fa['rsv3']=_0xaea56['rsv3'],_0x4e49fa['opcode']=_0xaea56['opcode'],_0x4e49fa['masked']=!!this['_masking'],_0x4e49fa['length']=_0xaea56['data']['length'],_0x4e49fa['payload']=_0xaea56['data'],_0x4e49fa['masked']&&(_0x4e49fa['maskingKey']=_0x163655['randomByte'+'s'](0x5b7+-0x1f0f+0x195c)),this['_sendFrame'](_0x4e49fa);};return this['MESSAGE_OP'+'CODES']['indexOf'](_0x204d63['opcode'])>=0x15e0+-0x21f0+0xc10?this['_extension'+'s']['processOut'+'goingMessa'+'ge'](_0x204d63,function(_0x50ac0c,_0x1fa608){if(_0x50ac0c)return this['_fail']('extension_'+'error',_0x50ac0c['message']);_0x166b76['call'](this,_0x1fa608);},this):_0x166b76['call'](this,_0x204d63),!(-0x1*0x1198+0x12b1+-0x119);},'_sendFrame':function(_0x3985bf){var _0x4df816=_0x3985bf['length'],_0x29d4d8=_0x4df816<=0x2096+-0x621+0x8*-0x33f?-0x378+0x2*0xf98+0x1bb6*-0x1:_0x4df816<=-0x1f1d3+-0x1969f+0x48871?-0xd18+-0x1ff3+-0x5*-0x903:-0x69e+-0xd*0x287+0x253*0x11,_0x573a23=_0x29d4d8+(_0x3985bf['masked']?-0x19b4+-0x23a2+0x1ead*0x2:-0x1e6+0xb*-0x2da+0x2144),_0x58ec54=_0x309870['allocUnsaf'+'e'](_0x573a23+_0x4df816),_0x291691=_0x3985bf['masked']?this['MASK']:-0x322*-0x5+0x1356+0x14*-0x1c0;_0x58ec54[-0x15b*0x11+-0x5d+-0xd6*-0x1c]=(_0x3985bf['final']?this['FIN']:0xe37*0x2+0x22cb+-0x3f39)|(_0x3985bf['rsv1']?this['RSV1']:0xf6*0xd+0x22d*-0x1+-0xa51)|(_0x3985bf['rsv2']?this['RSV2']:0x6*0x2db+0xc52*0x1+-0x1d74)|(_0x3985bf['rsv3']?this['RSV3']:0x1a8d*0x1+0x13fb+0x5d1*-0x8)|_0x3985bf['opcode'],_0x4df816<=0x261a+-0x111*0x7+-0x1*0x1e26?_0x58ec54[0x7f8+-0x1b7*0x1+-0x640]=_0x291691|_0x4df816:_0x4df816<=0x16461+-0x19449*0x1+0x12fe7?(_0x58ec54[-0x1df3*0x1+0x262e+0x51*-0x1a]=-0x1*-0x31+-0x1cc1+-0x1*-0x1d0e|_0x291691,_0x58ec54['writeUInt1'+'6BE'](_0x4df816,0x25dc+0x1441+-0x3a1b)):(_0x58ec54[-0x17*-0x30+0x1*0xdf+-0x2*0x297]=0x1aea+-0x20d9+0x66e|_0x291691,_0x58ec54['writeUInt3'+'2BE'](Math['floor'](_0x4df816/(-0x1992262d8+0x3a4c9454+-0x7*-0x56b0d45c)),0x2*0x11ed+-0x58a+-0x12*0x1af),_0x58ec54['writeUInt3'+'2BE'](_0x4df816%(-0x16582832c+-0x167ff5864+0x3cd81db90),-0x866+0x3fe+-0x1*-0x46e)),_0x3985bf['payload']['copy'](_0x58ec54,_0x573a23),_0x3985bf['masked']&&(_0x3985bf['maskingKey']['copy'](_0x58ec54,_0x29d4d8),_0x5f08b3['mask'](_0x58ec54,_0x3985bf['maskingKey'],_0x573a23)),this['_write'](_0x58ec54);},'_handshakeResponse':function(){var _0x53a18b=this['_request']['headers']['sec-websoc'+'ket-key'],_0x2334f0=this['_request']['headers']['sec-websoc'+'ket-versio'+'n'];if(_0x2334f0!==_0x5f08b3['VERSION'])throw new Error('Unsupporte'+'d\x20WebSocke'+'t\x20version:'+'\x20'+_0x2334f0);if('string'!=typeof _0x53a18b)throw new Error('Missing\x20ha'+'ndshake\x20re'+'quest\x20head'+'er:\x20Sec-We'+'bSocket-Ke'+'y');this['_headers']['set']('Upgrade','websocket'),this['_headers']['set']('Connection','Upgrade'),this['_headers']['set']('Sec-WebSoc'+'ket-Accept',_0x5f08b3['generateAc'+'cept'](_0x53a18b)),this['protocol']&&this['_headers']['set']('Sec-WebSoc'+'ket-Protoc'+'ol',this['protocol']);var _0x3f28c0=this['_extension'+'s']['generateRe'+'sponse'](this['_request']['headers']['sec-websoc'+'ket-extens'+'ions']);_0x3f28c0&&this['_headers']['set']('Sec-WebSoc'+'ket-Extens'+'ions',_0x3f28c0);var _0xfae0a3=['HTTP/1.1\x201'+'01\x20Switchi'+'ng\x20Protoco'+'ls',this['_headers']['toString'](),''];return _0x309870['from'](_0xfae0a3['join']('\x0d\x0a'),'utf8');},'_shutdown':function(_0x22fb97,_0x1ab0e9,_0xc2249c){delete this['_frame'],delete this['_message'],this['_stage']=0x1*0x16b+-0x2*-0xe46+-0x1df2;var _0xae1669=0xe9e+-0x11f7+0x35a===this['readyState'];this['readyState']=0x6bd+-0x3*0x313+0x16*0x1d,this['_extension'+'s']['close'](function(){_0xae1669&&this['frame'](_0x1ab0e9,'close',_0x22fb97),this['readyState']=-0x1b48+0x1c64+-0x119,_0xc2249c&&this['emit']('error',new Error(_0x1ab0e9)),this['emit']('close',new _0x2d4ed8['CloseEvent'](_0x22fb97,_0x1ab0e9));},this);},'_fail':function(_0xefcad3,_0x5b6625){this['readyState']>-0x2*-0x924+-0x2*0x17c+0xf4f*-0x1||this['_shutdown'](this['ERRORS'][_0xefcad3],_0x5b6625,!(0x98b*-0x1+0x1*0x1b1a+-0x118f));},'_parseOpcode':function(_0x84898a){var _0xafdcfd=[this['RSV1'],this['RSV2'],this['RSV3']]['map'](function(_0x37da8c){return(_0x84898a&_0x37da8c)===_0x37da8c;}),_0x46314d=this['_frame']=new _0x407dcf();return _0x46314d['final']=(_0x84898a&this['FIN'])===this['FIN'],_0x46314d['rsv1']=_0xafdcfd[-0xc*0xc0+0xc73*0x1+-0x373],_0x46314d['rsv2']=_0xafdcfd[0x1*-0x739+-0x4*-0x659+0x32*-0x5d],_0x46314d['rsv3']=_0xafdcfd[-0xcbd*-0x3+-0x1*-0xbd7+-0x320c],_0x46314d['opcode']=_0x84898a&this['OPCODE'],this['_stage']=-0x6e3*-0x3+0xa7+-0x154f,this['_extension'+'s']['validFrame'+'Rsv'](_0x46314d)?this['OPCODE_COD'+'ES']['indexOf'](_0x46314d['opcode'])<-0x826*0x1+0x1*-0xaa2+-0x4b2*-0x4?this['_fail']('protocol_e'+'rror','Unrecogniz'+'ed\x20frame\x20o'+'pcode:\x20'+_0x46314d['opcode']):this['MESSAGE_OP'+'CODES']['indexOf'](_0x46314d['opcode'])<0x13b8+0x137*-0x2+-0x114a*0x1&&!_0x46314d['final']?this['_fail']('protocol_e'+'rror','Received\x20f'+'ragmented\x20'+'control\x20fr'+'ame:\x20opcod'+'e\x20=\x20'+_0x46314d['opcode']):this['_message']&&this['OPENING_OP'+'CODES']['indexOf'](_0x46314d['opcode'])>=-0x9*0xeb+-0x635+0xe78?this['_fail']('protocol_e'+'rror','Received\x20n'+'ew\x20data\x20fr'+'ame\x20but\x20pr'+'evious\x20con'+'tinuous\x20fr'+'ame\x20is\x20unf'+'inished'):void(0x185b*-0x1+-0xa0f+0x226a):this['_fail']('protocol_e'+'rror','One\x20or\x20mor'+'e\x20reserved'+'\x20bits\x20are\x20'+'on:\x20reserv'+'ed1\x20=\x20'+(_0x46314d['rsv1']?0xe*0x28c+0x1*0x11de+-0x3585:0x647+-0x2*0x11b+0x411*-0x1)+(',\x20reserved'+'2\x20=\x20')+(_0x46314d['rsv2']?0x787+-0x285*0x1+-0x501:0x19*0xe2+-0x111a+-0x4f8)+(',\x20reserved'+'3\x20=\x20')+(_0x46314d['rsv3']?-0x5*-0xe2+0x785*-0x4+0x19ab:-0x1393+-0xcb*0x1f+0x6*0x75c));},'_parseLength':function(_0x20ba87){var _0x292cf6=this['_frame'];if(_0x292cf6['masked']=(_0x20ba87&this['MASK'])===this['MASK'],_0x292cf6['length']=_0x20ba87&this['LENGTH'],_0x292cf6['length']>=-0x25*-0x1d+0x2a9+-0x36d*0x2&&_0x292cf6['length']<=-0x1c61+-0x692+0x11b8*0x2){if(this['_stage']=_0x292cf6['masked']?0x8*-0x1d3+0xe75+0x26:-0x1eff+0x1d*-0x16+0x2181,!this['_checkFram'+'eLength']())return;}else this['_stage']=0x15*-0x171+0x37c+0x13*0x169,_0x292cf6['lengthByte'+'s']=0x1cb3+-0xfa*-0x24+-0x1*0x3f5d===_0x292cf6['length']?0x2*-0x475+-0x15b*-0x6+0xca:0x26d0+-0xefa+0x16*-0x115;if(this['_requireMa'+'sking']&&!_0x292cf6['masked'])return this['_fail']('unacceptab'+'le','Received\x20u'+'nmasked\x20fr'+'ame\x20but\x20ma'+'sking\x20is\x20r'+'equired');},'_parseExtendedLength':function(_0x219867){var _0x59d5c9=this['_frame'];if(_0x59d5c9['length']=this['_readUInt'](_0x219867),this['_stage']=_0x59d5c9['masked']?-0x403+-0x18c7*-0x1+0x14c1*-0x1:-0x2*-0xa1c+-0x1edd+0x1*0xaa9,this['MESSAGE_OP'+'CODES']['indexOf'](_0x59d5c9['opcode'])<-0xba5+-0x24d9+-0x1*-0x307e&&_0x59d5c9['length']>-0x750*0x2+0x5*-0x7be+-0x9*-0x5fb)return this['_fail']('protocol_e'+'rror','Received\x20c'+'ontrol\x20fra'+'me\x20having\x20'+'too\x20long\x20p'+'ayload:\x20'+_0x59d5c9['length']);this['_checkFram'+'eLength']();},'_checkFrameLength':function(){return!((this['_message']?this['_message']['length']:0x4*0x3a4+0xa+-0x6*0x26f)+this['_frame']['length']>this['_maxLength']&&(this['_fail']('too_large','WebSocket\x20'+'frame\x20leng'+'th\x20too\x20lar'+'ge'),0xbc5+-0x405*-0x1+-0x1*0xfc9));},'_emitFrame':function(_0x242632){var _0x56aa63,_0x19efe3,_0x380e8f,_0x5f48f7,_0x19cf2f,_0x2f2f3b=this['_frame'],_0x26ee93=_0x2f2f3b['payload']=_0x5f08b3['mask'](_0x242632,_0x2f2f3b['maskingKey']),_0x311045=_0x2f2f3b['opcode'];if(delete this['_frame'],_0x311045===this['OPCODES']['continuati'+'on']){if(!this['_message'])return this['_fail']('protocol_e'+'rror','Received\x20u'+'nexpected\x20'+'continuati'+'on\x20frame');this['_message']['pushFrame'](_0x2f2f3b);}if(_0x311045!==this['OPCODES']['text']&&_0x311045!==this['OPCODES']['binary']||(this['_message']=new _0x31e39c(),this['_message']['pushFrame'](_0x2f2f3b)),_0x2f2f3b['final']&&this['MESSAGE_OP'+'CODES']['indexOf'](_0x311045)>=0x132c+0x2424+0x1d8*-0x1e)return this['_emitMessa'+'ge'](this['_message']);_0x311045===this['OPCODES']['close']&&(_0x19efe3=_0x26ee93['length']>=0x2*-0x235+0x9f6+-0x58a?_0x26ee93['readUInt16'+'BE'](-0x2af+-0x2443+0x26f2):null,_0x380e8f=_0x26ee93['length']>-0x2*-0x16a+0x18bc+-0x1b8e?this['_encode'](_0x26ee93['slice'](-0xe*0x224+0x194c+0x4ae)):null,-0x3ca+0xa89*-0x1+0xe53!==_0x26ee93['length']&&!(null!==_0x19efe3&&_0x19efe3>=this['MIN_RESERV'+'ED_ERROR']&&_0x19efe3<=this['MAX_RESERV'+'ED_ERROR'])&&this['ERROR_CODE'+'S']['indexOf'](_0x19efe3)<-0x195b+0x1ebb+-0x2*0x2b0&&(_0x19efe3=this['ERRORS']['protocol_e'+'rror']),(_0x26ee93['length']>0x987+-0x1d*-0x133+0x1*-0x2bd1||_0x26ee93['length']>0x1260+-0x2599+0x133b&&!_0x380e8f)&&(_0x19efe3=this['ERRORS']['protocol_e'+'rror']),this['_shutdown'](_0x19efe3||this['DEFAULT_ER'+'ROR_CODE'],_0x380e8f||'')),_0x311045===this['OPCODES']['ping']&&(this['frame'](_0x26ee93,'pong'),this['emit']('ping',new _0x2d4ed8['PingEvent'](_0x26ee93['toString']()))),_0x311045===this['OPCODES']['pong']&&(_0x19cf2f=(_0x5f48f7=this['_pingCallb'+'acks'])[_0x56aa63=this['_encode'](_0x26ee93)],delete _0x5f48f7[_0x56aa63],_0x19cf2f&&_0x19cf2f(),this['emit']('pong',new _0x2d4ed8['PongEvent'](_0x26ee93['toString']())));},'_emitMessage':function(_0x51d93e){(_0x51d93e=this['_message'])['read'](),delete this['_message'],this['_extension'+'s']['processInc'+'omingMessa'+'ge'](_0x51d93e,function(_0x320490,_0x1507f1){if(_0x320490)return this['_fail']('extension_'+'error',_0x320490['message']);var _0x34af12=_0x1507f1['data'];if(_0x1507f1['opcode']===this['OPCODES']['text']&&(_0x34af12=this['_encode'](_0x34af12)),null===_0x34af12)return this['_fail']('encoding_e'+'rror','Could\x20not\x20'+'decode\x20a\x20t'+'ext\x20frame\x20'+'as\x20UTF-8');this['emit']('message',new _0x2d4ed8['MessageEve'+'nt'](_0x34af12));},this);},'_encode':function(_0x2e15ef){try{var _0x4bbb26=_0x2e15ef['toString']('binary',0x6bb*-0x5+-0x1*0x2524+0x46cb,_0x2e15ef['length']);if(!this['UTF8_MATCH']['test'](_0x4bbb26))return null;}catch(_0x3e6760){}return _0x2e15ef['toString']('utf8',0x1b93+0x1e9d+-0x3a30,_0x2e15ef['length']);},'_readUInt':function(_0xf40d28){return-0xb13+-0x1114+0x1c29===_0xf40d28['length']?_0xf40d28['readUInt16'+'BE'](-0x21*-0x29+-0x1*-0x20ae+-0x25f7):(-0x11222*0xb54c+-0x7047da*0x80+-0x592e*-0x5ad54)*_0xf40d28['readUInt32'+'BE'](-0x25cf*0x1+-0x1*0x181c+-0x79*-0x83)+_0xf40d28['readUInt32'+'BE'](-0x1d38+0x13b5+0x987);}};for(var _0x5a0ee1 in _0x2dd29f)_0x5f08b3['prototype'][_0x5a0ee1]=_0x2dd29f[_0x5a0ee1];_0x2916c6['exports']=_0x5f08b3;},0xdb6:_0x3d9563=>{'use strict';var _0x501a37=function(){},_0x392eb7={'final':!(-0x34+-0xfa9*-0x2+0x1f1d*-0x1),'rsv1':!(0x1*-0xcd8+0x5*0x6b2+-0x14a1),'rsv2':!(-0x13ed+-0x427*-0x5+-0xd5),'rsv3':!(-0x1*-0xb23+0x1a*0xba+0x9*-0x356),'opcode':null,'masked':!(0x1a4*0xb+0xa92+0x5b9*-0x5),'maskingKey':null,'lengthBytes':0x1,'length':0x0,'payload':null};for(var _0x536aad in _0x392eb7)_0x501a37['prototype'][_0x536aad]=_0x392eb7[_0x536aad];_0x3d9563['exports']=_0x501a37;},0x1224:(_0x19b0f9,_0x11cc37,_0x9ea86b)=>{'use strict';var _0x5f71be=_0x9ea86b(-0x27*0x81+-0xab4+0x4*0xa62)['Buffer'],_0x2de059=function(){this['rsv1']=!(0x53*0x5b+0x176f+0x1*-0x34ef),this['rsv2']=!(-0xf3*-0x4+0x647+-0xa12),this['rsv3']=!(0x3e*0x57+0x7*-0x21b+0x12*-0x5a),this['opcode']=null,this['length']=-0x1*-0xbb9+-0x1ac9+0xf10,this['_chunks']=[];},_0x15efa7={'read':function(){return this['data']=this['data']||_0x5f71be['concat'](this['_chunks'],this['length']);},'pushFrame':function(_0x230ec5){this['rsv1']=this['rsv1']||_0x230ec5['rsv1'],this['rsv2']=this['rsv2']||_0x230ec5['rsv2'],this['rsv3']=this['rsv3']||_0x230ec5['rsv3'],null===this['opcode']&&(this['opcode']=_0x230ec5['opcode']),this['_chunks']['push'](_0x230ec5['payload']),this['length']+=_0x230ec5['length'];}};for(var _0x10ab9b in _0x15efa7)_0x2de059['prototype'][_0x10ab9b]=_0x15efa7[_0x10ab9b];_0x19b0f9['exports']=_0x2de059;},0xf9c:(_0x259fec,_0x727ca4,_0x10481e)=>{'use strict';var _0x2a341f=_0x10481e(-0x43*-0x49+-0x471+-0x37d)['Buffer'],_0x52c772=_0x10481e(-0xc9d*0x3+-0x1*-0xa44+-0x34a*-0xb)['Stream'],_0x3c446f=_0x10481e(-0x11*0x2a7+0x2725+0x215a),_0x5cf76d=_0x10481e(0x1*0x3573+-0x1522*0x2+0x37*0x70),_0x5ceebe=_0x10481e(0xdab*0x1+0x1*-0x1b39+0x14b1),_0x373507=_0x10481e(0x1*0x502+0x2*-0x103+0x7d2),_0x2d1a2b=_0x10481e(0x14e4+0x2bb4+-0x2549),_0x1f16a7={'ws:':0x50,'wss:':0x1bb},_0xd3ed9=function(_0x48c8ab,_0x369801,_0x5dfb9b){this['_client']=_0x48c8ab,this['_http']=new _0x2d1a2b('response'),this['_origin']='object'==typeof _0x48c8ab['url']?_0x48c8ab['url']:_0x3c446f['parse'](_0x48c8ab['url']),this['_url']='object'==typeof _0x369801?_0x369801:_0x3c446f['parse'](_0x369801),this['_options']=_0x5dfb9b||{},this['_state']=0x31*-0x3a+-0x1997+0x24b1,this['readable']=this['writable']=!(-0x2680+-0x865+0x961*0x5),this['_paused']=!(-0x1*-0xc92+-0x1ea0+-0x45*-0x43),this['_headers']=new _0x373507(),this['_headers']['set']('Host',this['_origin']['host']),this['_headers']['set']('Connection','keep-alive'),this['_headers']['set']('Proxy-Conn'+'ection','keep-alive');var _0x5b5863=this['_url']['auth']&&_0x2a341f['from'](this['_url']['auth'],'utf8')['toString']('base64');_0x5b5863&&this['_headers']['set']('Proxy-Auth'+'orization','Basic\x20'+_0x5b5863);};_0x5cf76d['inherits'](_0xd3ed9,_0x52c772);var _0x2f4cb4={'setHeader':function(_0x434204,_0x62abac){return 0xf0d+-0xd08+-0x205===this['_state']&&(this['_headers']['set'](_0x434204,_0x62abac),!(-0x205e+0x4+0x205a));},'start':function(){if(-0xf5f+-0x9*-0x1d+0xe5a!==this['_state'])return!(-0x44*0x33+-0x13cd+0x58f*0x6);this['_state']=-0x24c8*-0x1+0xb54+-0x301b;var _0x846bb=this['_origin'],_0x3d39da=_0x846bb['port']||_0x1f16a7[_0x846bb['protocol']],_0x57a0e2=['CONNECT\x20'+_0x846bb['hostname']+':'+_0x3d39da+'\x20HTTP/1.1',this['_headers']['toString'](),''];return this['emit']('data',_0x2a341f['from'](_0x57a0e2['join']('\x0d\x0a'),'utf8')),!(-0x16bb+0x1*0x67e+-0x103d*-0x1);},'pause':function(){this['_paused']=!(-0x1*-0x1465+-0xaf3*-0x1+-0x44*0x76);},'resume':function(){this['_paused']=!(-0x7*-0x55d+0xcd9+-0x3263),this['emit']('drain');},'write':function(_0x4ce7e5){if(!this['writable'])return!(0x245*0xe+0x81e*0x1+0x27e3*-0x1);if(this['_http']['parse'](_0x4ce7e5),!this['_http']['isComplete']())return!this['_paused'];if(this['statusCode']=this['_http']['statusCode'],this['headers']=this['_http']['headers'],0x145b+-0x3e9+0xa*-0x191===this['statusCode'])this['emit']('connect',new _0x5ceebe['ConnectEve'+'nt']());else{var _0x46eb3c='Can\x27t\x20esta'+'blish\x20a\x20co'+'nnection\x20t'+'o\x20the\x20serv'+'er\x20at\x20'+this['_origin']['href'];this['emit']('error',new Error(_0x46eb3c));}return this['end'](),!this['_paused'];},'end':function(_0x4a6ada){this['writable']&&(void(-0xf21*0x1+0x182b+0xd*-0xb2)!==_0x4a6ada&&this['write'](_0x4a6ada),this['readable']=this['writable']=!(0x170d+0x26b*0xa+-0x5d*0x82),this['emit']('close'),this['emit']('end'));},'destroy':function(){this['end']();}};for(var _0x3c23bb in _0x2f4cb4)_0xd3ed9['prototype'][_0x3c23bb]=_0x2f4cb4[_0x3c23bb];_0x259fec['exports']=_0xd3ed9;},0xcb1:(_0x5746ab,_0x449b10,_0x190d5c)=>{'use strict';var _0x3a8117=_0x190d5c(0x6e*-0x36+-0x10ee+0x347*0x17),_0x234c12=_0x190d5c(-0x12*0xcd+0x29d7*0x1+-0x1e),_0xf807de=_0x190d5c(-0x1*0x4ba+-0x221c+0x2df9*0x1),_0x774e65=_0x190d5c(-0x91*0x1d+-0x1ce5+-0xa3*-0x5b),_0x2b2fe1=_0x190d5c(0x12*-0xc3+-0xb72+0x52*0x9d),_0x5c4a3a=_0x190d5c(-0x1*0x3202+-0x3f13*-0x1+0x13e3),_0x1fc175=function(_0x1222aa){_0xf807de['call'](this,null,null,_0x1222aa),this['_http']=new _0x234c12('request');};_0x3a8117['inherits'](_0x1fc175,_0xf807de);var _0x5b84c4={'EVENTS':['open','message','error','close','ping','pong'],'_bindEventListeners':function(){this['messages']['on']('error',function(){}),this['on']('error',function(){});},'parse':function(_0x5c14ab){if(this['_delegate'])return this['_delegate']['parse'](_0x5c14ab);if(this['_http']['parse'](_0x5c14ab),this['_http']['isComplete']()){this['method']=this['_http']['method'],this['url']=this['_http']['url'],this['headers']=this['_http']['headers'],this['body']=this['_http']['body'];var _0xd0ab16=this;this['_delegate']=_0x1fc175['http'](this,this['_options']),this['_delegate']['messages']=this['messages'],this['_delegate']['io']=this['io'],this['_open'](),this['EVENTS']['forEach'](function(_0x3a26e9){this['_delegate']['on'](_0x3a26e9,function(_0x4831c9){_0xd0ab16['emit'](_0x3a26e9,_0x4831c9);});},this),this['protocol']=this['_delegate']['protocol'],this['version']=this['_delegate']['version'],this['parse'](this['_http']['body']),this['emit']('connect',new _0xf807de['ConnectEve'+'nt']());}},'_open':function(){this['__queue']['forEach'](function(_0x5b5cce){this['_delegate'][_0x5b5cce[-0x5a+0x100*0xe+0x2*-0x6d3]]['apply'](this['_delegate'],_0x5b5cce[-0x189d+0x1*0xb96+0xd08]);},this),this['__queue']=[];}};for(var _0x23607f in(['addExtensi'+'on','setHeader','start','frame','text','binary','ping','close']['forEach'](function(_0x1c8714){_0x5b84c4[_0x1c8714]=function(){return this['_delegate']?this['_delegate'][_0x1c8714]['apply'](this['_delegate'],arguments):(this['__queue']['push']([_0x1c8714,arguments]),!(-0x1*0x1163+0xd6a+-0x3f9*-0x1));};}),_0x5b84c4))_0x1fc175['prototype'][_0x23607f]=_0x5b84c4[_0x23607f];_0x1fc175['isSecureRe'+'quest']=function(_0x4d5f22){if(_0x4d5f22['connection']&&void(-0x12*-0x1f8+0x11ea+-0x1*0x355a)!==_0x4d5f22['connection']['authorized'])return!(-0x283+0x1d*-0x4f+0xb76);if(_0x4d5f22['socket']&&_0x4d5f22['socket']['secure'])return!(-0x156+0x6b*-0xd+-0x1*-0x6c5);var _0x82f9c3=_0x4d5f22['headers'];return!!_0x82f9c3&&('on'===_0x82f9c3['https']||'on'===_0x82f9c3['x-forwarde'+'d-ssl']||'https'===_0x82f9c3['x-forwarde'+'d-scheme']||'https'===_0x82f9c3['x-forwarde'+'d-proto']);},_0x1fc175['determineU'+'rl']=function(_0x44dd8f){return(this['isSecureRe'+'quest'](_0x44dd8f)?'wss:':'ws:')+'//'+_0x44dd8f['headers']['host']+_0x44dd8f['url'];},_0x1fc175['http']=function(_0x5420c8,_0x7d3286){void(-0x74f*0x3+0x1*-0x343+0x8*0x326)===(_0x7d3286=_0x7d3286||{})['requireMas'+'king']&&(_0x7d3286['requireMas'+'king']=!(0x1886+-0x60d*-0x2+-0x24a0));var _0x59853d=_0x5420c8['headers'],_0x55f5c6=_0x59853d['sec-websoc'+'ket-versio'+'n'],_0x3aa756=_0x59853d['sec-websoc'+'ket-key'],_0x3ea629=_0x59853d['sec-websoc'+'ket-key1'],_0x43156d=_0x59853d['sec-websoc'+'ket-key2'],_0x1a0186=this['determineU'+'rl'](_0x5420c8);return _0x55f5c6||_0x3aa756?new _0x5c4a3a(_0x5420c8,_0x1a0186,_0x7d3286):_0x3ea629||_0x43156d?new _0x2b2fe1(_0x5420c8,_0x1a0186,_0x7d3286):new _0x774e65(_0x5420c8,_0x1a0186,_0x7d3286);},_0x5746ab['exports']=_0x1fc175;},0x2286:(_0x29a8c5,_0x7703e0,_0x2a6f0a)=>{'use strict';var _0xd0a48d=_0x2a6f0a(-0x4*-0x749+0x11*0x28+-0x149f)['Buffer'],_0x50181a=function(){this['_queue']=[],this['_queueSize']=-0x181b+0x6*-0xdf+-0x1d55*-0x1,this['_offset']=0x1*0x68f+0x72b*0x2+-0x14e5;};_0x50181a['prototype']['put']=function(_0x1a2802){_0x1a2802&&0xd82+0x6*0x1eb+-0x2*0xc82!==_0x1a2802['length']&&(_0xd0a48d['isBuffer'](_0x1a2802)||(_0x1a2802=_0xd0a48d['from'](_0x1a2802)),this['_queue']['push'](_0x1a2802),this['_queueSize']+=_0x1a2802['length']);},_0x50181a['prototype']['read']=function(_0x571e89){if(_0x571e89>this['_queueSize'])return null;if(-0x41b*-0x1+0x5*0x4c7+0x2*-0xdff===_0x571e89)return _0xd0a48d['alloc'](-0xb8d+0x1fc8+-0x143b);this['_queueSize']-=_0x571e89;var _0x17e1ca,_0x459487,_0x57acc4=this['_queue'],_0x5a496d=_0x571e89,_0x458046=_0x57acc4[0x234b*-0x1+0x26a7+-0x35c];if(_0x458046['length']>=_0x571e89)return _0x458046['length']===_0x571e89?_0x57acc4['shift']():(_0x459487=_0x458046['slice'](-0x1bb6+-0x1c*0xb9+0x2ff2,_0x571e89),_0x57acc4[0x16*0x71+0xf8a*0x2+-0x28ca*0x1]=_0x458046['slice'](_0x571e89),_0x459487);for(var _0x304106=0xf62+0x1e7*-0xe+0xb40,_0x384c90=_0x57acc4['length'];_0x304106<_0x384c90&&!(_0x5a496d<_0x57acc4[_0x304106]['length']);_0x304106++)_0x5a496d-=_0x57acc4[_0x304106]['length'];return _0x17e1ca=_0x57acc4['splice'](0x65d+-0x1b4a+0xb*0x1e7,_0x304106),_0x5a496d>-0x6*-0x14e+-0xda9+0x5d5*0x1&&_0x57acc4['length']>0x18c3+0x24c1+-0x7f*0x7c&&(_0x17e1ca['push'](_0x57acc4[0x1d8b+0x11cd+0xca*-0x3c]['slice'](0x16e+-0x1*0x1e88+-0xa*-0x2e9,_0x5a496d)),_0x57acc4[0x15*0x9+0x123c*-0x1+0x1*0x117f]=_0x57acc4[-0x263a+-0x1495+0x3acf]['slice'](_0x5a496d)),_0xd0a48d['concat'](_0x17e1ca,_0x571e89);},_0x50181a['prototype']['eachByte']=function(_0x487d02,_0x320f04){for(var _0x2151a5,_0x414103,_0x47a755;this['_queue']['length']>-0x490*0x4+-0x278+-0x1ba*-0xc;){for(_0x414103=(_0x2151a5=this['_queue'][0x2342+-0x1a4b*0x1+0x87*-0x11])['length'];this['_offset']<_0x414103;)_0x47a755=this['_offset'],this['_offset']+=0x1feb*0x1+-0x13*-0x4a+-0x13*0x1f8,_0x487d02['call'](_0x320f04,_0x2151a5[_0x47a755]);this['_offset']=0x9f+0xcbc+-0xd5b,this['_queue']['shift']();}},_0x29a8c5['exports']=_0x50181a;},0x1b4f:(_0x4dbe8e,_0xe8bb5f,_0x5b80db)=>{'use strict';var _0x4fc7b5=_0x5b80db(-0x15a6*-0x2+-0xd05+-0x47*0x1a)['e'],_0x38db42=_0x5b80db(0x12*0x1af+0x4*0x5d2+-0x1*0x2a69)['Buffer'],_0x8a03b1={'request':_0x4fc7b5['REQUEST']||'request','response':_0x4fc7b5['RESPONSE']||'response'},_0x190dab=function(_0x5336e9){this['_type']=_0x5336e9,this['_parser']=new _0x4fc7b5(_0x8a03b1[_0x5336e9]),this['_complete']=!(-0x1729+0x1d00+-0x5d6*0x1),this['headers']={};var _0xe22ecc=null,_0x222941=this;this['_parser']['onHeaderFi'+'eld']=function(_0x1df0c2,_0x240f6e,_0x33840b){_0xe22ecc=_0x1df0c2['toString']('utf8',_0x240f6e,_0x240f6e+_0x33840b)['toLowerCas'+'e']();},this['_parser']['onHeaderVa'+'lue']=function(_0x44aeaf,_0x5a4e39,_0x479e08){var _0x21eba5=_0x44aeaf['toString']('utf8',_0x5a4e39,_0x5a4e39+_0x479e08);_0x222941['headers']['hasOwnProp'+'erty'](_0xe22ecc)?_0x222941['headers'][_0xe22ecc]+=',\x20'+_0x21eba5:_0x222941['headers'][_0xe22ecc]=_0x21eba5;},this['_parser']['onHeadersC'+'omplete']=this['_parser'][_0x4fc7b5['kOnHeaders'+'Complete']]=function(_0x2a6f73,_0x99bcfb,_0x404573,_0x120f85,_0x2cc747,_0x25c437){var _0x2ef10c=arguments[0x1*0x2050+0x1*0x1803+-0x3853*0x1];if('object'==typeof _0x2ef10c&&(_0x120f85=_0x2ef10c['method'],_0x2cc747=_0x2ef10c['url'],_0x25c437=_0x2ef10c['statusCode'],_0x404573=_0x2ef10c['headers']),_0x222941['method']='number'==typeof _0x120f85?_0x190dab['METHODS'][_0x120f85]:_0x120f85,_0x222941['statusCode']=_0x25c437,_0x222941['url']=_0x2cc747,_0x404573){for(var _0x449bba,_0x679495,_0x46e20e=-0x55c*-0x7+-0x1d60+-0x2*0x412,_0x52cf29=_0x404573['length'];_0x46e20e<_0x52cf29;_0x46e20e+=-0x1343*-0x1+-0x2*-0xc26+-0x2b8d)_0x449bba=_0x404573[_0x46e20e]['toLowerCas'+'e'](),_0x679495=_0x404573[_0x46e20e+(0x727*-0x1+0x1322+-0x2a*0x49)],_0x222941['headers']['hasOwnProp'+'erty'](_0x449bba)?_0x222941['headers'][_0x449bba]+=',\x20'+_0x679495:_0x222941['headers'][_0x449bba]=_0x679495;_0x222941['_complete']=!(-0x1*0x71f+-0x1a4d*-0x1+-0x132e);}};};_0x190dab['METHODS']={0x0:'DELETE',0x1:'GET',0x2:'HEAD',0x3:'POST',0x4:'PUT',0x5:'CONNECT',0x6:'OPTIONS',0x7:'TRACE',0x8:'COPY',0x9:'LOCK',0xa:'MKCOL',0xb:'MOVE',0xc:'PROPFIND',0xd:'PROPPATCH',0xe:'SEARCH',0xf:'UNLOCK',0x10:'BIND',0x11:'REBIND',0x12:'UNBIND',0x13:'ACL',0x14:'REPORT',0x15:'MKACTIVITY',0x16:'CHECKOUT',0x17:'MERGE',0x18:'M-SEARCH',0x19:'NOTIFY',0x1a:'SUBSCRIBE',0x1b:'UNSUBSCRIB'+'E',0x1c:'PATCH',0x1d:'PURGE',0x1e:'MKCALENDAR',0x1f:'LINK',0x20:'UNLINK'};var _0x56a058=process['version']?process['version']['match'](/[0-9]+/g)['map'](function(_0x1a3883){return parseInt(_0x1a3883,0x4d2*-0x2+0x1a*0x16f+-0x1b98);}):[];0x13b8+-0x20df+0x25*0x5b===_0x56a058[0x133f+-0x26c3+-0x4*-0x4e1]&&0x7c4+0x1*-0xae5+0x3*0x10f===_0x56a058[-0x798+-0x1d76*-0x1+-0xc1*0x1d]&&(_0x190dab['METHODS'][0x1fe6+-0x1285+-0xd51]='REPORT',_0x190dab['METHODS'][-0xe20+-0x1b88+0x1*0x29b9]='MKACTIVITY',_0x190dab['METHODS'][0x1*-0x1b23+-0x1*-0x1837+0x2fe]='CHECKOUT',_0x190dab['METHODS'][0xa34+-0x5*0x15d+-0xd4*0x4]='MERGE',_0x190dab['METHODS'][0xe11+-0x186+-0x1*0xc77]='M-SEARCH',_0x190dab['METHODS'][-0xe8+-0xe71+-0xa*-0x18b]='NOTIFY',_0x190dab['METHODS'][-0x2452+-0xb02+0x66*0x77]='SUBSCRIBE',_0x190dab['METHODS'][0xcda+0x1de*0xe+-0x26e7]='UNSUBSCRIB'+'E',_0x190dab['METHODS'][0x17f6+0x8b*0x24+-0x2b6a]='PATCH',_0x190dab['METHODS'][-0xa4d+-0xa*-0x1cd+-0x79c]='PURGE'),_0x190dab['prototype']['isComplete']=function(){return this['_complete'];},_0x190dab['prototype']['parse']=function(_0x51230f){var _0xc2eda0=this['_parser']['execute'](_0x51230f,-0x2d8+-0x4bb+-0x793*-0x1,_0x51230f['length']);if('number'!=typeof _0xc2eda0)return this['error']=_0xc2eda0,void(this['_complete']=!(0x25f7*0x1+-0xd85*-0x2+-0x4101));this['_complete']&&(this['body']=_0xc2eda0<_0x51230f['length']?_0x51230f['slice'](_0xc2eda0):_0x38db42['alloc'](0x15d7+-0x507*0x3+-0x1*0x6c2));},_0x4dbe8e['exports']=_0x190dab;},0x11c8:(_0x48afac,_0x1564ed,_0x1c3fbc)=>{'use strict';var _0x48273d=_0x1c3fbc(-0x76e*0x2+-0x80*-0x2c+0x177)['Stream'],_0x56f3e1=_0x1c3fbc(-0x4280+0x36f4+0x441*0xb),_0x55a6b3=function(_0x554bb7){this['readable']=this['writable']=!(-0x9a2+0x929+-0x1*-0x79),this['_paused']=!(-0x83b*-0x2+-0xd89+0xb*-0x44),this['_driver']=_0x554bb7;};_0x56f3e1['inherits'](_0x55a6b3,_0x48273d),_0x55a6b3['prototype']['pause']=function(){this['_paused']=!(0x1c60+-0xd75*0x1+0xc9*-0x13),this['_driver']['messages']['_paused']=!(-0x2184+-0x154+0x22d8);},_0x55a6b3['prototype']['resume']=function(){this['_paused']=!(0x2481+0x18e5*0x1+-0x3d65),this['emit']('drain');var _0x474f44=this['_driver']['messages'];_0x474f44['_paused']=!(0x1b34*-0x1+-0x691*-0x3+0x782),_0x474f44['emit']('drain');},_0x55a6b3['prototype']['write']=function(_0x2ec2ec){return!!this['writable']&&(this['_driver']['parse'](_0x2ec2ec),!this['_paused']);},_0x55a6b3['prototype']['end']=function(_0x4bfec8){if(this['writable']){void(-0xe9e*-0x2+0xeea+-0x2c26*0x1)!==_0x4bfec8&&this['write'](_0x4bfec8),this['writable']=!(0xb0f+-0xbf4+0xe6);var _0x4df714=this['_driver']['messages'];_0x4df714['readable']&&(_0x4df714['readable']=_0x4df714['writable']=!(-0x3*-0x557+0x6f2*0x5+-0x32be),_0x4df714['emit']('end'));}},_0x55a6b3['prototype']['destroy']=function(){this['end']();};var _0x11674e=function(_0x12eb73){this['readable']=this['writable']=!(-0x1ac0+0x519+0x15a7),this['_paused']=!(-0x1*-0x1aad+0x18a*-0x3+-0xb07*0x2),this['_driver']=_0x12eb73;};_0x56f3e1['inherits'](_0x11674e,_0x48273d),_0x11674e['prototype']['pause']=function(){this['_driver']['io']['_paused']=!(0x1*0x1f5+0x53*-0x30+0xd9b);},_0x11674e['prototype']['resume']=function(){this['_driver']['io']['_paused']=!(-0x1b2d+0x1*-0x1b41+0x366f),this['_driver']['io']['emit']('drain');},_0x11674e['prototype']['write']=function(_0x1cf504){return!!this['writable']&&('string'==typeof _0x1cf504?this['_driver']['text'](_0x1cf504):this['_driver']['binary'](_0x1cf504),!this['_paused']);},_0x11674e['prototype']['end']=function(_0x4370c9){void(-0x1988+0x210a+-0x782*0x1)!==_0x4370c9&&this['write'](_0x4370c9);},_0x11674e['prototype']['destroy']=function(){},_0x1564ed['IO']=_0x55a6b3,_0x1564ed['Messages']=_0x11674e;},0x93e:_0x58f0ff=>{'use strict';var _0x6557db=/([!#\$%&'\*\+\-\.\^_`\|~0-9A-Za-z]+)/,_0x593df0=/([^!#\$%&'\*\+\-\.\^_`\|~0-9A-Za-z])/g,_0x27f8d9=new RegExp(_0x6557db['source']+'(?:=(?:'+_0x6557db['source']+'|'+/"((?:\\[\x00-\x7f]|[^\x00-\x08\x0a-\x1f\x7f"\\])*)"/['source']+'))?'),_0x41e6f6=new RegExp(_0x6557db['source']+'(?:\x20*;\x20*'+_0x27f8d9['source']+')*','g'),_0x504798=new RegExp('^'+_0x41e6f6['source']+'(?:\x20*,\x20*'+_0x41e6f6['source']+')*$'),_0x1371b2=/^-?(0|[1-9][0-9]*)(\.[0-9]+)?$/,_0x1b25a7=Object['prototype']['hasOwnProp'+'erty'],_0x5bf926={'parseHeader':function(_0x54d77a){var _0x1a4dde=new _0x235bcd();if(''===_0x54d77a||void(0x7*-0x6b+0x1*-0x23f9+-0x1a*-0x17f)===_0x54d77a)return _0x1a4dde;if(!_0x504798['test'](_0x54d77a))throw new SyntaxError('Invalid\x20Se'+'c-WebSocke'+'t-Extensio'+'ns\x20header:'+'\x20'+_0x54d77a);return _0x54d77a['match'](_0x41e6f6)['forEach'](function(_0x2141e5){var _0x132d40=_0x2141e5['match'](new RegExp(_0x27f8d9['source'],'g')),_0x128b6b=_0x132d40['shift'](),_0x14a7ff={};_0x132d40['forEach'](function(_0x1d2459){var _0x2db68c,_0x187600=_0x1d2459['match'](_0x27f8d9),_0x2ee2d2=_0x187600[-0x97*-0x2c+0x361*-0x3+-0x17*0xb0];_0x2db68c=void(0x8*-0x6d+0x66a*-0x5+0x237a)!==_0x187600[-0xd7d*-0x1+0xf74+0x1cef*-0x1]?_0x187600[-0xa34*0x2+-0x97+0x1*0x1501]:void(-0x1282+-0x1*0x26c3+-0x9*-0x65d)===_0x187600[-0x4*0x96d+0xa*-0x2f6+0x4353]||_0x187600[0x1cab+-0xf4*-0x7+0x22*-0x10a]['replace'](/\\/g,''),_0x1371b2['test'](_0x2db68c)&&(_0x2db68c=parseFloat(_0x2db68c)),_0x1b25a7['call'](_0x14a7ff,_0x2ee2d2)?(_0x14a7ff[_0x2ee2d2]=[]['concat'](_0x14a7ff[_0x2ee2d2]),_0x14a7ff[_0x2ee2d2]['push'](_0x2db68c)):_0x14a7ff[_0x2ee2d2]=_0x2db68c;},this),_0x1a4dde['push'](_0x128b6b,_0x14a7ff);},this),_0x1a4dde;},'serializeParams':function(_0xb44658,_0x35260f){var _0x7acc24=[],_0x3cb0f7=function(_0x3ef130,_0xf88e48){_0xf88e48 instanceof Array?_0xf88e48['forEach'](function(_0x435772){_0x3cb0f7(_0x3ef130,_0x435772);}):!(0x502*-0x6+-0x36*0x56+0x3030)===_0xf88e48?_0x7acc24['push'](_0x3ef130):'number'==typeof _0xf88e48?_0x7acc24['push'](_0x3ef130+'='+_0xf88e48):_0x593df0['test'](_0xf88e48)?_0x7acc24['push'](_0x3ef130+'=\x22'+_0xf88e48['replace'](/"/g,'\x5c\x22')+'\x22'):_0x7acc24['push'](_0x3ef130+'='+_0xf88e48);};for(var _0x42dd2a in _0x35260f)_0x3cb0f7(_0x42dd2a,_0x35260f[_0x42dd2a]);return[_0xb44658]['concat'](_0x7acc24)['join'](';\x20');}},_0x235bcd=function(){this['_byName']={},this['_inOrder']=[];};_0x235bcd['prototype']['push']=function(_0x2dc2a9,_0x3f9f64){_0x1b25a7['call'](this['_byName'],_0x2dc2a9)||(this['_byName'][_0x2dc2a9]=[]),this['_byName'][_0x2dc2a9]['push'](_0x3f9f64),this['_inOrder']['push']({'name':_0x2dc2a9,'params':_0x3f9f64});},_0x235bcd['prototype']['eachOffer']=function(_0x616d5f,_0x30fd37){for(var _0x3e226f=this['_inOrder'],_0x1fdfa6=0x973+-0x44f*0x3+-0x37a*-0x1,_0x51aac8=_0x3e226f['length'];_0x1fdfa6<_0x51aac8;_0x1fdfa6++)_0x616d5f['call'](_0x30fd37,_0x3e226f[_0x1fdfa6]['name'],_0x3e226f[_0x1fdfa6]['params']);},_0x235bcd['prototype']['byName']=function(_0x321e2b){return this['_byName'][_0x321e2b]||[];},_0x235bcd['prototype']['toArray']=function(){return this['_inOrder']['slice']();},_0x58f0ff['exports']=_0x5bf926;},0x282:(_0x88448,_0x1d2689,_0x845d27)=>{'use strict';var _0x2f0f3d=_0x845d27(-0x1c94+0x3a8+0x29a7*0x1),_0x5981d5=_0x845d27(0x2278*0x1+-0x261+-0xbac),_0x3d9da0=function(_0x109c28){this['_ext']=_0x109c28[0x1*-0x17d+-0x7d*-0x7+-0x1ee],this['_session']=_0x109c28[0x127a+0x92*-0x1d+0x1*-0x1ef],this['_functors']={'incoming':new _0x2f0f3d(this['_session'],'processInc'+'omingMessa'+'ge'),'outgoing':new _0x2f0f3d(this['_session'],'processOut'+'goingMessa'+'ge')};};_0x3d9da0['prototype']['pending']=function(_0x5c2529){var _0x5d00c7=this['_functors'][_0x5c2529];_0x5d00c7['_stopped']||(_0x5d00c7['pending']+=0xf2*-0x15+-0x1882+0x2c5d);},_0x3d9da0['prototype']['incoming']=function(_0x5b86fb,_0x54f586,_0x5a5b96,_0x2e6ace){this['_exec']('incoming',_0x5b86fb,_0x54f586,_0x5a5b96,_0x2e6ace);},_0x3d9da0['prototype']['outgoing']=function(_0x3606c7,_0x5620b4,_0x3f8224,_0x44bf5c){this['_exec']('outgoing',_0x3606c7,_0x5620b4,_0x3f8224,_0x44bf5c);},_0x3d9da0['prototype']['close']=function(){return this['_closed']=this['_closed']||new _0x5981d5(),this['_doClose'](),this['_closed'];},_0x3d9da0['prototype']['_exec']=function(_0x50cb3e,_0x3d6df5,_0x514357,_0x45a2cf,_0x255b3d){this['_functors'][_0x50cb3e]['call'](_0x3d6df5,_0x514357,function(_0x53e7be,_0xbd077b){_0x53e7be&&(_0x53e7be['message']=this['_ext']['name']+':\x20'+_0x53e7be['message']),_0x45a2cf['call'](_0x255b3d,_0x53e7be,_0xbd077b),this['_doClose']();},this);},_0x3d9da0['prototype']['_doClose']=function(){var _0x4b53f7=this['_functors']['incoming'],_0xd3d0ff=this['_functors']['outgoing'];this['_closed']&&_0x4b53f7['pending']+_0xd3d0ff['pending']===0xe0c+0x176e+0xc7e*-0x3&&(this['_session']&&this['_session']['close'](),this['_session']=null,this['_closed']['done']());},_0x88448['exports']=_0x3d9da0;},0x10bb:(_0x5570fd,_0x40a93a,_0x3b0f99)=>{'use strict';var _0x181057=_0x3b0f99(-0xfa*-0x25+-0x1f*0x28+-0x11ed),_0x5e4997=function(_0x4d4a7e,_0x5b11a7){this['_session']=_0x4d4a7e,this['_method']=_0x5b11a7,this['_queue']=new _0x181057(_0x5e4997['QUEUE_SIZE']),this['_stopped']=!(0x119*0x1+0xf9e*0x2+-0x815*0x4),this['pending']=-0x2244+0x40*-0x51+0x3684;};_0x5e4997['QUEUE_SIZE']=-0xf11*0x1+-0x1*-0x1807+0x7f*-0x12,_0x5e4997['prototype']['call']=function(_0x7c7195,_0x2e2142,_0x366991,_0x1a0b03){if(!this['_stopped']){var _0xe7053={'error':_0x7c7195,'message':_0x2e2142,'callback':_0x366991,'context':_0x1a0b03,'done':!(-0x8c9+-0x184*-0x17+-0x1a12)},_0x2e365b=!(0x193f+-0x18fd*-0x1+0xa7*-0x4d),_0x31f8b5=this;if(this['_queue']['push'](_0xe7053),_0xe7053['error'])return _0xe7053['done']=!(0xa*0x248+-0x256+-0x147a),this['_stop'](),this['_flushQueu'+'e']();var _0x365767=function(_0x82fb84,_0x41cee3){_0x2e365b^(_0x2e365b=!(0x25de+0x2197*0x1+-0x1*0x4775))&&(_0x82fb84?(_0x31f8b5['_stop'](),_0xe7053['error']=_0x82fb84,_0xe7053['message']=null):_0xe7053['message']=_0x41cee3,_0xe7053['done']=!(-0x16*-0x183+-0x747+-0x19fb),_0x31f8b5['_flushQueu'+'e']());};try{this['_session'][this['_method']](_0x2e2142,_0x365767);}catch(_0x30d7da){_0x365767(_0x30d7da);}}},_0x5e4997['prototype']['_stop']=function(){this['pending']=this['_queue']['length'],this['_stopped']=!(0x92b*-0x2+0x2517+-0x1*0x12c1);},_0x5e4997['prototype']['_flushQueu'+'e']=function(){for(var _0x52f246,_0x4b5349=this['_queue'];_0x4b5349['length']>-0x1fcc+0x1a*0xff+0x5e6*0x1&&_0x4b5349['peek']()['done'];)(_0x52f246=_0x4b5349['shift']())['error']?(this['pending']=0x158c+0x1f18+0x118c*-0x3,_0x4b5349['clear']()):this['pending']-=-0x1*0xeb9+-0x22*0x7d+0x1f54,_0x52f246['callback']['call'](_0x52f246['context'],_0x52f246['error'],_0x52f246['message']);},_0x5570fd['exports']=_0x5e4997;},0x147c:(_0x33b1d7,_0x432e98,_0x316872)=>{'use strict';var _0x49ca07=_0x316872(-0x1*0x155e+0x1*0x186a+0x45*-0x2),_0x475bfe=_0x316872(0x577*0x1+0x738+0x7bc),_0x274368=function(_0x3f1366){this['_cells']=_0x3f1366['map'](function(_0x25be6c){return new _0x49ca07(_0x25be6c);}),this['_stopped']={'incoming':!(-0x1*0x215b+0x3*0x64d+0x1*0xe75),'outgoing':!(-0x6c7*-0x3+0xcb2+0xb02*-0x3)};};_0x274368['prototype']['processInc'+'omingMessa'+'ge']=function(_0xbea521,_0x2dcbab,_0x2de264){this['_stopped']['incoming']||this['_loop']('incoming',this['_cells']['length']-(0x137+0x5*-0x5c8+0x1bb2),-(-0x7bf*-0x1+-0x1*-0x1c6c+0x1215*-0x2),-(0x10f*0xb+0xb5*0xb+0x1*-0x136b),_0xbea521,_0x2dcbab,_0x2de264);},_0x274368['prototype']['processOut'+'goingMessa'+'ge']=function(_0x329933,_0x5623d0,_0x146bad){this['_stopped']['outgoing']||this['_loop']('outgoing',0x1bdf+-0x24de+0x8ff,this['_cells']['length'],-0x7*0x565+-0x2bb*0x9+0x1*0x3e57,_0x329933,_0x5623d0,_0x146bad);},_0x274368['prototype']['close']=function(_0x54958f,_0x269fc9){this['_stopped']={'incoming':!(-0x2*0x35c+-0x18d*-0x15+-0x19d9),'outgoing':!(-0x125d*0x2+-0x5*0x57+0x266d)};var _0xb84b02=this['_cells']['map'](function(_0xa483ef){return _0xa483ef['close']();});_0x54958f&&_0x475bfe['all'](_0xb84b02)['then'](function(){_0x54958f['call'](_0x269fc9);});},_0x274368['prototype']['_loop']=function(_0x71136c,_0x46135d,_0xfcea50,_0x695853,_0x2692fa,_0x5b5dab,_0xd5b562){for(var _0x2395f1=this['_cells'],_0x4bba92=_0x2395f1['length'],_0x2efa6f=this;_0x4bba92--;)_0x2395f1[_0x4bba92]['pending'](_0x71136c);var _0x759c8c=function(_0x414aab,_0x543ede,_0x3d5b55){if(_0x414aab===_0xfcea50)return _0x5b5dab['call'](_0xd5b562,_0x543ede,_0x3d5b55);_0x2395f1[_0x414aab][_0x71136c](_0x543ede,_0x3d5b55,function(_0x443a9d,_0x2fa960){_0x443a9d&&(_0x2efa6f['_stopped'][_0x71136c]=!(0x1e63+-0x1ffb+0x198)),_0x759c8c(_0x414aab+_0x695853,_0x443a9d,_0x2fa960);});};_0x759c8c(_0x46135d,null,_0x2692fa);},_0x33b1d7['exports']=_0x274368;},0x146b:(_0x583aa6,_0x113b18,_0x5ae5e8)=>{'use strict';var _0x2a317e=_0x5ae5e8(-0x271*-0x1+-0x84f+0x133b),_0x4c5646=function(){this['_complete']=!(0x1*-0x24d1+-0x11*0xb5+0x1*0x30d7),this['_callbacks']=new _0x2a317e(_0x4c5646['QUEUE_SIZE']);};_0x4c5646['QUEUE_SIZE']=-0x4*0x983+-0x9*0x213+0x38bb,_0x4c5646['all']=function(_0x301af4){var _0x14fdba=new _0x4c5646(),_0x139dd3=_0x301af4['length'],_0x247b6c=_0x139dd3;for(0x1f*-0x41+-0x4*0xb9+0xac3===_0x139dd3&&_0x14fdba['done']();_0x247b6c--;)_0x301af4[_0x247b6c]['then'](function(){0x18b3+-0x1873+-0x40==(_0x139dd3-=-0x2*0x15d+-0x13a*-0x1d+-0x20d7)&&_0x14fdba['done']();});return _0x14fdba;},_0x4c5646['prototype']['then']=function(_0x361c5e){this['_complete']?_0x361c5e():this['_callbacks']['push'](_0x361c5e);},_0x4c5646['prototype']['done']=function(){this['_complete']=!(-0x1f*0x10+0x1*0x136d+0x79*-0x25);for(var _0x202f1e,_0xcf40b5=this['_callbacks'];_0x202f1e=_0xcf40b5['shift']();)_0x202f1e();},_0x583aa6['exports']=_0x4c5646;},0xd5d:_0x1e80d2=>{'use strict';var _0x2f7d82=function(_0x82be70){this['_bufferSiz'+'e']=_0x82be70,this['clear']();};_0x2f7d82['prototype']['clear']=function(){this['_buffer']=new Array(this['_bufferSiz'+'e']),this['_ringOffse'+'t']=0x4a7+-0x104f*-0x2+-0x2545,this['_ringSize']=this['_bufferSiz'+'e'],this['_head']=0x1*0x705+-0x2610+0x1*0x1f0b,this['_tail']=0xc3d+-0x96d+-0x10*0x2d,this['length']=0x1*0x44f+0x920+-0xd6f;},_0x2f7d82['prototype']['push']=function(_0xc46161){var _0x30ad20=!(0x23c9+0x1*-0x26c9+0x301),_0x47a100=!(-0x3f6+-0x59*-0x2+0x345);this['_ringSize']<this['_bufferSiz'+'e']?_0x30ad20=0x8a8+0x365+0x1*-0xc0d===this['_tail']:this['_ringOffse'+'t']===this['_ringSize']&&(_0x30ad20=!(0x1198+-0x76*-0x48+0x208*-0x19),_0x47a100=-0x5*0xf+-0xd8d+0x4*0x376===this['_tail']),_0x30ad20&&(this['_tail']=this['_bufferSiz'+'e'],this['_buffer']=this['_buffer']['concat'](new Array(this['_bufferSiz'+'e'])),this['_bufferSiz'+'e']=this['_buffer']['length'],_0x47a100&&(this['_ringSize']=this['_bufferSiz'+'e'])),this['_buffer'][this['_tail']]=_0xc46161,this['length']+=-0x1bde+0xadc+0x1103,this['_tail']<this['_ringSize']&&(this['_ringOffse'+'t']+=0x1*-0x24ce+0x1f71+0x6*0xe5),this['_tail']=(this['_tail']+(0xd31+0xbf0+-0x30*0x86))%this['_bufferSiz'+'e'];},_0x2f7d82['prototype']['peek']=function(){if(0xeb3+-0x26e*-0x5+-0x1ad9!==this['length'])return this['_buffer'][this['_head']];},_0x2f7d82['prototype']['shift']=function(){if(0x47f*-0x7+0x2e*-0x8b+0x3873!==this['length']){var _0x4af314=this['_buffer'][this['_head']];return this['_buffer'][this['_head']]=void(0x17b7+0x18*-0x97+-0x98f),this['length']-=0x440+0x7*-0x2a0+-0x1*-0xe21,this['_ringOffse'+'t']-=-0x21c7+0x1*-0x175b+-0x3923*-0x1,-0x23*0xef+0x1e*0xf+-0x1*-0x1eeb===this['_ringOffse'+'t']&&this['length']>-0xf95+0xa5*-0xc+0x1751*0x1?(this['_head']=this['_ringSize'],this['_ringOffse'+'t']=this['length'],this['_ringSize']=this['_bufferSiz'+'e']):this['_head']=(this['_head']+(-0x6a*-0x2a+-0x37f+-0xde4))%this['_ringSize'],_0x4af314;}},_0x1e80d2['exports']=_0x2f7d82;},0x13b3:(_0x8ddb8e,_0x594015,_0x43c5bc)=>{'use strict';var _0x253feb=_0x43c5bc(0x13f*-0x19+-0x20fa+0x1875*0x3),_0x20a684=_0x43c5bc(-0x27e0+0x1*-0x542+0x20cf*0x2),_0x4fbb97=function(){this['_rsv1']=this['_rsv2']=this['_rsv3']=null,this['_byName']={},this['_inOrder']=[],this['_sessions']=[],this['_index']={};};_0x4fbb97['MESSAGE_OP'+'CODES']=[0xd*-0x33+0x17ca+-0x1532,0x1c25+-0x1*0x1749+-0x4da*0x1];var _0x5986e9={'add':function(_0x1bf7cb){if('string'!=typeof _0x1bf7cb['name'])throw new TypeError('extension.'+'name\x20must\x20'+'be\x20a\x20strin'+'g');if('permessage'!==_0x1bf7cb['type'])throw new TypeError('extension.'+'type\x20must\x20'+'be\x20\x22permes'+'sage\x22');if('boolean'!=typeof _0x1bf7cb['rsv1'])throw new TypeError('extension.'+'rsv1\x20must\x20'+'be\x20true\x20or'+'\x20false');if('boolean'!=typeof _0x1bf7cb['rsv2'])throw new TypeError('extension.'+'rsv2\x20must\x20'+'be\x20true\x20or'+'\x20false');if('boolean'!=typeof _0x1bf7cb['rsv3'])throw new TypeError('extension.'+'rsv3\x20must\x20'+'be\x20true\x20or'+'\x20false');if(this['_byName']['hasOwnProp'+'erty'](_0x1bf7cb['name']))throw new TypeError('An\x20extensi'+'on\x20with\x20na'+'me\x20\x22'+_0x1bf7cb['name']+('\x22\x20is\x20alrea'+'dy\x20registe'+'red'));this['_byName'][_0x1bf7cb['name']]=_0x1bf7cb,this['_inOrder']['push'](_0x1bf7cb);},'generateOffer':function(){var _0x18872e=[],_0x28982f=[],_0x428c42={};return this['_inOrder']['forEach'](function(_0x12ab02){var _0x485bb7=_0x12ab02['createClie'+'ntSession']();if(_0x485bb7){var _0x5b965a=[_0x12ab02,_0x485bb7];_0x18872e['push'](_0x5b965a),_0x428c42[_0x12ab02['name']]=_0x5b965a;var _0x526ff6=_0x485bb7['generateOf'+'fer']();(_0x526ff6=_0x526ff6?[]['concat'](_0x526ff6):[])['forEach'](function(_0x5c05a9){_0x28982f['push'](_0x253feb['serializeP'+'arams'](_0x12ab02['name'],_0x5c05a9));},this);}},this),this['_sessions']=_0x18872e,this['_index']=_0x428c42,_0x28982f['length']>-0x553*0x1+-0x1902+0x1e55?_0x28982f['join'](',\x20'):null;},'activate':function(_0x568e1d){var _0xb44120=_0x253feb['parseHeade'+'r'](_0x568e1d),_0x58756f=[];_0xb44120['eachOffer'](function(_0x4f0498,_0x4b22da){var _0x2c5794=this['_index'][_0x4f0498];if(!_0x2c5794)throw new Error('Server\x20sen'+'t\x20an\x20exten'+'sion\x20respo'+'nse\x20for\x20un'+'known\x20exte'+'nsion\x20\x22'+_0x4f0498+'\x22');var _0x3de818=_0x2c5794[0xc*-0x241+0x107*-0x25+0x410f],_0x2d97a8=_0x2c5794[-0x164f+0x85a+0x1*0xdf6],_0x15da00=this['_reserved'](_0x3de818);if(_0x15da00)throw new Error('Server\x20sen'+'t\x20two\x20exte'+'nsion\x20resp'+'onses\x20that'+'\x20use\x20the\x20R'+'SV'+_0x15da00[-0x20e5*0x1+-0x2334+-0x95*-0x75]+'\x20bit:\x20\x22'+_0x15da00[0x13*0x8b+0x5*-0x532+0xfaa]+'\x22\x20and\x20\x22'+_0x3de818['name']+'\x22');if(!(0x247*0x11+0x17e9+-0x3ea0)!==_0x2d97a8['activate'](_0x4b22da))throw new Error('Server\x20sen'+'t\x20unaccept'+'able\x20exten'+'sion\x20param'+'eters:\x20'+_0x253feb['serializeP'+'arams'](_0x4f0498,_0x4b22da));this['_reserve'](_0x3de818),_0x58756f['push'](_0x2c5794);},this),this['_sessions']=_0x58756f,this['_pipeline']=new _0x20a684(_0x58756f);},'generateResponse':function(_0x2e3076){var _0x284cff=[],_0x530068=[],_0x5e4913=_0x253feb['parseHeade'+'r'](_0x2e3076);return this['_inOrder']['forEach'](function(_0x14047){var _0xe409ad=_0x5e4913['byName'](_0x14047['name']);if(0x1f89+-0x7*0x14e+-0x1667!==_0xe409ad['length']&&!this['_reserved'](_0x14047)){var _0x34e475=_0x14047['createServ'+'erSession'](_0xe409ad);_0x34e475&&(this['_reserve'](_0x14047),_0x284cff['push']([_0x14047,_0x34e475]),_0x530068['push'](_0x253feb['serializeP'+'arams'](_0x14047['name'],_0x34e475['generateRe'+'sponse']())));}},this),this['_sessions']=_0x284cff,this['_pipeline']=new _0x20a684(_0x284cff),_0x530068['length']>0x1525*-0x1+0x5cb*-0x1+0x10*0x1af?_0x530068['join'](',\x20'):null;},'validFrameRsv':function(_0x4905a8){var _0x3659ef,_0x355529={'rsv1':!(-0x22d9+-0x1*0x2e7+0x25c1),'rsv2':!(-0x1b9f*-0x1+-0x113+0x5*-0x54f),'rsv3':!(0x1*0x66c+-0x5*0x1c1+0x25a)};if(_0x4fbb97['MESSAGE_OP'+'CODES']['indexOf'](_0x4905a8['opcode'])>=-0xaf3*0x1+0x82f+-0x76*-0x6){for(var _0x10a574=-0xb0+0x5*-0x358+-0x1168*-0x1,_0x276a8c=this['_sessions']['length'];_0x10a574<_0x276a8c;_0x10a574++)_0x3659ef=this['_sessions'][_0x10a574][-0x186*0xc+0x12ab+-0x63*0x1],_0x355529['rsv1']=_0x355529['rsv1']||_0x3659ef['rsv1'],_0x355529['rsv2']=_0x355529['rsv2']||_0x3659ef['rsv2'],_0x355529['rsv3']=_0x355529['rsv3']||_0x3659ef['rsv3'];}return(_0x355529['rsv1']||!_0x4905a8['rsv1'])&&(_0x355529['rsv2']||!_0x4905a8['rsv2'])&&(_0x355529['rsv3']||!_0x4905a8['rsv3']);},'processIncomingMessage':function(_0x12f272,_0x5ce5d8,_0x2f8c99){this['_pipeline']['processInc'+'omingMessa'+'ge'](_0x12f272,_0x5ce5d8,_0x2f8c99);},'processOutgoingMessage':function(_0x4f0bbc,_0x4110b0,_0x3270ac){this['_pipeline']['processOut'+'goingMessa'+'ge'](_0x4f0bbc,_0x4110b0,_0x3270ac);},'close':function(_0x21802e,_0x142d7a){if(!this['_pipeline'])return _0x21802e['call'](_0x142d7a);this['_pipeline']['close'](_0x21802e,_0x142d7a);},'_reserve':function(_0x234355){this['_rsv1']=this['_rsv1']||_0x234355['rsv1']&&_0x234355['name'],this['_rsv2']=this['_rsv2']||_0x234355['rsv2']&&_0x234355['name'],this['_rsv3']=this['_rsv3']||_0x234355['rsv3']&&_0x234355['name'];},'_reserved':function(_0x7aa33b){return this['_rsv1']&&_0x7aa33b['rsv1']?[0xf7*0x1+-0x1a58+-0x1962*-0x1,this['_rsv1']]:this['_rsv2']&&_0x7aa33b['rsv2']?[0x8*-0xf1+-0x1020+0x1a*0xe9,this['_rsv2']]:!(!this['_rsv3']||!_0x7aa33b['rsv3'])&&[0x15d5+0x2*-0xfd1+-0x4e8*-0x2,this['_rsv3']];}};for(var _0x35f889 in _0x5986e9)_0x4fbb97['prototype'][_0x35f889]=_0x5986e9[_0x35f889];_0x8ddb8e['exports']=_0x4fbb97;},0xa35:_0x2c8c65=>{'use strict';_0x2c8c65['exports']=__webpack_require__(/*! assert */ "assert");},0xb5:_0x4c49ae=>{'use strict';_0x4c49ae['exports']=__webpack_require__(/*! buffer */ "buffer");},0x14c5:_0x174a0d=>{'use strict';_0x174a0d['exports']=__webpack_require__(/*! child_process */ "child_process");},0x1b46:_0x49a419=>{'use strict';_0x49a419['exports']=__webpack_require__(/*! crypto */ "crypto");},0x8ca:_0xb343c2=>{'use strict';_0xb343c2['exports']=__webpack_require__(/*! dns */ "dns");},0xc5f:_0xd2d934=>{'use strict';_0xd2d934['exports']=__webpack_require__(/*! domain */ "domain");},0x1152:_0x241413=>{'use strict';_0x241413['exports']=__webpack_require__(/*! events */ "events");},0x26a8:_0x2be2ef=>{'use strict';_0x2be2ef['exports']=__webpack_require__(/*! fs */ "fs");},0x797:_0x469387=>{'use strict';_0x469387['exports']=__webpack_require__(/*! fs/promises */ "fs/promises");},0x21a3:_0x11787e=>{'use strict';_0x11787e['exports']=__webpack_require__(/*! http */ "http");},0x163c:_0x239b3f=>{'use strict';_0x239b3f['exports']=__webpack_require__(/*! https */ "https");},0x243e:_0x5a6755=>{'use strict';_0x5a6755['exports']=__webpack_require__(/*! net */ "net");},0x359:_0x45bf23=>{'use strict';_0x45bf23['exports']=__webpack_require__(/*! os */ "os");},0x1b10:_0x457749=>{'use strict';_0x457749['exports']=__webpack_require__(/*! path */ "path");},0x130c:_0xa5e46c=>{'use strict';_0xa5e46c['exports']=__webpack_require__(/*! punycode */ "punycode");},0xd98:_0xa7732b=>{'use strict';_0xa7732b['exports']=__webpack_require__(/*! querystring */ "querystring");},0x89b:_0x11d101=>{'use strict';_0x11d101['exports']=__webpack_require__(/*! stream */ "stream");},0x1294:_0x1279af=>{'use strict';_0x1279af['exports']=__webpack_require__(/*! tls */ "tls");},0x1b68:_0x261aee=>{'use strict';_0x261aee['exports']=__webpack_require__(/*! url */ "url");},0x233f:_0x1a4388=>{'use strict';_0x1a4388['exports']=__webpack_require__(/*! util */ "util");},0x815:_0x149c13=>{'use strict';_0x149c13['exports']=JSON['parse']('[\x22ac\x22,\x22com'+'.ac\x22,\x22edu.'+'ac\x22,\x22gov.a'+'c\x22,\x22net.ac'+'\x22,\x22mil.ac\x22'+',\x22org.ac\x22,'+'\x22ad\x22,\x22nom.'+'ad\x22,\x22ae\x22,\x22'+'co.ae\x22,\x22ne'+'t.ae\x22,\x22org'+'.ae\x22,\x22sch.'+'ae\x22,\x22ac.ae'+'\x22,\x22gov.ae\x22'+',\x22mil.ae\x22,'+'\x22aero\x22,\x22ac'+'cident-inv'+'estigation'+'.aero\x22,\x22ac'+'cident-pre'+'vention.ae'+'ro\x22,\x22aerob'+'atic.aero\x22'+',\x22aeroclub'+'.aero\x22,\x22ae'+'rodrome.ae'+'ro\x22,\x22agent'+'s.aero\x22,\x22a'+'ircraft.ae'+'ro\x22,\x22airli'+'ne.aero\x22,\x22'+'airport.ae'+'ro\x22,\x22air-s'+'urveillanc'+'e.aero\x22,\x22a'+'irtraffic.'+'aero\x22,\x22air'+'-traffic-c'+'ontrol.aer'+'o\x22,\x22ambula'+'nce.aero\x22,'+'\x22amusement'+'.aero\x22,\x22as'+'sociation.'+'aero\x22,\x22aut'+'hor.aero\x22,'+'\x22balloonin'+'g.aero\x22,\x22b'+'roker.aero'+'\x22,\x22caa.aer'+'o\x22,\x22cargo.'+'aero\x22,\x22cat'+'ering.aero'+'\x22,\x22certifi'+'cation.aer'+'o\x22,\x22champi'+'onship.aer'+'o\x22,\x22charte'+'r.aero\x22,\x22c'+'ivilaviati'+'on.aero\x22,\x22'+'club.aero\x22'+',\x22conferen'+'ce.aero\x22,\x22'+'consultant'+'.aero\x22,\x22co'+'nsulting.a'+'ero\x22,\x22cont'+'rol.aero\x22,'+'\x22council.a'+'ero\x22,\x22crew'+'.aero\x22,\x22de'+'sign.aero\x22'+',\x22dgca.aer'+'o\x22,\x22educat'+'or.aero\x22,\x22'+'emergency.'+'aero\x22,\x22eng'+'ine.aero\x22,'+'\x22engineer.'+'aero\x22,\x22ent'+'ertainment'+'.aero\x22,\x22eq'+'uipment.ae'+'ro\x22,\x22excha'+'nge.aero\x22,'+'\x22express.a'+'ero\x22,\x22fede'+'ration.aer'+'o\x22,\x22flight'+'.aero\x22,\x22fr'+'eight.aero'+'\x22,\x22fuel.ae'+'ro\x22,\x22glidi'+'ng.aero\x22,\x22'+'government'+'.aero\x22,\x22gr'+'oundhandli'+'ng.aero\x22,\x22'+'group.aero'+'\x22,\x22hanggli'+('ding.aero\x22'+',\x22homebuil'+'t.aero\x22,\x22i'+'nsurance.a'+'ero\x22,\x22jour'+'nal.aero\x22,'+'\x22journalis'+'t.aero\x22,\x22l'+'easing.aer'+'o\x22,\x22logist'+'ics.aero\x22,'+'\x22magazine.'+'aero\x22,\x22mai'+'ntenance.a'+'ero\x22,\x22medi'+'a.aero\x22,\x22m'+'icrolight.'+'aero\x22,\x22mod'+'elling.aer'+'o\x22,\x22naviga'+'tion.aero\x22'+',\x22parachut'+'ing.aero\x22,'+'\x22paraglidi'+'ng.aero\x22,\x22'+'passenger-'+'associatio'+'n.aero\x22,\x22p'+'ilot.aero\x22'+',\x22press.ae'+'ro\x22,\x22produ'+'ction.aero'+'\x22,\x22recreat'+'ion.aero\x22,'+'\x22repbody.a'+'ero\x22,\x22res.'+'aero\x22,\x22res'+'earch.aero'+'\x22,\x22rotorcr'+'aft.aero\x22,'+'\x22safety.ae'+'ro\x22,\x22scien'+'tist.aero\x22'+',\x22services'+'.aero\x22,\x22sh'+'ow.aero\x22,\x22'+'skydiving.'+'aero\x22,\x22sof'+'tware.aero'+'\x22,\x22student'+'.aero\x22,\x22tr'+'ader.aero\x22'+',\x22trading.'+'aero\x22,\x22tra'+'iner.aero\x22'+',\x22union.ae'+'ro\x22,\x22worki'+'nggroup.ae'+'ro\x22,\x22works'+'.aero\x22,\x22af'+'\x22,\x22gov.af\x22'+',\x22com.af\x22,'+'\x22org.af\x22,\x22'+'net.af\x22,\x22e'+'du.af\x22,\x22ag'+'\x22,\x22com.ag\x22'+',\x22org.ag\x22,'+'\x22net.ag\x22,\x22'+'co.ag\x22,\x22no'+'m.ag\x22,\x22ai\x22'+',\x22off.ai\x22,'+'\x22com.ai\x22,\x22'+'net.ai\x22,\x22o'+'rg.ai\x22,\x22al'+'\x22,\x22com.al\x22'+',\x22edu.al\x22,'+'\x22gov.al\x22,\x22'+'mil.al\x22,\x22n'+'et.al\x22,\x22or'+'g.al\x22,\x22am\x22'+',\x22co.am\x22,\x22'+'com.am\x22,\x22c'+'ommune.am\x22'+',\x22net.am\x22,'+'\x22org.am\x22,\x22'+'ao\x22,\x22ed.ao'+'\x22,\x22gv.ao\x22,'+'\x22og.ao\x22,\x22c'+'o.ao\x22,\x22pb.'+'ao\x22,\x22it.ao'+'\x22,\x22aq\x22,\x22ar'+'\x22,\x22com.ar\x22'+',\x22edu.ar\x22,'+'\x22gob.ar\x22,\x22'+'gov.ar\x22,\x22i'+'nt.ar\x22,\x22mi'+'l.ar\x22,\x22mus'+'ica.ar\x22,\x22n'+'et.ar\x22,\x22or'+'g.ar\x22,\x22tur')+('.ar\x22,\x22arpa'+'\x22,\x22e164.ar'+'pa\x22,\x22in-ad'+'dr.arpa\x22,\x22'+'ip6.arpa\x22,'+'\x22iris.arpa'+'\x22,\x22uri.arp'+'a\x22,\x22urn.ar'+'pa\x22,\x22as\x22,\x22'+'gov.as\x22,\x22a'+'sia\x22,\x22at\x22,'+'\x22ac.at\x22,\x22c'+'o.at\x22,\x22gv.'+'at\x22,\x22or.at'+'\x22,\x22au\x22,\x22co'+'m.au\x22,\x22net'+'.au\x22,\x22org.'+'au\x22,\x22edu.a'+'u\x22,\x22gov.au'+'\x22,\x22asn.au\x22'+',\x22id.au\x22,\x22'+'info.au\x22,\x22'+'conf.au\x22,\x22'+'oz.au\x22,\x22ac'+'t.au\x22,\x22nsw'+'.au\x22,\x22nt.a'+'u\x22,\x22qld.au'+'\x22,\x22sa.au\x22,'+'\x22tas.au\x22,\x22'+'vic.au\x22,\x22w'+'a.au\x22,\x22act'+'.edu.au\x22,\x22'+'catholic.e'+'du.au\x22,\x22ns'+'w.edu.au\x22,'+'\x22nt.edu.au'+'\x22,\x22qld.edu'+'.au\x22,\x22sa.e'+'du.au\x22,\x22ta'+'s.edu.au\x22,'+'\x22vic.edu.a'+'u\x22,\x22wa.edu'+'.au\x22,\x22qld.'+'gov.au\x22,\x22s'+'a.gov.au\x22,'+'\x22tas.gov.a'+'u\x22,\x22vic.go'+'v.au\x22,\x22wa.'+'gov.au\x22,\x22e'+'ducation.t'+'as.edu.au\x22'+',\x22schools.'+'nsw.edu.au'+'\x22,\x22aw\x22,\x22co'+'m.aw\x22,\x22ax\x22'+',\x22az\x22,\x22com'+'.az\x22,\x22net.'+'az\x22,\x22int.a'+'z\x22,\x22gov.az'+'\x22,\x22org.az\x22'+',\x22edu.az\x22,'+'\x22info.az\x22,'+'\x22pp.az\x22,\x22m'+'il.az\x22,\x22na'+'me.az\x22,\x22pr'+'o.az\x22,\x22biz'+'.az\x22,\x22ba\x22,'+'\x22com.ba\x22,\x22'+'edu.ba\x22,\x22g'+'ov.ba\x22,\x22mi'+'l.ba\x22,\x22net'+'.ba\x22,\x22org.'+'ba\x22,\x22bb\x22,\x22'+'biz.bb\x22,\x22c'+'o.bb\x22,\x22com'+'.bb\x22,\x22edu.'+'bb\x22,\x22gov.b'+'b\x22,\x22info.b'+'b\x22,\x22net.bb'+'\x22,\x22org.bb\x22'+',\x22store.bb'+'\x22,\x22tv.bb\x22,'+'\x22*.bd\x22,\x22be'+'\x22,\x22ac.be\x22,'+'\x22bf\x22,\x22gov.'+'bf\x22,\x22bg\x22,\x22'+'a.bg\x22,\x22b.b'+'g\x22,\x22c.bg\x22,'+'\x22d.bg\x22,\x22e.'+'bg\x22,\x22f.bg\x22'+',\x22g.bg\x22,\x22h'+'.bg\x22,\x22i.bg'+'\x22,\x22j.bg\x22,\x22'+'k.bg\x22,\x22l.b'+'g\x22,\x22m.bg\x22,'+'\x22n.bg\x22,\x22o.'+'bg\x22,\x22p.bg\x22'+',\x22q.bg\x22,\x22r'+'.bg\x22,\x22s.bg'+'\x22,\x22t.bg\x22,\x22')+('u.bg\x22,\x22v.b'+'g\x22,\x22w.bg\x22,'+'\x22x.bg\x22,\x22y.'+'bg\x22,\x22z.bg\x22'+',\x220.bg\x22,\x221'+'.bg\x22,\x222.bg'+'\x22,\x223.bg\x22,\x22'+'4.bg\x22,\x225.b'+'g\x22,\x226.bg\x22,'+'\x227.bg\x22,\x228.'+'bg\x22,\x229.bg\x22'+',\x22bh\x22,\x22com'+'.bh\x22,\x22edu.'+'bh\x22,\x22net.b'+'h\x22,\x22org.bh'+'\x22,\x22gov.bh\x22'+',\x22bi\x22,\x22co.'+'bi\x22,\x22com.b'+'i\x22,\x22edu.bi'+'\x22,\x22or.bi\x22,'+'\x22org.bi\x22,\x22'+'biz\x22,\x22bj\x22,'+'\x22asso.bj\x22,'+'\x22barreau.b'+'j\x22,\x22gouv.b'+'j\x22,\x22bm\x22,\x22c'+'om.bm\x22,\x22ed'+'u.bm\x22,\x22gov'+'.bm\x22,\x22net.'+'bm\x22,\x22org.b'+'m\x22,\x22bn\x22,\x22c'+'om.bn\x22,\x22ed'+'u.bn\x22,\x22gov'+'.bn\x22,\x22net.'+'bn\x22,\x22org.b'+'n\x22,\x22bo\x22,\x22c'+'om.bo\x22,\x22ed'+'u.bo\x22,\x22gob'+'.bo\x22,\x22int.'+'bo\x22,\x22org.b'+'o\x22,\x22net.bo'+'\x22,\x22mil.bo\x22'+',\x22tv.bo\x22,\x22'+'web.bo\x22,\x22a'+'cademia.bo'+'\x22,\x22agro.bo'+'\x22,\x22arte.bo'+'\x22,\x22blog.bo'+'\x22,\x22bolivia'+'.bo\x22,\x22cien'+'cia.bo\x22,\x22c'+'ooperativa'+'.bo\x22,\x22demo'+'cracia.bo\x22'+',\x22deporte.'+'bo\x22,\x22ecolo'+'gia.bo\x22,\x22e'+'conomia.bo'+'\x22,\x22empresa'+'.bo\x22,\x22indi'+'gena.bo\x22,\x22'+'industria.'+'bo\x22,\x22info.'+'bo\x22,\x22medic'+'ina.bo\x22,\x22m'+'ovimiento.'+'bo\x22,\x22music'+'a.bo\x22,\x22nat'+'ural.bo\x22,\x22'+'nombre.bo\x22'+',\x22noticias'+'.bo\x22,\x22patr'+'ia.bo\x22,\x22po'+'litica.bo\x22'+',\x22profesio'+'nal.bo\x22,\x22p'+'lurinacion'+'al.bo\x22,\x22pu'+'eblo.bo\x22,\x22'+'revista.bo'+'\x22,\x22salud.b'+'o\x22,\x22tecnol'+'ogia.bo\x22,\x22'+'tksat.bo\x22,'+'\x22transport'+'e.bo\x22,\x22wik'+'i.bo\x22,\x22br\x22'+',\x229guacu.b'+'r\x22,\x22abc.br'+'\x22,\x22adm.br\x22'+',\x22adv.br\x22,'+'\x22agr.br\x22,\x22'+'aju.br\x22,\x22a'+'m.br\x22,\x22ana'+'ni.br\x22,\x22ap'+'arecida.br'+'\x22,\x22arq.br\x22'+',\x22art.br\x22,'+'\x22ato.br\x22,\x22'+'b.br\x22,\x22bar')+('ueri.br\x22,\x22'+'belem.br\x22,'+'\x22bhz.br\x22,\x22'+'bio.br\x22,\x22b'+'log.br\x22,\x22b'+'md.br\x22,\x22bo'+'avista.br\x22'+',\x22bsb.br\x22,'+'\x22campinagr'+'ande.br\x22,\x22'+'campinas.b'+'r\x22,\x22caxias'+'.br\x22,\x22cim.'+'br\x22,\x22cng.b'+'r\x22,\x22cnt.br'+'\x22,\x22com.br\x22'+',\x22contagem'+'.br\x22,\x22coop'+'.br\x22,\x22cri.'+'br\x22,\x22cuiab'+'a.br\x22,\x22cur'+'itiba.br\x22,'+'\x22def.br\x22,\x22'+'ecn.br\x22,\x22e'+'co.br\x22,\x22ed'+'u.br\x22,\x22emp'+'.br\x22,\x22eng.'+'br\x22,\x22esp.b'+'r\x22,\x22etc.br'+'\x22,\x22eti.br\x22'+',\x22far.br\x22,'+'\x22feira.br\x22'+',\x22flog.br\x22'+',\x22floripa.'+'br\x22,\x22fm.br'+'\x22,\x22fnd.br\x22'+',\x22fortal.b'+'r\x22,\x22fot.br'+'\x22,\x22foz.br\x22'+',\x22fst.br\x22,'+'\x22g12.br\x22,\x22'+'ggf.br\x22,\x22g'+'oiania.br\x22'+',\x22gov.br\x22,'+'\x22ac.gov.br'+'\x22,\x22al.gov.'+'br\x22,\x22am.go'+'v.br\x22,\x22ap.'+'gov.br\x22,\x22b'+'a.gov.br\x22,'+'\x22ce.gov.br'+'\x22,\x22df.gov.'+'br\x22,\x22es.go'+'v.br\x22,\x22go.'+'gov.br\x22,\x22m'+'a.gov.br\x22,'+'\x22mg.gov.br'+'\x22,\x22ms.gov.'+'br\x22,\x22mt.go'+'v.br\x22,\x22pa.'+'gov.br\x22,\x22p'+'b.gov.br\x22,'+'\x22pe.gov.br'+'\x22,\x22pi.gov.'+'br\x22,\x22pr.go'+'v.br\x22,\x22rj.'+'gov.br\x22,\x22r'+'n.gov.br\x22,'+'\x22ro.gov.br'+'\x22,\x22rr.gov.'+'br\x22,\x22rs.go'+'v.br\x22,\x22sc.'+'gov.br\x22,\x22s'+'e.gov.br\x22,'+'\x22sp.gov.br'+'\x22,\x22to.gov.'+'br\x22,\x22gru.b'+'r\x22,\x22imb.br'+'\x22,\x22ind.br\x22'+',\x22inf.br\x22,'+'\x22jab.br\x22,\x22'+'jampa.br\x22,'+'\x22jdf.br\x22,\x22'+'joinville.'+'br\x22,\x22jor.b'+'r\x22,\x22jus.br'+'\x22,\x22leg.br\x22'+',\x22lel.br\x22,'+'\x22londrina.'+'br\x22,\x22macap'+'a.br\x22,\x22mac'+'eio.br\x22,\x22m'+'anaus.br\x22,'+'\x22maringa.b'+'r\x22,\x22mat.br'+'\x22,\x22med.br\x22'+',\x22mil.br\x22,'+'\x22morena.br'+'\x22,\x22mp.br\x22,'+'\x22mus.br\x22,\x22')+('natal.br\x22,'+'\x22net.br\x22,\x22'+'niteroi.br'+'\x22,\x22*.nom.b'+'r\x22,\x22not.br'+'\x22,\x22ntr.br\x22'+',\x22odo.br\x22,'+'\x22ong.br\x22,\x22'+'org.br\x22,\x22o'+'sasco.br\x22,'+'\x22palmas.br'+'\x22,\x22poa.br\x22'+',\x22ppg.br\x22,'+'\x22pro.br\x22,\x22'+'psc.br\x22,\x22p'+'si.br\x22,\x22pv'+'h.br\x22,\x22qsl'+'.br\x22,\x22radi'+'o.br\x22,\x22rec'+'.br\x22,\x22reci'+'fe.br\x22,\x22ri'+'beirao.br\x22'+',\x22rio.br\x22,'+'\x22riobranco'+'.br\x22,\x22riop'+'reto.br\x22,\x22'+'salvador.b'+'r\x22,\x22sampa.'+'br\x22,\x22santa'+'maria.br\x22,'+'\x22santoandr'+'e.br\x22,\x22sao'+'bernardo.b'+'r\x22,\x22saogon'+'ca.br\x22,\x22sj'+'c.br\x22,\x22slg'+'.br\x22,\x22slz.'+'br\x22,\x22soroc'+'aba.br\x22,\x22s'+'rv.br\x22,\x22ta'+'xi.br\x22,\x22tc'+'.br\x22,\x22teo.'+'br\x22,\x22the.b'+'r\x22,\x22tmp.br'+'\x22,\x22trd.br\x22'+',\x22tur.br\x22,'+'\x22tv.br\x22,\x22u'+'di.br\x22,\x22ve'+'t.br\x22,\x22vix'+'.br\x22,\x22vlog'+'.br\x22,\x22wiki'+'.br\x22,\x22zlg.'+'br\x22,\x22bs\x22,\x22'+'com.bs\x22,\x22n'+'et.bs\x22,\x22or'+'g.bs\x22,\x22edu'+'.bs\x22,\x22gov.'+'bs\x22,\x22bt\x22,\x22'+'com.bt\x22,\x22e'+'du.bt\x22,\x22go'+'v.bt\x22,\x22net'+'.bt\x22,\x22org.'+'bt\x22,\x22bv\x22,\x22'+'bw\x22,\x22co.bw'+'\x22,\x22org.bw\x22'+',\x22by\x22,\x22gov'+'.by\x22,\x22mil.'+'by\x22,\x22com.b'+'y\x22,\x22of.by\x22'+',\x22bz\x22,\x22com'+'.bz\x22,\x22net.'+'bz\x22,\x22org.b'+'z\x22,\x22edu.bz'+'\x22,\x22gov.bz\x22'+',\x22ca\x22,\x22ab.'+'ca\x22,\x22bc.ca'+'\x22,\x22mb.ca\x22,'+'\x22nb.ca\x22,\x22n'+'f.ca\x22,\x22nl.'+'ca\x22,\x22ns.ca'+'\x22,\x22nt.ca\x22,'+'\x22nu.ca\x22,\x22o'+'n.ca\x22,\x22pe.'+'ca\x22,\x22qc.ca'+'\x22,\x22sk.ca\x22,'+'\x22yk.ca\x22,\x22g'+'c.ca\x22,\x22cat'+'\x22,\x22cc\x22,\x22cd'+'\x22,\x22gov.cd\x22'+',\x22cf\x22,\x22cg\x22'+',\x22ch\x22,\x22ci\x22'+',\x22org.ci\x22,'+'\x22or.ci\x22,\x22c'+'om.ci\x22,\x22co'+'.ci\x22,\x22edu.'+'ci\x22,\x22ed.ci'+'\x22,\x22ac.ci\x22,'+'\x22net.ci\x22,\x22'+'go.ci\x22,\x22as'+'so.ci\x22,\x22aé')+('roport.ci\x22'+',\x22int.ci\x22,'+'\x22presse.ci'+'\x22,\x22md.ci\x22,'+'\x22gouv.ci\x22,'+'\x22*.ck\x22,\x22!w'+'ww.ck\x22,\x22cl'+'\x22,\x22aprende'+'mas.cl\x22,\x22c'+'o.cl\x22,\x22gob'+'.cl\x22,\x22gov.'+'cl\x22,\x22mil.c'+'l\x22,\x22cm\x22,\x22c'+'o.cm\x22,\x22com'+'.cm\x22,\x22gov.'+'cm\x22,\x22net.c'+'m\x22,\x22cn\x22,\x22a'+'c.cn\x22,\x22com'+'.cn\x22,\x22edu.'+'cn\x22,\x22gov.c'+'n\x22,\x22net.cn'+'\x22,\x22org.cn\x22'+',\x22mil.cn\x22,'+'\x22公司.cn\x22,\x22网'+'络.cn\x22,\x22網絡.'+'cn\x22,\x22ah.cn'+'\x22,\x22bj.cn\x22,'+'\x22cq.cn\x22,\x22f'+'j.cn\x22,\x22gd.'+'cn\x22,\x22gs.cn'+'\x22,\x22gz.cn\x22,'+'\x22gx.cn\x22,\x22h'+'a.cn\x22,\x22hb.'+'cn\x22,\x22he.cn'+'\x22,\x22hi.cn\x22,'+'\x22hl.cn\x22,\x22h'+'n.cn\x22,\x22jl.'+'cn\x22,\x22js.cn'+'\x22,\x22jx.cn\x22,'+'\x22ln.cn\x22,\x22n'+'m.cn\x22,\x22nx.'+'cn\x22,\x22qh.cn'+'\x22,\x22sc.cn\x22,'+'\x22sd.cn\x22,\x22s'+'h.cn\x22,\x22sn.'+'cn\x22,\x22sx.cn'+'\x22,\x22tj.cn\x22,'+'\x22xj.cn\x22,\x22x'+'z.cn\x22,\x22yn.'+'cn\x22,\x22zj.cn'+'\x22,\x22hk.cn\x22,'+'\x22mo.cn\x22,\x22t'+'w.cn\x22,\x22co\x22'+',\x22arts.co\x22'+',\x22com.co\x22,'+'\x22edu.co\x22,\x22'+'firm.co\x22,\x22'+'gov.co\x22,\x22i'+'nfo.co\x22,\x22i'+'nt.co\x22,\x22mi'+'l.co\x22,\x22net'+'.co\x22,\x22nom.'+'co\x22,\x22org.c'+'o\x22,\x22rec.co'+'\x22,\x22web.co\x22'+',\x22com\x22,\x22co'+'op\x22,\x22cr\x22,\x22'+'ac.cr\x22,\x22co'+'.cr\x22,\x22ed.c'+'r\x22,\x22fi.cr\x22'+',\x22go.cr\x22,\x22'+'or.cr\x22,\x22sa'+'.cr\x22,\x22cu\x22,'+'\x22com.cu\x22,\x22'+'edu.cu\x22,\x22o'+'rg.cu\x22,\x22ne'+'t.cu\x22,\x22gov'+'.cu\x22,\x22inf.'+'cu\x22,\x22cv\x22,\x22'+'cw\x22,\x22com.c'+'w\x22,\x22edu.cw'+'\x22,\x22net.cw\x22'+',\x22org.cw\x22,'+'\x22cx\x22,\x22gov.'+'cx\x22,\x22cy\x22,\x22'+'ac.cy\x22,\x22bi'+'z.cy\x22,\x22com'+'.cy\x22,\x22eklo'+'ges.cy\x22,\x22g'+'ov.cy\x22,\x22lt'+'d.cy\x22,\x22nam'+'e.cy\x22,\x22net'+'.cy\x22,\x22org.'+'cy\x22,\x22parli'+'ament.cy\x22,'+'\x22press.cy\x22'+',\x22pro.cy\x22,'+'\x22tm.cy\x22,\x22c'+'z\x22,\x22de\x22,\x22d'+'j\x22,\x22dk\x22,\x22d')+('m\x22,\x22com.dm'+'\x22,\x22net.dm\x22'+',\x22org.dm\x22,'+'\x22edu.dm\x22,\x22'+'gov.dm\x22,\x22d'+'o\x22,\x22art.do'+'\x22,\x22com.do\x22'+',\x22edu.do\x22,'+'\x22gob.do\x22,\x22'+'gov.do\x22,\x22m'+'il.do\x22,\x22ne'+'t.do\x22,\x22org'+'.do\x22,\x22sld.'+'do\x22,\x22web.d'+'o\x22,\x22dz\x22,\x22c'+'om.dz\x22,\x22or'+'g.dz\x22,\x22net'+'.dz\x22,\x22gov.'+'dz\x22,\x22edu.d'+'z\x22,\x22asso.d'+'z\x22,\x22pol.dz'+'\x22,\x22art.dz\x22'+',\x22ec\x22,\x22com'+'.ec\x22,\x22info'+'.ec\x22,\x22net.'+'ec\x22,\x22fin.e'+'c\x22,\x22k12.ec'+'\x22,\x22med.ec\x22'+',\x22pro.ec\x22,'+'\x22org.ec\x22,\x22'+'edu.ec\x22,\x22g'+'ov.ec\x22,\x22go'+'b.ec\x22,\x22mil'+'.ec\x22,\x22edu\x22'+',\x22ee\x22,\x22edu'+'.ee\x22,\x22gov.'+'ee\x22,\x22riik.'+'ee\x22,\x22lib.e'+'e\x22,\x22med.ee'+'\x22,\x22com.ee\x22'+',\x22pri.ee\x22,'+'\x22aip.ee\x22,\x22'+'org.ee\x22,\x22f'+'ie.ee\x22,\x22eg'+'\x22,\x22com.eg\x22'+',\x22edu.eg\x22,'+'\x22eun.eg\x22,\x22'+'gov.eg\x22,\x22m'+'il.eg\x22,\x22na'+'me.eg\x22,\x22ne'+'t.eg\x22,\x22org'+'.eg\x22,\x22sci.'+'eg\x22,\x22*.er\x22'+',\x22es\x22,\x22com'+'.es\x22,\x22nom.'+'es\x22,\x22org.e'+'s\x22,\x22gob.es'+'\x22,\x22edu.es\x22'+',\x22et\x22,\x22com'+'.et\x22,\x22gov.'+'et\x22,\x22org.e'+'t\x22,\x22edu.et'+'\x22,\x22biz.et\x22'+',\x22name.et\x22'+',\x22info.et\x22'+',\x22net.et\x22,'+'\x22eu\x22,\x22fi\x22,'+'\x22aland.fi\x22'+',\x22fj\x22,\x22ac.'+'fj\x22,\x22biz.f'+'j\x22,\x22com.fj'+'\x22,\x22gov.fj\x22'+',\x22info.fj\x22'+',\x22mil.fj\x22,'+'\x22name.fj\x22,'+'\x22net.fj\x22,\x22'+'org.fj\x22,\x22p'+'ro.fj\x22,\x22*.'+'fk\x22,\x22fm\x22,\x22'+'fo\x22,\x22fr\x22,\x22'+'asso.fr\x22,\x22'+'com.fr\x22,\x22g'+'ouv.fr\x22,\x22n'+'om.fr\x22,\x22pr'+'d.fr\x22,\x22tm.'+'fr\x22,\x22aerop'+'ort.fr\x22,\x22a'+'vocat.fr\x22,'+'\x22avoues.fr'+'\x22,\x22cci.fr\x22'+',\x22chambagr'+'i.fr\x22,\x22chi'+'rurgiens-d'+'entistes.f'+'r\x22,\x22expert'+'s-comptabl'+'es.fr\x22,\x22ge'+'ometre-exp'+'ert.fr\x22,\x22g'+'reta.fr\x22,\x22')+('huissier-j'+'ustice.fr\x22'+',\x22medecin.'+'fr\x22,\x22notai'+'res.fr\x22,\x22p'+'harmacien.'+'fr\x22,\x22port.'+'fr\x22,\x22veter'+'inaire.fr\x22'+',\x22ga\x22,\x22gb\x22'+',\x22gd\x22,\x22ge\x22'+',\x22com.ge\x22,'+'\x22edu.ge\x22,\x22'+'gov.ge\x22,\x22o'+'rg.ge\x22,\x22mi'+'l.ge\x22,\x22net'+'.ge\x22,\x22pvt.'+'ge\x22,\x22gf\x22,\x22'+'gg\x22,\x22co.gg'+'\x22,\x22net.gg\x22'+',\x22org.gg\x22,'+'\x22gh\x22,\x22com.'+'gh\x22,\x22edu.g'+'h\x22,\x22gov.gh'+'\x22,\x22org.gh\x22'+',\x22mil.gh\x22,'+'\x22gi\x22,\x22com.'+'gi\x22,\x22ltd.g'+'i\x22,\x22gov.gi'+'\x22,\x22mod.gi\x22'+',\x22edu.gi\x22,'+'\x22org.gi\x22,\x22'+'gl\x22,\x22co.gl'+'\x22,\x22com.gl\x22'+',\x22edu.gl\x22,'+'\x22net.gl\x22,\x22'+'org.gl\x22,\x22g'+'m\x22,\x22gn\x22,\x22a'+'c.gn\x22,\x22com'+'.gn\x22,\x22edu.'+'gn\x22,\x22gov.g'+'n\x22,\x22org.gn'+'\x22,\x22net.gn\x22'+',\x22gov\x22,\x22gp'+'\x22,\x22com.gp\x22'+',\x22net.gp\x22,'+'\x22mobi.gp\x22,'+'\x22edu.gp\x22,\x22'+'org.gp\x22,\x22a'+'sso.gp\x22,\x22g'+'q\x22,\x22gr\x22,\x22c'+'om.gr\x22,\x22ed'+'u.gr\x22,\x22net'+'.gr\x22,\x22org.'+'gr\x22,\x22gov.g'+'r\x22,\x22gs\x22,\x22g'+'t\x22,\x22com.gt'+'\x22,\x22edu.gt\x22'+',\x22gob.gt\x22,'+'\x22ind.gt\x22,\x22'+'mil.gt\x22,\x22n'+'et.gt\x22,\x22or'+'g.gt\x22,\x22gu\x22'+',\x22com.gu\x22,'+'\x22edu.gu\x22,\x22'+'gov.gu\x22,\x22g'+'uam.gu\x22,\x22i'+'nfo.gu\x22,\x22n'+'et.gu\x22,\x22or'+'g.gu\x22,\x22web'+'.gu\x22,\x22gw\x22,'+'\x22gy\x22,\x22co.g'+'y\x22,\x22com.gy'+'\x22,\x22edu.gy\x22'+',\x22gov.gy\x22,'+'\x22net.gy\x22,\x22'+'org.gy\x22,\x22h'+'k\x22,\x22com.hk'+'\x22,\x22edu.hk\x22'+',\x22gov.hk\x22,'+'\x22idv.hk\x22,\x22'+'net.hk\x22,\x22o'+'rg.hk\x22,\x22公司'+'.hk\x22,\x22教育.h'+'k\x22,\x22敎育.hk\x22'+',\x22政府.hk\x22,\x22'+'個人.hk\x22,\x22个人'+'.hk\x22,\x22箇人.h'+'k\x22,\x22網络.hk\x22'+',\x22网络.hk\x22,\x22'+'组織.hk\x22,\x22網絡'+'.hk\x22,\x22网絡.h'+'k\x22,\x22组织.hk\x22'+',\x22組織.hk\x22,\x22'+'組织.hk\x22,\x22hm'+'\x22,\x22hn\x22,\x22co'+'m.hn\x22,\x22edu'+'.hn\x22,\x22org.'+'hn\x22,\x22net.h'+'n\x22,\x22mil.hn')+('\x22,\x22gob.hn\x22'+',\x22hr\x22,\x22iz.'+'hr\x22,\x22from.'+'hr\x22,\x22name.'+'hr\x22,\x22com.h'+'r\x22,\x22ht\x22,\x22c'+'om.ht\x22,\x22sh'+'op.ht\x22,\x22fi'+'rm.ht\x22,\x22in'+'fo.ht\x22,\x22ad'+'ult.ht\x22,\x22n'+'et.ht\x22,\x22pr'+'o.ht\x22,\x22org'+'.ht\x22,\x22med.'+'ht\x22,\x22art.h'+'t\x22,\x22coop.h'+'t\x22,\x22pol.ht'+'\x22,\x22asso.ht'+'\x22,\x22edu.ht\x22'+',\x22rel.ht\x22,'+'\x22gouv.ht\x22,'+'\x22perso.ht\x22'+',\x22hu\x22,\x22co.'+'hu\x22,\x22info.'+'hu\x22,\x22org.h'+'u\x22,\x22priv.h'+'u\x22,\x22sport.'+'hu\x22,\x22tm.hu'+'\x22,\x222000.hu'+'\x22,\x22agrar.h'+'u\x22,\x22bolt.h'+'u\x22,\x22casino'+'.hu\x22,\x22city'+'.hu\x22,\x22erot'+'ica.hu\x22,\x22e'+'rotika.hu\x22'+',\x22film.hu\x22'+',\x22forum.hu'+'\x22,\x22games.h'+'u\x22,\x22hotel.'+'hu\x22,\x22ingat'+'lan.hu\x22,\x22j'+'ogasz.hu\x22,'+'\x22konyvelo.'+'hu\x22,\x22lakas'+'.hu\x22,\x22medi'+'a.hu\x22,\x22new'+'s.hu\x22,\x22rek'+'lam.hu\x22,\x22s'+'ex.hu\x22,\x22sh'+'op.hu\x22,\x22su'+'li.hu\x22,\x22sz'+'ex.hu\x22,\x22to'+'zsde.hu\x22,\x22'+'utazas.hu\x22'+',\x22video.hu'+'\x22,\x22id\x22,\x22ac'+'.id\x22,\x22biz.'+'id\x22,\x22co.id'+'\x22,\x22desa.id'+'\x22,\x22go.id\x22,'+'\x22mil.id\x22,\x22'+'my.id\x22,\x22ne'+'t.id\x22,\x22or.'+'id\x22,\x22ponpe'+'s.id\x22,\x22sch'+'.id\x22,\x22web.'+'id\x22,\x22ie\x22,\x22'+'gov.ie\x22,\x22i'+'l\x22,\x22ac.il\x22'+',\x22co.il\x22,\x22'+'gov.il\x22,\x22i'+'df.il\x22,\x22k1'+'2.il\x22,\x22mun'+'i.il\x22,\x22net'+'.il\x22,\x22org.'+'il\x22,\x22im\x22,\x22'+'ac.im\x22,\x22co'+'.im\x22,\x22com.'+'im\x22,\x22ltd.c'+'o.im\x22,\x22net'+'.im\x22,\x22org.'+'im\x22,\x22plc.c'+'o.im\x22,\x22tt.'+'im\x22,\x22tv.im'+'\x22,\x22in\x22,\x22co'+'.in\x22,\x22firm'+'.in\x22,\x22net.'+'in\x22,\x22org.i'+'n\x22,\x22gen.in'+'\x22,\x22ind.in\x22'+',\x22nic.in\x22,'+'\x22ac.in\x22,\x22e'+'du.in\x22,\x22re'+'s.in\x22,\x22gov'+'.in\x22,\x22mil.'+'in\x22,\x22info\x22'+',\x22int\x22,\x22eu'+'.int\x22,\x22io\x22'+',\x22com.io\x22,')+('\x22iq\x22,\x22gov.'+'iq\x22,\x22edu.i'+'q\x22,\x22mil.iq'+'\x22,\x22com.iq\x22'+',\x22org.iq\x22,'+'\x22net.iq\x22,\x22'+'ir\x22,\x22ac.ir'+'\x22,\x22co.ir\x22,'+'\x22gov.ir\x22,\x22'+'id.ir\x22,\x22ne'+'t.ir\x22,\x22org'+'.ir\x22,\x22sch.'+'ir\x22,\x22ایران'+'.ir\x22,\x22ايرا'+'ن.ir\x22,\x22is\x22'+',\x22net.is\x22,'+'\x22com.is\x22,\x22'+'edu.is\x22,\x22g'+'ov.is\x22,\x22or'+'g.is\x22,\x22int'+'.is\x22,\x22it\x22,'+'\x22gov.it\x22,\x22'+'edu.it\x22,\x22a'+'br.it\x22,\x22ab'+'ruzzo.it\x22,'+'\x22aosta-val'+'ley.it\x22,\x22a'+'ostavalley'+'.it\x22,\x22bas.'+'it\x22,\x22basil'+'icata.it\x22,'+'\x22cal.it\x22,\x22'+'calabria.i'+'t\x22,\x22cam.it'+'\x22,\x22campani'+'a.it\x22,\x22emi'+'lia-romagn'+'a.it\x22,\x22emi'+'liaromagna'+'.it\x22,\x22emr.'+'it\x22,\x22friul'+'i-v-giulia'+'.it\x22,\x22friu'+'li-ve-giul'+'ia.it\x22,\x22fr'+'iuli-vegiu'+'lia.it\x22,\x22f'+'riuli-vene'+'zia-giulia'+'.it\x22,\x22friu'+'li-venezia'+'giulia.it\x22'+',\x22friuli-v'+'giulia.it\x22'+',\x22friuliv-'+'giulia.it\x22'+',\x22friulive'+'-giulia.it'+'\x22,\x22friuliv'+'egiulia.it'+'\x22,\x22friuliv'+'enezia-giu'+'lia.it\x22,\x22f'+'riulivenez'+'iagiulia.i'+'t\x22,\x22friuli'+'vgiulia.it'+'\x22,\x22fvg.it\x22'+',\x22laz.it\x22,'+'\x22lazio.it\x22'+',\x22lig.it\x22,'+'\x22liguria.i'+'t\x22,\x22lom.it'+'\x22,\x22lombard'+'ia.it\x22,\x22lo'+'mbardy.it\x22'+',\x22lucania.'+'it\x22,\x22mar.i'+'t\x22,\x22marche'+'.it\x22,\x22mol.'+'it\x22,\x22molis'+'e.it\x22,\x22pie'+'dmont.it\x22,'+'\x22piemonte.'+'it\x22,\x22pmn.i'+'t\x22,\x22pug.it'+'\x22,\x22puglia.'+'it\x22,\x22sar.i'+'t\x22,\x22sardeg'+'na.it\x22,\x22sa'+'rdinia.it\x22'+',\x22sic.it\x22,'+'\x22sicilia.i'+'t\x22,\x22sicily'+'.it\x22,\x22taa.'+'it\x22,\x22tos.i'+'t\x22,\x22toscan'+'a.it\x22,\x22tre'+'ntin-sud-t'+'irol.it\x22,\x22')+('trentin-sü'+'d-tirol.it'+'\x22,\x22trentin'+'-sudtirol.'+'it\x22,\x22trent'+'in-südtiro'+'l.it\x22,\x22tre'+'ntin-sued-'+'tirol.it\x22,'+'\x22trentin-s'+'uedtirol.i'+'t\x22,\x22trenti'+'no-a-adige'+'.it\x22,\x22tren'+'tino-aadig'+'e.it\x22,\x22tre'+'ntino-alto'+'-adige.it\x22'+',\x22trentino'+'-altoadige'+'.it\x22,\x22tren'+'tino-s-tir'+'ol.it\x22,\x22tr'+'entino-sti'+'rol.it\x22,\x22t'+'rentino-su'+'d-tirol.it'+'\x22,\x22trentin'+'o-süd-tiro'+'l.it\x22,\x22tre'+'ntino-sudt'+'irol.it\x22,\x22'+'trentino-s'+'üdtirol.it'+'\x22,\x22trentin'+'o-sued-tir'+'ol.it\x22,\x22tr'+'entino-sue'+'dtirol.it\x22'+',\x22trentino'+'.it\x22,\x22tren'+'tinoa-adig'+'e.it\x22,\x22tre'+'ntinoaadig'+'e.it\x22,\x22tre'+'ntinoalto-'+'adige.it\x22,'+'\x22trentinoa'+'ltoadige.i'+'t\x22,\x22trenti'+'nos-tirol.'+'it\x22,\x22trent'+'inostirol.'+'it\x22,\x22trent'+'inosud-tir'+'ol.it\x22,\x22tr'+'entinosüd-'+'tirol.it\x22,'+'\x22trentinos'+'udtirol.it'+'\x22,\x22trentin'+'osüdtirol.'+'it\x22,\x22trent'+'inosued-ti'+'rol.it\x22,\x22t'+'rentinosue'+'dtirol.it\x22'+',\x22trentins'+'ud-tirol.i'+'t\x22,\x22trenti'+'nsüd-tirol'+'.it\x22,\x22tren'+'tinsudtiro'+'l.it\x22,\x22tre'+'ntinsüdtir'+'ol.it\x22,\x22tr'+'entinsued-'+'tirol.it\x22,'+'\x22trentinsu'+'edtirol.it'+'\x22,\x22tuscany'+'.it\x22,\x22umb.'+'it\x22,\x22umbri'+'a.it\x22,\x22val'+'-d-aosta.i'+'t\x22,\x22val-da'+'osta.it\x22,\x22'+'vald-aosta'+'.it\x22,\x22vald'+'aosta.it\x22,'+'\x22valle-aos'+'ta.it\x22,\x22va'+'lle-d-aost'+'a.it\x22,\x22val'+'le-daosta.'+'it\x22,\x22valle'+'aosta.it\x22,'+'\x22valled-ao'+'sta.it\x22,\x22v'+'alledaosta')+('.it\x22,\x22vall'+'ee-aoste.i'+'t\x22,\x22vallée'+'-aoste.it\x22'+',\x22vallee-d'+'-aoste.it\x22'+',\x22vallée-d'+'-aoste.it\x22'+',\x22valleeao'+'ste.it\x22,\x22v'+'alléeaoste'+'.it\x22,\x22vall'+'eedaoste.i'+'t\x22,\x22vallée'+'daoste.it\x22'+',\x22vao.it\x22,'+'\x22vda.it\x22,\x22'+'ven.it\x22,\x22v'+'eneto.it\x22,'+'\x22ag.it\x22,\x22a'+'grigento.i'+'t\x22,\x22al.it\x22'+',\x22alessand'+'ria.it\x22,\x22a'+'lto-adige.'+'it\x22,\x22altoa'+'dige.it\x22,\x22'+'an.it\x22,\x22an'+'cona.it\x22,\x22'+'andria-bar'+'letta-tran'+'i.it\x22,\x22and'+'ria-trani-'+'barletta.i'+'t\x22,\x22andria'+'barlettatr'+'ani.it\x22,\x22a'+'ndriatrani'+'barletta.i'+'t\x22,\x22ao.it\x22'+',\x22aosta.it'+'\x22,\x22aoste.i'+'t\x22,\x22ap.it\x22'+',\x22aq.it\x22,\x22'+'aquila.it\x22'+',\x22ar.it\x22,\x22'+'arezzo.it\x22'+',\x22ascoli-p'+'iceno.it\x22,'+'\x22ascolipic'+'eno.it\x22,\x22a'+'sti.it\x22,\x22a'+'t.it\x22,\x22av.'+'it\x22,\x22avell'+'ino.it\x22,\x22b'+'a.it\x22,\x22bal'+'san-sudtir'+'ol.it\x22,\x22ba'+'lsan-südti'+'rol.it\x22,\x22b'+'alsan-sued'+'tirol.it\x22,'+'\x22balsan.it'+'\x22,\x22bari.it'+'\x22,\x22barlett'+'a-trani-an'+'dria.it\x22,\x22'+'barlettatr'+'aniandria.'+'it\x22,\x22bellu'+'no.it\x22,\x22be'+'nevento.it'+'\x22,\x22bergamo'+'.it\x22,\x22bg.i'+'t\x22,\x22bi.it\x22'+',\x22biella.i'+'t\x22,\x22bl.it\x22'+',\x22bn.it\x22,\x22'+'bo.it\x22,\x22bo'+'logna.it\x22,'+'\x22bolzano-a'+'ltoadige.i'+'t\x22,\x22bolzan'+'o.it\x22,\x22boz'+'en-sudtiro'+'l.it\x22,\x22boz'+'en-südtiro'+'l.it\x22,\x22boz'+'en-suedtir'+'ol.it\x22,\x22bo'+'zen.it\x22,\x22b'+'r.it\x22,\x22bre'+'scia.it\x22,\x22'+'brindisi.i'+'t\x22,\x22bs.it\x22'+',\x22bt.it\x22,\x22'+'bulsan-sud'+'tirol.it\x22,'+'\x22bulsan-sü'+'dtirol.it\x22')+(',\x22bulsan-s'+'uedtirol.i'+'t\x22,\x22bulsan'+'.it\x22,\x22bz.i'+'t\x22,\x22ca.it\x22'+',\x22cagliari'+'.it\x22,\x22calt'+'anissetta.'+'it\x22,\x22campi'+'dano-medio'+'.it\x22,\x22camp'+'idanomedio'+'.it\x22,\x22camp'+'obasso.it\x22'+',\x22carbonia'+'-iglesias.'+'it\x22,\x22carbo'+'niaiglesia'+'s.it\x22,\x22car'+'rara-massa'+'.it\x22,\x22carr'+'aramassa.i'+'t\x22,\x22casert'+'a.it\x22,\x22cat'+'ania.it\x22,\x22'+'catanzaro.'+'it\x22,\x22cb.it'+'\x22,\x22ce.it\x22,'+'\x22cesena-fo'+'rli.it\x22,\x22c'+'esena-forl'+'ì.it\x22,\x22ces'+'enaforli.i'+'t\x22,\x22cesena'+'forlì.it\x22,'+'\x22ch.it\x22,\x22c'+'hieti.it\x22,'+'\x22ci.it\x22,\x22c'+'l.it\x22,\x22cn.'+'it\x22,\x22co.it'+'\x22,\x22como.it'+'\x22,\x22cosenza'+'.it\x22,\x22cr.i'+'t\x22,\x22cremon'+'a.it\x22,\x22cro'+'tone.it\x22,\x22'+'cs.it\x22,\x22ct'+'.it\x22,\x22cune'+'o.it\x22,\x22cz.'+'it\x22,\x22dell-'+'ogliastra.'+'it\x22,\x22dello'+'gliastra.i'+'t\x22,\x22en.it\x22'+',\x22enna.it\x22'+',\x22fc.it\x22,\x22'+'fe.it\x22,\x22fe'+'rmo.it\x22,\x22f'+'errara.it\x22'+',\x22fg.it\x22,\x22'+'fi.it\x22,\x22fi'+'renze.it\x22,'+'\x22florence.'+'it\x22,\x22fm.it'+'\x22,\x22foggia.'+'it\x22,\x22forli'+'-cesena.it'+'\x22,\x22forlì-c'+'esena.it\x22,'+'\x22forlicese'+'na.it\x22,\x22fo'+'rlìcesena.'+'it\x22,\x22fr.it'+'\x22,\x22frosino'+'ne.it\x22,\x22ge'+'.it\x22,\x22geno'+'a.it\x22,\x22gen'+'ova.it\x22,\x22g'+'o.it\x22,\x22gor'+'izia.it\x22,\x22'+'gr.it\x22,\x22gr'+'osseto.it\x22'+',\x22iglesias'+'-carbonia.'+'it\x22,\x22igles'+'iascarboni'+'a.it\x22,\x22im.'+'it\x22,\x22imper'+'ia.it\x22,\x22is'+'.it\x22,\x22iser'+'nia.it\x22,\x22k'+'r.it\x22,\x22la-'+'spezia.it\x22'+',\x22laquila.'+'it\x22,\x22laspe'+'zia.it\x22,\x22l'+'atina.it\x22,'+'\x22lc.it\x22,\x22l'+'e.it\x22,\x22lec'+'ce.it\x22,\x22le')+('cco.it\x22,\x22l'+'i.it\x22,\x22liv'+'orno.it\x22,\x22'+'lo.it\x22,\x22lo'+'di.it\x22,\x22lt'+'.it\x22,\x22lu.i'+'t\x22,\x22lucca.'+'it\x22,\x22macer'+'ata.it\x22,\x22m'+'antova.it\x22'+',\x22massa-ca'+'rrara.it\x22,'+'\x22massacarr'+'ara.it\x22,\x22m'+'atera.it\x22,'+'\x22mb.it\x22,\x22m'+'c.it\x22,\x22me.'+'it\x22,\x22medio'+'-campidano'+'.it\x22,\x22medi'+'ocampidano'+'.it\x22,\x22mess'+'ina.it\x22,\x22m'+'i.it\x22,\x22mil'+'an.it\x22,\x22mi'+'lano.it\x22,\x22'+'mn.it\x22,\x22mo'+'.it\x22,\x22mode'+'na.it\x22,\x22mo'+'nza-brianz'+'a.it\x22,\x22mon'+'za-e-della'+'-brianza.i'+'t\x22,\x22monza.'+'it\x22,\x22monza'+'brianza.it'+'\x22,\x22monzaeb'+'rianza.it\x22'+',\x22monzaede'+'llabrianza'+'.it\x22,\x22ms.i'+'t\x22,\x22mt.it\x22'+',\x22na.it\x22,\x22'+'naples.it\x22'+',\x22napoli.i'+'t\x22,\x22no.it\x22'+',\x22novara.i'+'t\x22,\x22nu.it\x22'+',\x22nuoro.it'+'\x22,\x22og.it\x22,'+'\x22ogliastra'+'.it\x22,\x22olbi'+'a-tempio.i'+'t\x22,\x22olbiat'+'empio.it\x22,'+'\x22or.it\x22,\x22o'+'ristano.it'+'\x22,\x22ot.it\x22,'+'\x22pa.it\x22,\x22p'+'adova.it\x22,'+'\x22padua.it\x22'+',\x22palermo.'+'it\x22,\x22parma'+'.it\x22,\x22pavi'+'a.it\x22,\x22pc.'+'it\x22,\x22pd.it'+'\x22,\x22pe.it\x22,'+'\x22perugia.i'+'t\x22,\x22pesaro'+'-urbino.it'+'\x22,\x22pesarou'+'rbino.it\x22,'+'\x22pescara.i'+'t\x22,\x22pg.it\x22'+',\x22pi.it\x22,\x22'+'piacenza.i'+'t\x22,\x22pisa.i'+'t\x22,\x22pistoi'+'a.it\x22,\x22pn.'+'it\x22,\x22po.it'+'\x22,\x22pordeno'+'ne.it\x22,\x22po'+'tenza.it\x22,'+'\x22pr.it\x22,\x22p'+'rato.it\x22,\x22'+'pt.it\x22,\x22pu'+'.it\x22,\x22pv.i'+'t\x22,\x22pz.it\x22'+',\x22ra.it\x22,\x22'+'ragusa.it\x22'+',\x22ravenna.'+'it\x22,\x22rc.it'+'\x22,\x22re.it\x22,'+'\x22reggio-ca'+'labria.it\x22'+',\x22reggio-e'+'milia.it\x22,'+'\x22reggiocal'+'abria.it\x22,'+'\x22reggioemi')+('lia.it\x22,\x22r'+'g.it\x22,\x22ri.'+'it\x22,\x22rieti'+'.it\x22,\x22rimi'+'ni.it\x22,\x22rm'+'.it\x22,\x22rn.i'+'t\x22,\x22ro.it\x22'+',\x22roma.it\x22'+',\x22rome.it\x22'+',\x22rovigo.i'+'t\x22,\x22sa.it\x22'+',\x22salerno.'+'it\x22,\x22sassa'+'ri.it\x22,\x22sa'+'vona.it\x22,\x22'+'si.it\x22,\x22si'+'ena.it\x22,\x22s'+'iracusa.it'+'\x22,\x22so.it\x22,'+'\x22sondrio.i'+'t\x22,\x22sp.it\x22'+',\x22sr.it\x22,\x22'+'ss.it\x22,\x22su'+'edtirol.it'+'\x22,\x22südtiro'+'l.it\x22,\x22sv.'+'it\x22,\x22ta.it'+'\x22,\x22taranto'+'.it\x22,\x22te.i'+'t\x22,\x22tempio'+'-olbia.it\x22'+',\x22tempiool'+'bia.it\x22,\x22t'+'eramo.it\x22,'+'\x22terni.it\x22'+',\x22tn.it\x22,\x22'+'to.it\x22,\x22to'+'rino.it\x22,\x22'+'tp.it\x22,\x22tr'+'.it\x22,\x22tran'+'i-andria-b'+'arletta.it'+'\x22,\x22trani-b'+'arletta-an'+'dria.it\x22,\x22'+'traniandri'+'abarletta.'+'it\x22,\x22trani'+'barlettaan'+'dria.it\x22,\x22'+'trapani.it'+'\x22,\x22trento.'+'it\x22,\x22trevi'+'so.it\x22,\x22tr'+'ieste.it\x22,'+'\x22ts.it\x22,\x22t'+'urin.it\x22,\x22'+'tv.it\x22,\x22ud'+'.it\x22,\x22udin'+'e.it\x22,\x22urb'+'ino-pesaro'+'.it\x22,\x22urbi'+'nopesaro.i'+'t\x22,\x22va.it\x22'+',\x22varese.i'+'t\x22,\x22vb.it\x22'+',\x22vc.it\x22,\x22'+'ve.it\x22,\x22ve'+'nezia.it\x22,'+'\x22venice.it'+'\x22,\x22verbani'+'a.it\x22,\x22ver'+'celli.it\x22,'+'\x22verona.it'+'\x22,\x22vi.it\x22,'+'\x22vibo-vale'+'ntia.it\x22,\x22'+'vibovalent'+'ia.it\x22,\x22vi'+'cenza.it\x22,'+'\x22viterbo.i'+'t\x22,\x22vr.it\x22'+',\x22vs.it\x22,\x22'+'vt.it\x22,\x22vv'+'.it\x22,\x22je\x22,'+'\x22co.je\x22,\x22n'+'et.je\x22,\x22or'+'g.je\x22,\x22*.j'+'m\x22,\x22jo\x22,\x22c'+'om.jo\x22,\x22or'+'g.jo\x22,\x22net'+'.jo\x22,\x22edu.'+'jo\x22,\x22sch.j'+'o\x22,\x22gov.jo'+'\x22,\x22mil.jo\x22'+',\x22name.jo\x22'+',\x22jobs\x22,\x22j'+'p\x22,\x22ac.jp\x22'+',\x22ad.jp\x22,\x22'+'co.jp\x22,\x22ed')+('.jp\x22,\x22go.j'+'p\x22,\x22gr.jp\x22'+',\x22lg.jp\x22,\x22'+'ne.jp\x22,\x22or'+'.jp\x22,\x22aich'+'i.jp\x22,\x22aki'+'ta.jp\x22,\x22ao'+'mori.jp\x22,\x22'+'chiba.jp\x22,'+'\x22ehime.jp\x22'+',\x22fukui.jp'+'\x22,\x22fukuoka'+'.jp\x22,\x22fuku'+'shima.jp\x22,'+'\x22gifu.jp\x22,'+'\x22gunma.jp\x22'+',\x22hiroshim'+'a.jp\x22,\x22hok'+'kaido.jp\x22,'+'\x22hyogo.jp\x22'+',\x22ibaraki.'+'jp\x22,\x22ishik'+'awa.jp\x22,\x22i'+'wate.jp\x22,\x22'+'kagawa.jp\x22'+',\x22kagoshim'+'a.jp\x22,\x22kan'+'agawa.jp\x22,'+'\x22kochi.jp\x22'+',\x22kumamoto'+'.jp\x22,\x22kyot'+'o.jp\x22,\x22mie'+'.jp\x22,\x22miya'+'gi.jp\x22,\x22mi'+'yazaki.jp\x22'+',\x22nagano.j'+'p\x22,\x22nagasa'+'ki.jp\x22,\x22na'+'ra.jp\x22,\x22ni'+'igata.jp\x22,'+'\x22oita.jp\x22,'+'\x22okayama.j'+'p\x22,\x22okinaw'+'a.jp\x22,\x22osa'+'ka.jp\x22,\x22sa'+'ga.jp\x22,\x22sa'+'itama.jp\x22,'+'\x22shiga.jp\x22'+',\x22shimane.'+'jp\x22,\x22shizu'+'oka.jp\x22,\x22t'+'ochigi.jp\x22'+',\x22tokushim'+'a.jp\x22,\x22tok'+'yo.jp\x22,\x22to'+'ttori.jp\x22,'+'\x22toyama.jp'+'\x22,\x22wakayam'+'a.jp\x22,\x22yam'+'agata.jp\x22,'+'\x22yamaguchi'+'.jp\x22,\x22yama'+'nashi.jp\x22,'+'\x22栃木.jp\x22,\x22愛'+'知.jp\x22,\x22愛媛.'+'jp\x22,\x22兵庫.jp'+'\x22,\x22熊本.jp\x22,'+'\x22茨城.jp\x22,\x22北'+'海道.jp\x22,\x22千葉'+'.jp\x22,\x22和歌山.'+'jp\x22,\x22長崎.jp'+'\x22,\x22長野.jp\x22,'+'\x22新潟.jp\x22,\x22青'+'森.jp\x22,\x22静岡.'+'jp\x22,\x22東京.jp'+'\x22,\x22石川.jp\x22,'+'\x22埼玉.jp\x22,\x22三'+'重.jp\x22,\x22京都.'+'jp\x22,\x22佐賀.jp'+'\x22,\x22大分.jp\x22,'+'\x22大阪.jp\x22,\x22奈'+'良.jp\x22,\x22宮城.'+'jp\x22,\x22宮崎.jp'+'\x22,\x22富山.jp\x22,'+'\x22山口.jp\x22,\x22山'+'形.jp\x22,\x22山梨.'+'jp\x22,\x22岩手.jp'+'\x22,\x22岐阜.jp\x22,'+'\x22岡山.jp\x22,\x22島'+'根.jp\x22,\x22広島.'+'jp\x22,\x22徳島.jp'+'\x22,\x22沖縄.jp\x22,'+'\x22滋賀.jp\x22,\x22神'+'奈川.jp\x22,\x22福井'+'.jp\x22,\x22福岡.j'+'p\x22,\x22福島.jp\x22'+',\x22秋田.jp\x22,\x22'+'群馬.jp\x22,\x22香川'+'.jp\x22,\x22高知.j'+'p\x22,\x22鳥取.jp\x22')+(',\x22鹿児島.jp\x22,'+'\x22*.kawasak'+'i.jp\x22,\x22*.k'+'itakyushu.'+'jp\x22,\x22*.kob'+'e.jp\x22,\x22*.n'+'agoya.jp\x22,'+'\x22*.sapporo'+'.jp\x22,\x22*.se'+'ndai.jp\x22,\x22'+'*.yokohama'+'.jp\x22,\x22!cit'+'y.kawasaki'+'.jp\x22,\x22!cit'+'y.kitakyus'+'hu.jp\x22,\x22!c'+'ity.kobe.j'+'p\x22,\x22!city.'+'nagoya.jp\x22'+',\x22!city.sa'+'pporo.jp\x22,'+'\x22!city.sen'+'dai.jp\x22,\x22!'+'city.yokoh'+'ama.jp\x22,\x22a'+'isai.aichi'+'.jp\x22,\x22ama.'+'aichi.jp\x22,'+'\x22anjo.aich'+'i.jp\x22,\x22asu'+'ke.aichi.j'+'p\x22,\x22chiryu'+'.aichi.jp\x22'+',\x22chita.ai'+'chi.jp\x22,\x22f'+'uso.aichi.'+'jp\x22,\x22gamag'+'ori.aichi.'+'jp\x22,\x22handa'+'.aichi.jp\x22'+',\x22hazu.aic'+'hi.jp\x22,\x22he'+'kinan.aich'+'i.jp\x22,\x22hig'+'ashiura.ai'+'chi.jp\x22,\x22i'+'chinomiya.'+'aichi.jp\x22,'+'\x22inazawa.a'+'ichi.jp\x22,\x22'+'inuyama.ai'+'chi.jp\x22,\x22i'+'sshiki.aic'+'hi.jp\x22,\x22iw'+'akura.aich'+'i.jp\x22,\x22kan'+'ie.aichi.j'+'p\x22,\x22kariya'+'.aichi.jp\x22'+',\x22kasugai.'+'aichi.jp\x22,'+'\x22kira.aich'+'i.jp\x22,\x22kiy'+'osu.aichi.'+'jp\x22,\x22komak'+'i.aichi.jp'+'\x22,\x22konan.a'+'ichi.jp\x22,\x22'+'kota.aichi'+'.jp\x22,\x22miha'+'ma.aichi.j'+'p\x22,\x22miyosh'+'i.aichi.jp'+'\x22,\x22nishio.'+'aichi.jp\x22,'+'\x22nisshin.a'+'ichi.jp\x22,\x22'+'obu.aichi.'+'jp\x22,\x22oguch'+'i.aichi.jp'+'\x22,\x22oharu.a'+'ichi.jp\x22,\x22'+'okazaki.ai'+'chi.jp\x22,\x22o'+'wariasahi.'+'aichi.jp\x22,'+'\x22seto.aich'+'i.jp\x22,\x22shi'+'katsu.aich'+'i.jp\x22,\x22shi'+'nshiro.aic'+'hi.jp\x22,\x22sh'+'itara.aich'+'i.jp\x22,\x22tah'+'ara.aichi.'+'jp\x22,\x22takah'+'ama.aichi.'+'jp\x22,\x22tobis'+'hima.aichi'+'.jp\x22,\x22toei')+('.aichi.jp\x22'+',\x22togo.aic'+'hi.jp\x22,\x22to'+'kai.aichi.'+'jp\x22,\x22tokon'+'ame.aichi.'+'jp\x22,\x22toyoa'+'ke.aichi.j'+'p\x22,\x22toyoha'+'shi.aichi.'+'jp\x22,\x22toyok'+'awa.aichi.'+'jp\x22,\x22toyon'+'e.aichi.jp'+'\x22,\x22toyota.'+'aichi.jp\x22,'+'\x22tsushima.'+'aichi.jp\x22,'+'\x22yatomi.ai'+'chi.jp\x22,\x22a'+'kita.akita'+'.jp\x22,\x22dais'+'en.akita.j'+'p\x22,\x22fujisa'+'to.akita.j'+'p\x22,\x22gojome'+'.akita.jp\x22'+',\x22hachirog'+'ata.akita.'+'jp\x22,\x22happo'+'u.akita.jp'+'\x22,\x22higashi'+'naruse.aki'+'ta.jp\x22,\x22ho'+'njo.akita.'+'jp\x22,\x22honjy'+'o.akita.jp'+'\x22,\x22ikawa.a'+'kita.jp\x22,\x22'+'kamikoani.'+'akita.jp\x22,'+'\x22kamioka.a'+'kita.jp\x22,\x22'+'katagami.a'+'kita.jp\x22,\x22'+'kazuno.aki'+'ta.jp\x22,\x22ki'+'taakita.ak'+'ita.jp\x22,\x22k'+'osaka.akit'+'a.jp\x22,\x22kyo'+'wa.akita.j'+'p\x22,\x22misato'+'.akita.jp\x22'+',\x22mitane.a'+'kita.jp\x22,\x22'+'moriyoshi.'+'akita.jp\x22,'+'\x22nikaho.ak'+'ita.jp\x22,\x22n'+'oshiro.aki'+'ta.jp\x22,\x22od'+'ate.akita.'+'jp\x22,\x22oga.a'+'kita.jp\x22,\x22'+'ogata.akit'+'a.jp\x22,\x22sem'+'boku.akita'+'.jp\x22,\x22yoko'+'te.akita.j'+'p\x22,\x22yuriho'+'njo.akita.'+'jp\x22,\x22aomor'+'i.aomori.j'+'p\x22,\x22gonohe'+'.aomori.jp'+'\x22,\x22hachino'+'he.aomori.'+'jp\x22,\x22hashi'+'kami.aomor'+'i.jp\x22,\x22hir'+'anai.aomor'+'i.jp\x22,\x22hir'+'osaki.aomo'+'ri.jp\x22,\x22it'+'ayanagi.ao'+'mori.jp\x22,\x22'+'kuroishi.a'+'omori.jp\x22,'+'\x22misawa.ao'+'mori.jp\x22,\x22'+'mutsu.aomo'+'ri.jp\x22,\x22na'+'kadomari.a'+'omori.jp\x22,'+'\x22noheji.ao'+'mori.jp\x22,\x22'+'oirase.aom'+'ori.jp\x22,\x22o'+'wani.aomor')+('i.jp\x22,\x22rok'+'unohe.aomo'+'ri.jp\x22,\x22sa'+'nnohe.aomo'+'ri.jp\x22,\x22sh'+'ichinohe.a'+'omori.jp\x22,'+'\x22shingo.ao'+'mori.jp\x22,\x22'+'takko.aomo'+'ri.jp\x22,\x22to'+'wada.aomor'+'i.jp\x22,\x22tsu'+'garu.aomor'+'i.jp\x22,\x22tsu'+'ruta.aomor'+'i.jp\x22,\x22abi'+'ko.chiba.j'+'p\x22,\x22asahi.'+'chiba.jp\x22,'+'\x22chonan.ch'+'iba.jp\x22,\x22c'+'hosei.chib'+'a.jp\x22,\x22cho'+'shi.chiba.'+'jp\x22,\x22chuo.'+'chiba.jp\x22,'+'\x22funabashi'+'.chiba.jp\x22'+',\x22futtsu.c'+'hiba.jp\x22,\x22'+'hanamigawa'+'.chiba.jp\x22'+',\x22ichihara'+'.chiba.jp\x22'+',\x22ichikawa'+'.chiba.jp\x22'+',\x22ichinomi'+'ya.chiba.j'+'p\x22,\x22inzai.'+'chiba.jp\x22,'+'\x22isumi.chi'+'ba.jp\x22,\x22ka'+'magaya.chi'+'ba.jp\x22,\x22ka'+'mogawa.chi'+'ba.jp\x22,\x22ka'+'shiwa.chib'+'a.jp\x22,\x22kat'+'ori.chiba.'+'jp\x22,\x22katsu'+'ura.chiba.'+'jp\x22,\x22kimit'+'su.chiba.j'+'p\x22,\x22kisara'+'zu.chiba.j'+'p\x22,\x22kozaki'+'.chiba.jp\x22'+',\x22kujukuri'+'.chiba.jp\x22'+',\x22kyonan.c'+'hiba.jp\x22,\x22'+'matsudo.ch'+'iba.jp\x22,\x22m'+'idori.chib'+'a.jp\x22,\x22mih'+'ama.chiba.'+'jp\x22,\x22minam'+'iboso.chib'+'a.jp\x22,\x22mob'+'ara.chiba.'+'jp\x22,\x22mutsu'+'zawa.chiba'+'.jp\x22,\x22naga'+'ra.chiba.j'+'p\x22,\x22nagare'+'yama.chiba'+'.jp\x22,\x22nara'+'shino.chib'+'a.jp\x22,\x22nar'+'ita.chiba.'+'jp\x22,\x22noda.'+'chiba.jp\x22,'+'\x22oamishira'+'sato.chiba'+'.jp\x22,\x22omig'+'awa.chiba.'+'jp\x22,\x22onjuk'+'u.chiba.jp'+'\x22,\x22otaki.c'+'hiba.jp\x22,\x22'+'sakae.chib'+'a.jp\x22,\x22sak'+'ura.chiba.'+'jp\x22,\x22shimo'+'fusa.chiba'+'.jp\x22,\x22shir'+'ako.chiba.'+'jp\x22,\x22shiro'+'i.chiba.jp')+('\x22,\x22shisui.'+'chiba.jp\x22,'+'\x22sodegaura'+'.chiba.jp\x22'+',\x22sosa.chi'+'ba.jp\x22,\x22ta'+'ko.chiba.j'+'p\x22,\x22tateya'+'ma.chiba.j'+'p\x22,\x22togane'+'.chiba.jp\x22'+',\x22tohnosho'+'.chiba.jp\x22'+',\x22tomisato'+'.chiba.jp\x22'+',\x22urayasu.'+'chiba.jp\x22,'+'\x22yachimata'+'.chiba.jp\x22'+',\x22yachiyo.'+'chiba.jp\x22,'+'\x22yokaichib'+'a.chiba.jp'+'\x22,\x22yokoshi'+'bahikari.c'+'hiba.jp\x22,\x22'+'yotsukaido'+'.chiba.jp\x22'+',\x22ainan.eh'+'ime.jp\x22,\x22h'+'onai.ehime'+'.jp\x22,\x22ikat'+'a.ehime.jp'+'\x22,\x22imabari'+'.ehime.jp\x22'+',\x22iyo.ehim'+'e.jp\x22,\x22kam'+'ijima.ehim'+'e.jp\x22,\x22kih'+'oku.ehime.'+'jp\x22,\x22kumak'+'ogen.ehime'+'.jp\x22,\x22masa'+'ki.ehime.j'+'p\x22,\x22matsun'+'o.ehime.jp'+'\x22,\x22matsuya'+'ma.ehime.j'+'p\x22,\x22namika'+'ta.ehime.j'+'p\x22,\x22niiham'+'a.ehime.jp'+'\x22,\x22ozu.ehi'+'me.jp\x22,\x22sa'+'ijo.ehime.'+'jp\x22,\x22seiyo'+'.ehime.jp\x22'+',\x22shikokuc'+'huo.ehime.'+'jp\x22,\x22tobe.'+'ehime.jp\x22,'+'\x22toon.ehim'+'e.jp\x22,\x22uch'+'iko.ehime.'+'jp\x22,\x22uwaji'+'ma.ehime.j'+'p\x22,\x22yawata'+'hama.ehime'+'.jp\x22,\x22echi'+'zen.fukui.'+'jp\x22,\x22eihei'+'ji.fukui.j'+'p\x22,\x22fukui.'+'fukui.jp\x22,'+'\x22ikeda.fuk'+'ui.jp\x22,\x22ka'+'tsuyama.fu'+'kui.jp\x22,\x22m'+'ihama.fuku'+'i.jp\x22,\x22min'+'amiechizen'+'.fukui.jp\x22'+',\x22obama.fu'+'kui.jp\x22,\x22o'+'hi.fukui.j'+'p\x22,\x22ono.fu'+'kui.jp\x22,\x22s'+'abae.fukui'+'.jp\x22,\x22saka'+'i.fukui.jp'+'\x22,\x22takaham'+'a.fukui.jp'+'\x22,\x22tsuruga'+'.fukui.jp\x22'+',\x22wakasa.f'+'ukui.jp\x22,\x22'+'ashiya.fuk'+'uoka.jp\x22,\x22'+'buzen.fuku'+'oka.jp\x22,\x22c')+('hikugo.fuk'+'uoka.jp\x22,\x22'+'chikuho.fu'+'kuoka.jp\x22,'+'\x22chikujo.f'+'ukuoka.jp\x22'+',\x22chikushi'+'no.fukuoka'+'.jp\x22,\x22chik'+'uzen.fukuo'+'ka.jp\x22,\x22ch'+'uo.fukuoka'+'.jp\x22,\x22daza'+'ifu.fukuok'+'a.jp\x22,\x22fuk'+'uchi.fukuo'+'ka.jp\x22,\x22ha'+'kata.fukuo'+'ka.jp\x22,\x22hi'+'gashi.fuku'+'oka.jp\x22,\x22h'+'irokawa.fu'+'kuoka.jp\x22,'+'\x22hisayama.'+'fukuoka.jp'+'\x22,\x22iizuka.'+'fukuoka.jp'+'\x22,\x22inatsuk'+'i.fukuoka.'+'jp\x22,\x22kaho.'+'fukuoka.jp'+'\x22,\x22kasuga.'+'fukuoka.jp'+'\x22,\x22kasuya.'+'fukuoka.jp'+'\x22,\x22kawara.'+'fukuoka.jp'+'\x22,\x22keisen.'+'fukuoka.jp'+'\x22,\x22koga.fu'+'kuoka.jp\x22,'+'\x22kurate.fu'+'kuoka.jp\x22,'+'\x22kurogi.fu'+'kuoka.jp\x22,'+'\x22kurume.fu'+'kuoka.jp\x22,'+'\x22minami.fu'+'kuoka.jp\x22,'+'\x22miyako.fu'+'kuoka.jp\x22,'+'\x22miyama.fu'+'kuoka.jp\x22,'+'\x22miyawaka.'+'fukuoka.jp'+'\x22,\x22mizumak'+'i.fukuoka.'+'jp\x22,\x22munak'+'ata.fukuok'+'a.jp\x22,\x22nak'+'agawa.fuku'+'oka.jp\x22,\x22n'+'akama.fuku'+'oka.jp\x22,\x22n'+'ishi.fukuo'+'ka.jp\x22,\x22no'+'gata.fukuo'+'ka.jp\x22,\x22og'+'ori.fukuok'+'a.jp\x22,\x22oka'+'gaki.fukuo'+'ka.jp\x22,\x22ok'+'awa.fukuok'+'a.jp\x22,\x22oki'+'.fukuoka.j'+'p\x22,\x22omuta.'+'fukuoka.jp'+'\x22,\x22onga.fu'+'kuoka.jp\x22,'+'\x22onojo.fuk'+'uoka.jp\x22,\x22'+'oto.fukuok'+'a.jp\x22,\x22sai'+'gawa.fukuo'+'ka.jp\x22,\x22sa'+'saguri.fuk'+'uoka.jp\x22,\x22'+'shingu.fuk'+'uoka.jp\x22,\x22'+'shinyoshit'+'omi.fukuok'+'a.jp\x22,\x22sho'+'nai.fukuok'+'a.jp\x22,\x22soe'+'da.fukuoka'+'.jp\x22,\x22sue.'+'fukuoka.jp'+'\x22,\x22tachiar'+'ai.fukuoka'+'.jp\x22,\x22taga')+('wa.fukuoka'+'.jp\x22,\x22taka'+'ta.fukuoka'+'.jp\x22,\x22toho'+'.fukuoka.j'+'p\x22,\x22toyots'+'u.fukuoka.'+'jp\x22,\x22tsuik'+'i.fukuoka.'+'jp\x22,\x22ukiha'+'.fukuoka.j'+'p\x22,\x22umi.fu'+'kuoka.jp\x22,'+'\x22usui.fuku'+'oka.jp\x22,\x22y'+'amada.fuku'+'oka.jp\x22,\x22y'+'ame.fukuok'+'a.jp\x22,\x22yan'+'agawa.fuku'+'oka.jp\x22,\x22y'+'ukuhashi.f'+'ukuoka.jp\x22'+',\x22aizubang'+'e.fukushim'+'a.jp\x22,\x22aiz'+'umisato.fu'+'kushima.jp'+'\x22,\x22aizuwak'+'amatsu.fuk'+'ushima.jp\x22'+',\x22asakawa.'+'fukushima.'+'jp\x22,\x22banda'+'i.fukushim'+'a.jp\x22,\x22dat'+'e.fukushim'+'a.jp\x22,\x22fuk'+'ushima.fuk'+'ushima.jp\x22'+',\x22furudono'+'.fukushima'+'.jp\x22,\x22futa'+'ba.fukushi'+'ma.jp\x22,\x22ha'+'nawa.fukus'+'hima.jp\x22,\x22'+'higashi.fu'+'kushima.jp'+'\x22,\x22hirata.'+'fukushima.'+'jp\x22,\x22hiron'+'o.fukushim'+'a.jp\x22,\x22iit'+'ate.fukush'+'ima.jp\x22,\x22i'+'nawashiro.'+'fukushima.'+'jp\x22,\x22ishik'+'awa.fukush'+'ima.jp\x22,\x22i'+'waki.fukus'+'hima.jp\x22,\x22'+'izumizaki.'+'fukushima.'+'jp\x22,\x22kagam'+'iishi.fuku'+'shima.jp\x22,'+'\x22kaneyama.'+'fukushima.'+'jp\x22,\x22kawam'+'ata.fukush'+'ima.jp\x22,\x22k'+'itakata.fu'+'kushima.jp'+'\x22,\x22kitashi'+'obara.fuku'+'shima.jp\x22,'+'\x22koori.fuk'+'ushima.jp\x22'+',\x22koriyama'+'.fukushima'+'.jp\x22,\x22kuni'+'mi.fukushi'+'ma.jp\x22,\x22mi'+'haru.fukus'+'hima.jp\x22,\x22'+'mishima.fu'+'kushima.jp'+'\x22,\x22namie.f'+'ukushima.j'+'p\x22,\x22nango.'+'fukushima.'+'jp\x22,\x22nishi'+'aizu.fukus'+'hima.jp\x22,\x22'+'nishigo.fu'+'kushima.jp'+'\x22,\x22okuma.f'+'ukushima.j')+('p\x22,\x22omoteg'+'o.fukushim'+'a.jp\x22,\x22ono'+'.fukushima'+'.jp\x22,\x22otam'+'a.fukushim'+'a.jp\x22,\x22sam'+'egawa.fuku'+'shima.jp\x22,'+'\x22shimogo.f'+'ukushima.j'+'p\x22,\x22shirak'+'awa.fukush'+'ima.jp\x22,\x22s'+'howa.fukus'+'hima.jp\x22,\x22'+'soma.fukus'+'hima.jp\x22,\x22'+'sukagawa.f'+'ukushima.j'+'p\x22,\x22taishi'+'n.fukushim'+'a.jp\x22,\x22tam'+'akawa.fuku'+'shima.jp\x22,'+'\x22tanagura.'+'fukushima.'+'jp\x22,\x22tenei'+'.fukushima'+'.jp\x22,\x22yabu'+'ki.fukushi'+'ma.jp\x22,\x22ya'+'mato.fukus'+'hima.jp\x22,\x22'+'yamatsuri.'+'fukushima.'+'jp\x22,\x22yanai'+'zu.fukushi'+'ma.jp\x22,\x22yu'+'gawa.fukus'+'hima.jp\x22,\x22'+'anpachi.gi'+'fu.jp\x22,\x22en'+'a.gifu.jp\x22'+',\x22gifu.gif'+'u.jp\x22,\x22gin'+'an.gifu.jp'+'\x22,\x22godo.gi'+'fu.jp\x22,\x22gu'+'jo.gifu.jp'+'\x22,\x22hashima'+'.gifu.jp\x22,'+'\x22hichiso.g'+'ifu.jp\x22,\x22h'+'ida.gifu.j'+'p\x22,\x22higash'+'ishirakawa'+'.gifu.jp\x22,'+'\x22ibigawa.g'+'ifu.jp\x22,\x22i'+'keda.gifu.'+'jp\x22,\x22kakam'+'igahara.gi'+'fu.jp\x22,\x22ka'+'ni.gifu.jp'+'\x22,\x22kasahar'+'a.gifu.jp\x22'+',\x22kasamats'+'u.gifu.jp\x22'+',\x22kawaue.g'+'ifu.jp\x22,\x22k'+'itagata.gi'+'fu.jp\x22,\x22mi'+'no.gifu.jp'+'\x22,\x22minokam'+'o.gifu.jp\x22'+',\x22mitake.g'+'ifu.jp\x22,\x22m'+'izunami.gi'+'fu.jp\x22,\x22mo'+'tosu.gifu.'+'jp\x22,\x22nakat'+'sugawa.gif'+'u.jp\x22,\x22oga'+'ki.gifu.jp'+'\x22,\x22sakahog'+'i.gifu.jp\x22'+',\x22seki.gif'+'u.jp\x22,\x22sek'+'igahara.gi'+'fu.jp\x22,\x22sh'+'irakawa.gi'+'fu.jp\x22,\x22ta'+'jimi.gifu.'+'jp\x22,\x22takay'+'ama.gifu.j'+'p\x22,\x22tarui.'+'gifu.jp\x22,\x22'+'toki.gifu.'+'jp\x22,\x22tomik')+('a.gifu.jp\x22'+',\x22wanouchi'+'.gifu.jp\x22,'+'\x22yamagata.'+'gifu.jp\x22,\x22'+'yaotsu.gif'+'u.jp\x22,\x22yor'+'o.gifu.jp\x22'+',\x22annaka.g'+'unma.jp\x22,\x22'+'chiyoda.gu'+'nma.jp\x22,\x22f'+'ujioka.gun'+'ma.jp\x22,\x22hi'+'gashiagats'+'uma.gunma.'+'jp\x22,\x22isesa'+'ki.gunma.j'+'p\x22,\x22itakur'+'a.gunma.jp'+'\x22,\x22kanna.g'+'unma.jp\x22,\x22'+'kanra.gunm'+'a.jp\x22,\x22kat'+'ashina.gun'+'ma.jp\x22,\x22ka'+'waba.gunma'+'.jp\x22,\x22kiry'+'u.gunma.jp'+'\x22,\x22kusatsu'+'.gunma.jp\x22'+',\x22maebashi'+'.gunma.jp\x22'+',\x22meiwa.gu'+'nma.jp\x22,\x22m'+'idori.gunm'+'a.jp\x22,\x22min'+'akami.gunm'+'a.jp\x22,\x22nag'+'anohara.gu'+'nma.jp\x22,\x22n'+'akanojo.gu'+'nma.jp\x22,\x22n'+'anmoku.gun'+'ma.jp\x22,\x22nu'+'mata.gunma'+'.jp\x22,\x22oizu'+'mi.gunma.j'+'p\x22,\x22ora.gu'+'nma.jp\x22,\x22o'+'ta.gunma.j'+'p\x22,\x22shibuk'+'awa.gunma.'+'jp\x22,\x22shimo'+'nita.gunma'+'.jp\x22,\x22shin'+'to.gunma.j'+'p\x22,\x22showa.'+'gunma.jp\x22,'+'\x22takasaki.'+'gunma.jp\x22,'+'\x22takayama.'+'gunma.jp\x22,'+'\x22tamamura.'+'gunma.jp\x22,'+'\x22tatebayas'+'hi.gunma.j'+'p\x22,\x22tomiok'+'a.gunma.jp'+'\x22,\x22tsukiyo'+'no.gunma.j'+'p\x22,\x22tsumag'+'oi.gunma.j'+'p\x22,\x22ueno.g'+'unma.jp\x22,\x22'+'yoshioka.g'+'unma.jp\x22,\x22'+'asaminami.'+'hiroshima.'+'jp\x22,\x22daiwa'+'.hiroshima'+'.jp\x22,\x22etaj'+'ima.hirosh'+'ima.jp\x22,\x22f'+'uchu.hiros'+'hima.jp\x22,\x22'+'fukuyama.h'+'iroshima.j'+'p\x22,\x22hatsuk'+'aichi.hiro'+'shima.jp\x22,'+'\x22higashihi'+'roshima.hi'+'roshima.jp'+'\x22,\x22hongo.h'+'iroshima.j'+'p\x22,\x22jinsek'+'ikogen.hir'+'oshima.jp\x22'+',\x22kaita.hi')+('roshima.jp'+'\x22,\x22kui.hir'+'oshima.jp\x22'+',\x22kumano.h'+'iroshima.j'+'p\x22,\x22kure.h'+'iroshima.j'+'p\x22,\x22mihara'+'.hiroshima'+'.jp\x22,\x22miyo'+'shi.hirosh'+'ima.jp\x22,\x22n'+'aka.hirosh'+'ima.jp\x22,\x22o'+'nomichi.hi'+'roshima.jp'+'\x22,\x22osakika'+'mijima.hir'+'oshima.jp\x22'+',\x22otake.hi'+'roshima.jp'+'\x22,\x22saka.hi'+'roshima.jp'+'\x22,\x22sera.hi'+'roshima.jp'+'\x22,\x22seranis'+'hi.hiroshi'+'ma.jp\x22,\x22sh'+'inichi.hir'+'oshima.jp\x22'+',\x22shobara.'+'hiroshima.'+'jp\x22,\x22takeh'+'ara.hirosh'+'ima.jp\x22,\x22a'+'bashiri.ho'+'kkaido.jp\x22'+',\x22abira.ho'+'kkaido.jp\x22'+',\x22aibetsu.'+'hokkaido.j'+'p\x22,\x22akabir'+'a.hokkaido'+'.jp\x22,\x22akke'+'shi.hokkai'+'do.jp\x22,\x22as'+'ahikawa.ho'+'kkaido.jp\x22'+',\x22ashibets'+'u.hokkaido'+'.jp\x22,\x22asho'+'ro.hokkaid'+'o.jp\x22,\x22ass'+'abu.hokkai'+'do.jp\x22,\x22at'+'suma.hokka'+'ido.jp\x22,\x22b'+'ibai.hokka'+'ido.jp\x22,\x22b'+'iei.hokkai'+'do.jp\x22,\x22bi'+'fuka.hokka'+'ido.jp\x22,\x22b'+'ihoro.hokk'+'aido.jp\x22,\x22'+'biratori.h'+'okkaido.jp'+'\x22,\x22chippub'+'etsu.hokka'+'ido.jp\x22,\x22c'+'hitose.hok'+'kaido.jp\x22,'+'\x22date.hokk'+'aido.jp\x22,\x22'+'ebetsu.hok'+'kaido.jp\x22,'+'\x22embetsu.h'+'okkaido.jp'+'\x22,\x22eniwa.h'+'okkaido.jp'+'\x22,\x22erimo.h'+'okkaido.jp'+'\x22,\x22esan.ho'+'kkaido.jp\x22'+',\x22esashi.h'+'okkaido.jp'+'\x22,\x22fukagaw'+'a.hokkaido'+'.jp\x22,\x22fuku'+'shima.hokk'+'aido.jp\x22,\x22'+'furano.hok'+'kaido.jp\x22,'+'\x22furubira.'+'hokkaido.j'+'p\x22,\x22haboro'+'.hokkaido.'+'jp\x22,\x22hakod'+'ate.hokkai'+'do.jp\x22,\x22ha')+('matonbetsu'+'.hokkaido.'+'jp\x22,\x22hidak'+'a.hokkaido'+'.jp\x22,\x22higa'+'shikagura.'+'hokkaido.j'+'p\x22,\x22higash'+'ikawa.hokk'+'aido.jp\x22,\x22'+'hiroo.hokk'+'aido.jp\x22,\x22'+'hokuryu.ho'+'kkaido.jp\x22'+',\x22hokuto.h'+'okkaido.jp'+'\x22,\x22honbets'+'u.hokkaido'+'.jp\x22,\x22horo'+'kanai.hokk'+'aido.jp\x22,\x22'+'horonobe.h'+'okkaido.jp'+'\x22,\x22ikeda.h'+'okkaido.jp'+'\x22,\x22imakane'+'.hokkaido.'+'jp\x22,\x22ishik'+'ari.hokkai'+'do.jp\x22,\x22iw'+'amizawa.ho'+'kkaido.jp\x22'+',\x22iwanai.h'+'okkaido.jp'+'\x22,\x22kamifur'+'ano.hokkai'+'do.jp\x22,\x22ka'+'mikawa.hok'+'kaido.jp\x22,'+'\x22kamishiho'+'ro.hokkaid'+'o.jp\x22,\x22kam'+'isunagawa.'+'hokkaido.j'+'p\x22,\x22kamoen'+'ai.hokkaid'+'o.jp\x22,\x22kay'+'abe.hokkai'+'do.jp\x22,\x22ke'+'mbuchi.hok'+'kaido.jp\x22,'+'\x22kikonai.h'+'okkaido.jp'+'\x22,\x22kimobet'+'su.hokkaid'+'o.jp\x22,\x22kit'+'ahiroshima'+'.hokkaido.'+'jp\x22,\x22kitam'+'i.hokkaido'+'.jp\x22,\x22kiyo'+'sato.hokka'+'ido.jp\x22,\x22k'+'oshimizu.h'+'okkaido.jp'+'\x22,\x22kunnepp'+'u.hokkaido'+'.jp\x22,\x22kuri'+'yama.hokka'+'ido.jp\x22,\x22k'+'uromatsuna'+'i.hokkaido'+'.jp\x22,\x22kush'+'iro.hokkai'+'do.jp\x22,\x22ku'+'tchan.hokk'+'aido.jp\x22,\x22'+'kyowa.hokk'+'aido.jp\x22,\x22'+'mashike.ho'+'kkaido.jp\x22'+',\x22matsumae'+'.hokkaido.'+'jp\x22,\x22mikas'+'a.hokkaido'+'.jp\x22,\x22mina'+'mifurano.h'+'okkaido.jp'+'\x22,\x22mombets'+'u.hokkaido'+'.jp\x22,\x22mose'+'ushi.hokka'+'ido.jp\x22,\x22m'+'ukawa.hokk'+'aido.jp\x22,\x22'+'muroran.ho'+'kkaido.jp\x22'+',\x22naie.hok'+'kaido.jp\x22,'+'\x22nakagawa.')+('hokkaido.j'+'p\x22,\x22nakasa'+'tsunai.hok'+'kaido.jp\x22,'+'\x22nakatombe'+'tsu.hokkai'+'do.jp\x22,\x22na'+'nae.hokkai'+'do.jp\x22,\x22na'+'nporo.hokk'+'aido.jp\x22,\x22'+'nayoro.hok'+'kaido.jp\x22,'+'\x22nemuro.ho'+'kkaido.jp\x22'+',\x22niikappu'+'.hokkaido.'+'jp\x22,\x22niki.'+'hokkaido.j'+'p\x22,\x22nishio'+'koppe.hokk'+'aido.jp\x22,\x22'+'noboribets'+'u.hokkaido'+'.jp\x22,\x22numa'+'ta.hokkaid'+'o.jp\x22,\x22obi'+'hiro.hokka'+'ido.jp\x22,\x22o'+'bira.hokka'+'ido.jp\x22,\x22o'+'keto.hokka'+'ido.jp\x22,\x22o'+'koppe.hokk'+'aido.jp\x22,\x22'+'otaru.hokk'+'aido.jp\x22,\x22'+'otobe.hokk'+'aido.jp\x22,\x22'+'otofuke.ho'+'kkaido.jp\x22'+',\x22otoinepp'+'u.hokkaido'+'.jp\x22,\x22oumu'+'.hokkaido.'+'jp\x22,\x22ozora'+'.hokkaido.'+'jp\x22,\x22pippu'+'.hokkaido.'+'jp\x22,\x22ranko'+'shi.hokkai'+'do.jp\x22,\x22re'+'bun.hokkai'+'do.jp\x22,\x22ri'+'kubetsu.ho'+'kkaido.jp\x22'+',\x22rishiri.'+'hokkaido.j'+'p\x22,\x22rishir'+'ifuji.hokk'+'aido.jp\x22,\x22'+'saroma.hok'+'kaido.jp\x22,'+'\x22sarufutsu'+'.hokkaido.'+'jp\x22,\x22shako'+'tan.hokkai'+'do.jp\x22,\x22sh'+'ari.hokkai'+'do.jp\x22,\x22sh'+'ibecha.hok'+'kaido.jp\x22,'+'\x22shibetsu.'+'hokkaido.j'+'p\x22,\x22shikab'+'e.hokkaido'+'.jp\x22,\x22shik'+'aoi.hokkai'+'do.jp\x22,\x22sh'+'imamaki.ho'+'kkaido.jp\x22'+',\x22shimizu.'+'hokkaido.j'+'p\x22,\x22shimok'+'awa.hokkai'+'do.jp\x22,\x22sh'+'inshinotsu'+'.hokkaido.'+'jp\x22,\x22shint'+'oku.hokkai'+'do.jp\x22,\x22sh'+'iranuka.ho'+'kkaido.jp\x22'+',\x22shiraoi.'+'hokkaido.j'+'p\x22,\x22shiriu'+'chi.hokkai'+'do.jp\x22,\x22so'+'betsu.hokk'+'aido.jp\x22,\x22')+('sunagawa.h'+'okkaido.jp'+'\x22,\x22taiki.h'+'okkaido.jp'+'\x22,\x22takasu.'+'hokkaido.j'+'p\x22,\x22takika'+'wa.hokkaid'+'o.jp\x22,\x22tak'+'inoue.hokk'+'aido.jp\x22,\x22'+'teshikaga.'+'hokkaido.j'+'p\x22,\x22tobets'+'u.hokkaido'+'.jp\x22,\x22tohm'+'a.hokkaido'+'.jp\x22,\x22toma'+'komai.hokk'+'aido.jp\x22,\x22'+'tomari.hok'+'kaido.jp\x22,'+'\x22toya.hokk'+'aido.jp\x22,\x22'+'toyako.hok'+'kaido.jp\x22,'+'\x22toyotomi.'+'hokkaido.j'+'p\x22,\x22toyour'+'a.hokkaido'+'.jp\x22,\x22tsub'+'etsu.hokka'+'ido.jp\x22,\x22t'+'sukigata.h'+'okkaido.jp'+'\x22,\x22urakawa'+'.hokkaido.'+'jp\x22,\x22uraus'+'u.hokkaido'+'.jp\x22,\x22uryu'+'.hokkaido.'+'jp\x22,\x22utash'+'inai.hokka'+'ido.jp\x22,\x22w'+'akkanai.ho'+'kkaido.jp\x22'+',\x22wassamu.'+'hokkaido.j'+'p\x22,\x22yakumo'+'.hokkaido.'+'jp\x22,\x22yoich'+'i.hokkaido'+'.jp\x22,\x22aioi'+'.hyogo.jp\x22'+',\x22akashi.h'+'yogo.jp\x22,\x22'+'ako.hyogo.'+'jp\x22,\x22amaga'+'saki.hyogo'+'.jp\x22,\x22aoga'+'ki.hyogo.j'+'p\x22,\x22asago.'+'hyogo.jp\x22,'+'\x22ashiya.hy'+'ogo.jp\x22,\x22a'+'waji.hyogo'+'.jp\x22,\x22fuku'+'saki.hyogo'+'.jp\x22,\x22gosh'+'iki.hyogo.'+'jp\x22,\x22harim'+'a.hyogo.jp'+'\x22,\x22himeji.'+'hyogo.jp\x22,'+'\x22ichikawa.'+'hyogo.jp\x22,'+'\x22inagawa.h'+'yogo.jp\x22,\x22'+'itami.hyog'+'o.jp\x22,\x22kak'+'ogawa.hyog'+'o.jp\x22,\x22kam'+'igori.hyog'+'o.jp\x22,\x22kam'+'ikawa.hyog'+'o.jp\x22,\x22kas'+'ai.hyogo.j'+'p\x22,\x22kasuga'+'.hyogo.jp\x22'+',\x22kawanish'+'i.hyogo.jp'+'\x22,\x22miki.hy'+'ogo.jp\x22,\x22m'+'inamiawaji'+'.hyogo.jp\x22'+',\x22nishinom'+'iya.hyogo.'+'jp\x22,\x22nishi'+'waki.hyogo'+'.jp\x22,\x22ono.')+('hyogo.jp\x22,'+'\x22sanda.hyo'+'go.jp\x22,\x22sa'+'nnan.hyogo'+'.jp\x22,\x22sasa'+'yama.hyogo'+'.jp\x22,\x22sayo'+'.hyogo.jp\x22'+',\x22shingu.h'+'yogo.jp\x22,\x22'+'shinonsen.'+'hyogo.jp\x22,'+'\x22shiso.hyo'+'go.jp\x22,\x22su'+'moto.hyogo'+'.jp\x22,\x22tais'+'hi.hyogo.j'+'p\x22,\x22taka.h'+'yogo.jp\x22,\x22'+'takarazuka'+'.hyogo.jp\x22'+',\x22takasago'+'.hyogo.jp\x22'+',\x22takino.h'+'yogo.jp\x22,\x22'+'tamba.hyog'+'o.jp\x22,\x22tat'+'suno.hyogo'+'.jp\x22,\x22toyo'+'oka.hyogo.'+'jp\x22,\x22yabu.'+'hyogo.jp\x22,'+'\x22yashiro.h'+'yogo.jp\x22,\x22'+'yoka.hyogo'+'.jp\x22,\x22yoka'+'wa.hyogo.j'+'p\x22,\x22ami.ib'+'araki.jp\x22,'+'\x22asahi.iba'+'raki.jp\x22,\x22'+'bando.ibar'+'aki.jp\x22,\x22c'+'hikusei.ib'+'araki.jp\x22,'+'\x22daigo.iba'+'raki.jp\x22,\x22'+'fujishiro.'+'ibaraki.jp'+'\x22,\x22hitachi'+'.ibaraki.j'+'p\x22,\x22hitach'+'inaka.ibar'+'aki.jp\x22,\x22h'+'itachiomiy'+'a.ibaraki.'+'jp\x22,\x22hitac'+'hiota.ibar'+'aki.jp\x22,\x22i'+'baraki.iba'+'raki.jp\x22,\x22'+'ina.ibarak'+'i.jp\x22,\x22ina'+'shiki.ibar'+'aki.jp\x22,\x22i'+'tako.ibara'+'ki.jp\x22,\x22iw'+'ama.ibarak'+'i.jp\x22,\x22jos'+'o.ibaraki.'+'jp\x22,\x22kamis'+'u.ibaraki.'+'jp\x22,\x22kasam'+'a.ibaraki.'+'jp\x22,\x22kashi'+'ma.ibaraki'+'.jp\x22,\x22kasu'+'migaura.ib'+'araki.jp\x22,'+'\x22koga.ibar'+'aki.jp\x22,\x22m'+'iho.ibarak'+'i.jp\x22,\x22mit'+'o.ibaraki.'+'jp\x22,\x22moriy'+'a.ibaraki.'+'jp\x22,\x22naka.'+'ibaraki.jp'+'\x22,\x22namegat'+'a.ibaraki.'+'jp\x22,\x22oarai'+'.ibaraki.j'+'p\x22,\x22ogawa.'+'ibaraki.jp'+'\x22,\x22omitama'+'.ibaraki.j'+'p\x22,\x22ryugas'+'aki.ibarak'+'i.jp\x22,\x22sak'+'ai.ibaraki')+('.jp\x22,\x22saku'+'ragawa.iba'+'raki.jp\x22,\x22'+'shimodate.'+'ibaraki.jp'+'\x22,\x22shimots'+'uma.ibarak'+'i.jp\x22,\x22shi'+'rosato.iba'+'raki.jp\x22,\x22'+'sowa.ibara'+'ki.jp\x22,\x22su'+'ifu.ibarak'+'i.jp\x22,\x22tak'+'ahagi.ibar'+'aki.jp\x22,\x22t'+'amatsukuri'+'.ibaraki.j'+'p\x22,\x22tokai.'+'ibaraki.jp'+'\x22,\x22tomobe.'+'ibaraki.jp'+'\x22,\x22tone.ib'+'araki.jp\x22,'+'\x22toride.ib'+'araki.jp\x22,'+'\x22tsuchiura'+'.ibaraki.j'+'p\x22,\x22tsukub'+'a.ibaraki.'+'jp\x22,\x22uchih'+'ara.ibarak'+'i.jp\x22,\x22ush'+'iku.ibarak'+'i.jp\x22,\x22yac'+'hiyo.ibara'+'ki.jp\x22,\x22ya'+'magata.iba'+'raki.jp\x22,\x22'+'yawara.iba'+'raki.jp\x22,\x22'+'yuki.ibara'+'ki.jp\x22,\x22an'+'amizu.ishi'+'kawa.jp\x22,\x22'+'hakui.ishi'+'kawa.jp\x22,\x22'+'hakusan.is'+'hikawa.jp\x22'+',\x22kaga.ish'+'ikawa.jp\x22,'+'\x22kahoku.is'+'hikawa.jp\x22'+',\x22kanazawa'+'.ishikawa.'+'jp\x22,\x22kawak'+'ita.ishika'+'wa.jp\x22,\x22ko'+'matsu.ishi'+'kawa.jp\x22,\x22'+'nakanoto.i'+'shikawa.jp'+'\x22,\x22nanao.i'+'shikawa.jp'+'\x22,\x22nomi.is'+'hikawa.jp\x22'+',\x22nonoichi'+'.ishikawa.'+'jp\x22,\x22noto.'+'ishikawa.j'+'p\x22,\x22shika.'+'ishikawa.j'+'p\x22,\x22suzu.i'+'shikawa.jp'+'\x22,\x22tsubata'+'.ishikawa.'+'jp\x22,\x22tsuru'+'gi.ishikaw'+'a.jp\x22,\x22uch'+'inada.ishi'+'kawa.jp\x22,\x22'+'wajima.ish'+'ikawa.jp\x22,'+'\x22fudai.iwa'+'te.jp\x22,\x22fu'+'jisawa.iwa'+'te.jp\x22,\x22ha'+'namaki.iwa'+'te.jp\x22,\x22hi'+'raizumi.iw'+'ate.jp\x22,\x22h'+'irono.iwat'+'e.jp\x22,\x22ich'+'inohe.iwat'+'e.jp\x22,\x22ich'+'inoseki.iw'+'ate.jp\x22,\x22i'+'waizumi.iw'+'ate.jp\x22,\x22i'+'wate.iwate')+('.jp\x22,\x22jobo'+'ji.iwate.j'+'p\x22,\x22kamais'+'hi.iwate.j'+'p\x22,\x22kanega'+'saki.iwate'+'.jp\x22,\x22karu'+'mai.iwate.'+'jp\x22,\x22kawai'+'.iwate.jp\x22'+',\x22kitakami'+'.iwate.jp\x22'+',\x22kuji.iwa'+'te.jp\x22,\x22ku'+'nohe.iwate'+'.jp\x22,\x22kuzu'+'maki.iwate'+'.jp\x22,\x22miya'+'ko.iwate.j'+'p\x22,\x22mizusa'+'wa.iwate.j'+'p\x22,\x22moriok'+'a.iwate.jp'+'\x22,\x22ninohe.'+'iwate.jp\x22,'+'\x22noda.iwat'+'e.jp\x22,\x22ofu'+'nato.iwate'+'.jp\x22,\x22oshu'+'.iwate.jp\x22'+',\x22otsuchi.'+'iwate.jp\x22,'+'\x22rikuzenta'+'kata.iwate'+'.jp\x22,\x22shiw'+'a.iwate.jp'+'\x22,\x22shizuku'+'ishi.iwate'+'.jp\x22,\x22sumi'+'ta.iwate.j'+'p\x22,\x22tanoha'+'ta.iwate.j'+'p\x22,\x22tono.i'+'wate.jp\x22,\x22'+'yahaba.iwa'+'te.jp\x22,\x22ya'+'mada.iwate'+'.jp\x22,\x22ayag'+'awa.kagawa'+'.jp\x22,\x22higa'+'shikagawa.'+'kagawa.jp\x22'+',\x22kanonji.'+'kagawa.jp\x22'+',\x22kotohira'+'.kagawa.jp'+'\x22,\x22manno.k'+'agawa.jp\x22,'+'\x22marugame.'+'kagawa.jp\x22'+',\x22mitoyo.k'+'agawa.jp\x22,'+'\x22naoshima.'+'kagawa.jp\x22'+',\x22sanuki.k'+'agawa.jp\x22,'+'\x22tadotsu.k'+'agawa.jp\x22,'+'\x22takamatsu'+'.kagawa.jp'+'\x22,\x22tonosho'+'.kagawa.jp'+'\x22,\x22uchinom'+'i.kagawa.j'+'p\x22,\x22utazu.'+'kagawa.jp\x22'+',\x22zentsuji'+'.kagawa.jp'+'\x22,\x22akune.k'+'agoshima.j'+'p\x22,\x22amami.'+'kagoshima.'+'jp\x22,\x22hioki'+'.kagoshima'+'.jp\x22,\x22isa.'+'kagoshima.'+'jp\x22,\x22isen.'+'kagoshima.'+'jp\x22,\x22izumi'+'.kagoshima'+'.jp\x22,\x22kago'+'shima.kago'+'shima.jp\x22,'+'\x22kanoya.ka'+'goshima.jp'+'\x22,\x22kawanab'+'e.kagoshim'+'a.jp\x22,\x22kin'+'ko.kagoshi'+'ma.jp\x22,\x22ko')+('uyama.kago'+'shima.jp\x22,'+'\x22makurazak'+'i.kagoshim'+'a.jp\x22,\x22mat'+'sumoto.kag'+'oshima.jp\x22'+',\x22minamita'+'ne.kagoshi'+'ma.jp\x22,\x22na'+'katane.kag'+'oshima.jp\x22'+',\x22nishinoo'+'mote.kagos'+'hima.jp\x22,\x22'+'satsumasen'+'dai.kagosh'+'ima.jp\x22,\x22s'+'oo.kagoshi'+'ma.jp\x22,\x22ta'+'rumizu.kag'+'oshima.jp\x22'+',\x22yusui.ka'+'goshima.jp'+'\x22,\x22aikawa.'+'kanagawa.j'+'p\x22,\x22atsugi'+'.kanagawa.'+'jp\x22,\x22ayase'+'.kanagawa.'+'jp\x22,\x22chiga'+'saki.kanag'+'awa.jp\x22,\x22e'+'bina.kanag'+'awa.jp\x22,\x22f'+'ujisawa.ka'+'nagawa.jp\x22'+',\x22hadano.k'+'anagawa.jp'+'\x22,\x22hakone.'+'kanagawa.j'+'p\x22,\x22hirats'+'uka.kanaga'+'wa.jp\x22,\x22is'+'ehara.kana'+'gawa.jp\x22,\x22'+'kaisei.kan'+'agawa.jp\x22,'+'\x22kamakura.'+'kanagawa.j'+'p\x22,\x22kiyoka'+'wa.kanagaw'+'a.jp\x22,\x22mat'+'suda.kanag'+'awa.jp\x22,\x22m'+'inamiashig'+'ara.kanaga'+'wa.jp\x22,\x22mi'+'ura.kanaga'+'wa.jp\x22,\x22na'+'kai.kanaga'+'wa.jp\x22,\x22ni'+'nomiya.kan'+'agawa.jp\x22,'+'\x22odawara.k'+'anagawa.jp'+'\x22,\x22oi.kana'+'gawa.jp\x22,\x22'+'oiso.kanag'+'awa.jp\x22,\x22s'+'agamihara.'+'kanagawa.j'+'p\x22,\x22samuka'+'wa.kanagaw'+'a.jp\x22,\x22tsu'+'kui.kanaga'+'wa.jp\x22,\x22ya'+'makita.kan'+'agawa.jp\x22,'+'\x22yamato.ka'+'nagawa.jp\x22'+',\x22yokosuka'+'.kanagawa.'+'jp\x22,\x22yugaw'+'ara.kanaga'+'wa.jp\x22,\x22za'+'ma.kanagaw'+'a.jp\x22,\x22zus'+'hi.kanagaw'+'a.jp\x22,\x22aki'+'.kochi.jp\x22'+',\x22geisei.k'+'ochi.jp\x22,\x22'+'hidaka.koc'+'hi.jp\x22,\x22hi'+'gashitsuno'+'.kochi.jp\x22'+',\x22ino.koch'+'i.jp\x22,\x22kag'+'ami.kochi.')+('jp\x22,\x22kami.'+'kochi.jp\x22,'+'\x22kitagawa.'+'kochi.jp\x22,'+'\x22kochi.koc'+'hi.jp\x22,\x22mi'+'hara.kochi'+'.jp\x22,\x22moto'+'yama.kochi'+'.jp\x22,\x22muro'+'to.kochi.j'+'p\x22,\x22nahari'+'.kochi.jp\x22'+',\x22nakamura'+'.kochi.jp\x22'+',\x22nankoku.'+'kochi.jp\x22,'+'\x22nishitosa'+'.kochi.jp\x22'+',\x22niyodoga'+'wa.kochi.j'+'p\x22,\x22ochi.k'+'ochi.jp\x22,\x22'+'okawa.koch'+'i.jp\x22,\x22oto'+'yo.kochi.j'+'p\x22,\x22otsuki'+'.kochi.jp\x22'+',\x22sakawa.k'+'ochi.jp\x22,\x22'+'sukumo.koc'+'hi.jp\x22,\x22su'+'saki.kochi'+'.jp\x22,\x22tosa'+'.kochi.jp\x22'+',\x22tosashim'+'izu.kochi.'+'jp\x22,\x22toyo.'+'kochi.jp\x22,'+'\x22tsuno.koc'+'hi.jp\x22,\x22um'+'aji.kochi.'+'jp\x22,\x22yasud'+'a.kochi.jp'+'\x22,\x22yusuhar'+'a.kochi.jp'+'\x22,\x22amakusa'+'.kumamoto.'+'jp\x22,\x22arao.'+'kumamoto.j'+'p\x22,\x22aso.ku'+'mamoto.jp\x22'+',\x22choyo.ku'+'mamoto.jp\x22'+',\x22gyokuto.'+'kumamoto.j'+'p\x22,\x22kamiam'+'akusa.kuma'+'moto.jp\x22,\x22'+'kikuchi.ku'+'mamoto.jp\x22'+',\x22kumamoto'+'.kumamoto.'+'jp\x22,\x22mashi'+'ki.kumamot'+'o.jp\x22,\x22mif'+'une.kumamo'+'to.jp\x22,\x22mi'+'namata.kum'+'amoto.jp\x22,'+'\x22minamiogu'+'ni.kumamot'+'o.jp\x22,\x22nag'+'asu.kumamo'+'to.jp\x22,\x22ni'+'shihara.ku'+'mamoto.jp\x22'+',\x22oguni.ku'+'mamoto.jp\x22'+',\x22ozu.kuma'+'moto.jp\x22,\x22'+'sumoto.kum'+'amoto.jp\x22,'+'\x22takamori.'+'kumamoto.j'+'p\x22,\x22uki.ku'+'mamoto.jp\x22'+',\x22uto.kuma'+'moto.jp\x22,\x22'+'yamaga.kum'+'amoto.jp\x22,'+'\x22yamato.ku'+'mamoto.jp\x22'+',\x22yatsushi'+'ro.kumamot'+'o.jp\x22,\x22aya'+'be.kyoto.j'+'p\x22,\x22fukuch'+'iyama.kyot'+'o.jp\x22,\x22hig')+('ashiyama.k'+'yoto.jp\x22,\x22'+'ide.kyoto.'+'jp\x22,\x22ine.k'+'yoto.jp\x22,\x22'+'joyo.kyoto'+'.jp\x22,\x22kame'+'oka.kyoto.'+'jp\x22,\x22kamo.'+'kyoto.jp\x22,'+'\x22kita.kyot'+'o.jp\x22,\x22kiz'+'u.kyoto.jp'+'\x22,\x22kumiyam'+'a.kyoto.jp'+'\x22,\x22kyotamb'+'a.kyoto.jp'+'\x22,\x22kyotana'+'be.kyoto.j'+'p\x22,\x22kyotan'+'go.kyoto.j'+'p\x22,\x22maizur'+'u.kyoto.jp'+'\x22,\x22minami.'+'kyoto.jp\x22,'+'\x22minamiyam'+'ashiro.kyo'+'to.jp\x22,\x22mi'+'yazu.kyoto'+'.jp\x22,\x22muko'+'.kyoto.jp\x22'+',\x22nagaokak'+'yo.kyoto.j'+'p\x22,\x22nakagy'+'o.kyoto.jp'+'\x22,\x22nantan.'+'kyoto.jp\x22,'+'\x22oyamazaki'+'.kyoto.jp\x22'+',\x22sakyo.ky'+'oto.jp\x22,\x22s'+'eika.kyoto'+'.jp\x22,\x22tana'+'be.kyoto.j'+'p\x22,\x22uji.ky'+'oto.jp\x22,\x22u'+'jitawara.k'+'yoto.jp\x22,\x22'+'wazuka.kyo'+'to.jp\x22,\x22ya'+'mashina.ky'+'oto.jp\x22,\x22y'+'awata.kyot'+'o.jp\x22,\x22asa'+'hi.mie.jp\x22'+',\x22inabe.mi'+'e.jp\x22,\x22ise'+'.mie.jp\x22,\x22'+'kameyama.m'+'ie.jp\x22,\x22ka'+'wagoe.mie.'+'jp\x22,\x22kiho.'+'mie.jp\x22,\x22k'+'isosaki.mi'+'e.jp\x22,\x22kiw'+'a.mie.jp\x22,'+'\x22komono.mi'+'e.jp\x22,\x22kum'+'ano.mie.jp'+'\x22,\x22kuwana.'+'mie.jp\x22,\x22m'+'atsusaka.m'+'ie.jp\x22,\x22me'+'iwa.mie.jp'+'\x22,\x22mihama.'+'mie.jp\x22,\x22m'+'inamiise.m'+'ie.jp\x22,\x22mi'+'sugi.mie.j'+'p\x22,\x22miyama'+'.mie.jp\x22,\x22'+'nabari.mie'+'.jp\x22,\x22shim'+'a.mie.jp\x22,'+'\x22suzuka.mi'+'e.jp\x22,\x22tad'+'o.mie.jp\x22,'+'\x22taiki.mie'+'.jp\x22,\x22taki'+'.mie.jp\x22,\x22'+'tamaki.mie'+'.jp\x22,\x22toba'+'.mie.jp\x22,\x22'+'tsu.mie.jp'+'\x22,\x22udono.m'+'ie.jp\x22,\x22ur'+'eshino.mie'+'.jp\x22,\x22wata'+'rai.mie.jp'+'\x22,\x22yokkaic')+('hi.mie.jp\x22'+',\x22furukawa'+'.miyagi.jp'+'\x22,\x22higashi'+'matsushima'+'.miyagi.jp'+'\x22,\x22ishinom'+'aki.miyagi'+'.jp\x22,\x22iwan'+'uma.miyagi'+'.jp\x22,\x22kaku'+'da.miyagi.'+'jp\x22,\x22kami.'+'miyagi.jp\x22'+',\x22kawasaki'+'.miyagi.jp'+'\x22,\x22marumor'+'i.miyagi.j'+'p\x22,\x22matsus'+'hima.miyag'+'i.jp\x22,\x22min'+'amisanriku'+'.miyagi.jp'+'\x22,\x22misato.'+'miyagi.jp\x22'+',\x22murata.m'+'iyagi.jp\x22,'+'\x22natori.mi'+'yagi.jp\x22,\x22'+'ogawara.mi'+'yagi.jp\x22,\x22'+'ohira.miya'+'gi.jp\x22,\x22on'+'agawa.miya'+'gi.jp\x22,\x22os'+'aki.miyagi'+'.jp\x22,\x22rifu'+'.miyagi.jp'+'\x22,\x22semine.'+'miyagi.jp\x22'+',\x22shibata.'+'miyagi.jp\x22'+',\x22shichika'+'shuku.miya'+'gi.jp\x22,\x22sh'+'ikama.miya'+'gi.jp\x22,\x22sh'+'iogama.miy'+'agi.jp\x22,\x22s'+'hiroishi.m'+'iyagi.jp\x22,'+'\x22tagajo.mi'+'yagi.jp\x22,\x22'+'taiwa.miya'+'gi.jp\x22,\x22to'+'me.miyagi.'+'jp\x22,\x22tomiy'+'a.miyagi.j'+'p\x22,\x22wakuya'+'.miyagi.jp'+'\x22,\x22watari.'+'miyagi.jp\x22'+',\x22yamamoto'+'.miyagi.jp'+'\x22,\x22zao.miy'+'agi.jp\x22,\x22a'+'ya.miyazak'+'i.jp\x22,\x22ebi'+'no.miyazak'+'i.jp\x22,\x22gok'+'ase.miyaza'+'ki.jp\x22,\x22hy'+'uga.miyaza'+'ki.jp\x22,\x22ka'+'dogawa.miy'+'azaki.jp\x22,'+'\x22kawaminam'+'i.miyazaki'+'.jp\x22,\x22kijo'+'.miyazaki.'+'jp\x22,\x22kitag'+'awa.miyaza'+'ki.jp\x22,\x22ki'+'takata.miy'+'azaki.jp\x22,'+'\x22kitaura.m'+'iyazaki.jp'+'\x22,\x22kobayas'+'hi.miyazak'+'i.jp\x22,\x22kun'+'itomi.miya'+'zaki.jp\x22,\x22'+'kushima.mi'+'yazaki.jp\x22'+',\x22mimata.m'+'iyazaki.jp'+'\x22,\x22miyakon'+'ojo.miyaza'+'ki.jp\x22,\x22mi'+'yazaki.miy')+('azaki.jp\x22,'+'\x22morotsuka'+'.miyazaki.'+'jp\x22,\x22nichi'+'nan.miyaza'+'ki.jp\x22,\x22ni'+'shimera.mi'+'yazaki.jp\x22'+',\x22nobeoka.'+'miyazaki.j'+'p\x22,\x22saito.'+'miyazaki.j'+'p\x22,\x22shiiba'+'.miyazaki.'+'jp\x22,\x22shint'+'omi.miyaza'+'ki.jp\x22,\x22ta'+'kaharu.miy'+'azaki.jp\x22,'+'\x22takanabe.'+'miyazaki.j'+'p\x22,\x22takaza'+'ki.miyazak'+'i.jp\x22,\x22tsu'+'no.miyazak'+'i.jp\x22,\x22ach'+'i.nagano.j'+'p\x22,\x22agemat'+'su.nagano.'+'jp\x22,\x22anan.'+'nagano.jp\x22'+',\x22aoki.nag'+'ano.jp\x22,\x22a'+'sahi.nagan'+'o.jp\x22,\x22azu'+'mino.nagan'+'o.jp\x22,\x22chi'+'kuhoku.nag'+'ano.jp\x22,\x22c'+'hikuma.nag'+'ano.jp\x22,\x22c'+'hino.nagan'+'o.jp\x22,\x22fuj'+'imi.nagano'+'.jp\x22,\x22haku'+'ba.nagano.'+'jp\x22,\x22hara.'+'nagano.jp\x22'+',\x22hiraya.n'+'agano.jp\x22,'+'\x22iida.naga'+'no.jp\x22,\x22ii'+'jima.nagan'+'o.jp\x22,\x22iiy'+'ama.nagano'+'.jp\x22,\x22iizu'+'na.nagano.'+'jp\x22,\x22ikeda'+'.nagano.jp'+'\x22,\x22ikusaka'+'.nagano.jp'+'\x22,\x22ina.nag'+'ano.jp\x22,\x22k'+'aruizawa.n'+'agano.jp\x22,'+'\x22kawakami.'+'nagano.jp\x22'+',\x22kiso.nag'+'ano.jp\x22,\x22k'+'isofukushi'+'ma.nagano.'+'jp\x22,\x22kitaa'+'iki.nagano'+'.jp\x22,\x22koma'+'gane.nagan'+'o.jp\x22,\x22kom'+'oro.nagano'+'.jp\x22,\x22mats'+'ukawa.naga'+'no.jp\x22,\x22ma'+'tsumoto.na'+'gano.jp\x22,\x22'+'miasa.naga'+'no.jp\x22,\x22mi'+'namiaiki.n'+'agano.jp\x22,'+'\x22minamimak'+'i.nagano.j'+'p\x22,\x22minami'+'minowa.nag'+'ano.jp\x22,\x22m'+'inowa.naga'+'no.jp\x22,\x22mi'+'yada.nagan'+'o.jp\x22,\x22miy'+'ota.nagano'+'.jp\x22,\x22moch'+'izuki.naga'+'no.jp\x22,\x22na'+'gano.nagan')+('o.jp\x22,\x22nag'+'awa.nagano'+'.jp\x22,\x22nagi'+'so.nagano.'+'jp\x22,\x22nakag'+'awa.nagano'+'.jp\x22,\x22naka'+'no.nagano.'+'jp\x22,\x22nozaw'+'aonsen.nag'+'ano.jp\x22,\x22o'+'buse.nagan'+'o.jp\x22,\x22oga'+'wa.nagano.'+'jp\x22,\x22okaya'+'.nagano.jp'+'\x22,\x22omachi.'+'nagano.jp\x22'+',\x22omi.naga'+'no.jp\x22,\x22oo'+'kuwa.nagan'+'o.jp\x22,\x22oos'+'hika.nagan'+'o.jp\x22,\x22ota'+'ki.nagano.'+'jp\x22,\x22otari'+'.nagano.jp'+'\x22,\x22sakae.n'+'agano.jp\x22,'+'\x22sakaki.na'+'gano.jp\x22,\x22'+'saku.nagan'+'o.jp\x22,\x22sak'+'uho.nagano'+'.jp\x22,\x22shim'+'osuwa.naga'+'no.jp\x22,\x22sh'+'inanomachi'+'.nagano.jp'+'\x22,\x22shiojir'+'i.nagano.j'+'p\x22,\x22suwa.n'+'agano.jp\x22,'+'\x22suzaka.na'+'gano.jp\x22,\x22'+'takagi.nag'+'ano.jp\x22,\x22t'+'akamori.na'+'gano.jp\x22,\x22'+'takayama.n'+'agano.jp\x22,'+'\x22tateshina'+'.nagano.jp'+'\x22,\x22tatsuno'+'.nagano.jp'+'\x22,\x22togakus'+'hi.nagano.'+'jp\x22,\x22togur'+'a.nagano.j'+'p\x22,\x22tomi.n'+'agano.jp\x22,'+'\x22ueda.naga'+'no.jp\x22,\x22wa'+'da.nagano.'+'jp\x22,\x22yamag'+'ata.nagano'+'.jp\x22,\x22yama'+'nouchi.nag'+'ano.jp\x22,\x22y'+'asaka.naga'+'no.jp\x22,\x22ya'+'suoka.naga'+'no.jp\x22,\x22ch'+'ijiwa.naga'+'saki.jp\x22,\x22'+'futsu.naga'+'saki.jp\x22,\x22'+'goto.nagas'+'aki.jp\x22,\x22h'+'asami.naga'+'saki.jp\x22,\x22'+'hirado.nag'+'asaki.jp\x22,'+'\x22iki.nagas'+'aki.jp\x22,\x22i'+'sahaya.nag'+'asaki.jp\x22,'+'\x22kawatana.'+'nagasaki.j'+'p\x22,\x22kuchin'+'otsu.nagas'+'aki.jp\x22,\x22m'+'atsuura.na'+'gasaki.jp\x22'+',\x22nagasaki'+'.nagasaki.'+'jp\x22,\x22obama'+'.nagasaki.'+'jp\x22,\x22omura'+'.nagasaki.')+('jp\x22,\x22oseto'+'.nagasaki.'+'jp\x22,\x22saika'+'i.nagasaki'+'.jp\x22,\x22sase'+'bo.nagasak'+'i.jp\x22,\x22sei'+'hi.nagasak'+'i.jp\x22,\x22shi'+'mabara.nag'+'asaki.jp\x22,'+'\x22shinkamig'+'oto.nagasa'+'ki.jp\x22,\x22to'+'gitsu.naga'+'saki.jp\x22,\x22'+'tsushima.n'+'agasaki.jp'+'\x22,\x22unzen.n'+'agasaki.jp'+'\x22,\x22ando.na'+'ra.jp\x22,\x22go'+'se.nara.jp'+'\x22,\x22heguri.'+'nara.jp\x22,\x22'+'higashiyos'+'hino.nara.'+'jp\x22,\x22ikaru'+'ga.nara.jp'+'\x22,\x22ikoma.n'+'ara.jp\x22,\x22k'+'amikitayam'+'a.nara.jp\x22'+',\x22kanmaki.'+'nara.jp\x22,\x22'+'kashiba.na'+'ra.jp\x22,\x22ka'+'shihara.na'+'ra.jp\x22,\x22ka'+'tsuragi.na'+'ra.jp\x22,\x22ka'+'wai.nara.j'+'p\x22,\x22kawaka'+'mi.nara.jp'+'\x22,\x22kawanis'+'hi.nara.jp'+'\x22,\x22koryo.n'+'ara.jp\x22,\x22k'+'urotaki.na'+'ra.jp\x22,\x22mi'+'tsue.nara.'+'jp\x22,\x22miyak'+'e.nara.jp\x22'+',\x22nara.nar'+'a.jp\x22,\x22nos'+'egawa.nara'+'.jp\x22,\x22oji.'+'nara.jp\x22,\x22'+'ouda.nara.'+'jp\x22,\x22oyodo'+'.nara.jp\x22,'+'\x22sakurai.n'+'ara.jp\x22,\x22s'+'ango.nara.'+'jp\x22,\x22shimo'+'ichi.nara.'+'jp\x22,\x22shimo'+'kitayama.n'+'ara.jp\x22,\x22s'+'hinjo.nara'+'.jp\x22,\x22soni'+'.nara.jp\x22,'+'\x22takatori.'+'nara.jp\x22,\x22'+'tawaramoto'+'.nara.jp\x22,'+'\x22tenkawa.n'+'ara.jp\x22,\x22t'+'enri.nara.'+'jp\x22,\x22uda.n'+'ara.jp\x22,\x22y'+'amatokoriy'+'ama.nara.j'+'p\x22,\x22yamato'+'takada.nar'+'a.jp\x22,\x22yam'+'azoe.nara.'+'jp\x22,\x22yoshi'+'no.nara.jp'+'\x22,\x22aga.nii'+'gata.jp\x22,\x22'+'agano.niig'+'ata.jp\x22,\x22g'+'osen.niiga'+'ta.jp\x22,\x22it'+'oigawa.nii'+'gata.jp\x22,\x22'+'izumozaki.'+'niigata.jp'+'\x22,\x22joetsu.')+('niigata.jp'+'\x22,\x22kamo.ni'+'igata.jp\x22,'+'\x22kariwa.ni'+'igata.jp\x22,'+'\x22kashiwaza'+'ki.niigata'+'.jp\x22,\x22mina'+'miuonuma.n'+'iigata.jp\x22'+',\x22mitsuke.'+'niigata.jp'+'\x22,\x22muika.n'+'iigata.jp\x22'+',\x22murakami'+'.niigata.j'+'p\x22,\x22myoko.'+'niigata.jp'+'\x22,\x22nagaoka'+'.niigata.j'+'p\x22,\x22niigat'+'a.niigata.'+'jp\x22,\x22ojiya'+'.niigata.j'+'p\x22,\x22omi.ni'+'igata.jp\x22,'+'\x22sado.niig'+'ata.jp\x22,\x22s'+'anjo.niiga'+'ta.jp\x22,\x22se'+'iro.niigat'+'a.jp\x22,\x22sei'+'rou.niigat'+'a.jp\x22,\x22sek'+'ikawa.niig'+'ata.jp\x22,\x22s'+'hibata.nii'+'gata.jp\x22,\x22'+'tagami.nii'+'gata.jp\x22,\x22'+'tainai.nii'+'gata.jp\x22,\x22'+'tochio.nii'+'gata.jp\x22,\x22'+'tokamachi.'+'niigata.jp'+'\x22,\x22tsubame'+'.niigata.j'+'p\x22,\x22tsunan'+'.niigata.j'+'p\x22,\x22uonuma'+'.niigata.j'+'p\x22,\x22yahiko'+'.niigata.j'+'p\x22,\x22yoita.'+'niigata.jp'+'\x22,\x22yuzawa.'+'niigata.jp'+'\x22,\x22beppu.o'+'ita.jp\x22,\x22b'+'ungoono.oi'+'ta.jp\x22,\x22bu'+'ngotakada.'+'oita.jp\x22,\x22'+'hasama.oit'+'a.jp\x22,\x22hij'+'i.oita.jp\x22'+',\x22himeshim'+'a.oita.jp\x22'+',\x22hita.oit'+'a.jp\x22,\x22kam'+'itsue.oita'+'.jp\x22,\x22koko'+'noe.oita.j'+'p\x22,\x22kuju.o'+'ita.jp\x22,\x22k'+'unisaki.oi'+'ta.jp\x22,\x22ku'+'su.oita.jp'+'\x22,\x22oita.oi'+'ta.jp\x22,\x22sa'+'iki.oita.j'+'p\x22,\x22taketa'+'.oita.jp\x22,'+'\x22tsukumi.o'+'ita.jp\x22,\x22u'+'sa.oita.jp'+'\x22,\x22usuki.o'+'ita.jp\x22,\x22y'+'ufu.oita.j'+'p\x22,\x22akaiwa'+'.okayama.j'+'p\x22,\x22asakuc'+'hi.okayama'+'.jp\x22,\x22bize'+'n.okayama.'+'jp\x22,\x22hayas'+'hima.okaya'+'ma.jp\x22,\x22ib'+'ara.okayam')+('a.jp\x22,\x22kag'+'amino.okay'+'ama.jp\x22,\x22k'+'asaoka.oka'+'yama.jp\x22,\x22'+'kibichuo.o'+'kayama.jp\x22'+',\x22kumenan.'+'okayama.jp'+'\x22,\x22kurashi'+'ki.okayama'+'.jp\x22,\x22mani'+'wa.okayama'+'.jp\x22,\x22misa'+'ki.okayama'+'.jp\x22,\x22nagi'+'.okayama.j'+'p\x22,\x22niimi.'+'okayama.jp'+'\x22,\x22nishiaw'+'akura.okay'+'ama.jp\x22,\x22o'+'kayama.oka'+'yama.jp\x22,\x22'+'satosho.ok'+'ayama.jp\x22,'+'\x22setouchi.'+'okayama.jp'+'\x22,\x22shinjo.'+'okayama.jp'+'\x22,\x22shoo.ok'+'ayama.jp\x22,'+'\x22soja.okay'+'ama.jp\x22,\x22t'+'akahashi.o'+'kayama.jp\x22'+',\x22tamano.o'+'kayama.jp\x22'+',\x22tsuyama.'+'okayama.jp'+'\x22,\x22wake.ok'+'ayama.jp\x22,'+'\x22yakage.ok'+'ayama.jp\x22,'+'\x22aguni.oki'+'nawa.jp\x22,\x22'+'ginowan.ok'+'inawa.jp\x22,'+'\x22ginoza.ok'+'inawa.jp\x22,'+'\x22gushikami'+'.okinawa.j'+'p\x22,\x22haebar'+'u.okinawa.'+'jp\x22,\x22higas'+'hi.okinawa'+'.jp\x22,\x22hira'+'ra.okinawa'+'.jp\x22,\x22ihey'+'a.okinawa.'+'jp\x22,\x22ishig'+'aki.okinaw'+'a.jp\x22,\x22ish'+'ikawa.okin'+'awa.jp\x22,\x22i'+'toman.okin'+'awa.jp\x22,\x22i'+'zena.okina'+'wa.jp\x22,\x22ka'+'dena.okina'+'wa.jp\x22,\x22ki'+'n.okinawa.'+'jp\x22,\x22kitad'+'aito.okina'+'wa.jp\x22,\x22ki'+'tanakagusu'+'ku.okinawa'+'.jp\x22,\x22kume'+'jima.okina'+'wa.jp\x22,\x22ku'+'nigami.oki'+'nawa.jp\x22,\x22'+'minamidait'+'o.okinawa.'+'jp\x22,\x22motob'+'u.okinawa.'+'jp\x22,\x22nago.'+'okinawa.jp'+'\x22,\x22naha.ok'+'inawa.jp\x22,'+'\x22nakagusuk'+'u.okinawa.'+'jp\x22,\x22nakij'+'in.okinawa'+'.jp\x22,\x22nanj'+'o.okinawa.'+'jp\x22,\x22nishi'+'hara.okina'+'wa.jp\x22,\x22og'+'imi.okinaw')+('a.jp\x22,\x22oki'+'nawa.okina'+'wa.jp\x22,\x22on'+'na.okinawa'+'.jp\x22,\x22shim'+'oji.okinaw'+'a.jp\x22,\x22tak'+'etomi.okin'+'awa.jp\x22,\x22t'+'arama.okin'+'awa.jp\x22,\x22t'+'okashiki.o'+'kinawa.jp\x22'+',\x22tomigusu'+'ku.okinawa'+'.jp\x22,\x22tona'+'ki.okinawa'+'.jp\x22,\x22uras'+'oe.okinawa'+'.jp\x22,\x22urum'+'a.okinawa.'+'jp\x22,\x22yaese'+'.okinawa.j'+'p\x22,\x22yomita'+'n.okinawa.'+'jp\x22,\x22yonab'+'aru.okinaw'+'a.jp\x22,\x22yon'+'aguni.okin'+'awa.jp\x22,\x22z'+'amami.okin'+'awa.jp\x22,\x22a'+'beno.osaka'+'.jp\x22,\x22chih'+'ayaakasaka'+'.osaka.jp\x22'+',\x22chuo.osa'+'ka.jp\x22,\x22da'+'ito.osaka.'+'jp\x22,\x22fujii'+'dera.osaka'+'.jp\x22,\x22habi'+'kino.osaka'+'.jp\x22,\x22hann'+'an.osaka.j'+'p\x22,\x22higash'+'iosaka.osa'+'ka.jp\x22,\x22hi'+'gashisumiy'+'oshi.osaka'+'.jp\x22,\x22higa'+'shiyodogaw'+'a.osaka.jp'+'\x22,\x22hirakat'+'a.osaka.jp'+'\x22,\x22ibaraki'+'.osaka.jp\x22'+',\x22ikeda.os'+'aka.jp\x22,\x22i'+'zumi.osaka'+'.jp\x22,\x22izum'+'iotsu.osak'+'a.jp\x22,\x22izu'+'misano.osa'+'ka.jp\x22,\x22ka'+'doma.osaka'+'.jp\x22,\x22kaiz'+'uka.osaka.'+'jp\x22,\x22kanan'+'.osaka.jp\x22'+',\x22kashiwar'+'a.osaka.jp'+'\x22,\x22katano.'+'osaka.jp\x22,'+'\x22kawachina'+'gano.osaka'+'.jp\x22,\x22kish'+'iwada.osak'+'a.jp\x22,\x22kit'+'a.osaka.jp'+'\x22,\x22kumator'+'i.osaka.jp'+'\x22,\x22matsuba'+'ra.osaka.j'+'p\x22,\x22minato'+'.osaka.jp\x22'+',\x22minoh.os'+'aka.jp\x22,\x22m'+'isaki.osak'+'a.jp\x22,\x22mor'+'iguchi.osa'+'ka.jp\x22,\x22ne'+'yagawa.osa'+'ka.jp\x22,\x22ni'+'shi.osaka.'+'jp\x22,\x22nose.'+'osaka.jp\x22,'+'\x22osakasaya'+'ma.osaka.j'+'p\x22,\x22sakai.')+('osaka.jp\x22,'+'\x22sayama.os'+'aka.jp\x22,\x22s'+'ennan.osak'+'a.jp\x22,\x22set'+'tsu.osaka.'+'jp\x22,\x22shijo'+'nawate.osa'+'ka.jp\x22,\x22sh'+'imamoto.os'+'aka.jp\x22,\x22s'+'uita.osaka'+'.jp\x22,\x22tada'+'oka.osaka.'+'jp\x22,\x22taish'+'i.osaka.jp'+'\x22,\x22tajiri.'+'osaka.jp\x22,'+'\x22takaishi.'+'osaka.jp\x22,'+'\x22takatsuki'+'.osaka.jp\x22'+',\x22tondabay'+'ashi.osaka'+'.jp\x22,\x22toyo'+'naka.osaka'+'.jp\x22,\x22toyo'+'no.osaka.j'+'p\x22,\x22yao.os'+'aka.jp\x22,\x22a'+'riake.saga'+'.jp\x22,\x22arit'+'a.saga.jp\x22'+',\x22fukudomi'+'.saga.jp\x22,'+'\x22genkai.sa'+'ga.jp\x22,\x22ha'+'matama.sag'+'a.jp\x22,\x22hiz'+'en.saga.jp'+'\x22,\x22imari.s'+'aga.jp\x22,\x22k'+'amimine.sa'+'ga.jp\x22,\x22ka'+'nzaki.saga'+'.jp\x22,\x22kara'+'tsu.saga.j'+'p\x22,\x22kashim'+'a.saga.jp\x22'+',\x22kitagata'+'.saga.jp\x22,'+'\x22kitahata.'+'saga.jp\x22,\x22'+'kiyama.sag'+'a.jp\x22,\x22kou'+'hoku.saga.'+'jp\x22,\x22kyura'+'gi.saga.jp'+'\x22,\x22nishiar'+'ita.saga.j'+'p\x22,\x22ogi.sa'+'ga.jp\x22,\x22om'+'achi.saga.'+'jp\x22,\x22ouchi'+'.saga.jp\x22,'+'\x22saga.saga'+'.jp\x22,\x22shir'+'oishi.saga'+'.jp\x22,\x22taku'+'.saga.jp\x22,'+'\x22tara.saga'+'.jp\x22,\x22tosu'+'.saga.jp\x22,'+'\x22yoshinoga'+'ri.saga.jp'+'\x22,\x22arakawa'+'.saitama.j'+'p\x22,\x22asaka.'+'saitama.jp'+'\x22,\x22chichib'+'u.saitama.'+'jp\x22,\x22fujim'+'i.saitama.'+'jp\x22,\x22fujim'+'ino.saitam'+'a.jp\x22,\x22fuk'+'aya.saitam'+'a.jp\x22,\x22han'+'no.saitama'+'.jp\x22,\x22hany'+'u.saitama.'+'jp\x22,\x22hasud'+'a.saitama.'+'jp\x22,\x22hatog'+'aya.saitam'+'a.jp\x22,\x22hat'+'oyama.sait'+'ama.jp\x22,\x22h'+'idaka.sait'+'ama.jp\x22,\x22h')+('igashichic'+'hibu.saita'+'ma.jp\x22,\x22hi'+'gashimatsu'+'yama.saita'+'ma.jp\x22,\x22ho'+'njo.saitam'+'a.jp\x22,\x22ina'+'.saitama.j'+'p\x22,\x22iruma.'+'saitama.jp'+'\x22,\x22iwatsuk'+'i.saitama.'+'jp\x22,\x22kamii'+'zumi.saita'+'ma.jp\x22,\x22ka'+'mikawa.sai'+'tama.jp\x22,\x22'+'kamisato.s'+'aitama.jp\x22'+',\x22kasukabe'+'.saitama.j'+'p\x22,\x22kawago'+'e.saitama.'+'jp\x22,\x22kawag'+'uchi.saita'+'ma.jp\x22,\x22ka'+'wajima.sai'+'tama.jp\x22,\x22'+'kazo.saita'+'ma.jp\x22,\x22ki'+'tamoto.sai'+'tama.jp\x22,\x22'+'koshigaya.'+'saitama.jp'+'\x22,\x22kounosu'+'.saitama.j'+'p\x22,\x22kuki.s'+'aitama.jp\x22'+',\x22kumagaya'+'.saitama.j'+'p\x22,\x22matsub'+'ushi.saita'+'ma.jp\x22,\x22mi'+'nano.saita'+'ma.jp\x22,\x22mi'+'sato.saita'+'ma.jp\x22,\x22mi'+'yashiro.sa'+'itama.jp\x22,'+'\x22miyoshi.s'+'aitama.jp\x22'+',\x22moroyama'+'.saitama.j'+'p\x22,\x22nagato'+'ro.saitama'+'.jp\x22,\x22name'+'gawa.saita'+'ma.jp\x22,\x22ni'+'iza.saitam'+'a.jp\x22,\x22oga'+'no.saitama'+'.jp\x22,\x22ogaw'+'a.saitama.'+'jp\x22,\x22ogose'+'.saitama.j'+'p\x22,\x22okegaw'+'a.saitama.'+'jp\x22,\x22omiya'+'.saitama.j'+'p\x22,\x22otaki.'+'saitama.jp'+'\x22,\x22ranzan.'+'saitama.jp'+'\x22,\x22ryokami'+'.saitama.j'+'p\x22,\x22saitam'+'a.saitama.'+'jp\x22,\x22sakad'+'o.saitama.'+'jp\x22,\x22satte'+'.saitama.j'+'p\x22,\x22sayama'+'.saitama.j'+'p\x22,\x22shiki.'+'saitama.jp'+'\x22,\x22shiraok'+'a.saitama.'+'jp\x22,\x22soka.'+'saitama.jp'+'\x22,\x22sugito.'+'saitama.jp'+'\x22,\x22toda.sa'+'itama.jp\x22,'+'\x22tokigawa.'+'saitama.jp'+'\x22,\x22tokoroz'+'awa.saitam'+'a.jp\x22,\x22tsu'+'rugashima.')+('saitama.jp'+'\x22,\x22urawa.s'+'aitama.jp\x22'+',\x22warabi.s'+'aitama.jp\x22'+',\x22yashio.s'+'aitama.jp\x22'+',\x22yokoze.s'+'aitama.jp\x22'+',\x22yono.sai'+'tama.jp\x22,\x22'+'yorii.sait'+'ama.jp\x22,\x22y'+'oshida.sai'+'tama.jp\x22,\x22'+'yoshikawa.'+'saitama.jp'+'\x22,\x22yoshimi'+'.saitama.j'+'p\x22,\x22aisho.'+'shiga.jp\x22,'+'\x22gamo.shig'+'a.jp\x22,\x22hig'+'ashiomi.sh'+'iga.jp\x22,\x22h'+'ikone.shig'+'a.jp\x22,\x22kok'+'a.shiga.jp'+'\x22,\x22konan.s'+'higa.jp\x22,\x22'+'kosei.shig'+'a.jp\x22,\x22kot'+'o.shiga.jp'+'\x22,\x22kusatsu'+'.shiga.jp\x22'+',\x22maibara.'+'shiga.jp\x22,'+'\x22moriyama.'+'shiga.jp\x22,'+'\x22nagahama.'+'shiga.jp\x22,'+'\x22nishiazai'+'.shiga.jp\x22'+',\x22notogawa'+'.shiga.jp\x22'+',\x22omihachi'+'man.shiga.'+'jp\x22,\x22otsu.'+'shiga.jp\x22,'+'\x22ritto.shi'+'ga.jp\x22,\x22ry'+'uoh.shiga.'+'jp\x22,\x22takas'+'hima.shiga'+'.jp\x22,\x22taka'+'tsuki.shig'+'a.jp\x22,\x22tor'+'ahime.shig'+'a.jp\x22,\x22toy'+'osato.shig'+'a.jp\x22,\x22yas'+'u.shiga.jp'+'\x22,\x22akagi.s'+'himane.jp\x22'+',\x22ama.shim'+'ane.jp\x22,\x22g'+'otsu.shima'+'ne.jp\x22,\x22ha'+'mada.shima'+'ne.jp\x22,\x22hi'+'gashiizumo'+'.shimane.j'+'p\x22,\x22hikawa'+'.shimane.j'+'p\x22,\x22hikimi'+'.shimane.j'+'p\x22,\x22izumo.'+'shimane.jp'+'\x22,\x22kakinok'+'i.shimane.'+'jp\x22,\x22masud'+'a.shimane.'+'jp\x22,\x22matsu'+'e.shimane.'+'jp\x22,\x22misat'+'o.shimane.'+'jp\x22,\x22nishi'+'noshima.sh'+'imane.jp\x22,'+'\x22ohda.shim'+'ane.jp\x22,\x22o'+'kinoshima.'+'shimane.jp'+'\x22,\x22okuizum'+'o.shimane.'+'jp\x22,\x22shima'+'ne.shimane'+'.jp\x22,\x22tama'+'yu.shimane'+'.jp\x22,\x22tsuw')+('ano.shiman'+'e.jp\x22,\x22unn'+'an.shimane'+'.jp\x22,\x22yaku'+'mo.shimane'+'.jp\x22,\x22yasu'+'gi.shimane'+'.jp\x22,\x22yats'+'uka.shiman'+'e.jp\x22,\x22ara'+'i.shizuoka'+'.jp\x22,\x22atam'+'i.shizuoka'+'.jp\x22,\x22fuji'+'.shizuoka.'+'jp\x22,\x22fujie'+'da.shizuok'+'a.jp\x22,\x22fuj'+'ikawa.shiz'+'uoka.jp\x22,\x22'+'fujinomiya'+'.shizuoka.'+'jp\x22,\x22fukur'+'oi.shizuok'+'a.jp\x22,\x22got'+'emba.shizu'+'oka.jp\x22,\x22h'+'aibara.shi'+'zuoka.jp\x22,'+'\x22hamamatsu'+'.shizuoka.'+'jp\x22,\x22higas'+'hiizu.shiz'+'uoka.jp\x22,\x22'+'ito.shizuo'+'ka.jp\x22,\x22iw'+'ata.shizuo'+'ka.jp\x22,\x22iz'+'u.shizuoka'+'.jp\x22,\x22izun'+'okuni.shiz'+'uoka.jp\x22,\x22'+'kakegawa.s'+'hizuoka.jp'+'\x22,\x22kannami'+'.shizuoka.'+'jp\x22,\x22kawan'+'ehon.shizu'+'oka.jp\x22,\x22k'+'awazu.shiz'+'uoka.jp\x22,\x22'+'kikugawa.s'+'hizuoka.jp'+'\x22,\x22kosai.s'+'hizuoka.jp'+'\x22,\x22makinoh'+'ara.shizuo'+'ka.jp\x22,\x22ma'+'tsuzaki.sh'+'izuoka.jp\x22'+',\x22minamiiz'+'u.shizuoka'+'.jp\x22,\x22mish'+'ima.shizuo'+'ka.jp\x22,\x22mo'+'rimachi.sh'+'izuoka.jp\x22'+',\x22nishiizu'+'.shizuoka.'+'jp\x22,\x22numaz'+'u.shizuoka'+'.jp\x22,\x22omae'+'zaki.shizu'+'oka.jp\x22,\x22s'+'himada.shi'+'zuoka.jp\x22,'+'\x22shimizu.s'+'hizuoka.jp'+'\x22,\x22shimoda'+'.shizuoka.'+'jp\x22,\x22shizu'+'oka.shizuo'+'ka.jp\x22,\x22su'+'sono.shizu'+'oka.jp\x22,\x22y'+'aizu.shizu'+'oka.jp\x22,\x22y'+'oshida.shi'+'zuoka.jp\x22,'+'\x22ashikaga.'+'tochigi.jp'+'\x22,\x22bato.to'+'chigi.jp\x22,'+'\x22haga.toch'+'igi.jp\x22,\x22i'+'chikai.toc'+'higi.jp\x22,\x22'+'iwafune.to'+'chigi.jp\x22,'+'\x22kaminokaw')+('a.tochigi.'+'jp\x22,\x22kanum'+'a.tochigi.'+'jp\x22,\x22karas'+'uyama.toch'+'igi.jp\x22,\x22k'+'uroiso.toc'+'higi.jp\x22,\x22'+'mashiko.to'+'chigi.jp\x22,'+'\x22mibu.toch'+'igi.jp\x22,\x22m'+'oka.tochig'+'i.jp\x22,\x22mot'+'egi.tochig'+'i.jp\x22,\x22nas'+'u.tochigi.'+'jp\x22,\x22nasus'+'hiobara.to'+'chigi.jp\x22,'+'\x22nikko.toc'+'higi.jp\x22,\x22'+'nishikata.'+'tochigi.jp'+'\x22,\x22nogi.to'+'chigi.jp\x22,'+'\x22ohira.toc'+'higi.jp\x22,\x22'+'ohtawara.t'+'ochigi.jp\x22'+',\x22oyama.to'+'chigi.jp\x22,'+'\x22sakura.to'+'chigi.jp\x22,'+'\x22sano.toch'+'igi.jp\x22,\x22s'+'himotsuke.'+'tochigi.jp'+'\x22,\x22shioya.'+'tochigi.jp'+'\x22,\x22takanez'+'awa.tochig'+'i.jp\x22,\x22toc'+'higi.tochi'+'gi.jp\x22,\x22ts'+'uga.tochig'+'i.jp\x22,\x22uji'+'ie.tochigi'+'.jp\x22,\x22utsu'+'nomiya.toc'+'higi.jp\x22,\x22'+'yaita.toch'+'igi.jp\x22,\x22a'+'izumi.toku'+'shima.jp\x22,'+'\x22anan.toku'+'shima.jp\x22,'+'\x22ichiba.to'+'kushima.jp'+'\x22,\x22itano.t'+'okushima.j'+'p\x22,\x22kainan'+'.tokushima'+'.jp\x22,\x22koma'+'tsushima.t'+'okushima.j'+'p\x22,\x22matsus'+'hige.tokus'+'hima.jp\x22,\x22'+'mima.tokus'+'hima.jp\x22,\x22'+'minami.tok'+'ushima.jp\x22'+',\x22miyoshi.'+'tokushima.'+'jp\x22,\x22mugi.'+'tokushima.'+'jp\x22,\x22nakag'+'awa.tokush'+'ima.jp\x22,\x22n'+'aruto.toku'+'shima.jp\x22,'+'\x22sanagochi'+'.tokushima'+'.jp\x22,\x22shis'+'hikui.toku'+'shima.jp\x22,'+'\x22tokushima'+'.tokushima'+'.jp\x22,\x22waji'+'ki.tokushi'+'ma.jp\x22,\x22ad'+'achi.tokyo'+'.jp\x22,\x22akir'+'uno.tokyo.'+'jp\x22,\x22akish'+'ima.tokyo.'+'jp\x22,\x22aogas'+'hima.tokyo'+'.jp\x22,\x22arak')+('awa.tokyo.'+'jp\x22,\x22bunky'+'o.tokyo.jp'+'\x22,\x22chiyoda'+'.tokyo.jp\x22'+',\x22chofu.to'+'kyo.jp\x22,\x22c'+'huo.tokyo.'+'jp\x22,\x22edoga'+'wa.tokyo.j'+'p\x22,\x22fuchu.'+'tokyo.jp\x22,'+'\x22fussa.tok'+'yo.jp\x22,\x22ha'+'chijo.toky'+'o.jp\x22,\x22hac'+'hioji.toky'+'o.jp\x22,\x22ham'+'ura.tokyo.'+'jp\x22,\x22higas'+'hikurume.t'+'okyo.jp\x22,\x22'+'higashimur'+'ayama.toky'+'o.jp\x22,\x22hig'+'ashiyamato'+'.tokyo.jp\x22'+',\x22hino.tok'+'yo.jp\x22,\x22hi'+'node.tokyo'+'.jp\x22,\x22hino'+'hara.tokyo'+'.jp\x22,\x22inag'+'i.tokyo.jp'+'\x22,\x22itabash'+'i.tokyo.jp'+'\x22,\x22katsush'+'ika.tokyo.'+'jp\x22,\x22kita.'+'tokyo.jp\x22,'+'\x22kiyose.to'+'kyo.jp\x22,\x22k'+'odaira.tok'+'yo.jp\x22,\x22ko'+'ganei.toky'+'o.jp\x22,\x22kok'+'ubunji.tok'+'yo.jp\x22,\x22ko'+'mae.tokyo.'+'jp\x22,\x22koto.'+'tokyo.jp\x22,'+'\x22kouzushim'+'a.tokyo.jp'+'\x22,\x22kunitac'+'hi.tokyo.j'+'p\x22,\x22machid'+'a.tokyo.jp'+'\x22,\x22meguro.'+'tokyo.jp\x22,'+'\x22minato.to'+'kyo.jp\x22,\x22m'+'itaka.toky'+'o.jp\x22,\x22miz'+'uho.tokyo.'+'jp\x22,\x22musas'+'himurayama'+'.tokyo.jp\x22'+',\x22musashin'+'o.tokyo.jp'+'\x22,\x22nakano.'+'tokyo.jp\x22,'+'\x22nerima.to'+'kyo.jp\x22,\x22o'+'gasawara.t'+'okyo.jp\x22,\x22'+'okutama.to'+'kyo.jp\x22,\x22o'+'me.tokyo.j'+'p\x22,\x22oshima'+'.tokyo.jp\x22'+',\x22ota.toky'+'o.jp\x22,\x22set'+'agaya.toky'+'o.jp\x22,\x22shi'+'buya.tokyo'+'.jp\x22,\x22shin'+'agawa.toky'+'o.jp\x22,\x22shi'+'njuku.toky'+'o.jp\x22,\x22sug'+'inami.toky'+'o.jp\x22,\x22sum'+'ida.tokyo.'+'jp\x22,\x22tachi'+'kawa.tokyo'+'.jp\x22,\x22tait'+'o.tokyo.jp'+'\x22,\x22tama.to'+'kyo.jp\x22,\x22t'+'oshima.tok')+('yo.jp\x22,\x22ch'+'izu.tottor'+'i.jp\x22,\x22hin'+'o.tottori.'+'jp\x22,\x22kawah'+'ara.tottor'+'i.jp\x22,\x22kog'+'e.tottori.'+'jp\x22,\x22kotou'+'ra.tottori'+'.jp\x22,\x22misa'+'sa.tottori'+'.jp\x22,\x22nanb'+'u.tottori.'+'jp\x22,\x22nichi'+'nan.tottor'+'i.jp\x22,\x22sak'+'aiminato.t'+'ottori.jp\x22'+',\x22tottori.'+'tottori.jp'+'\x22,\x22wakasa.'+'tottori.jp'+'\x22,\x22yazu.to'+'ttori.jp\x22,'+'\x22yonago.to'+'ttori.jp\x22,'+'\x22asahi.toy'+'ama.jp\x22,\x22f'+'uchu.toyam'+'a.jp\x22,\x22fuk'+'umitsu.toy'+'ama.jp\x22,\x22f'+'unahashi.t'+'oyama.jp\x22,'+'\x22himi.toya'+'ma.jp\x22,\x22im'+'izu.toyama'+'.jp\x22,\x22inam'+'i.toyama.j'+'p\x22,\x22johana'+'.toyama.jp'+'\x22,\x22kamiich'+'i.toyama.j'+'p\x22,\x22kurobe'+'.toyama.jp'+'\x22,\x22nakanii'+'kawa.toyam'+'a.jp\x22,\x22nam'+'erikawa.to'+'yama.jp\x22,\x22'+'nanto.toya'+'ma.jp\x22,\x22ny'+'uzen.toyam'+'a.jp\x22,\x22oya'+'be.toyama.'+'jp\x22,\x22taira'+'.toyama.jp'+'\x22,\x22takaoka'+'.toyama.jp'+'\x22,\x22tateyam'+'a.toyama.j'+'p\x22,\x22toga.t'+'oyama.jp\x22,'+'\x22tonami.to'+'yama.jp\x22,\x22'+'toyama.toy'+'ama.jp\x22,\x22u'+'nazuki.toy'+'ama.jp\x22,\x22u'+'ozu.toyama'+'.jp\x22,\x22yama'+'da.toyama.'+'jp\x22,\x22arida'+'.wakayama.'+'jp\x22,\x22arida'+'gawa.wakay'+'ama.jp\x22,\x22g'+'obo.wakaya'+'ma.jp\x22,\x22ha'+'shimoto.wa'+'kayama.jp\x22'+',\x22hidaka.w'+'akayama.jp'+'\x22,\x22hirogaw'+'a.wakayama'+'.jp\x22,\x22inam'+'i.wakayama'+'.jp\x22,\x22iwad'+'e.wakayama'+'.jp\x22,\x22kain'+'an.wakayam'+'a.jp\x22,\x22kam'+'itonda.wak'+'ayama.jp\x22,'+'\x22katsuragi'+'.wakayama.'+'jp\x22,\x22kimin'+'o.wakayama'+'.jp\x22,\x22kino')+('kawa.wakay'+'ama.jp\x22,\x22k'+'itayama.wa'+'kayama.jp\x22'+',\x22koya.wak'+'ayama.jp\x22,'+'\x22koza.waka'+'yama.jp\x22,\x22'+'kozagawa.w'+'akayama.jp'+'\x22,\x22kudoyam'+'a.wakayama'+'.jp\x22,\x22kush'+'imoto.waka'+'yama.jp\x22,\x22'+'mihama.wak'+'ayama.jp\x22,'+'\x22misato.wa'+'kayama.jp\x22'+',\x22nachikat'+'suura.waka'+'yama.jp\x22,\x22'+'shingu.wak'+'ayama.jp\x22,'+'\x22shirahama'+'.wakayama.'+'jp\x22,\x22taiji'+'.wakayama.'+'jp\x22,\x22tanab'+'e.wakayama'+'.jp\x22,\x22waka'+'yama.wakay'+'ama.jp\x22,\x22y'+'uasa.wakay'+'ama.jp\x22,\x22y'+'ura.wakaya'+'ma.jp\x22,\x22as'+'ahi.yamaga'+'ta.jp\x22,\x22fu'+'nagata.yam'+'agata.jp\x22,'+'\x22higashine'+'.yamagata.'+'jp\x22,\x22iide.'+'yamagata.j'+'p\x22,\x22kahoku'+'.yamagata.'+'jp\x22,\x22kamin'+'oyama.yama'+'gata.jp\x22,\x22'+'kaneyama.y'+'amagata.jp'+'\x22,\x22kawanis'+'hi.yamagat'+'a.jp\x22,\x22mam'+'urogawa.ya'+'magata.jp\x22'+',\x22mikawa.y'+'amagata.jp'+'\x22,\x22murayam'+'a.yamagata'+'.jp\x22,\x22naga'+'i.yamagata'+'.jp\x22,\x22naka'+'yama.yamag'+'ata.jp\x22,\x22n'+'anyo.yamag'+'ata.jp\x22,\x22n'+'ishikawa.y'+'amagata.jp'+'\x22,\x22obanaza'+'wa.yamagat'+'a.jp\x22,\x22oe.'+'yamagata.j'+'p\x22,\x22oguni.'+'yamagata.j'+'p\x22,\x22ohkura'+'.yamagata.'+'jp\x22,\x22oishi'+'da.yamagat'+'a.jp\x22,\x22sag'+'ae.yamagat'+'a.jp\x22,\x22sak'+'ata.yamaga'+'ta.jp\x22,\x22sa'+'kegawa.yam'+'agata.jp\x22,'+'\x22shinjo.ya'+'magata.jp\x22'+',\x22shiratak'+'a.yamagata'+'.jp\x22,\x22shon'+'ai.yamagat'+'a.jp\x22,\x22tak'+'ahata.yama'+'gata.jp\x22,\x22'+'tendo.yama'+'gata.jp\x22,\x22'+'tozawa.yam'+'agata.jp\x22,')+('\x22tsuruoka.'+'yamagata.j'+'p\x22,\x22yamaga'+'ta.yamagat'+'a.jp\x22,\x22yam'+'anobe.yama'+'gata.jp\x22,\x22'+'yonezawa.y'+'amagata.jp'+'\x22,\x22yuza.ya'+'magata.jp\x22'+',\x22abu.yama'+'guchi.jp\x22,'+'\x22hagi.yama'+'guchi.jp\x22,'+'\x22hikari.ya'+'maguchi.jp'+'\x22,\x22hofu.ya'+'maguchi.jp'+'\x22,\x22iwakuni'+'.yamaguchi'+'.jp\x22,\x22kuda'+'matsu.yama'+'guchi.jp\x22,'+'\x22mitou.yam'+'aguchi.jp\x22'+',\x22nagato.y'+'amaguchi.j'+'p\x22,\x22oshima'+'.yamaguchi'+'.jp\x22,\x22shim'+'onoseki.ya'+'maguchi.jp'+'\x22,\x22shunan.'+'yamaguchi.'+'jp\x22,\x22tabus'+'e.yamaguch'+'i.jp\x22,\x22tok'+'uyama.yama'+'guchi.jp\x22,'+'\x22toyota.ya'+'maguchi.jp'+'\x22,\x22ube.yam'+'aguchi.jp\x22'+',\x22yuu.yama'+'guchi.jp\x22,'+'\x22chuo.yama'+'nashi.jp\x22,'+'\x22doshi.yam'+'anashi.jp\x22'+',\x22fuefuki.'+'yamanashi.'+'jp\x22,\x22fujik'+'awa.yamana'+'shi.jp\x22,\x22f'+'ujikawaguc'+'hiko.yaman'+'ashi.jp\x22,\x22'+'fujiyoshid'+'a.yamanash'+'i.jp\x22,\x22hay'+'akawa.yama'+'nashi.jp\x22,'+'\x22hokuto.ya'+'manashi.jp'+'\x22,\x22ichikaw'+'amisato.ya'+'manashi.jp'+'\x22,\x22kai.yam'+'anashi.jp\x22'+',\x22kofu.yam'+'anashi.jp\x22'+',\x22koshu.ya'+'manashi.jp'+'\x22,\x22kosuge.'+'yamanashi.'+'jp\x22,\x22minam'+'i-alps.yam'+'anashi.jp\x22'+',\x22minobu.y'+'amanashi.j'+'p\x22,\x22nakami'+'chi.yamana'+'shi.jp\x22,\x22n'+'anbu.yaman'+'ashi.jp\x22,\x22'+'narusawa.y'+'amanashi.j'+'p\x22,\x22nirasa'+'ki.yamanas'+'hi.jp\x22,\x22ni'+'shikatsura'+'.yamanashi'+'.jp\x22,\x22oshi'+'no.yamanas'+'hi.jp\x22,\x22ot'+'suki.yaman'+'ashi.jp\x22,\x22'+'showa.yama'+'nashi.jp\x22,')+('\x22tabayama.'+'yamanashi.'+'jp\x22,\x22tsuru'+'.yamanashi'+'.jp\x22,\x22ueno'+'hara.yaman'+'ashi.jp\x22,\x22'+'yamanakako'+'.yamanashi'+'.jp\x22,\x22yama'+'nashi.yama'+'nashi.jp\x22,'+'\x22ke\x22,\x22ac.k'+'e\x22,\x22co.ke\x22'+',\x22go.ke\x22,\x22'+'info.ke\x22,\x22'+'me.ke\x22,\x22mo'+'bi.ke\x22,\x22ne'+'.ke\x22,\x22or.k'+'e\x22,\x22sc.ke\x22'+',\x22kg\x22,\x22org'+'.kg\x22,\x22net.'+'kg\x22,\x22com.k'+'g\x22,\x22edu.kg'+'\x22,\x22gov.kg\x22'+',\x22mil.kg\x22,'+'\x22*.kh\x22,\x22ki'+'\x22,\x22edu.ki\x22'+',\x22biz.ki\x22,'+'\x22net.ki\x22,\x22'+'org.ki\x22,\x22g'+'ov.ki\x22,\x22in'+'fo.ki\x22,\x22co'+'m.ki\x22,\x22km\x22'+',\x22org.km\x22,'+'\x22nom.km\x22,\x22'+'gov.km\x22,\x22p'+'rd.km\x22,\x22tm'+'.km\x22,\x22edu.'+'km\x22,\x22mil.k'+'m\x22,\x22ass.km'+'\x22,\x22com.km\x22'+',\x22coop.km\x22'+',\x22asso.km\x22'+',\x22presse.k'+'m\x22,\x22medeci'+'n.km\x22,\x22not'+'aires.km\x22,'+'\x22pharmacie'+'ns.km\x22,\x22ve'+'terinaire.'+'km\x22,\x22gouv.'+'km\x22,\x22kn\x22,\x22'+'net.kn\x22,\x22o'+'rg.kn\x22,\x22ed'+'u.kn\x22,\x22gov'+'.kn\x22,\x22kp\x22,'+'\x22com.kp\x22,\x22'+'edu.kp\x22,\x22g'+'ov.kp\x22,\x22or'+'g.kp\x22,\x22rep'+'.kp\x22,\x22tra.'+'kp\x22,\x22kr\x22,\x22'+'ac.kr\x22,\x22co'+'.kr\x22,\x22es.k'+'r\x22,\x22go.kr\x22'+',\x22hs.kr\x22,\x22'+'kg.kr\x22,\x22mi'+'l.kr\x22,\x22ms.'+'kr\x22,\x22ne.kr'+'\x22,\x22or.kr\x22,'+'\x22pe.kr\x22,\x22r'+'e.kr\x22,\x22sc.'+'kr\x22,\x22busan'+'.kr\x22,\x22chun'+'gbuk.kr\x22,\x22'+'chungnam.k'+'r\x22,\x22daegu.'+'kr\x22,\x22daeje'+'on.kr\x22,\x22ga'+'ngwon.kr\x22,'+'\x22gwangju.k'+'r\x22,\x22gyeong'+'buk.kr\x22,\x22g'+'yeonggi.kr'+'\x22,\x22gyeongn'+'am.kr\x22,\x22in'+'cheon.kr\x22,'+'\x22jeju.kr\x22,'+'\x22jeonbuk.k'+'r\x22,\x22jeonna'+'m.kr\x22,\x22seo'+'ul.kr\x22,\x22ul'+'san.kr\x22,\x22k'+'w\x22,\x22com.kw'+'\x22,\x22edu.kw\x22'+',\x22emb.kw\x22,'+'\x22gov.kw\x22,\x22'+'ind.kw\x22,\x22n'+'et.kw\x22,\x22or')+('g.kw\x22,\x22ky\x22'+',\x22edu.ky\x22,'+'\x22gov.ky\x22,\x22'+'com.ky\x22,\x22o'+'rg.ky\x22,\x22ne'+'t.ky\x22,\x22kz\x22'+',\x22org.kz\x22,'+'\x22edu.kz\x22,\x22'+'net.kz\x22,\x22g'+'ov.kz\x22,\x22mi'+'l.kz\x22,\x22com'+'.kz\x22,\x22la\x22,'+'\x22int.la\x22,\x22'+'net.la\x22,\x22i'+'nfo.la\x22,\x22e'+'du.la\x22,\x22go'+'v.la\x22,\x22per'+'.la\x22,\x22com.'+'la\x22,\x22org.l'+'a\x22,\x22lb\x22,\x22c'+'om.lb\x22,\x22ed'+'u.lb\x22,\x22gov'+'.lb\x22,\x22net.'+'lb\x22,\x22org.l'+'b\x22,\x22lc\x22,\x22c'+'om.lc\x22,\x22ne'+'t.lc\x22,\x22co.'+'lc\x22,\x22org.l'+'c\x22,\x22edu.lc'+'\x22,\x22gov.lc\x22'+',\x22li\x22,\x22lk\x22'+',\x22gov.lk\x22,'+'\x22sch.lk\x22,\x22'+'net.lk\x22,\x22i'+'nt.lk\x22,\x22co'+'m.lk\x22,\x22org'+'.lk\x22,\x22edu.'+'lk\x22,\x22ngo.l'+'k\x22,\x22soc.lk'+'\x22,\x22web.lk\x22'+',\x22ltd.lk\x22,'+'\x22assn.lk\x22,'+'\x22grp.lk\x22,\x22'+'hotel.lk\x22,'+'\x22ac.lk\x22,\x22l'+'r\x22,\x22com.lr'+'\x22,\x22edu.lr\x22'+',\x22gov.lr\x22,'+'\x22org.lr\x22,\x22'+'net.lr\x22,\x22l'+'s\x22,\x22ac.ls\x22'+',\x22biz.ls\x22,'+'\x22co.ls\x22,\x22e'+'du.ls\x22,\x22go'+'v.ls\x22,\x22inf'+'o.ls\x22,\x22net'+'.ls\x22,\x22org.'+'ls\x22,\x22sc.ls'+'\x22,\x22lt\x22,\x22go'+'v.lt\x22,\x22lu\x22'+',\x22lv\x22,\x22com'+'.lv\x22,\x22edu.'+'lv\x22,\x22gov.l'+'v\x22,\x22org.lv'+'\x22,\x22mil.lv\x22'+',\x22id.lv\x22,\x22'+'net.lv\x22,\x22a'+'sn.lv\x22,\x22co'+'nf.lv\x22,\x22ly'+'\x22,\x22com.ly\x22'+',\x22net.ly\x22,'+'\x22gov.ly\x22,\x22'+'plc.ly\x22,\x22e'+'du.ly\x22,\x22sc'+'h.ly\x22,\x22med'+'.ly\x22,\x22org.'+'ly\x22,\x22id.ly'+'\x22,\x22ma\x22,\x22co'+'.ma\x22,\x22net.'+'ma\x22,\x22gov.m'+'a\x22,\x22org.ma'+'\x22,\x22ac.ma\x22,'+'\x22press.ma\x22'+',\x22mc\x22,\x22tm.'+'mc\x22,\x22asso.'+'mc\x22,\x22md\x22,\x22'+'me\x22,\x22co.me'+'\x22,\x22net.me\x22'+',\x22org.me\x22,'+'\x22edu.me\x22,\x22'+'ac.me\x22,\x22go'+'v.me\x22,\x22its'+'.me\x22,\x22priv'+'.me\x22,\x22mg\x22,'+'\x22org.mg\x22,\x22'+'nom.mg\x22,\x22g'+'ov.mg\x22,\x22pr'+'d.mg\x22,\x22tm.'+'mg\x22,\x22edu.m'+'g\x22,\x22mil.mg')+('\x22,\x22com.mg\x22'+',\x22co.mg\x22,\x22'+'mh\x22,\x22mil\x22,'+'\x22mk\x22,\x22com.'+'mk\x22,\x22org.m'+'k\x22,\x22net.mk'+'\x22,\x22edu.mk\x22'+',\x22gov.mk\x22,'+'\x22inf.mk\x22,\x22'+'name.mk\x22,\x22'+'ml\x22,\x22com.m'+'l\x22,\x22edu.ml'+'\x22,\x22gouv.ml'+'\x22,\x22gov.ml\x22'+',\x22net.ml\x22,'+'\x22org.ml\x22,\x22'+'presse.ml\x22'+',\x22*.mm\x22,\x22m'+'n\x22,\x22gov.mn'+'\x22,\x22edu.mn\x22'+',\x22org.mn\x22,'+'\x22mo\x22,\x22com.'+'mo\x22,\x22net.m'+'o\x22,\x22org.mo'+'\x22,\x22edu.mo\x22'+',\x22gov.mo\x22,'+'\x22mobi\x22,\x22mp'+'\x22,\x22mq\x22,\x22mr'+'\x22,\x22gov.mr\x22'+',\x22ms\x22,\x22com'+'.ms\x22,\x22edu.'+'ms\x22,\x22gov.m'+'s\x22,\x22net.ms'+'\x22,\x22org.ms\x22'+',\x22mt\x22,\x22com'+'.mt\x22,\x22edu.'+'mt\x22,\x22net.m'+'t\x22,\x22org.mt'+'\x22,\x22mu\x22,\x22co'+'m.mu\x22,\x22net'+'.mu\x22,\x22org.'+'mu\x22,\x22gov.m'+'u\x22,\x22ac.mu\x22'+',\x22co.mu\x22,\x22'+'or.mu\x22,\x22mu'+'seum\x22,\x22aca'+'demy.museu'+'m\x22,\x22agricu'+'lture.muse'+'um\x22,\x22air.m'+'useum\x22,\x22ai'+'rguard.mus'+'eum\x22,\x22alab'+'ama.museum'+'\x22,\x22alaska.'+'museum\x22,\x22a'+'mber.museu'+'m\x22,\x22ambula'+'nce.museum'+'\x22,\x22america'+'n.museum\x22,'+'\x22americana'+'.museum\x22,\x22'+'americanan'+'tiques.mus'+'eum\x22,\x22amer'+'icanart.mu'+'seum\x22,\x22ams'+'terdam.mus'+'eum\x22,\x22and.'+'museum\x22,\x22a'+'nnefrank.m'+'useum\x22,\x22an'+'thro.museu'+'m\x22,\x22anthro'+'pology.mus'+'eum\x22,\x22anti'+'ques.museu'+'m\x22,\x22aquari'+'um.museum\x22'+',\x22arboretu'+'m.museum\x22,'+'\x22archaeolo'+'gical.muse'+'um\x22,\x22archa'+'eology.mus'+'eum\x22,\x22arch'+'itecture.m'+'useum\x22,\x22ar'+'t.museum\x22,'+'\x22artanddes'+'ign.museum'+'\x22,\x22artcent'+'er.museum\x22'+',\x22artdeco.'+'museum\x22,\x22a'+'rteducatio'+'n.museum\x22,'+'\x22artgaller'+'y.museum\x22,')+('\x22arts.muse'+'um\x22,\x22artsa'+'ndcrafts.m'+'useum\x22,\x22as'+'matart.mus'+'eum\x22,\x22assa'+'ssination.'+'museum\x22,\x22a'+'ssisi.muse'+'um\x22,\x22assoc'+'iation.mus'+'eum\x22,\x22astr'+'onomy.muse'+'um\x22,\x22atlan'+'ta.museum\x22'+',\x22austin.m'+'useum\x22,\x22au'+'stralia.mu'+'seum\x22,\x22aut'+'omotive.mu'+'seum\x22,\x22avi'+'ation.muse'+'um\x22,\x22axis.'+'museum\x22,\x22b'+'adajoz.mus'+'eum\x22,\x22bagh'+'dad.museum'+'\x22,\x22bahn.mu'+'seum\x22,\x22bal'+'e.museum\x22,'+'\x22baltimore'+'.museum\x22,\x22'+'barcelona.'+'museum\x22,\x22b'+'aseball.mu'+'seum\x22,\x22bas'+'el.museum\x22'+',\x22baths.mu'+'seum\x22,\x22bau'+'ern.museum'+'\x22,\x22beauxar'+'ts.museum\x22'+',\x22beeldeng'+'eluid.muse'+'um\x22,\x22belle'+'vue.museum'+'\x22,\x22bergbau'+'.museum\x22,\x22'+'berkeley.m'+'useum\x22,\x22be'+'rlin.museu'+'m\x22,\x22bern.m'+'useum\x22,\x22bi'+'ble.museum'+'\x22,\x22bilbao.'+'museum\x22,\x22b'+'ill.museum'+'\x22,\x22birdart'+'.museum\x22,\x22'+'birthplace'+'.museum\x22,\x22'+'bonn.museu'+'m\x22,\x22boston'+'.museum\x22,\x22'+'botanical.'+'museum\x22,\x22b'+'otanicalga'+'rden.museu'+'m\x22,\x22botani'+'cgarden.mu'+'seum\x22,\x22bot'+'any.museum'+'\x22,\x22brandyw'+'inevalley.'+'museum\x22,\x22b'+'rasil.muse'+'um\x22,\x22brist'+'ol.museum\x22'+',\x22british.'+'museum\x22,\x22b'+'ritishcolu'+'mbia.museu'+'m\x22,\x22broadc'+'ast.museum'+'\x22,\x22brunel.'+'museum\x22,\x22b'+'russel.mus'+'eum\x22,\x22brus'+'sels.museu'+'m\x22,\x22bruxel'+'les.museum'+'\x22,\x22buildin'+'g.museum\x22,'+'\x22burghof.m'+'useum\x22,\x22bu'+'s.museum\x22,'+'\x22bushey.mu'+'seum\x22,\x22cad'+'aques.muse'+'um\x22,\x22calif')+('ornia.muse'+'um\x22,\x22cambr'+'idge.museu'+'m\x22,\x22can.mu'+'seum\x22,\x22can'+'ada.museum'+'\x22,\x22capebre'+'ton.museum'+'\x22,\x22carrier'+'.museum\x22,\x22'+'cartoonart'+'.museum\x22,\x22'+'casadelamo'+'neda.museu'+'m\x22,\x22castle'+'.museum\x22,\x22'+'castres.mu'+'seum\x22,\x22cel'+'tic.museum'+'\x22,\x22center.'+'museum\x22,\x22c'+'hattanooga'+'.museum\x22,\x22'+'cheltenham'+'.museum\x22,\x22'+'chesapeake'+'bay.museum'+'\x22,\x22chicago'+'.museum\x22,\x22'+'children.m'+'useum\x22,\x22ch'+'ildrens.mu'+'seum\x22,\x22chi'+'ldrensgard'+'en.museum\x22'+',\x22chiropra'+'ctic.museu'+'m\x22,\x22chocol'+'ate.museum'+'\x22,\x22christi'+'ansburg.mu'+'seum\x22,\x22cin'+'cinnati.mu'+'seum\x22,\x22cin'+'ema.museum'+'\x22,\x22circus.'+'museum\x22,\x22c'+'ivilisatio'+'n.museum\x22,'+'\x22civilizat'+'ion.museum'+'\x22,\x22civilwa'+'r.museum\x22,'+'\x22clinton.m'+'useum\x22,\x22cl'+'ock.museum'+'\x22,\x22coal.mu'+'seum\x22,\x22coa'+'staldefenc'+'e.museum\x22,'+'\x22cody.muse'+'um\x22,\x22coldw'+'ar.museum\x22'+',\x22collecti'+'on.museum\x22'+',\x22colonial'+'williamsbu'+'rg.museum\x22'+',\x22colorado'+'plateau.mu'+'seum\x22,\x22col'+'umbia.muse'+'um\x22,\x22colum'+'bus.museum'+'\x22,\x22communi'+'cation.mus'+'eum\x22,\x22comm'+'unications'+'.museum\x22,\x22'+'community.'+'museum\x22,\x22c'+'omputer.mu'+'seum\x22,\x22com'+'puterhisto'+'ry.museum\x22'+',\x22comunica'+'ções.museu'+'m\x22,\x22contem'+'porary.mus'+'eum\x22,\x22cont'+'emporaryar'+'t.museum\x22,'+'\x22convent.m'+'useum\x22,\x22co'+'penhagen.m'+'useum\x22,\x22co'+'rporation.'+'museum\x22,\x22c'+'orreios-e-'+'telecomuni')+('cações.mus'+'eum\x22,\x22corv'+'ette.museu'+'m\x22,\x22costum'+'e.museum\x22,'+'\x22countryes'+'tate.museu'+'m\x22,\x22county'+'.museum\x22,\x22'+'crafts.mus'+'eum\x22,\x22cran'+'brook.muse'+'um\x22,\x22creat'+'ion.museum'+'\x22,\x22cultura'+'l.museum\x22,'+'\x22culturalc'+'enter.muse'+'um\x22,\x22cultu'+'re.museum\x22'+',\x22cyber.mu'+'seum\x22,\x22cym'+'ru.museum\x22'+',\x22dali.mus'+'eum\x22,\x22dall'+'as.museum\x22'+',\x22database'+'.museum\x22,\x22'+'ddr.museum'+'\x22,\x22decorat'+'ivearts.mu'+'seum\x22,\x22del'+'aware.muse'+'um\x22,\x22delme'+'nhorst.mus'+'eum\x22,\x22denm'+'ark.museum'+'\x22,\x22depot.m'+'useum\x22,\x22de'+'sign.museu'+'m\x22,\x22detroi'+'t.museum\x22,'+'\x22dinosaur.'+'museum\x22,\x22d'+'iscovery.m'+'useum\x22,\x22do'+'lls.museum'+'\x22,\x22donosti'+'a.museum\x22,'+'\x22durham.mu'+'seum\x22,\x22eas'+'tafrica.mu'+'seum\x22,\x22eas'+'tcoast.mus'+'eum\x22,\x22educ'+'ation.muse'+'um\x22,\x22educa'+'tional.mus'+'eum\x22,\x22egyp'+'tian.museu'+'m\x22,\x22eisenb'+'ahn.museum'+'\x22,\x22elburg.'+'museum\x22,\x22e'+'lvendrell.'+'museum\x22,\x22e'+'mbroidery.'+'museum\x22,\x22e'+'ncyclopedi'+'c.museum\x22,'+'\x22england.m'+'useum\x22,\x22en'+'tomology.m'+'useum\x22,\x22en'+'vironment.'+'museum\x22,\x22e'+'nvironment'+'alconserva'+'tion.museu'+'m\x22,\x22epilep'+'sy.museum\x22'+',\x22essex.mu'+'seum\x22,\x22est'+'ate.museum'+'\x22,\x22ethnolo'+'gy.museum\x22'+',\x22exeter.m'+'useum\x22,\x22ex'+'hibition.m'+'useum\x22,\x22fa'+'mily.museu'+'m\x22,\x22farm.m'+'useum\x22,\x22fa'+'rmequipmen'+'t.museum\x22,'+'\x22farmers.m'+'useum\x22,\x22fa'+'rmstead.mu'+'seum\x22,\x22fie'+'ld.museum\x22')+(',\x22figueres'+'.museum\x22,\x22'+'filatelia.'+'museum\x22,\x22f'+'ilm.museum'+'\x22,\x22fineart'+'.museum\x22,\x22'+'finearts.m'+'useum\x22,\x22fi'+'nland.muse'+'um\x22,\x22fland'+'ers.museum'+'\x22,\x22florida'+'.museum\x22,\x22'+'force.muse'+'um\x22,\x22fortm'+'issoula.mu'+'seum\x22,\x22for'+'tworth.mus'+'eum\x22,\x22foun'+'dation.mus'+'eum\x22,\x22fran'+'caise.muse'+'um\x22,\x22frank'+'furt.museu'+'m\x22,\x22franzi'+'skaner.mus'+'eum\x22,\x22free'+'masonry.mu'+'seum\x22,\x22fre'+'iburg.muse'+'um\x22,\x22fribo'+'urg.museum'+'\x22,\x22frog.mu'+'seum\x22,\x22fun'+'dacio.muse'+'um\x22,\x22furni'+'ture.museu'+'m\x22,\x22galler'+'y.museum\x22,'+'\x22garden.mu'+'seum\x22,\x22gat'+'eway.museu'+'m\x22,\x22geelvi'+'nck.museum'+'\x22,\x22gemolog'+'ical.museu'+'m\x22,\x22geolog'+'y.museum\x22,'+'\x22georgia.m'+'useum\x22,\x22gi'+'essen.muse'+'um\x22,\x22glas.'+'museum\x22,\x22g'+'lass.museu'+'m\x22,\x22gorge.'+'museum\x22,\x22g'+'randrapids'+'.museum\x22,\x22'+'graz.museu'+'m\x22,\x22guerns'+'ey.museum\x22'+',\x22halloffa'+'me.museum\x22'+',\x22hamburg.'+'museum\x22,\x22h'+'andson.mus'+'eum\x22,\x22harv'+'estcelebra'+'tion.museu'+'m\x22,\x22hawaii'+'.museum\x22,\x22'+'health.mus'+'eum\x22,\x22heim'+'atunduhren'+'.museum\x22,\x22'+'hellas.mus'+'eum\x22,\x22hels'+'inki.museu'+'m\x22,\x22hembyg'+'dsforbund.'+'museum\x22,\x22h'+'eritage.mu'+'seum\x22,\x22his'+'toire.muse'+'um\x22,\x22histo'+'rical.muse'+'um\x22,\x22histo'+'ricalsocie'+'ty.museum\x22'+',\x22historic'+'houses.mus'+'eum\x22,\x22hist'+'orisch.mus'+'eum\x22,\x22hist'+'orisches.m'+'useum\x22,\x22hi'+'story.muse'+'um\x22,\x22histo'+'ryofscienc')+('e.museum\x22,'+'\x22horology.'+'museum\x22,\x22h'+'ouse.museu'+'m\x22,\x22humani'+'ties.museu'+'m\x22,\x22illust'+'ration.mus'+'eum\x22,\x22imag'+'eandsound.'+'museum\x22,\x22i'+'ndian.muse'+'um\x22,\x22india'+'na.museum\x22'+',\x22indianap'+'olis.museu'+'m\x22,\x22indian'+'market.mus'+'eum\x22,\x22inte'+'lligence.m'+'useum\x22,\x22in'+'teractive.'+'museum\x22,\x22i'+'raq.museum'+'\x22,\x22iron.mu'+'seum\x22,\x22isl'+'eofman.mus'+'eum\x22,\x22jami'+'son.museum'+'\x22,\x22jeffers'+'on.museum\x22'+',\x22jerusale'+'m.museum\x22,'+'\x22jewelry.m'+'useum\x22,\x22je'+'wish.museu'+'m\x22,\x22jewish'+'art.museum'+'\x22,\x22jfk.mus'+'eum\x22,\x22jour'+'nalism.mus'+'eum\x22,\x22juda'+'ica.museum'+'\x22,\x22judygar'+'land.museu'+'m\x22,\x22juedis'+'ches.museu'+'m\x22,\x22juif.m'+'useum\x22,\x22ka'+'rate.museu'+'m\x22,\x22karika'+'tur.museum'+'\x22,\x22kids.mu'+'seum\x22,\x22koe'+'benhavn.mu'+'seum\x22,\x22koe'+'ln.museum\x22'+',\x22kunst.mu'+'seum\x22,\x22kun'+'stsammlung'+'.museum\x22,\x22'+'kunstundde'+'sign.museu'+'m\x22,\x22labor.'+'museum\x22,\x22l'+'abour.muse'+'um\x22,\x22lajol'+'la.museum\x22'+',\x22lancashi'+'re.museum\x22'+',\x22landes.m'+'useum\x22,\x22la'+'ns.museum\x22'+',\x22läns.mus'+'eum\x22,\x22lars'+'son.museum'+'\x22,\x22lewismi'+'ller.museu'+'m\x22,\x22lincol'+'n.museum\x22,'+'\x22linz.muse'+'um\x22,\x22livin'+'g.museum\x22,'+'\x22livinghis'+'tory.museu'+'m\x22,\x22localh'+'istory.mus'+'eum\x22,\x22lond'+'on.museum\x22'+',\x22losangel'+'es.museum\x22'+',\x22louvre.m'+'useum\x22,\x22lo'+'yalist.mus'+'eum\x22,\x22luce'+'rne.museum'+'\x22,\x22luxembo'+'urg.museum'+'\x22,\x22luzern.'+'museum\x22,\x22m')+('ad.museum\x22'+',\x22madrid.m'+'useum\x22,\x22ma'+'llorca.mus'+'eum\x22,\x22manc'+'hester.mus'+'eum\x22,\x22mans'+'ion.museum'+'\x22,\x22mansion'+'s.museum\x22,'+'\x22manx.muse'+'um\x22,\x22marbu'+'rg.museum\x22'+',\x22maritime'+'.museum\x22,\x22'+'maritimo.m'+'useum\x22,\x22ma'+'ryland.mus'+'eum\x22,\x22mary'+'lhurst.mus'+'eum\x22,\x22medi'+'a.museum\x22,'+'\x22medical.m'+'useum\x22,\x22me'+'dizinhisto'+'risches.mu'+'seum\x22,\x22mee'+'res.museum'+'\x22,\x22memoria'+'l.museum\x22,'+'\x22mesaverde'+'.museum\x22,\x22'+'michigan.m'+'useum\x22,\x22mi'+'datlantic.'+'museum\x22,\x22m'+'ilitary.mu'+'seum\x22,\x22mil'+'l.museum\x22,'+'\x22miners.mu'+'seum\x22,\x22min'+'ing.museum'+'\x22,\x22minneso'+'ta.museum\x22'+',\x22missile.'+'museum\x22,\x22m'+'issoula.mu'+'seum\x22,\x22mod'+'ern.museum'+'\x22,\x22moma.mu'+'seum\x22,\x22mon'+'ey.museum\x22'+',\x22monmouth'+'.museum\x22,\x22'+'monticello'+'.museum\x22,\x22'+'montreal.m'+'useum\x22,\x22mo'+'scow.museu'+'m\x22,\x22motorc'+'ycle.museu'+'m\x22,\x22muench'+'en.museum\x22'+',\x22muenster'+'.museum\x22,\x22'+'mulhouse.m'+'useum\x22,\x22mu'+'ncie.museu'+'m\x22,\x22museet'+'.museum\x22,\x22'+'museumcent'+'er.museum\x22'+',\x22museumve'+'reniging.m'+'useum\x22,\x22mu'+'sic.museum'+'\x22,\x22nationa'+'l.museum\x22,'+'\x22nationalf'+'irearms.mu'+'seum\x22,\x22nat'+'ionalherit'+'age.museum'+'\x22,\x22nativea'+'merican.mu'+'seum\x22,\x22nat'+'uralhistor'+'y.museum\x22,'+'\x22naturalhi'+'storymuseu'+'m.museum\x22,'+'\x22naturalsc'+'iences.mus'+'eum\x22,\x22natu'+'re.museum\x22'+',\x22naturhis'+'torisches.'+'museum\x22,\x22n'+'atuurweten'+'schappen.m')+('useum\x22,\x22na'+'umburg.mus'+'eum\x22,\x22nava'+'l.museum\x22,'+'\x22nebraska.'+'museum\x22,\x22n'+'eues.museu'+'m\x22,\x22newham'+'pshire.mus'+'eum\x22,\x22newj'+'ersey.muse'+'um\x22,\x22newme'+'xico.museu'+'m\x22,\x22newpor'+'t.museum\x22,'+'\x22newspaper'+'.museum\x22,\x22'+'newyork.mu'+'seum\x22,\x22nie'+'pce.museum'+'\x22,\x22norfolk'+'.museum\x22,\x22'+'north.muse'+'um\x22,\x22nrw.m'+'useum\x22,\x22ny'+'c.museum\x22,'+'\x22nyny.muse'+'um\x22,\x22ocean'+'ographic.m'+'useum\x22,\x22oc'+'eanographi'+'que.museum'+'\x22,\x22omaha.m'+'useum\x22,\x22on'+'line.museu'+'m\x22,\x22ontari'+'o.museum\x22,'+'\x22openair.m'+'useum\x22,\x22or'+'egon.museu'+'m\x22,\x22oregon'+'trail.muse'+'um\x22,\x22otago'+'.museum\x22,\x22'+'oxford.mus'+'eum\x22,\x22paci'+'fic.museum'+'\x22,\x22paderbo'+'rn.museum\x22'+',\x22palace.m'+'useum\x22,\x22pa'+'leo.museum'+'\x22,\x22palmspr'+'ings.museu'+'m\x22,\x22panama'+'.museum\x22,\x22'+'paris.muse'+'um\x22,\x22pasad'+'ena.museum'+'\x22,\x22pharmac'+'y.museum\x22,'+'\x22philadelp'+'hia.museum'+'\x22,\x22philade'+'lphiaarea.'+'museum\x22,\x22p'+'hilately.m'+'useum\x22,\x22ph'+'oenix.muse'+'um\x22,\x22photo'+'graphy.mus'+'eum\x22,\x22pilo'+'ts.museum\x22'+',\x22pittsbur'+'gh.museum\x22'+',\x22planetar'+'ium.museum'+'\x22,\x22plantat'+'ion.museum'+'\x22,\x22plants.'+'museum\x22,\x22p'+'laza.museu'+'m\x22,\x22portal'+'.museum\x22,\x22'+'portland.m'+'useum\x22,\x22po'+'rtlligat.m'+'useum\x22,\x22po'+'sts-and-te'+'lecommunic'+'ations.mus'+'eum\x22,\x22pres'+'ervation.m'+'useum\x22,\x22pr'+'esidio.mus'+'eum\x22,\x22pres'+'s.museum\x22,'+'\x22project.m'+'useum\x22,\x22pu'+'blic.museu')+('m\x22,\x22pubol.'+'museum\x22,\x22q'+'uebec.muse'+'um\x22,\x22railr'+'oad.museum'+'\x22,\x22railway'+'.museum\x22,\x22'+'research.m'+'useum\x22,\x22re'+'sistance.m'+'useum\x22,\x22ri'+'odejaneiro'+'.museum\x22,\x22'+'rochester.'+'museum\x22,\x22r'+'ockart.mus'+'eum\x22,\x22roma'+'.museum\x22,\x22'+'russia.mus'+'eum\x22,\x22sain'+'tlouis.mus'+'eum\x22,\x22sale'+'m.museum\x22,'+'\x22salvadord'+'ali.museum'+'\x22,\x22salzbur'+'g.museum\x22,'+'\x22sandiego.'+'museum\x22,\x22s'+'anfrancisc'+'o.museum\x22,'+'\x22santabarb'+'ara.museum'+'\x22,\x22santacr'+'uz.museum\x22'+',\x22santafe.'+'museum\x22,\x22s'+'askatchewa'+'n.museum\x22,'+'\x22satx.muse'+'um\x22,\x22savan'+'nahga.muse'+'um\x22,\x22schle'+'sisches.mu'+'seum\x22,\x22sch'+'oenbrunn.m'+'useum\x22,\x22sc'+'hokoladen.'+'museum\x22,\x22s'+'chool.muse'+'um\x22,\x22schwe'+'iz.museum\x22'+',\x22science.'+'museum\x22,\x22s'+'cienceandh'+'istory.mus'+'eum\x22,\x22scie'+'nceandindu'+'stry.museu'+'m\x22,\x22scienc'+'ecenter.mu'+'seum\x22,\x22sci'+'encecenter'+'s.museum\x22,'+'\x22science-f'+'iction.mus'+'eum\x22,\x22scie'+'ncehistory'+'.museum\x22,\x22'+'sciences.m'+'useum\x22,\x22sc'+'iencesnatu'+'relles.mus'+'eum\x22,\x22scot'+'land.museu'+'m\x22,\x22seapor'+'t.museum\x22,'+'\x22settlemen'+'t.museum\x22,'+'\x22settlers.'+'museum\x22,\x22s'+'hell.museu'+'m\x22,\x22sherbr'+'ooke.museu'+'m\x22,\x22sibeni'+'k.museum\x22,'+'\x22silk.muse'+'um\x22,\x22ski.m'+'useum\x22,\x22sk'+'ole.museum'+'\x22,\x22society'+'.museum\x22,\x22'+'sologne.mu'+'seum\x22,\x22sou'+'ndandvisio'+'n.museum\x22,'+'\x22southcaro'+'lina.museu'+'m\x22,\x22southw'+'est.museum')+('\x22,\x22space.m'+'useum\x22,\x22sp'+'y.museum\x22,'+'\x22square.mu'+'seum\x22,\x22sta'+'dt.museum\x22'+',\x22stalbans'+'.museum\x22,\x22'+'starnberg.'+'museum\x22,\x22s'+'tate.museu'+'m\x22,\x22stateo'+'fdelaware.'+'museum\x22,\x22s'+'tation.mus'+'eum\x22,\x22stea'+'m.museum\x22,'+'\x22steiermar'+'k.museum\x22,'+'\x22stjohn.mu'+'seum\x22,\x22sto'+'ckholm.mus'+'eum\x22,\x22stpe'+'tersburg.m'+'useum\x22,\x22st'+'uttgart.mu'+'seum\x22,\x22sui'+'sse.museum'+'\x22,\x22surgeon'+'shall.muse'+'um\x22,\x22surre'+'y.museum\x22,'+'\x22svizzera.'+'museum\x22,\x22s'+'weden.muse'+'um\x22,\x22sydne'+'y.museum\x22,'+'\x22tank.muse'+'um\x22,\x22tcm.m'+'useum\x22,\x22te'+'chnology.m'+'useum\x22,\x22te'+'lekommunik'+'ation.muse'+'um\x22,\x22telev'+'ision.muse'+'um\x22,\x22texas'+'.museum\x22,\x22'+'textile.mu'+'seum\x22,\x22the'+'ater.museu'+'m\x22,\x22time.m'+'useum\x22,\x22ti'+'mekeeping.'+'museum\x22,\x22t'+'opology.mu'+'seum\x22,\x22tor'+'ino.museum'+'\x22,\x22touch.m'+'useum\x22,\x22to'+'wn.museum\x22'+',\x22transpor'+'t.museum\x22,'+'\x22tree.muse'+'um\x22,\x22troll'+'ey.museum\x22'+',\x22trust.mu'+'seum\x22,\x22tru'+'stee.museu'+'m\x22,\x22uhren.'+'museum\x22,\x22u'+'lm.museum\x22'+',\x22undersea'+'.museum\x22,\x22'+'university'+'.museum\x22,\x22'+'usa.museum'+'\x22,\x22usantiq'+'ues.museum'+'\x22,\x22usarts.'+'museum\x22,\x22u'+'scountryes'+'tate.museu'+'m\x22,\x22uscult'+'ure.museum'+'\x22,\x22usdecor'+'ativearts.'+'museum\x22,\x22u'+'sgarden.mu'+'seum\x22,\x22ush'+'istory.mus'+'eum\x22,\x22ushu'+'aia.museum'+'\x22,\x22uslivin'+'ghistory.m'+'useum\x22,\x22ut'+'ah.museum\x22'+',\x22uvic.mus'+'eum\x22,\x22vall'+'ey.museum\x22')+(',\x22vantaa.m'+'useum\x22,\x22ve'+'rsailles.m'+'useum\x22,\x22vi'+'king.museu'+'m\x22,\x22villag'+'e.museum\x22,'+'\x22virginia.'+'museum\x22,\x22v'+'irtual.mus'+'eum\x22,\x22virt'+'uel.museum'+'\x22,\x22vlaande'+'ren.museum'+'\x22,\x22volkenk'+'unde.museu'+'m\x22,\x22wales.'+'museum\x22,\x22w'+'allonie.mu'+'seum\x22,\x22war'+'.museum\x22,\x22'+'washington'+'dc.museum\x22'+',\x22watchand'+'clock.muse'+'um\x22,\x22watch'+'-and-clock'+'.museum\x22,\x22'+'western.mu'+'seum\x22,\x22wes'+'tfalen.mus'+'eum\x22,\x22whal'+'ing.museum'+'\x22,\x22wildlif'+'e.museum\x22,'+'\x22williamsb'+'urg.museum'+'\x22,\x22windmil'+'l.museum\x22,'+'\x22workshop.'+'museum\x22,\x22y'+'ork.museum'+'\x22,\x22yorkshi'+'re.museum\x22'+',\x22yosemite'+'.museum\x22,\x22'+'youth.muse'+'um\x22,\x22zoolo'+'gical.muse'+'um\x22,\x22zoolo'+'gy.museum\x22'+',\x22ירושלים.'+'museum\x22,\x22и'+'ком.museum'+'\x22,\x22mv\x22,\x22ae'+'ro.mv\x22,\x22bi'+'z.mv\x22,\x22com'+'.mv\x22,\x22coop'+'.mv\x22,\x22edu.'+'mv\x22,\x22gov.m'+'v\x22,\x22info.m'+'v\x22,\x22int.mv'+'\x22,\x22mil.mv\x22'+',\x22museum.m'+'v\x22,\x22name.m'+'v\x22,\x22net.mv'+'\x22,\x22org.mv\x22'+',\x22pro.mv\x22,'+'\x22mw\x22,\x22ac.m'+'w\x22,\x22biz.mw'+'\x22,\x22co.mw\x22,'+'\x22com.mw\x22,\x22'+'coop.mw\x22,\x22'+'edu.mw\x22,\x22g'+'ov.mw\x22,\x22in'+'t.mw\x22,\x22mus'+'eum.mw\x22,\x22n'+'et.mw\x22,\x22or'+'g.mw\x22,\x22mx\x22'+',\x22com.mx\x22,'+'\x22org.mx\x22,\x22'+'gob.mx\x22,\x22e'+'du.mx\x22,\x22ne'+'t.mx\x22,\x22my\x22'+',\x22com.my\x22,'+'\x22net.my\x22,\x22'+'org.my\x22,\x22g'+'ov.my\x22,\x22ed'+'u.my\x22,\x22mil'+'.my\x22,\x22name'+'.my\x22,\x22mz\x22,'+'\x22ac.mz\x22,\x22a'+'dv.mz\x22,\x22co'+'.mz\x22,\x22edu.'+'mz\x22,\x22gov.m'+'z\x22,\x22mil.mz'+'\x22,\x22net.mz\x22'+',\x22org.mz\x22,'+'\x22na\x22,\x22info'+'.na\x22,\x22pro.')+('na\x22,\x22name.'+'na\x22,\x22schoo'+'l.na\x22,\x22or.'+'na\x22,\x22dr.na'+'\x22,\x22us.na\x22,'+'\x22mx.na\x22,\x22c'+'a.na\x22,\x22in.'+'na\x22,\x22cc.na'+'\x22,\x22tv.na\x22,'+'\x22ws.na\x22,\x22m'+'obi.na\x22,\x22c'+'o.na\x22,\x22com'+'.na\x22,\x22org.'+'na\x22,\x22name\x22'+',\x22nc\x22,\x22ass'+'o.nc\x22,\x22nom'+'.nc\x22,\x22ne\x22,'+'\x22net\x22,\x22nf\x22'+',\x22com.nf\x22,'+'\x22net.nf\x22,\x22'+'per.nf\x22,\x22r'+'ec.nf\x22,\x22we'+'b.nf\x22,\x22art'+'s.nf\x22,\x22fir'+'m.nf\x22,\x22inf'+'o.nf\x22,\x22oth'+'er.nf\x22,\x22st'+'ore.nf\x22,\x22n'+'g\x22,\x22com.ng'+'\x22,\x22edu.ng\x22'+',\x22gov.ng\x22,'+'\x22i.ng\x22,\x22mi'+'l.ng\x22,\x22mob'+'i.ng\x22,\x22nam'+'e.ng\x22,\x22net'+'.ng\x22,\x22org.'+'ng\x22,\x22sch.n'+'g\x22,\x22ni\x22,\x22a'+'c.ni\x22,\x22biz'+'.ni\x22,\x22co.n'+'i\x22,\x22com.ni'+'\x22,\x22edu.ni\x22'+',\x22gob.ni\x22,'+'\x22in.ni\x22,\x22i'+'nfo.ni\x22,\x22i'+'nt.ni\x22,\x22mi'+'l.ni\x22,\x22net'+'.ni\x22,\x22nom.'+'ni\x22,\x22org.n'+'i\x22,\x22web.ni'+'\x22,\x22nl\x22,\x22no'+'\x22,\x22fhs.no\x22'+',\x22vgs.no\x22,'+'\x22fylkesbib'+'l.no\x22,\x22fol'+'kebibl.no\x22'+',\x22museum.n'+'o\x22,\x22idrett'+'.no\x22,\x22priv'+'.no\x22,\x22mil.'+'no\x22,\x22stat.'+'no\x22,\x22dep.n'+'o\x22,\x22kommun'+'e.no\x22,\x22her'+'ad.no\x22,\x22aa'+'.no\x22,\x22ah.n'+'o\x22,\x22bu.no\x22'+',\x22fm.no\x22,\x22'+'hl.no\x22,\x22hm'+'.no\x22,\x22jan-'+'mayen.no\x22,'+'\x22mr.no\x22,\x22n'+'l.no\x22,\x22nt.'+'no\x22,\x22of.no'+'\x22,\x22ol.no\x22,'+'\x22oslo.no\x22,'+'\x22rl.no\x22,\x22s'+'f.no\x22,\x22st.'+'no\x22,\x22svalb'+'ard.no\x22,\x22t'+'m.no\x22,\x22tr.'+'no\x22,\x22va.no'+'\x22,\x22vf.no\x22,'+'\x22gs.aa.no\x22'+',\x22gs.ah.no'+'\x22,\x22gs.bu.n'+'o\x22,\x22gs.fm.'+'no\x22,\x22gs.hl'+'.no\x22,\x22gs.h'+'m.no\x22,\x22gs.'+'jan-mayen.'+'no\x22,\x22gs.mr'+'.no\x22,\x22gs.n'+'l.no\x22,\x22gs.'+'nt.no\x22,\x22gs'+'.of.no\x22,\x22g'+'s.ol.no\x22,\x22'+'gs.oslo.no'+'\x22,\x22gs.rl.n'+'o\x22,\x22gs.sf.')+('no\x22,\x22gs.st'+'.no\x22,\x22gs.s'+'valbard.no'+'\x22,\x22gs.tm.n'+'o\x22,\x22gs.tr.'+'no\x22,\x22gs.va'+'.no\x22,\x22gs.v'+'f.no\x22,\x22akr'+'ehamn.no\x22,'+'\x22åkrehamn.'+'no\x22,\x22algar'+'d.no\x22,\x22ålg'+'ård.no\x22,\x22a'+'rna.no\x22,\x22b'+'rumunddal.'+'no\x22,\x22bryne'+'.no\x22,\x22bron'+'noysund.no'+'\x22,\x22brønnøy'+'sund.no\x22,\x22'+'drobak.no\x22'+',\x22drøbak.n'+'o\x22,\x22egersu'+'nd.no\x22,\x22fe'+'tsund.no\x22,'+'\x22floro.no\x22'+',\x22florø.no'+'\x22,\x22fredrik'+'stad.no\x22,\x22'+'hokksund.n'+'o\x22,\x22honefo'+'ss.no\x22,\x22hø'+'nefoss.no\x22'+',\x22jessheim'+'.no\x22,\x22jorp'+'eland.no\x22,'+'\x22jørpeland'+'.no\x22,\x22kirk'+'enes.no\x22,\x22'+'kopervik.n'+'o\x22,\x22krokst'+'adelva.no\x22'+',\x22langevag'+'.no\x22,\x22lang'+'evåg.no\x22,\x22'+'leirvik.no'+'\x22,\x22mjondal'+'en.no\x22,\x22mj'+'øndalen.no'+'\x22,\x22mo-i-ra'+'na.no\x22,\x22mo'+'sjoen.no\x22,'+'\x22mosjøen.n'+'o\x22,\x22nesodd'+'tangen.no\x22'+',\x22orkanger'+'.no\x22,\x22osoy'+'ro.no\x22,\x22os'+'øyro.no\x22,\x22'+'raholt.no\x22'+',\x22råholt.n'+'o\x22,\x22sandne'+'ssjoen.no\x22'+',\x22sandness'+'jøen.no\x22,\x22'+'skedsmokor'+'set.no\x22,\x22s'+'lattum.no\x22'+',\x22spjelkav'+'ik.no\x22,\x22st'+'athelle.no'+'\x22,\x22stavern'+'.no\x22,\x22stjo'+'rdalshalse'+'n.no\x22,\x22stj'+'ørdalshals'+'en.no\x22,\x22ta'+'nanger.no\x22'+',\x22tranby.n'+'o\x22,\x22vossev'+'angen.no\x22,'+'\x22afjord.no'+'\x22,\x22åfjord.'+'no\x22,\x22agden'+'es.no\x22,\x22al'+'.no\x22,\x22ål.n'+'o\x22,\x22alesun'+'d.no\x22,\x22åle'+'sund.no\x22,\x22'+'alstahaug.'+'no\x22,\x22alta.'+'no\x22,\x22áltá.'+'no\x22,\x22alahe'+'adju.no\x22,\x22'+'álaheadju.'+'no\x22,\x22alvda'+'l.no\x22,\x22aml'+'i.no\x22,\x22åml'+'i.no\x22,\x22amo'+'t.no\x22,\x22åmo')+('t.no\x22,\x22and'+'ebu.no\x22,\x22a'+'ndoy.no\x22,\x22'+'andøy.no\x22,'+'\x22andasuolo'+'.no\x22,\x22arda'+'l.no\x22,\x22ård'+'al.no\x22,\x22ar'+'emark.no\x22,'+'\x22arendal.n'+'o\x22,\x22ås.no\x22'+',\x22aseral.n'+'o\x22,\x22åseral'+'.no\x22,\x22aske'+'r.no\x22,\x22ask'+'im.no\x22,\x22as'+'kvoll.no\x22,'+'\x22askoy.no\x22'+',\x22askøy.no'+'\x22,\x22asnes.n'+'o\x22,\x22åsnes.'+'no\x22,\x22audne'+'daln.no\x22,\x22'+'aukra.no\x22,'+'\x22aure.no\x22,'+'\x22aurland.n'+'o\x22,\x22aursko'+'g-holand.n'+'o\x22,\x22aursko'+'g-høland.n'+'o\x22,\x22austev'+'oll.no\x22,\x22a'+'ustrheim.n'+'o\x22,\x22averoy'+'.no\x22,\x22aver'+'øy.no\x22,\x22ba'+'lestrand.n'+'o\x22,\x22ballan'+'gen.no\x22,\x22b'+'alat.no\x22,\x22'+'bálát.no\x22,'+'\x22balsfjord'+'.no\x22,\x22bahc'+'cavuotna.n'+'o\x22,\x22báhcca'+'vuotna.no\x22'+',\x22bamble.n'+'o\x22,\x22bardu.'+'no\x22,\x22beard'+'u.no\x22,\x22bei'+'arn.no\x22,\x22b'+'ajddar.no\x22'+',\x22bájddar.'+'no\x22,\x22baida'+'r.no\x22,\x22bái'+'dár.no\x22,\x22b'+'erg.no\x22,\x22b'+'ergen.no\x22,'+'\x22berlevag.'+'no\x22,\x22berle'+'våg.no\x22,\x22b'+'earalvahki'+'.no\x22,\x22bear'+'alváhki.no'+'\x22,\x22bindal.'+'no\x22,\x22birke'+'nes.no\x22,\x22b'+'jarkoy.no\x22'+',\x22bjarkøy.'+'no\x22,\x22bjerk'+'reim.no\x22,\x22'+'bjugn.no\x22,'+'\x22bodo.no\x22,'+'\x22bodø.no\x22,'+'\x22badaddja.'+'no\x22,\x22bådåd'+'djå.no\x22,\x22b'+'udejju.no\x22'+',\x22bokn.no\x22'+',\x22bremange'+'r.no\x22,\x22bro'+'nnoy.no\x22,\x22'+'brønnøy.no'+'\x22,\x22bygland'+'.no\x22,\x22bykl'+'e.no\x22,\x22bar'+'um.no\x22,\x22bæ'+'rum.no\x22,\x22b'+'o.telemark'+'.no\x22,\x22bø.t'+'elemark.no'+'\x22,\x22bo.nord'+'land.no\x22,\x22'+'bø.nordlan'+'d.no\x22,\x22bie'+'vat.no\x22,\x22b'+'ievát.no\x22,'+'\x22bomlo.no\x22'+',\x22bømlo.no'+'\x22,\x22batsfjo')+('rd.no\x22,\x22bå'+'tsfjord.no'+'\x22,\x22bahcavu'+'otna.no\x22,\x22'+'báhcavuotn'+'a.no\x22,\x22dov'+'re.no\x22,\x22dr'+'ammen.no\x22,'+'\x22drangedal'+'.no\x22,\x22dyro'+'y.no\x22,\x22dyr'+'øy.no\x22,\x22do'+'nna.no\x22,\x22d'+'ønna.no\x22,\x22'+'eid.no\x22,\x22e'+'idfjord.no'+'\x22,\x22eidsber'+'g.no\x22,\x22eid'+'skog.no\x22,\x22'+'eidsvoll.n'+'o\x22,\x22eigers'+'und.no\x22,\x22e'+'lverum.no\x22'+',\x22enebakk.'+'no\x22,\x22enger'+'dal.no\x22,\x22e'+'tne.no\x22,\x22e'+'tnedal.no\x22'+',\x22evenes.n'+'o\x22,\x22evenas'+'si.no\x22,\x22ev'+'enášši.no\x22'+',\x22evje-og-'+'hornnes.no'+'\x22,\x22farsund'+'.no\x22,\x22faus'+'ke.no\x22,\x22fu'+'ossko.no\x22,'+'\x22fuoisku.n'+'o\x22,\x22fedje.'+'no\x22,\x22fet.n'+'o\x22,\x22finnoy'+'.no\x22,\x22finn'+'øy.no\x22,\x22fi'+'tjar.no\x22,\x22'+'fjaler.no\x22'+',\x22fjell.no'+'\x22,\x22flaksta'+'d.no\x22,\x22fla'+'tanger.no\x22'+',\x22flekkefj'+'ord.no\x22,\x22f'+'lesberg.no'+'\x22,\x22flora.n'+'o\x22,\x22fla.no'+'\x22,\x22flå.no\x22'+',\x22folldal.'+'no\x22,\x22forsa'+'nd.no\x22,\x22fo'+'snes.no\x22,\x22'+'frei.no\x22,\x22'+'frogn.no\x22,'+'\x22froland.n'+'o\x22,\x22frosta'+'.no\x22,\x22fran'+'a.no\x22,\x22fræ'+'na.no\x22,\x22fr'+'oya.no\x22,\x22f'+'røya.no\x22,\x22'+'fusa.no\x22,\x22'+'fyresdal.n'+'o\x22,\x22forde.'+'no\x22,\x22førde'+'.no\x22,\x22gamv'+'ik.no\x22,\x22ga'+'ngaviika.n'+'o\x22,\x22gáŋgav'+'iika.no\x22,\x22'+'gaular.no\x22'+',\x22gausdal.'+'no\x22,\x22gilde'+'skal.no\x22,\x22'+'gildeskål.'+'no\x22,\x22giske'+'.no\x22,\x22gjem'+'nes.no\x22,\x22g'+'jerdrum.no'+'\x22,\x22gjersta'+'d.no\x22,\x22gje'+'sdal.no\x22,\x22'+'gjovik.no\x22'+',\x22gjøvik.n'+'o\x22,\x22gloppe'+'n.no\x22,\x22gol'+'.no\x22,\x22gran'+'.no\x22,\x22gran'+'e.no\x22,\x22gra'+'nvin.no\x22,\x22'+'gratangen.'+'no\x22,\x22grims')+('tad.no\x22,\x22g'+'rong.no\x22,\x22'+'kraanghke.'+'no\x22,\x22kråan'+'ghke.no\x22,\x22'+'grue.no\x22,\x22'+'gulen.no\x22,'+'\x22hadsel.no'+'\x22,\x22halden.'+'no\x22,\x22halsa'+'.no\x22,\x22hama'+'r.no\x22,\x22ham'+'aroy.no\x22,\x22'+'habmer.no\x22'+',\x22hábmer.n'+'o\x22,\x22hapmir'+'.no\x22,\x22hápm'+'ir.no\x22,\x22ha'+'mmerfest.n'+'o\x22,\x22hammar'+'feasta.no\x22'+',\x22hámmárfe'+'asta.no\x22,\x22'+'haram.no\x22,'+'\x22hareid.no'+'\x22,\x22harstad'+'.no\x22,\x22hasv'+'ik.no\x22,\x22ak'+'noluokta.n'+'o\x22,\x22ákŋolu'+'okta.no\x22,\x22'+'hattfjelld'+'al.no\x22,\x22aa'+'rborte.no\x22'+',\x22haugesun'+'d.no\x22,\x22hem'+'ne.no\x22,\x22he'+'mnes.no\x22,\x22'+'hemsedal.n'+'o\x22,\x22heroy.'+'more-og-ro'+'msdal.no\x22,'+'\x22herøy.mør'+'e-og-romsd'+'al.no\x22,\x22he'+'roy.nordla'+'nd.no\x22,\x22he'+'røy.nordla'+'nd.no\x22,\x22hi'+'tra.no\x22,\x22h'+'jartdal.no'+'\x22,\x22hjelmel'+'and.no\x22,\x22h'+'obol.no\x22,\x22'+'hobøl.no\x22,'+'\x22hof.no\x22,\x22'+'hol.no\x22,\x22h'+'ole.no\x22,\x22h'+'olmestrand'+'.no\x22,\x22holt'+'alen.no\x22,\x22'+'holtålen.n'+'o\x22,\x22hornin'+'dal.no\x22,\x22h'+'orten.no\x22,'+'\x22hurdal.no'+'\x22,\x22hurum.n'+'o\x22,\x22hvaler'+'.no\x22,\x22hyll'+'estad.no\x22,'+'\x22hagebosta'+'d.no\x22,\x22hæg'+'ebostad.no'+'\x22,\x22hoyange'+'r.no\x22,\x22høy'+'anger.no\x22,'+'\x22hoylandet'+'.no\x22,\x22høyl'+'andet.no\x22,'+'\x22ha.no\x22,\x22h'+'å.no\x22,\x22ibe'+'stad.no\x22,\x22'+'inderoy.no'+'\x22,\x22inderøy'+'.no\x22,\x22ivel'+'and.no\x22,\x22j'+'evnaker.no'+'\x22,\x22jondal.'+'no\x22,\x22jolst'+'er.no\x22,\x22jø'+'lster.no\x22,'+'\x22karasjok.'+'no\x22,\x22karas'+'johka.no\x22,'+'\x22kárášjohk'+'a.no\x22,\x22kar'+'lsoy.no\x22,\x22'+'galsa.no\x22,'+'\x22gálsá.no\x22'+',\x22karmoy.n')+('o\x22,\x22karmøy'+'.no\x22,\x22kaut'+'okeino.no\x22'+',\x22guovdage'+'aidnu.no\x22,'+'\x22klepp.no\x22'+',\x22klabu.no'+'\x22,\x22klæbu.n'+'o\x22,\x22kongsb'+'erg.no\x22,\x22k'+'ongsvinger'+'.no\x22,\x22krag'+'ero.no\x22,\x22k'+'ragerø.no\x22'+',\x22kristian'+'sand.no\x22,\x22'+'kristiansu'+'nd.no\x22,\x22kr'+'odsherad.n'+'o\x22,\x22krødsh'+'erad.no\x22,\x22'+'kvalsund.n'+'o\x22,\x22rahkke'+'ravju.no\x22,'+'\x22ráhkkeráv'+'ju.no\x22,\x22kv'+'am.no\x22,\x22kv'+'inesdal.no'+'\x22,\x22kvinnhe'+'rad.no\x22,\x22k'+'viteseid.n'+'o\x22,\x22kvitso'+'y.no\x22,\x22kvi'+'tsøy.no\x22,\x22'+'kvafjord.n'+'o\x22,\x22kvæfjo'+'rd.no\x22,\x22gi'+'ehtavuoatn'+'a.no\x22,\x22kva'+'nangen.no\x22'+',\x22kvænange'+'n.no\x22,\x22nav'+'uotna.no\x22,'+'\x22návuotna.'+'no\x22,\x22kafjo'+'rd.no\x22,\x22kå'+'fjord.no\x22,'+'\x22gaivuotna'+'.no\x22,\x22gáiv'+'uotna.no\x22,'+'\x22larvik.no'+'\x22,\x22lavange'+'n.no\x22,\x22lav'+'agis.no\x22,\x22'+'loabat.no\x22'+',\x22loabát.n'+'o\x22,\x22lebesb'+'y.no\x22,\x22dav'+'vesiida.no'+'\x22,\x22leikang'+'er.no\x22,\x22le'+'irfjord.no'+'\x22,\x22leka.no'+'\x22,\x22leksvik'+'.no\x22,\x22lenv'+'ik.no\x22,\x22le'+'angaviika.'+'no\x22,\x22leaŋg'+'aviika.no\x22'+',\x22lesja.no'+'\x22,\x22levange'+'r.no\x22,\x22lie'+'r.no\x22,\x22lie'+'rne.no\x22,\x22l'+'illehammer'+'.no\x22,\x22lill'+'esand.no\x22,'+'\x22lindesnes'+'.no\x22,\x22lind'+'as.no\x22,\x22li'+'ndås.no\x22,\x22'+'lom.no\x22,\x22l'+'oppa.no\x22,\x22'+'lahppi.no\x22'+',\x22láhppi.n'+'o\x22,\x22lund.n'+'o\x22,\x22lunner'+'.no\x22,\x22luro'+'y.no\x22,\x22lur'+'øy.no\x22,\x22lu'+'ster.no\x22,\x22'+'lyngdal.no'+'\x22,\x22lyngen.'+'no\x22,\x22ivgu.'+'no\x22,\x22larda'+'l.no\x22,\x22ler'+'dal.no\x22,\x22l'+'ærdal.no\x22,'+'\x22lodingen.'+'no\x22,\x22lødin')+('gen.no\x22,\x22l'+'orenskog.n'+'o\x22,\x22lørens'+'kog.no\x22,\x22l'+'oten.no\x22,\x22'+'løten.no\x22,'+'\x22malvik.no'+'\x22,\x22masoy.n'+'o\x22,\x22måsøy.'+'no\x22,\x22muosa'+'t.no\x22,\x22muo'+'sát.no\x22,\x22m'+'andal.no\x22,'+'\x22marker.no'+'\x22,\x22marnard'+'al.no\x22,\x22ma'+'sfjorden.n'+'o\x22,\x22meland'+'.no\x22,\x22meld'+'al.no\x22,\x22me'+'lhus.no\x22,\x22'+'meloy.no\x22,'+'\x22meløy.no\x22'+',\x22meraker.'+'no\x22,\x22meråk'+'er.no\x22,\x22mo'+'areke.no\x22,'+'\x22moåreke.n'+'o\x22,\x22midsun'+'d.no\x22,\x22mid'+'tre-gaulda'+'l.no\x22,\x22mod'+'alen.no\x22,\x22'+'modum.no\x22,'+'\x22molde.no\x22'+',\x22moskenes'+'.no\x22,\x22moss'+'.no\x22,\x22mosv'+'ik.no\x22,\x22ma'+'lselv.no\x22,'+'\x22målselv.n'+'o\x22,\x22malatv'+'uopmi.no\x22,'+'\x22málatvuop'+'mi.no\x22,\x22na'+'mdalseid.n'+'o\x22,\x22aejrie'+'.no\x22,\x22nams'+'os.no\x22,\x22na'+'msskogan.n'+'o\x22,\x22naames'+'jevuemie.n'+'o\x22,\x22nååmes'+'jevuemie.n'+'o\x22,\x22laakes'+'vuemie.no\x22'+',\x22nannesta'+'d.no\x22,\x22nar'+'vik.no\x22,\x22n'+'arviika.no'+'\x22,\x22naustda'+'l.no\x22,\x22ned'+'re-eiker.n'+'o\x22,\x22nes.ak'+'ershus.no\x22'+',\x22nes.busk'+'erud.no\x22,\x22'+'nesna.no\x22,'+'\x22nesodden.'+'no\x22,\x22nesse'+'by.no\x22,\x22un'+'jarga.no\x22,'+'\x22unjárga.n'+'o\x22,\x22nesset'+'.no\x22,\x22niss'+'edal.no\x22,\x22'+'nittedal.n'+'o\x22,\x22nord-a'+'urdal.no\x22,'+'\x22nord-fron'+'.no\x22,\x22nord'+'-odal.no\x22,'+'\x22norddal.n'+'o\x22,\x22nordka'+'pp.no\x22,\x22da'+'vvenjarga.'+'no\x22,\x22davve'+'njárga.no\x22'+',\x22nordre-l'+'and.no\x22,\x22n'+'ordreisa.n'+'o\x22,\x22raisa.'+'no\x22,\x22ráisa'+'.no\x22,\x22nore'+'-og-uvdal.'+'no\x22,\x22notod'+'den.no\x22,\x22n'+'aroy.no\x22,\x22'+'nærøy.no\x22,'+'\x22notteroy.')+('no\x22,\x22nøtte'+'røy.no\x22,\x22o'+'dda.no\x22,\x22o'+'ksnes.no\x22,'+'\x22øksnes.no'+'\x22,\x22oppdal.'+'no\x22,\x22oppeg'+'ard.no\x22,\x22o'+'ppegård.no'+'\x22,\x22orkdal.'+'no\x22,\x22orlan'+'d.no\x22,\x22ørl'+'and.no\x22,\x22o'+'rskog.no\x22,'+'\x22ørskog.no'+'\x22,\x22orsta.n'+'o\x22,\x22ørsta.'+'no\x22,\x22os.he'+'dmark.no\x22,'+'\x22os.hordal'+'and.no\x22,\x22o'+'sen.no\x22,\x22o'+'steroy.no\x22'+',\x22osterøy.'+'no\x22,\x22ostre'+'-toten.no\x22'+',\x22østre-to'+'ten.no\x22,\x22o'+'verhalla.n'+'o\x22,\x22ovre-e'+'iker.no\x22,\x22'+'øvre-eiker'+'.no\x22,\x22oyer'+'.no\x22,\x22øyer'+'.no\x22,\x22oyga'+'rden.no\x22,\x22'+'øygarden.n'+'o\x22,\x22oystre'+'-slidre.no'+'\x22,\x22øystre-'+'slidre.no\x22'+',\x22porsange'+'r.no\x22,\x22por'+'sangu.no\x22,'+'\x22porsáŋgu.'+'no\x22,\x22porsg'+'runn.no\x22,\x22'+'radoy.no\x22,'+'\x22radøy.no\x22'+',\x22rakkesta'+'d.no\x22,\x22ran'+'a.no\x22,\x22ruo'+'vat.no\x22,\x22r'+'andaberg.n'+'o\x22,\x22rauma.'+'no\x22,\x22renda'+'len.no\x22,\x22r'+'ennebu.no\x22'+',\x22rennesoy'+'.no\x22,\x22renn'+'esøy.no\x22,\x22'+'rindal.no\x22'+',\x22ringebu.'+'no\x22,\x22ringe'+'rike.no\x22,\x22'+'ringsaker.'+'no\x22,\x22rissa'+'.no\x22,\x22riso'+'r.no\x22,\x22ris'+'ør.no\x22,\x22ro'+'an.no\x22,\x22ro'+'llag.no\x22,\x22'+'rygge.no\x22,'+'\x22ralingen.'+'no\x22,\x22rælin'+'gen.no\x22,\x22r'+'odoy.no\x22,\x22'+'rødøy.no\x22,'+'\x22romskog.n'+'o\x22,\x22rømsko'+'g.no\x22,\x22ror'+'os.no\x22,\x22rø'+'ros.no\x22,\x22r'+'ost.no\x22,\x22r'+'øst.no\x22,\x22r'+'oyken.no\x22,'+'\x22røyken.no'+'\x22,\x22royrvik'+'.no\x22,\x22røyr'+'vik.no\x22,\x22r'+'ade.no\x22,\x22r'+'åde.no\x22,\x22s'+'alangen.no'+'\x22,\x22siellak'+'.no\x22,\x22salt'+'dal.no\x22,\x22s'+'alat.no\x22,\x22'+'sálát.no\x22,'+'\x22sálat.no\x22'+',\x22samnange')+('r.no\x22,\x22san'+'de.more-og'+'-romsdal.n'+'o\x22,\x22sande.'+'møre-og-ro'+'msdal.no\x22,'+'\x22sande.ves'+'tfold.no\x22,'+'\x22sandefjor'+'d.no\x22,\x22san'+'dnes.no\x22,\x22'+'sandoy.no\x22'+',\x22sandøy.n'+'o\x22,\x22sarpsb'+'org.no\x22,\x22s'+'auda.no\x22,\x22'+'sauherad.n'+'o\x22,\x22sel.no'+'\x22,\x22selbu.n'+'o\x22,\x22selje.'+'no\x22,\x22seljo'+'rd.no\x22,\x22si'+'gdal.no\x22,\x22'+'siljan.no\x22'+',\x22sirdal.n'+'o\x22,\x22skaun.'+'no\x22,\x22skeds'+'mo.no\x22,\x22sk'+'i.no\x22,\x22ski'+'en.no\x22,\x22sk'+'iptvet.no\x22'+',\x22skjervoy'+'.no\x22,\x22skje'+'rvøy.no\x22,\x22'+'skierva.no'+'\x22,\x22skiervá'+'.no\x22,\x22skja'+'k.no\x22,\x22skj'+'åk.no\x22,\x22sk'+'odje.no\x22,\x22'+'skanland.n'+'o\x22,\x22skånla'+'nd.no\x22,\x22sk'+'anit.no\x22,\x22'+'skánit.no\x22'+',\x22smola.no'+'\x22,\x22smøla.n'+'o\x22,\x22snillf'+'jord.no\x22,\x22'+'snasa.no\x22,'+'\x22snåsa.no\x22'+',\x22snoasa.n'+'o\x22,\x22snaase'+'.no\x22,\x22snåa'+'se.no\x22,\x22so'+'gndal.no\x22,'+'\x22sokndal.n'+'o\x22,\x22sola.n'+'o\x22,\x22solund'+'.no\x22,\x22song'+'dalen.no\x22,'+'\x22sortland.'+'no\x22,\x22spyde'+'berg.no\x22,\x22'+'stange.no\x22'+',\x22stavange'+'r.no\x22,\x22ste'+'igen.no\x22,\x22'+'steinkjer.'+'no\x22,\x22stjor'+'dal.no\x22,\x22s'+'tjørdal.no'+'\x22,\x22stokke.'+'no\x22,\x22stor-'+'elvdal.no\x22'+',\x22stord.no'+'\x22,\x22stordal'+'.no\x22,\x22stor'+'fjord.no\x22,'+'\x22omasvuotn'+'a.no\x22,\x22str'+'and.no\x22,\x22s'+'tranda.no\x22'+',\x22stryn.no'+'\x22,\x22sula.no'+'\x22,\x22suldal.'+'no\x22,\x22sund.'+'no\x22,\x22sunnd'+'al.no\x22,\x22su'+'rnadal.no\x22'+',\x22sveio.no'+'\x22,\x22svelvik'+'.no\x22,\x22sykk'+'ylven.no\x22,'+'\x22sogne.no\x22'+',\x22søgne.no'+'\x22,\x22somna.n'+'o\x22,\x22sømna.'+'no\x22,\x22sondr'+'e-land.no\x22')+(',\x22søndre-l'+'and.no\x22,\x22s'+'or-aurdal.'+'no\x22,\x22sør-a'+'urdal.no\x22,'+'\x22sor-fron.'+'no\x22,\x22sør-f'+'ron.no\x22,\x22s'+'or-odal.no'+'\x22,\x22sør-oda'+'l.no\x22,\x22sor'+'-varanger.'+'no\x22,\x22sør-v'+'aranger.no'+'\x22,\x22matta-v'+'arjjat.no\x22'+',\x22mátta-vá'+'rjjat.no\x22,'+'\x22sorfold.n'+'o\x22,\x22sørfol'+'d.no\x22,\x22sor'+'reisa.no\x22,'+'\x22sørreisa.'+'no\x22,\x22sorum'+'.no\x22,\x22søru'+'m.no\x22,\x22tan'+'a.no\x22,\x22dea'+'tnu.no\x22,\x22t'+'ime.no\x22,\x22t'+'ingvoll.no'+'\x22,\x22tinn.no'+'\x22,\x22tjeldsu'+'nd.no\x22,\x22di'+'elddanuorr'+'i.no\x22,\x22tjo'+'me.no\x22,\x22tj'+'øme.no\x22,\x22t'+'okke.no\x22,\x22'+'tolga.no\x22,'+'\x22torsken.n'+'o\x22,\x22tranoy'+'.no\x22,\x22tran'+'øy.no\x22,\x22tr'+'omso.no\x22,\x22'+'tromsø.no\x22'+',\x22tromsa.n'+'o\x22,\x22romsa.'+'no\x22,\x22trond'+'heim.no\x22,\x22'+'troandin.n'+'o\x22,\x22trysil'+'.no\x22,\x22tran'+'a.no\x22,\x22træ'+'na.no\x22,\x22tr'+'ogstad.no\x22'+',\x22trøgstad'+'.no\x22,\x22tved'+'estrand.no'+'\x22,\x22tydal.n'+'o\x22,\x22tynset'+'.no\x22,\x22tysf'+'jord.no\x22,\x22'+'divtasvuod'+'na.no\x22,\x22di'+'vttasvuotn'+'a.no\x22,\x22tys'+'nes.no\x22,\x22t'+'ysvar.no\x22,'+'\x22tysvær.no'+'\x22,\x22tonsber'+'g.no\x22,\x22tøn'+'sberg.no\x22,'+'\x22ullensake'+'r.no\x22,\x22ull'+'ensvang.no'+'\x22,\x22ulvik.n'+'o\x22,\x22utsira'+'.no\x22,\x22vads'+'o.no\x22,\x22vad'+'sø.no\x22,\x22ca'+'hcesuolo.n'+'o\x22,\x22čáhces'+'uolo.no\x22,\x22'+'vaksdal.no'+'\x22,\x22valle.n'+'o\x22,\x22vang.n'+'o\x22,\x22vanylv'+'en.no\x22,\x22va'+'rdo.no\x22,\x22v'+'ardø.no\x22,\x22'+'varggat.no'+'\x22,\x22várggát'+'.no\x22,\x22vefs'+'n.no\x22,\x22vaa'+'pste.no\x22,\x22'+'vega.no\x22,\x22'+'vegarshei.'+'no\x22,\x22vegår'+'shei.no\x22,\x22'+'vennesla.n')+('o\x22,\x22verdal'+'.no\x22,\x22verr'+'an.no\x22,\x22ve'+'stby.no\x22,\x22'+'vestnes.no'+'\x22,\x22vestre-'+'slidre.no\x22'+',\x22vestre-t'+'oten.no\x22,\x22'+'vestvagoy.'+'no\x22,\x22vestv'+'ågøy.no\x22,\x22'+'vevelstad.'+'no\x22,\x22vik.n'+'o\x22,\x22vikna.'+'no\x22,\x22vinda'+'fjord.no\x22,'+'\x22volda.no\x22'+',\x22voss.no\x22'+',\x22varoy.no'+'\x22,\x22værøy.n'+'o\x22,\x22vagan.'+'no\x22,\x22vågan'+'.no\x22,\x22voag'+'at.no\x22,\x22va'+'gsoy.no\x22,\x22'+'vågsøy.no\x22'+',\x22vaga.no\x22'+',\x22vågå.no\x22'+',\x22valer.os'+'tfold.no\x22,'+'\x22våler.øst'+'fold.no\x22,\x22'+'valer.hedm'+'ark.no\x22,\x22v'+'åler.hedma'+'rk.no\x22,\x22*.'+'np\x22,\x22nr\x22,\x22'+'biz.nr\x22,\x22i'+'nfo.nr\x22,\x22g'+'ov.nr\x22,\x22ed'+'u.nr\x22,\x22org'+'.nr\x22,\x22net.'+'nr\x22,\x22com.n'+'r\x22,\x22nu\x22,\x22n'+'z\x22,\x22ac.nz\x22'+',\x22co.nz\x22,\x22'+'cri.nz\x22,\x22g'+'eek.nz\x22,\x22g'+'en.nz\x22,\x22go'+'vt.nz\x22,\x22he'+'alth.nz\x22,\x22'+'iwi.nz\x22,\x22k'+'iwi.nz\x22,\x22m'+'aori.nz\x22,\x22'+'mil.nz\x22,\x22m'+'āori.nz\x22,\x22'+'net.nz\x22,\x22o'+'rg.nz\x22,\x22pa'+'rliament.n'+'z\x22,\x22school'+'.nz\x22,\x22om\x22,'+'\x22co.om\x22,\x22c'+'om.om\x22,\x22ed'+'u.om\x22,\x22gov'+'.om\x22,\x22med.'+'om\x22,\x22museu'+'m.om\x22,\x22net'+'.om\x22,\x22org.'+'om\x22,\x22pro.o'+'m\x22,\x22onion\x22'+',\x22org\x22,\x22pa'+'\x22,\x22ac.pa\x22,'+'\x22gob.pa\x22,\x22'+'com.pa\x22,\x22o'+'rg.pa\x22,\x22sl'+'d.pa\x22,\x22edu'+'.pa\x22,\x22net.'+'pa\x22,\x22ing.p'+'a\x22,\x22abo.pa'+'\x22,\x22med.pa\x22'+',\x22nom.pa\x22,'+'\x22pe\x22,\x22edu.'+'pe\x22,\x22gob.p'+'e\x22,\x22nom.pe'+'\x22,\x22mil.pe\x22'+',\x22org.pe\x22,'+'\x22com.pe\x22,\x22'+'net.pe\x22,\x22p'+'f\x22,\x22com.pf'+'\x22,\x22org.pf\x22'+',\x22edu.pf\x22,'+'\x22*.pg\x22,\x22ph'+'\x22,\x22com.ph\x22'+',\x22net.ph\x22,'+'\x22org.ph\x22,\x22'+'gov.ph\x22,\x22e'+'du.ph\x22,\x22ng'+'o.ph\x22,\x22mil'+'.ph\x22,\x22i.ph')+('\x22,\x22pk\x22,\x22co'+'m.pk\x22,\x22net'+'.pk\x22,\x22edu.'+'pk\x22,\x22org.p'+'k\x22,\x22fam.pk'+'\x22,\x22biz.pk\x22'+',\x22web.pk\x22,'+'\x22gov.pk\x22,\x22'+'gob.pk\x22,\x22g'+'ok.pk\x22,\x22go'+'n.pk\x22,\x22gop'+'.pk\x22,\x22gos.'+'pk\x22,\x22info.'+'pk\x22,\x22pl\x22,\x22'+'com.pl\x22,\x22n'+'et.pl\x22,\x22or'+'g.pl\x22,\x22aid'+'.pl\x22,\x22agro'+'.pl\x22,\x22atm.'+'pl\x22,\x22auto.'+'pl\x22,\x22biz.p'+'l\x22,\x22edu.pl'+'\x22,\x22gmina.p'+'l\x22,\x22gsm.pl'+'\x22,\x22info.pl'+'\x22,\x22mail.pl'+'\x22,\x22miasta.'+'pl\x22,\x22media'+'.pl\x22,\x22mil.'+'pl\x22,\x22nieru'+'chomosci.p'+'l\x22,\x22nom.pl'+'\x22,\x22pc.pl\x22,'+'\x22powiat.pl'+'\x22,\x22priv.pl'+'\x22,\x22realest'+'ate.pl\x22,\x22r'+'el.pl\x22,\x22se'+'x.pl\x22,\x22sho'+'p.pl\x22,\x22skl'+'ep.pl\x22,\x22so'+'s.pl\x22,\x22szk'+'ola.pl\x22,\x22t'+'argi.pl\x22,\x22'+'tm.pl\x22,\x22to'+'urism.pl\x22,'+'\x22travel.pl'+'\x22,\x22turysty'+'ka.pl\x22,\x22go'+'v.pl\x22,\x22ap.'+'gov.pl\x22,\x22i'+'c.gov.pl\x22,'+'\x22is.gov.pl'+'\x22,\x22us.gov.'+'pl\x22,\x22kmpsp'+'.gov.pl\x22,\x22'+'kppsp.gov.'+'pl\x22,\x22kwpsp'+'.gov.pl\x22,\x22'+'psp.gov.pl'+'\x22,\x22wskr.go'+'v.pl\x22,\x22kwp'+'.gov.pl\x22,\x22'+'mw.gov.pl\x22'+',\x22ug.gov.p'+'l\x22,\x22um.gov'+'.pl\x22,\x22umig'+'.gov.pl\x22,\x22'+'ugim.gov.p'+'l\x22,\x22upow.g'+'ov.pl\x22,\x22uw'+'.gov.pl\x22,\x22'+'starostwo.'+'gov.pl\x22,\x22p'+'a.gov.pl\x22,'+'\x22po.gov.pl'+'\x22,\x22psse.go'+'v.pl\x22,\x22pup'+'.gov.pl\x22,\x22'+'rzgw.gov.p'+'l\x22,\x22sa.gov'+'.pl\x22,\x22so.g'+'ov.pl\x22,\x22sr'+'.gov.pl\x22,\x22'+'wsa.gov.pl'+'\x22,\x22sko.gov'+'.pl\x22,\x22uzs.'+'gov.pl\x22,\x22w'+'iih.gov.pl'+'\x22,\x22winb.go'+'v.pl\x22,\x22pin'+'b.gov.pl\x22,'+'\x22wios.gov.'+'pl\x22,\x22witd.'+'gov.pl\x22,\x22w'+'zmiuw.gov.'+'pl\x22,\x22piw.g'+'ov.pl\x22,\x22wi'+'w.gov.pl\x22,'+'\x22griw.gov.')+('pl\x22,\x22wif.g'+'ov.pl\x22,\x22ou'+'m.gov.pl\x22,'+'\x22sdn.gov.p'+'l\x22,\x22zp.gov'+'.pl\x22,\x22uppo'+'.gov.pl\x22,\x22'+'mup.gov.pl'+'\x22,\x22wuoz.go'+'v.pl\x22,\x22kon'+'sulat.gov.'+'pl\x22,\x22oirm.'+'gov.pl\x22,\x22a'+'ugustow.pl'+'\x22,\x22babia-g'+'ora.pl\x22,\x22b'+'edzin.pl\x22,'+'\x22beskidy.p'+'l\x22,\x22bialow'+'ieza.pl\x22,\x22'+'bialystok.'+'pl\x22,\x22biela'+'wa.pl\x22,\x22bi'+'eszczady.p'+'l\x22,\x22bolesl'+'awiec.pl\x22,'+'\x22bydgoszcz'+'.pl\x22,\x22byto'+'m.pl\x22,\x22cie'+'szyn.pl\x22,\x22'+'czeladz.pl'+'\x22,\x22czest.p'+'l\x22,\x22dlugol'+'eka.pl\x22,\x22e'+'lblag.pl\x22,'+'\x22elk.pl\x22,\x22'+'glogow.pl\x22'+',\x22gniezno.'+'pl\x22,\x22gorli'+'ce.pl\x22,\x22gr'+'ajewo.pl\x22,'+'\x22ilawa.pl\x22'+',\x22jaworzno'+'.pl\x22,\x22jele'+'nia-gora.p'+'l\x22,\x22jgora.'+'pl\x22,\x22kalis'+'z.pl\x22,\x22kaz'+'imierz-dol'+'ny.pl\x22,\x22ka'+'rpacz.pl\x22,'+'\x22kartuzy.p'+'l\x22,\x22kaszub'+'y.pl\x22,\x22kat'+'owice.pl\x22,'+'\x22kepno.pl\x22'+',\x22ketrzyn.'+'pl\x22,\x22klodz'+'ko.pl\x22,\x22ko'+'bierzyce.p'+'l\x22,\x22kolobr'+'zeg.pl\x22,\x22k'+'onin.pl\x22,\x22'+'konskowola'+'.pl\x22,\x22kutn'+'o.pl\x22,\x22lap'+'y.pl\x22,\x22leb'+'ork.pl\x22,\x22l'+'egnica.pl\x22'+',\x22lezajsk.'+'pl\x22,\x22liman'+'owa.pl\x22,\x22l'+'omza.pl\x22,\x22'+'lowicz.pl\x22'+',\x22lubin.pl'+'\x22,\x22lukow.p'+'l\x22,\x22malbor'+'k.pl\x22,\x22mal'+'opolska.pl'+'\x22,\x22mazowsz'+'e.pl\x22,\x22maz'+'ury.pl\x22,\x22m'+'ielec.pl\x22,'+'\x22mielno.pl'+'\x22,\x22mragowo'+'.pl\x22,\x22nakl'+'o.pl\x22,\x22now'+'aruda.pl\x22,'+'\x22nysa.pl\x22,'+'\x22olawa.pl\x22'+',\x22olecko.p'+'l\x22,\x22olkusz'+'.pl\x22,\x22olsz'+'tyn.pl\x22,\x22o'+'poczno.pl\x22'+',\x22opole.pl'+'\x22,\x22ostroda'+'.pl\x22,\x22ostr'+'oleka.pl\x22,'+'\x22ostrowiec')+('.pl\x22,\x22ostr'+'owwlkp.pl\x22'+',\x22pila.pl\x22'+',\x22pisz.pl\x22'+',\x22podhale.'+'pl\x22,\x22podla'+'sie.pl\x22,\x22p'+'olkowice.p'+'l\x22,\x22pomorz'+'e.pl\x22,\x22pom'+'orskie.pl\x22'+',\x22prochowi'+'ce.pl\x22,\x22pr'+'uszkow.pl\x22'+',\x22przewors'+'k.pl\x22,\x22pul'+'awy.pl\x22,\x22r'+'adom.pl\x22,\x22'+'rawa-maz.p'+'l\x22,\x22rybnik'+'.pl\x22,\x22rzes'+'zow.pl\x22,\x22s'+'anok.pl\x22,\x22'+'sejny.pl\x22,'+'\x22slask.pl\x22'+',\x22slupsk.p'+'l\x22,\x22sosnow'+'iec.pl\x22,\x22s'+'talowa-wol'+'a.pl\x22,\x22sko'+'czow.pl\x22,\x22'+'starachowi'+'ce.pl\x22,\x22st'+'argard.pl\x22'+',\x22suwalki.'+'pl\x22,\x22swidn'+'ica.pl\x22,\x22s'+'wiebodzin.'+'pl\x22,\x22swino'+'ujscie.pl\x22'+',\x22szczecin'+'.pl\x22,\x22szcz'+'ytno.pl\x22,\x22'+'tarnobrzeg'+'.pl\x22,\x22tgor'+'y.pl\x22,\x22tur'+'ek.pl\x22,\x22ty'+'chy.pl\x22,\x22u'+'stka.pl\x22,\x22'+'walbrzych.'+'pl\x22,\x22warmi'+'a.pl\x22,\x22war'+'szawa.pl\x22,'+'\x22waw.pl\x22,\x22'+'wegrow.pl\x22'+',\x22wielun.p'+'l\x22,\x22wlocl.'+'pl\x22,\x22wlocl'+'awek.pl\x22,\x22'+'wodzislaw.'+'pl\x22,\x22wolom'+'in.pl\x22,\x22wr'+'oclaw.pl\x22,'+'\x22zachpomor'+'.pl\x22,\x22zaga'+'n.pl\x22,\x22zar'+'ow.pl\x22,\x22zg'+'ora.pl\x22,\x22z'+'gorzelec.p'+'l\x22,\x22pm\x22,\x22p'+'n\x22,\x22gov.pn'+'\x22,\x22co.pn\x22,'+'\x22org.pn\x22,\x22'+'edu.pn\x22,\x22n'+'et.pn\x22,\x22po'+'st\x22,\x22pr\x22,\x22'+'com.pr\x22,\x22n'+'et.pr\x22,\x22or'+'g.pr\x22,\x22gov'+'.pr\x22,\x22edu.'+'pr\x22,\x22isla.'+'pr\x22,\x22pro.p'+'r\x22,\x22biz.pr'+'\x22,\x22info.pr'+'\x22,\x22name.pr'+'\x22,\x22est.pr\x22'+',\x22prof.pr\x22'+',\x22ac.pr\x22,\x22'+'pro\x22,\x22aaa.'+'pro\x22,\x22aca.'+'pro\x22,\x22acct'+'.pro\x22,\x22avo'+'cat.pro\x22,\x22'+'bar.pro\x22,\x22'+'cpa.pro\x22,\x22'+'eng.pro\x22,\x22'+'jur.pro\x22,\x22'+'law.pro\x22,\x22'+'med.pro\x22,\x22'+'recht.pro\x22')+(',\x22ps\x22,\x22edu'+'.ps\x22,\x22gov.'+'ps\x22,\x22sec.p'+'s\x22,\x22plo.ps'+'\x22,\x22com.ps\x22'+',\x22org.ps\x22,'+'\x22net.ps\x22,\x22'+'pt\x22,\x22net.p'+'t\x22,\x22gov.pt'+'\x22,\x22org.pt\x22'+',\x22edu.pt\x22,'+'\x22int.pt\x22,\x22'+'publ.pt\x22,\x22'+'com.pt\x22,\x22n'+'ome.pt\x22,\x22p'+'w\x22,\x22co.pw\x22'+',\x22ne.pw\x22,\x22'+'or.pw\x22,\x22ed'+'.pw\x22,\x22go.p'+'w\x22,\x22belau.'+'pw\x22,\x22py\x22,\x22'+'com.py\x22,\x22c'+'oop.py\x22,\x22e'+'du.py\x22,\x22go'+'v.py\x22,\x22mil'+'.py\x22,\x22net.'+'py\x22,\x22org.p'+'y\x22,\x22qa\x22,\x22c'+'om.qa\x22,\x22ed'+'u.qa\x22,\x22gov'+'.qa\x22,\x22mil.'+'qa\x22,\x22name.'+'qa\x22,\x22net.q'+'a\x22,\x22org.qa'+'\x22,\x22sch.qa\x22'+',\x22re\x22,\x22ass'+'o.re\x22,\x22com'+'.re\x22,\x22nom.'+'re\x22,\x22ro\x22,\x22'+'arts.ro\x22,\x22'+'com.ro\x22,\x22f'+'irm.ro\x22,\x22i'+'nfo.ro\x22,\x22n'+'om.ro\x22,\x22nt'+'.ro\x22,\x22org.'+'ro\x22,\x22rec.r'+'o\x22,\x22store.'+'ro\x22,\x22tm.ro'+'\x22,\x22www.ro\x22'+',\x22rs\x22,\x22ac.'+'rs\x22,\x22co.rs'+'\x22,\x22edu.rs\x22'+',\x22gov.rs\x22,'+'\x22in.rs\x22,\x22o'+'rg.rs\x22,\x22ru'+'\x22,\x22rw\x22,\x22ac'+'.rw\x22,\x22co.r'+'w\x22,\x22coop.r'+'w\x22,\x22gov.rw'+'\x22,\x22mil.rw\x22'+',\x22net.rw\x22,'+'\x22org.rw\x22,\x22'+'sa\x22,\x22com.s'+'a\x22,\x22net.sa'+'\x22,\x22org.sa\x22'+',\x22gov.sa\x22,'+'\x22med.sa\x22,\x22'+'pub.sa\x22,\x22e'+'du.sa\x22,\x22sc'+'h.sa\x22,\x22sb\x22'+',\x22com.sb\x22,'+'\x22edu.sb\x22,\x22'+'gov.sb\x22,\x22n'+'et.sb\x22,\x22or'+'g.sb\x22,\x22sc\x22'+',\x22com.sc\x22,'+'\x22gov.sc\x22,\x22'+'net.sc\x22,\x22o'+'rg.sc\x22,\x22ed'+'u.sc\x22,\x22sd\x22'+',\x22com.sd\x22,'+'\x22net.sd\x22,\x22'+'org.sd\x22,\x22e'+'du.sd\x22,\x22me'+'d.sd\x22,\x22tv.'+'sd\x22,\x22gov.s'+'d\x22,\x22info.s'+'d\x22,\x22se\x22,\x22a'+'.se\x22,\x22ac.s'+'e\x22,\x22b.se\x22,'+'\x22bd.se\x22,\x22b'+'rand.se\x22,\x22'+'c.se\x22,\x22d.s'+'e\x22,\x22e.se\x22,'+'\x22f.se\x22,\x22fh'+'.se\x22,\x22fhsk'+'.se\x22,\x22fhv.'+'se\x22,\x22g.se\x22'+',\x22h.se\x22,\x22i'+'.se\x22,\x22k.se')+('\x22,\x22komforb'+'.se\x22,\x22komm'+'unalforbun'+'d.se\x22,\x22kom'+'vux.se\x22,\x22l'+'.se\x22,\x22lanb'+'ib.se\x22,\x22m.'+'se\x22,\x22n.se\x22'+',\x22naturbru'+'ksgymn.se\x22'+',\x22o.se\x22,\x22o'+'rg.se\x22,\x22p.'+'se\x22,\x22parti'+'.se\x22,\x22pp.s'+'e\x22,\x22press.'+'se\x22,\x22r.se\x22'+',\x22s.se\x22,\x22t'+'.se\x22,\x22tm.s'+'e\x22,\x22u.se\x22,'+'\x22w.se\x22,\x22x.'+'se\x22,\x22y.se\x22'+',\x22z.se\x22,\x22s'+'g\x22,\x22com.sg'+'\x22,\x22net.sg\x22'+',\x22org.sg\x22,'+'\x22gov.sg\x22,\x22'+'edu.sg\x22,\x22p'+'er.sg\x22,\x22sh'+'\x22,\x22com.sh\x22'+',\x22net.sh\x22,'+'\x22gov.sh\x22,\x22'+'org.sh\x22,\x22m'+'il.sh\x22,\x22si'+'\x22,\x22sj\x22,\x22sk'+'\x22,\x22sl\x22,\x22co'+'m.sl\x22,\x22net'+'.sl\x22,\x22edu.'+'sl\x22,\x22gov.s'+'l\x22,\x22org.sl'+'\x22,\x22sm\x22,\x22sn'+'\x22,\x22art.sn\x22'+',\x22com.sn\x22,'+'\x22edu.sn\x22,\x22'+'gouv.sn\x22,\x22'+'org.sn\x22,\x22p'+'erso.sn\x22,\x22'+'univ.sn\x22,\x22'+'so\x22,\x22com.s'+'o\x22,\x22edu.so'+'\x22,\x22gov.so\x22'+',\x22me.so\x22,\x22'+'net.so\x22,\x22o'+'rg.so\x22,\x22sr'+'\x22,\x22ss\x22,\x22bi'+'z.ss\x22,\x22com'+'.ss\x22,\x22edu.'+'ss\x22,\x22gov.s'+'s\x22,\x22net.ss'+'\x22,\x22org.ss\x22'+',\x22st\x22,\x22co.'+'st\x22,\x22com.s'+'t\x22,\x22consul'+'ado.st\x22,\x22e'+'du.st\x22,\x22em'+'baixada.st'+'\x22,\x22gov.st\x22'+',\x22mil.st\x22,'+'\x22net.st\x22,\x22'+'org.st\x22,\x22p'+'rincipe.st'+'\x22,\x22saotome'+'.st\x22,\x22stor'+'e.st\x22,\x22su\x22'+',\x22sv\x22,\x22com'+'.sv\x22,\x22edu.'+'sv\x22,\x22gob.s'+'v\x22,\x22org.sv'+'\x22,\x22red.sv\x22'+',\x22sx\x22,\x22gov'+'.sx\x22,\x22sy\x22,'+'\x22edu.sy\x22,\x22'+'gov.sy\x22,\x22n'+'et.sy\x22,\x22mi'+'l.sy\x22,\x22com'+'.sy\x22,\x22org.'+'sy\x22,\x22sz\x22,\x22'+'co.sz\x22,\x22ac'+'.sz\x22,\x22org.'+'sz\x22,\x22tc\x22,\x22'+'td\x22,\x22tel\x22,'+'\x22tf\x22,\x22tg\x22,'+'\x22th\x22,\x22ac.t'+'h\x22,\x22co.th\x22'+',\x22go.th\x22,\x22'+'in.th\x22,\x22mi'+'.th\x22,\x22net.'+'th\x22,\x22or.th'+'\x22,\x22tj\x22,\x22ac'+'.tj\x22,\x22biz.'+'tj\x22,\x22co.tj')+('\x22,\x22com.tj\x22'+',\x22edu.tj\x22,'+'\x22go.tj\x22,\x22g'+'ov.tj\x22,\x22in'+'t.tj\x22,\x22mil'+'.tj\x22,\x22name'+'.tj\x22,\x22net.'+'tj\x22,\x22nic.t'+'j\x22,\x22org.tj'+'\x22,\x22test.tj'+'\x22,\x22web.tj\x22'+',\x22tk\x22,\x22tl\x22'+',\x22gov.tl\x22,'+'\x22tm\x22,\x22com.'+'tm\x22,\x22co.tm'+'\x22,\x22org.tm\x22'+',\x22net.tm\x22,'+'\x22nom.tm\x22,\x22'+'gov.tm\x22,\x22m'+'il.tm\x22,\x22ed'+'u.tm\x22,\x22tn\x22'+',\x22com.tn\x22,'+'\x22ens.tn\x22,\x22'+'fin.tn\x22,\x22g'+'ov.tn\x22,\x22in'+'d.tn\x22,\x22int'+'l.tn\x22,\x22nat'+'.tn\x22,\x22net.'+'tn\x22,\x22org.t'+'n\x22,\x22info.t'+'n\x22,\x22perso.'+'tn\x22,\x22touri'+'sm.tn\x22,\x22ed'+'unet.tn\x22,\x22'+'rnrt.tn\x22,\x22'+'rns.tn\x22,\x22r'+'nu.tn\x22,\x22mi'+'ncom.tn\x22,\x22'+'agrinet.tn'+'\x22,\x22defense'+'.tn\x22,\x22ture'+'n.tn\x22,\x22to\x22'+',\x22com.to\x22,'+'\x22gov.to\x22,\x22'+'net.to\x22,\x22o'+'rg.to\x22,\x22ed'+'u.to\x22,\x22mil'+'.to\x22,\x22tr\x22,'+'\x22av.tr\x22,\x22b'+'bs.tr\x22,\x22be'+'l.tr\x22,\x22biz'+'.tr\x22,\x22com.'+'tr\x22,\x22dr.tr'+'\x22,\x22edu.tr\x22'+',\x22gen.tr\x22,'+'\x22gov.tr\x22,\x22'+'info.tr\x22,\x22'+'mil.tr\x22,\x22k'+'12.tr\x22,\x22ke'+'p.tr\x22,\x22nam'+'e.tr\x22,\x22net'+'.tr\x22,\x22org.'+'tr\x22,\x22pol.t'+'r\x22,\x22tel.tr'+'\x22,\x22tsk.tr\x22'+',\x22tv.tr\x22,\x22'+'web.tr\x22,\x22n'+'c.tr\x22,\x22gov'+'.nc.tr\x22,\x22t'+'t\x22,\x22co.tt\x22'+',\x22com.tt\x22,'+'\x22org.tt\x22,\x22'+'net.tt\x22,\x22b'+'iz.tt\x22,\x22in'+'fo.tt\x22,\x22pr'+'o.tt\x22,\x22int'+'.tt\x22,\x22coop'+'.tt\x22,\x22jobs'+'.tt\x22,\x22mobi'+'.tt\x22,\x22trav'+'el.tt\x22,\x22mu'+'seum.tt\x22,\x22'+'aero.tt\x22,\x22'+'name.tt\x22,\x22'+'gov.tt\x22,\x22e'+'du.tt\x22,\x22tv'+'\x22,\x22tw\x22,\x22ed'+'u.tw\x22,\x22gov'+'.tw\x22,\x22mil.'+'tw\x22,\x22com.t'+'w\x22,\x22net.tw'+'\x22,\x22org.tw\x22'+',\x22idv.tw\x22,'+'\x22game.tw\x22,'+'\x22ebiz.tw\x22,'+'\x22club.tw\x22,'+'\x22網路.tw\x22,\x22組'+'織.tw\x22,\x22商業.'+'tw\x22,\x22tz\x22,\x22'+'ac.tz\x22,\x22co')+('.tz\x22,\x22go.t'+'z\x22,\x22hotel.'+'tz\x22,\x22info.'+'tz\x22,\x22me.tz'+'\x22,\x22mil.tz\x22'+',\x22mobi.tz\x22'+',\x22ne.tz\x22,\x22'+'or.tz\x22,\x22sc'+'.tz\x22,\x22tv.t'+'z\x22,\x22ua\x22,\x22c'+'om.ua\x22,\x22ed'+'u.ua\x22,\x22gov'+'.ua\x22,\x22in.u'+'a\x22,\x22net.ua'+'\x22,\x22org.ua\x22'+',\x22cherkass'+'y.ua\x22,\x22che'+'rkasy.ua\x22,'+'\x22chernigov'+'.ua\x22,\x22cher'+'nihiv.ua\x22,'+'\x22chernivts'+'i.ua\x22,\x22che'+'rnovtsy.ua'+'\x22,\x22ck.ua\x22,'+'\x22cn.ua\x22,\x22c'+'r.ua\x22,\x22cri'+'mea.ua\x22,\x22c'+'v.ua\x22,\x22dn.'+'ua\x22,\x22dnepr'+'opetrovsk.'+'ua\x22,\x22dnipr'+'opetrovsk.'+'ua\x22,\x22domin'+'ic.ua\x22,\x22do'+'netsk.ua\x22,'+'\x22dp.ua\x22,\x22i'+'f.ua\x22,\x22iva'+'no-frankiv'+'sk.ua\x22,\x22kh'+'.ua\x22,\x22khar'+'kiv.ua\x22,\x22k'+'harkov.ua\x22'+',\x22kherson.'+'ua\x22,\x22khmel'+'nitskiy.ua'+'\x22,\x22khmelny'+'tskyi.ua\x22,'+'\x22kiev.ua\x22,'+'\x22kirovogra'+'d.ua\x22,\x22km.'+'ua\x22,\x22kr.ua'+'\x22,\x22krym.ua'+'\x22,\x22ks.ua\x22,'+'\x22kv.ua\x22,\x22k'+'yiv.ua\x22,\x22l'+'g.ua\x22,\x22lt.'+'ua\x22,\x22lugan'+'sk.ua\x22,\x22lu'+'tsk.ua\x22,\x22l'+'v.ua\x22,\x22lvi'+'v.ua\x22,\x22mk.'+'ua\x22,\x22mykol'+'aiv.ua\x22,\x22n'+'ikolaev.ua'+'\x22,\x22od.ua\x22,'+'\x22odesa.ua\x22'+',\x22odessa.u'+'a\x22,\x22pl.ua\x22'+',\x22poltava.'+'ua\x22,\x22rivne'+'.ua\x22,\x22rovn'+'o.ua\x22,\x22rv.'+'ua\x22,\x22sb.ua'+'\x22,\x22sebasto'+'pol.ua\x22,\x22s'+'evastopol.'+'ua\x22,\x22sm.ua'+'\x22,\x22sumy.ua'+'\x22,\x22te.ua\x22,'+'\x22ternopil.'+'ua\x22,\x22uz.ua'+'\x22,\x22uzhgoro'+'d.ua\x22,\x22vin'+'nica.ua\x22,\x22'+'vinnytsia.'+'ua\x22,\x22vn.ua'+'\x22,\x22volyn.u'+'a\x22,\x22yalta.'+'ua\x22,\x22zapor'+'izhzhe.ua\x22'+',\x22zaporizh'+'zhia.ua\x22,\x22'+'zhitomir.u'+'a\x22,\x22zhytom'+'yr.ua\x22,\x22zp'+'.ua\x22,\x22zt.u'+'a\x22,\x22ug\x22,\x22c'+'o.ug\x22,\x22or.'+'ug\x22,\x22ac.ug')+('\x22,\x22sc.ug\x22,'+'\x22go.ug\x22,\x22n'+'e.ug\x22,\x22com'+'.ug\x22,\x22org.'+'ug\x22,\x22uk\x22,\x22'+'ac.uk\x22,\x22co'+'.uk\x22,\x22gov.'+'uk\x22,\x22ltd.u'+'k\x22,\x22me.uk\x22'+',\x22net.uk\x22,'+'\x22nhs.uk\x22,\x22'+'org.uk\x22,\x22p'+'lc.uk\x22,\x22po'+'lice.uk\x22,\x22'+'*.sch.uk\x22,'+'\x22us\x22,\x22dni.'+'us\x22,\x22fed.u'+'s\x22,\x22isa.us'+'\x22,\x22kids.us'+'\x22,\x22nsn.us\x22'+',\x22ak.us\x22,\x22'+'al.us\x22,\x22ar'+'.us\x22,\x22as.u'+'s\x22,\x22az.us\x22'+',\x22ca.us\x22,\x22'+'co.us\x22,\x22ct'+'.us\x22,\x22dc.u'+'s\x22,\x22de.us\x22'+',\x22fl.us\x22,\x22'+'ga.us\x22,\x22gu'+'.us\x22,\x22hi.u'+'s\x22,\x22ia.us\x22'+',\x22id.us\x22,\x22'+'il.us\x22,\x22in'+'.us\x22,\x22ks.u'+'s\x22,\x22ky.us\x22'+',\x22la.us\x22,\x22'+'ma.us\x22,\x22md'+'.us\x22,\x22me.u'+'s\x22,\x22mi.us\x22'+',\x22mn.us\x22,\x22'+'mo.us\x22,\x22ms'+'.us\x22,\x22mt.u'+'s\x22,\x22nc.us\x22'+',\x22nd.us\x22,\x22'+'ne.us\x22,\x22nh'+'.us\x22,\x22nj.u'+'s\x22,\x22nm.us\x22'+',\x22nv.us\x22,\x22'+'ny.us\x22,\x22oh'+'.us\x22,\x22ok.u'+'s\x22,\x22or.us\x22'+',\x22pa.us\x22,\x22'+'pr.us\x22,\x22ri'+'.us\x22,\x22sc.u'+'s\x22,\x22sd.us\x22'+',\x22tn.us\x22,\x22'+'tx.us\x22,\x22ut'+'.us\x22,\x22vi.u'+'s\x22,\x22vt.us\x22'+',\x22va.us\x22,\x22'+'wa.us\x22,\x22wi'+'.us\x22,\x22wv.u'+'s\x22,\x22wy.us\x22'+',\x22k12.ak.u'+'s\x22,\x22k12.al'+'.us\x22,\x22k12.'+'ar.us\x22,\x22k1'+'2.as.us\x22,\x22'+'k12.az.us\x22'+',\x22k12.ca.u'+'s\x22,\x22k12.co'+'.us\x22,\x22k12.'+'ct.us\x22,\x22k1'+'2.dc.us\x22,\x22'+'k12.de.us\x22'+',\x22k12.fl.u'+'s\x22,\x22k12.ga'+'.us\x22,\x22k12.'+'gu.us\x22,\x22k1'+'2.ia.us\x22,\x22'+'k12.id.us\x22'+',\x22k12.il.u'+'s\x22,\x22k12.in'+'.us\x22,\x22k12.'+'ks.us\x22,\x22k1'+'2.ky.us\x22,\x22'+'k12.la.us\x22'+',\x22k12.ma.u'+'s\x22,\x22k12.md'+'.us\x22,\x22k12.'+'me.us\x22,\x22k1'+'2.mi.us\x22,\x22'+'k12.mn.us\x22'+',\x22k12.mo.u'+'s\x22,\x22k12.ms'+'.us\x22,\x22k12.'+'mt.us\x22,\x22k1'+'2.nc.us\x22,\x22'+'k12.ne.us\x22')+(',\x22k12.nh.u'+'s\x22,\x22k12.nj'+'.us\x22,\x22k12.'+'nm.us\x22,\x22k1'+'2.nv.us\x22,\x22'+'k12.ny.us\x22'+',\x22k12.oh.u'+'s\x22,\x22k12.ok'+'.us\x22,\x22k12.'+'or.us\x22,\x22k1'+'2.pa.us\x22,\x22'+'k12.pr.us\x22'+',\x22k12.ri.u'+'s\x22,\x22k12.sc'+'.us\x22,\x22k12.'+'tn.us\x22,\x22k1'+'2.tx.us\x22,\x22'+'k12.ut.us\x22'+',\x22k12.vi.u'+'s\x22,\x22k12.vt'+'.us\x22,\x22k12.'+'va.us\x22,\x22k1'+'2.wa.us\x22,\x22'+'k12.wi.us\x22'+',\x22k12.wy.u'+'s\x22,\x22cc.ak.'+'us\x22,\x22cc.al'+'.us\x22,\x22cc.a'+'r.us\x22,\x22cc.'+'as.us\x22,\x22cc'+'.az.us\x22,\x22c'+'c.ca.us\x22,\x22'+'cc.co.us\x22,'+'\x22cc.ct.us\x22'+',\x22cc.dc.us'+'\x22,\x22cc.de.u'+'s\x22,\x22cc.fl.'+'us\x22,\x22cc.ga'+'.us\x22,\x22cc.g'+'u.us\x22,\x22cc.'+'hi.us\x22,\x22cc'+'.ia.us\x22,\x22c'+'c.id.us\x22,\x22'+'cc.il.us\x22,'+'\x22cc.in.us\x22'+',\x22cc.ks.us'+'\x22,\x22cc.ky.u'+'s\x22,\x22cc.la.'+'us\x22,\x22cc.ma'+'.us\x22,\x22cc.m'+'d.us\x22,\x22cc.'+'me.us\x22,\x22cc'+'.mi.us\x22,\x22c'+'c.mn.us\x22,\x22'+'cc.mo.us\x22,'+'\x22cc.ms.us\x22'+',\x22cc.mt.us'+'\x22,\x22cc.nc.u'+'s\x22,\x22cc.nd.'+'us\x22,\x22cc.ne'+'.us\x22,\x22cc.n'+'h.us\x22,\x22cc.'+'nj.us\x22,\x22cc'+'.nm.us\x22,\x22c'+'c.nv.us\x22,\x22'+'cc.ny.us\x22,'+'\x22cc.oh.us\x22'+',\x22cc.ok.us'+'\x22,\x22cc.or.u'+'s\x22,\x22cc.pa.'+'us\x22,\x22cc.pr'+'.us\x22,\x22cc.r'+'i.us\x22,\x22cc.'+'sc.us\x22,\x22cc'+'.sd.us\x22,\x22c'+'c.tn.us\x22,\x22'+'cc.tx.us\x22,'+'\x22cc.ut.us\x22'+',\x22cc.vi.us'+'\x22,\x22cc.vt.u'+'s\x22,\x22cc.va.'+'us\x22,\x22cc.wa'+'.us\x22,\x22cc.w'+'i.us\x22,\x22cc.'+'wv.us\x22,\x22cc'+'.wy.us\x22,\x22l'+'ib.ak.us\x22,'+'\x22lib.al.us'+'\x22,\x22lib.ar.'+'us\x22,\x22lib.a'+'s.us\x22,\x22lib'+'.az.us\x22,\x22l'+'ib.ca.us\x22,'+'\x22lib.co.us'+'\x22,\x22lib.ct.'+'us\x22,\x22lib.d'+'c.us\x22,\x22lib'+'.fl.us\x22,\x22l'+'ib.ga.us\x22,'+'\x22lib.gu.us')+('\x22,\x22lib.hi.'+'us\x22,\x22lib.i'+'a.us\x22,\x22lib'+'.id.us\x22,\x22l'+'ib.il.us\x22,'+'\x22lib.in.us'+'\x22,\x22lib.ks.'+'us\x22,\x22lib.k'+'y.us\x22,\x22lib'+'.la.us\x22,\x22l'+'ib.ma.us\x22,'+'\x22lib.md.us'+'\x22,\x22lib.me.'+'us\x22,\x22lib.m'+'i.us\x22,\x22lib'+'.mn.us\x22,\x22l'+'ib.mo.us\x22,'+'\x22lib.ms.us'+'\x22,\x22lib.mt.'+'us\x22,\x22lib.n'+'c.us\x22,\x22lib'+'.nd.us\x22,\x22l'+'ib.ne.us\x22,'+'\x22lib.nh.us'+'\x22,\x22lib.nj.'+'us\x22,\x22lib.n'+'m.us\x22,\x22lib'+'.nv.us\x22,\x22l'+'ib.ny.us\x22,'+'\x22lib.oh.us'+'\x22,\x22lib.ok.'+'us\x22,\x22lib.o'+'r.us\x22,\x22lib'+'.pa.us\x22,\x22l'+'ib.pr.us\x22,'+'\x22lib.ri.us'+'\x22,\x22lib.sc.'+'us\x22,\x22lib.s'+'d.us\x22,\x22lib'+'.tn.us\x22,\x22l'+'ib.tx.us\x22,'+'\x22lib.ut.us'+'\x22,\x22lib.vi.'+'us\x22,\x22lib.v'+'t.us\x22,\x22lib'+'.va.us\x22,\x22l'+'ib.wa.us\x22,'+'\x22lib.wi.us'+'\x22,\x22lib.wy.'+'us\x22,\x22pvt.k'+'12.ma.us\x22,'+'\x22chtr.k12.'+'ma.us\x22,\x22pa'+'roch.k12.m'+'a.us\x22,\x22ann'+'-arbor.mi.'+'us\x22,\x22cog.m'+'i.us\x22,\x22dst'+'.mi.us\x22,\x22e'+'aton.mi.us'+'\x22,\x22gen.mi.'+'us\x22,\x22mus.m'+'i.us\x22,\x22tec'+'.mi.us\x22,\x22w'+'ashtenaw.m'+'i.us\x22,\x22uy\x22'+',\x22com.uy\x22,'+'\x22edu.uy\x22,\x22'+'gub.uy\x22,\x22m'+'il.uy\x22,\x22ne'+'t.uy\x22,\x22org'+'.uy\x22,\x22uz\x22,'+'\x22co.uz\x22,\x22c'+'om.uz\x22,\x22ne'+'t.uz\x22,\x22org'+'.uz\x22,\x22va\x22,'+'\x22vc\x22,\x22com.'+'vc\x22,\x22net.v'+'c\x22,\x22org.vc'+'\x22,\x22gov.vc\x22'+',\x22mil.vc\x22,'+'\x22edu.vc\x22,\x22'+'ve\x22,\x22arts.'+'ve\x22,\x22co.ve'+'\x22,\x22com.ve\x22'+',\x22e12.ve\x22,'+'\x22edu.ve\x22,\x22'+'firm.ve\x22,\x22'+'gob.ve\x22,\x22g'+'ov.ve\x22,\x22in'+'fo.ve\x22,\x22in'+'t.ve\x22,\x22mil'+'.ve\x22,\x22net.'+'ve\x22,\x22org.v'+'e\x22,\x22rec.ve'+'\x22,\x22store.v'+'e\x22,\x22tec.ve'+'\x22,\x22web.ve\x22'+',\x22vg\x22,\x22vi\x22'+',\x22co.vi\x22,\x22')+('com.vi\x22,\x22k'+'12.vi\x22,\x22ne'+'t.vi\x22,\x22org'+'.vi\x22,\x22vn\x22,'+'\x22com.vn\x22,\x22'+'net.vn\x22,\x22o'+'rg.vn\x22,\x22ed'+'u.vn\x22,\x22gov'+'.vn\x22,\x22int.'+'vn\x22,\x22ac.vn'+'\x22,\x22biz.vn\x22'+',\x22info.vn\x22'+',\x22name.vn\x22'+',\x22pro.vn\x22,'+'\x22health.vn'+'\x22,\x22vu\x22,\x22co'+'m.vu\x22,\x22edu'+'.vu\x22,\x22net.'+'vu\x22,\x22org.v'+'u\x22,\x22wf\x22,\x22w'+'s\x22,\x22com.ws'+'\x22,\x22net.ws\x22'+',\x22org.ws\x22,'+'\x22gov.ws\x22,\x22'+'edu.ws\x22,\x22y'+'t\x22,\x22امارات'+'\x22,\x22հայ\x22,\x22ব'+'াংলা\x22,\x22бг\x22'+',\x22бел\x22,\x22中国'+'\x22,\x22中國\x22,\x22ال'+'جزائر\x22,\x22مص'+'ر\x22,\x22ею\x22,\x22ε'+'υ\x22,\x22موريتا'+'نيا\x22,\x22გე\x22,'+'\x22ελ\x22,\x22香港\x22,'+'\x22公司.香港\x22,\x22教'+'育.香港\x22,\x22政府.'+'香港\x22,\x22個人.香港'+'\x22,\x22網絡.香港\x22,'+'\x22組織.香港\x22,\x22ಭ'+'ಾರತ\x22,\x22ଭାରତ'+'\x22,\x22ভাৰত\x22,\x22'+'भारतम्\x22,\x22भ'+'ारोत\x22,\x22ڀار'+'ت\x22,\x22ഭാരതം\x22'+',\x22भारत\x22,\x22ب'+'ارت\x22,\x22بھار'+'ت\x22,\x22భారత్\x22'+',\x22ભારત\x22,\x22ਭ'+'ਾਰਤ\x22,\x22ভারত'+'\x22,\x22இந்தியா'+'\x22,\x22ایران\x22,'+'\x22ايران\x22,\x22ع'+'راق\x22,\x22الار'+'دن\x22,\x22한국\x22,\x22'+'қаз\x22,\x22ලංකා'+'\x22,\x22இலங்கை\x22'+',\x22المغرب\x22,'+'\x22мкд\x22,\x22мон'+'\x22,\x22澳門\x22,\x22澳门'+'\x22,\x22مليسيا\x22'+',\x22عمان\x22,\x22پ'+'اکستان\x22,\x22پ'+'اكستان\x22,\x22ف'+'لسطين\x22,\x22ср'+'б\x22,\x22пр.срб'+'\x22,\x22орг.срб'+'\x22,\x22обр.срб'+'\x22,\x22од.срб\x22'+',\x22упр.срб\x22'+',\x22ак.срб\x22,'+'\x22рф\x22,\x22قطر\x22'+',\x22السعودية'+'\x22,\x22السعودی'+'ة\x22,\x22السعود'+'یۃ\x22,\x22السعو'+'ديه\x22,\x22سودا'+'ن\x22,\x22新加坡\x22,\x22'+'சிங்கப்பூர'+'்\x22,\x22سورية\x22'+',\x22سوريا\x22,\x22'+'ไทย\x22,\x22ศึกษ'+'า.ไทย\x22,\x22ธุ'+'รกิจ.ไทย\x22,'+'\x22รัฐบาล.ไท'+'ย\x22,\x22ทหาร.ไ'+'ทย\x22,\x22เน็ต.'+'ไทย\x22,\x22องค์'+'กร.ไทย\x22,\x22ت'+'ونس\x22,\x22台灣\x22,'+'\x22台湾\x22,\x22臺灣\x22,'+'\x22укр\x22,\x22الي'+'من\x22,\x22xxx\x22,'+'\x22*.ye\x22,\x22ac'+'.za\x22,\x22agri'+'c.za\x22,\x22alt'+'.za\x22,\x22co.z'+'a\x22,\x22edu.za'+'\x22,\x22gov.za\x22'+',\x22grondar.')+('za\x22,\x22law.z'+'a\x22,\x22mil.za'+'\x22,\x22net.za\x22'+',\x22ngo.za\x22,'+'\x22nic.za\x22,\x22'+'nis.za\x22,\x22n'+'om.za\x22,\x22or'+'g.za\x22,\x22sch'+'ool.za\x22,\x22t'+'m.za\x22,\x22web'+'.za\x22,\x22zm\x22,'+'\x22ac.zm\x22,\x22b'+'iz.zm\x22,\x22co'+'.zm\x22,\x22com.'+'zm\x22,\x22edu.z'+'m\x22,\x22gov.zm'+'\x22,\x22info.zm'+'\x22,\x22mil.zm\x22'+',\x22net.zm\x22,'+'\x22org.zm\x22,\x22'+'sch.zm\x22,\x22z'+'w\x22,\x22ac.zw\x22'+',\x22co.zw\x22,\x22'+'gov.zw\x22,\x22m'+'il.zw\x22,\x22or'+'g.zw\x22,\x22aaa'+'\x22,\x22aarp\x22,\x22'+'abarth\x22,\x22a'+'bb\x22,\x22abbot'+'t\x22,\x22abbvie'+'\x22,\x22abc\x22,\x22a'+'ble\x22,\x22abog'+'ado\x22,\x22abud'+'habi\x22,\x22aca'+'demy\x22,\x22acc'+'enture\x22,\x22a'+'ccountant\x22'+',\x22accounta'+'nts\x22,\x22aco\x22'+',\x22actor\x22,\x22'+'adac\x22,\x22ads'+'\x22,\x22adult\x22,'+'\x22aeg\x22,\x22aet'+'na\x22,\x22afami'+'lycompany\x22'+',\x22afl\x22,\x22af'+'rica\x22,\x22aga'+'khan\x22,\x22age'+'ncy\x22,\x22aig\x22'+',\x22aigo\x22,\x22a'+'irbus\x22,\x22ai'+'rforce\x22,\x22a'+'irtel\x22,\x22ak'+'dn\x22,\x22alfar'+'omeo\x22,\x22ali'+'baba\x22,\x22ali'+'pay\x22,\x22allf'+'inanz\x22,\x22al'+'lstate\x22,\x22a'+'lly\x22,\x22alsa'+'ce\x22,\x22alsto'+'m\x22,\x22amazon'+'\x22,\x22america'+'nexpress\x22,'+'\x22americanf'+'amily\x22,\x22am'+'ex\x22,\x22amfam'+'\x22,\x22amica\x22,'+'\x22amsterdam'+'\x22,\x22analyti'+'cs\x22,\x22andro'+'id\x22,\x22anqua'+'n\x22,\x22anz\x22,\x22'+'aol\x22,\x22apar'+'tments\x22,\x22a'+'pp\x22,\x22apple'+'\x22,\x22aquarel'+'le\x22,\x22arab\x22'+',\x22aramco\x22,'+'\x22archi\x22,\x22a'+'rmy\x22,\x22art\x22'+',\x22arte\x22,\x22a'+'sda\x22,\x22asso'+'ciates\x22,\x22a'+'thleta\x22,\x22a'+'ttorney\x22,\x22'+'auction\x22,\x22'+'audi\x22,\x22aud'+'ible\x22,\x22aud'+'io\x22,\x22auspo'+'st\x22,\x22autho'+'r\x22,\x22auto\x22,'+'\x22autos\x22,\x22a'+'vianca\x22,\x22a'+'ws\x22,\x22axa\x22,'+'\x22azure\x22,\x22b'+'aby\x22,\x22baid'+'u\x22,\x22baname'+'x\x22,\x22banana'+'republic\x22,')+('\x22band\x22,\x22ba'+'nk\x22,\x22bar\x22,'+'\x22barcelona'+'\x22,\x22barclay'+'card\x22,\x22bar'+'clays\x22,\x22ba'+'refoot\x22,\x22b'+'argains\x22,\x22'+'baseball\x22,'+'\x22basketbal'+'l\x22,\x22bauhau'+'s\x22,\x22bayern'+'\x22,\x22bbc\x22,\x22b'+'bt\x22,\x22bbva\x22'+',\x22bcg\x22,\x22bc'+'n\x22,\x22beats\x22'+',\x22beauty\x22,'+'\x22beer\x22,\x22be'+'ntley\x22,\x22be'+'rlin\x22,\x22bes'+'t\x22,\x22bestbu'+'y\x22,\x22bet\x22,\x22'+'bharti\x22,\x22b'+'ible\x22,\x22bid'+'\x22,\x22bike\x22,\x22'+'bing\x22,\x22bin'+'go\x22,\x22bio\x22,'+'\x22black\x22,\x22b'+'lackfriday'+'\x22,\x22blockbu'+'ster\x22,\x22blo'+'g\x22,\x22bloomb'+'erg\x22,\x22blue'+'\x22,\x22bms\x22,\x22b'+'mw\x22,\x22bnppa'+'ribas\x22,\x22bo'+'ats\x22,\x22boeh'+'ringer\x22,\x22b'+'ofa\x22,\x22bom\x22'+',\x22bond\x22,\x22b'+'oo\x22,\x22book\x22'+',\x22booking\x22'+',\x22bosch\x22,\x22'+'bostik\x22,\x22b'+'oston\x22,\x22bo'+'t\x22,\x22boutiq'+'ue\x22,\x22box\x22,'+'\x22bradesco\x22'+',\x22bridgest'+'one\x22,\x22broa'+'dway\x22,\x22bro'+'ker\x22,\x22brot'+'her\x22,\x22brus'+'sels\x22,\x22bud'+'apest\x22,\x22bu'+'gatti\x22,\x22bu'+'ild\x22,\x22buil'+'ders\x22,\x22bus'+'iness\x22,\x22bu'+'y\x22,\x22buzz\x22,'+'\x22bzh\x22,\x22cab'+'\x22,\x22cafe\x22,\x22'+'cal\x22,\x22call'+'\x22,\x22calvink'+'lein\x22,\x22cam'+'\x22,\x22camera\x22'+',\x22camp\x22,\x22c'+'ancerresea'+'rch\x22,\x22cano'+'n\x22,\x22capeto'+'wn\x22,\x22capit'+'al\x22,\x22capit'+'alone\x22,\x22ca'+'r\x22,\x22carava'+'n\x22,\x22cards\x22'+',\x22care\x22,\x22c'+'areer\x22,\x22ca'+'reers\x22,\x22ca'+'rs\x22,\x22casa\x22'+',\x22case\x22,\x22c'+'aseih\x22,\x22ca'+'sh\x22,\x22casin'+'o\x22,\x22cateri'+'ng\x22,\x22catho'+'lic\x22,\x22cba\x22'+',\x22cbn\x22,\x22cb'+'re\x22,\x22cbs\x22,'+'\x22ceb\x22,\x22cen'+'ter\x22,\x22ceo\x22'+',\x22cern\x22,\x22c'+'fa\x22,\x22cfd\x22,'+'\x22chanel\x22,\x22'+'channel\x22,\x22'+'charity\x22,\x22'+'chase\x22,\x22ch'+'at\x22,\x22cheap'+'\x22,\x22chintai'+'\x22,\x22christm'+'as\x22,\x22chrom'+'e\x22,\x22church')+('\x22,\x22ciprian'+'i\x22,\x22circle'+'\x22,\x22cisco\x22,'+'\x22citadel\x22,'+'\x22citi\x22,\x22ci'+'tic\x22,\x22city'+'\x22,\x22cityeat'+'s\x22,\x22claims'+'\x22,\x22cleanin'+'g\x22,\x22click\x22'+',\x22clinic\x22,'+'\x22clinique\x22'+',\x22clothing'+'\x22,\x22cloud\x22,'+'\x22club\x22,\x22cl'+'ubmed\x22,\x22co'+'ach\x22,\x22code'+'s\x22,\x22coffee'+'\x22,\x22college'+'\x22,\x22cologne'+'\x22,\x22comcast'+'\x22,\x22commban'+'k\x22,\x22commun'+'ity\x22,\x22comp'+'any\x22,\x22comp'+'are\x22,\x22comp'+'uter\x22,\x22com'+'sec\x22,\x22cond'+'os\x22,\x22const'+'ruction\x22,\x22'+'consulting'+'\x22,\x22contact'+'\x22,\x22contrac'+'tors\x22,\x22coo'+'king\x22,\x22coo'+'kingchanne'+'l\x22,\x22cool\x22,'+'\x22corsica\x22,'+'\x22country\x22,'+'\x22coupon\x22,\x22'+'coupons\x22,\x22'+'courses\x22,\x22'+'cpa\x22,\x22cred'+'it\x22,\x22credi'+'tcard\x22,\x22cr'+'editunion\x22'+',\x22cricket\x22'+',\x22crown\x22,\x22'+'crs\x22,\x22crui'+'se\x22,\x22cruis'+'es\x22,\x22csc\x22,'+'\x22cuisinell'+'a\x22,\x22cymru\x22'+',\x22cyou\x22,\x22d'+'abur\x22,\x22dad'+'\x22,\x22dance\x22,'+'\x22data\x22,\x22da'+'te\x22,\x22datin'+'g\x22,\x22datsun'+'\x22,\x22day\x22,\x22d'+'clk\x22,\x22dds\x22'+',\x22deal\x22,\x22d'+'ealer\x22,\x22de'+'als\x22,\x22degr'+'ee\x22,\x22deliv'+'ery\x22,\x22dell'+'\x22,\x22deloitt'+'e\x22,\x22delta\x22'+',\x22democrat'+'\x22,\x22dental\x22'+',\x22dentist\x22'+',\x22desi\x22,\x22d'+'esign\x22,\x22de'+'v\x22,\x22dhl\x22,\x22'+'diamonds\x22,'+'\x22diet\x22,\x22di'+'gital\x22,\x22di'+'rect\x22,\x22dir'+'ectory\x22,\x22d'+'iscount\x22,\x22'+'discover\x22,'+'\x22dish\x22,\x22di'+'y\x22,\x22dnp\x22,\x22'+'docs\x22,\x22doc'+'tor\x22,\x22dog\x22'+',\x22domains\x22'+',\x22dot\x22,\x22do'+'wnload\x22,\x22d'+'rive\x22,\x22dtv'+'\x22,\x22dubai\x22,'+'\x22duck\x22,\x22du'+'nlop\x22,\x22dup'+'ont\x22,\x22durb'+'an\x22,\x22dvag\x22'+',\x22dvr\x22,\x22ea'+'rth\x22,\x22eat\x22'+',\x22eco\x22,\x22ed'+'eka\x22,\x22educ'+'ation\x22,\x22em'+'ail\x22,\x22emer')+('ck\x22,\x22energ'+'y\x22,\x22engine'+'er\x22,\x22engin'+'eering\x22,\x22e'+'nterprises'+'\x22,\x22epson\x22,'+'\x22equipment'+'\x22,\x22ericsso'+'n\x22,\x22erni\x22,'+'\x22esq\x22,\x22est'+'ate\x22,\x22esur'+'ance\x22,\x22eti'+'salat\x22,\x22eu'+'rovision\x22,'+'\x22eus\x22,\x22eve'+'nts\x22,\x22exch'+'ange\x22,\x22exp'+'ert\x22,\x22expo'+'sed\x22,\x22expr'+'ess\x22,\x22extr'+'aspace\x22,\x22f'+'age\x22,\x22fail'+'\x22,\x22fairwin'+'ds\x22,\x22faith'+'\x22,\x22family\x22'+',\x22fan\x22,\x22fa'+'ns\x22,\x22farm\x22'+',\x22farmers\x22'+',\x22fashion\x22'+',\x22fast\x22,\x22f'+'edex\x22,\x22fee'+'dback\x22,\x22fe'+'rrari\x22,\x22fe'+'rrero\x22,\x22fi'+'at\x22,\x22fidel'+'ity\x22,\x22fido'+'\x22,\x22film\x22,\x22'+'final\x22,\x22fi'+'nance\x22,\x22fi'+'nancial\x22,\x22'+'fire\x22,\x22fir'+'estone\x22,\x22f'+'irmdale\x22,\x22'+'fish\x22,\x22fis'+'hing\x22,\x22fit'+'\x22,\x22fitness'+'\x22,\x22flickr\x22'+',\x22flights\x22'+',\x22flir\x22,\x22f'+'lorist\x22,\x22f'+'lowers\x22,\x22f'+'ly\x22,\x22foo\x22,'+'\x22food\x22,\x22fo'+'odnetwork\x22'+',\x22football'+'\x22,\x22ford\x22,\x22'+'forex\x22,\x22fo'+'rsale\x22,\x22fo'+'rum\x22,\x22foun'+'dation\x22,\x22f'+'ox\x22,\x22free\x22'+',\x22freseniu'+'s\x22,\x22frl\x22,\x22'+'frogans\x22,\x22'+'frontdoor\x22'+',\x22frontier'+'\x22,\x22ftr\x22,\x22f'+'ujitsu\x22,\x22f'+'ujixerox\x22,'+'\x22fun\x22,\x22fun'+'d\x22,\x22furnit'+'ure\x22,\x22futb'+'ol\x22,\x22fyi\x22,'+'\x22gal\x22,\x22gal'+'lery\x22,\x22gal'+'lo\x22,\x22gallu'+'p\x22,\x22game\x22,'+'\x22games\x22,\x22g'+'ap\x22,\x22garde'+'n\x22,\x22gay\x22,\x22'+'gbiz\x22,\x22gdn'+'\x22,\x22gea\x22,\x22g'+'ent\x22,\x22gent'+'ing\x22,\x22geor'+'ge\x22,\x22ggee\x22'+',\x22gift\x22,\x22g'+'ifts\x22,\x22giv'+'es\x22,\x22givin'+'g\x22,\x22glade\x22'+',\x22glass\x22,\x22'+'gle\x22,\x22glob'+'al\x22,\x22globo'+'\x22,\x22gmail\x22,'+'\x22gmbh\x22,\x22gm'+'o\x22,\x22gmx\x22,\x22'+'godaddy\x22,\x22'+'gold\x22,\x22gol'+'dpoint\x22,\x22g'+'olf\x22,\x22goo\x22'+',\x22goodyear')+('\x22,\x22goog\x22,\x22'+'google\x22,\x22g'+'op\x22,\x22got\x22,'+'\x22grainger\x22'+',\x22graphics'+'\x22,\x22gratis\x22'+',\x22green\x22,\x22'+'gripe\x22,\x22gr'+'ocery\x22,\x22gr'+'oup\x22,\x22guar'+'dian\x22,\x22guc'+'ci\x22,\x22guge\x22'+',\x22guide\x22,\x22'+'guitars\x22,\x22'+'guru\x22,\x22hai'+'r\x22,\x22hambur'+'g\x22,\x22hangou'+'t\x22,\x22haus\x22,'+'\x22hbo\x22,\x22hdf'+'c\x22,\x22hdfcba'+'nk\x22,\x22healt'+'h\x22,\x22health'+'care\x22,\x22hel'+'p\x22,\x22helsin'+'ki\x22,\x22here\x22'+',\x22hermes\x22,'+'\x22hgtv\x22,\x22hi'+'phop\x22,\x22his'+'amitsu\x22,\x22h'+'itachi\x22,\x22h'+'iv\x22,\x22hkt\x22,'+'\x22hockey\x22,\x22'+'holdings\x22,'+'\x22holiday\x22,'+'\x22homedepot'+'\x22,\x22homegoo'+'ds\x22,\x22homes'+'\x22,\x22homesen'+'se\x22,\x22honda'+'\x22,\x22horse\x22,'+'\x22hospital\x22'+',\x22host\x22,\x22h'+'osting\x22,\x22h'+'ot\x22,\x22hotel'+'es\x22,\x22hotel'+'s\x22,\x22hotmai'+'l\x22,\x22house\x22'+',\x22how\x22,\x22hs'+'bc\x22,\x22hughe'+'s\x22,\x22hyatt\x22'+',\x22hyundai\x22'+',\x22ibm\x22,\x22ic'+'bc\x22,\x22ice\x22,'+'\x22icu\x22,\x22iee'+'e\x22,\x22ifm\x22,\x22'+'ikano\x22,\x22im'+'amat\x22,\x22imd'+'b\x22,\x22immo\x22,'+'\x22immobilie'+'n\x22,\x22inc\x22,\x22'+'industries'+'\x22,\x22infinit'+'i\x22,\x22ing\x22,\x22'+'ink\x22,\x22inst'+'itute\x22,\x22in'+'surance\x22,\x22'+'insure\x22,\x22i'+'ntel\x22,\x22int'+'ernational'+'\x22,\x22intuit\x22'+',\x22investme'+'nts\x22,\x22ipir'+'anga\x22,\x22iri'+'sh\x22,\x22ismai'+'li\x22,\x22ist\x22,'+'\x22istanbul\x22'+',\x22itau\x22,\x22i'+'tv\x22,\x22iveco'+'\x22,\x22jaguar\x22'+',\x22java\x22,\x22j'+'cb\x22,\x22jcp\x22,'+'\x22jeep\x22,\x22je'+'tzt\x22,\x22jewe'+'lry\x22,\x22jio\x22'+',\x22jll\x22,\x22jm'+'p\x22,\x22jnj\x22,\x22'+'joburg\x22,\x22j'+'ot\x22,\x22joy\x22,'+'\x22jpmorgan\x22'+',\x22jprs\x22,\x22j'+'uegos\x22,\x22ju'+'niper\x22,\x22ka'+'ufen\x22,\x22kdd'+'i\x22,\x22kerryh'+'otels\x22,\x22ke'+'rrylogisti'+'cs\x22,\x22kerry'+'properties'+'\x22,\x22kfh\x22,\x22k'+'ia\x22,\x22kim\x22,')+('\x22kinder\x22,\x22'+'kindle\x22,\x22k'+'itchen\x22,\x22k'+'iwi\x22,\x22koel'+'n\x22,\x22komats'+'u\x22,\x22kosher'+'\x22,\x22kpmg\x22,\x22'+'kpn\x22,\x22krd\x22'+',\x22kred\x22,\x22k'+'uokgroup\x22,'+'\x22kyoto\x22,\x22l'+'acaixa\x22,\x22l'+'amborghini'+'\x22,\x22lamer\x22,'+'\x22lancaster'+'\x22,\x22lancia\x22'+',\x22land\x22,\x22l'+'androver\x22,'+'\x22lanxess\x22,'+'\x22lasalle\x22,'+'\x22lat\x22,\x22lat'+'ino\x22,\x22latr'+'obe\x22,\x22law\x22'+',\x22lawyer\x22,'+'\x22lds\x22,\x22lea'+'se\x22,\x22lecle'+'rc\x22,\x22lefra'+'k\x22,\x22legal\x22'+',\x22lego\x22,\x22l'+'exus\x22,\x22lgb'+'t\x22,\x22lidl\x22,'+'\x22life\x22,\x22li'+'feinsuranc'+'e\x22,\x22lifest'+'yle\x22,\x22ligh'+'ting\x22,\x22lik'+'e\x22,\x22lilly\x22'+',\x22limited\x22'+',\x22limo\x22,\x22l'+'incoln\x22,\x22l'+'inde\x22,\x22lin'+'k\x22,\x22lipsy\x22'+',\x22live\x22,\x22l'+'iving\x22,\x22li'+'xil\x22,\x22llc\x22'+',\x22llp\x22,\x22lo'+'an\x22,\x22loans'+'\x22,\x22locker\x22'+',\x22locus\x22,\x22'+'loft\x22,\x22lol'+'\x22,\x22london\x22'+',\x22lotte\x22,\x22'+'lotto\x22,\x22lo'+'ve\x22,\x22lpl\x22,'+'\x22lplfinanc'+'ial\x22,\x22ltd\x22'+',\x22ltda\x22,\x22l'+'undbeck\x22,\x22'+'lupin\x22,\x22lu'+'xe\x22,\x22luxur'+'y\x22,\x22macys\x22'+',\x22madrid\x22,'+'\x22maif\x22,\x22ma'+'ison\x22,\x22mak'+'eup\x22,\x22man\x22'+',\x22manageme'+'nt\x22,\x22mango'+'\x22,\x22map\x22,\x22m'+'arket\x22,\x22ma'+'rketing\x22,\x22'+'markets\x22,\x22'+'marriott\x22,'+'\x22marshalls'+'\x22,\x22maserat'+'i\x22,\x22mattel'+'\x22,\x22mba\x22,\x22m'+'ckinsey\x22,\x22'+'med\x22,\x22medi'+'a\x22,\x22meet\x22,'+'\x22melbourne'+'\x22,\x22meme\x22,\x22'+'memorial\x22,'+'\x22men\x22,\x22men'+'u\x22,\x22merckm'+'sd\x22,\x22metli'+'fe\x22,\x22miami'+'\x22,\x22microso'+'ft\x22,\x22mini\x22'+',\x22mint\x22,\x22m'+'it\x22,\x22mitsu'+'bishi\x22,\x22ml'+'b\x22,\x22mls\x22,\x22'+'mma\x22,\x22mobi'+'le\x22,\x22moda\x22'+',\x22moe\x22,\x22mo'+'i\x22,\x22mom\x22,\x22'+'monash\x22,\x22m'+'oney\x22,\x22mon'+'ster\x22,\x22mor'+'mon\x22,\x22mort')+('gage\x22,\x22mos'+'cow\x22,\x22moto'+'\x22,\x22motorcy'+'cles\x22,\x22mov'+'\x22,\x22movie\x22,'+'\x22msd\x22,\x22mtn'+'\x22,\x22mtr\x22,\x22m'+'utual\x22,\x22na'+'b\x22,\x22nadex\x22'+',\x22nagoya\x22,'+'\x22nationwid'+'e\x22,\x22natura'+'\x22,\x22navy\x22,\x22'+'nba\x22,\x22nec\x22'+',\x22netbank\x22'+',\x22netflix\x22'+',\x22network\x22'+',\x22neustar\x22'+',\x22new\x22,\x22ne'+'wholland\x22,'+'\x22news\x22,\x22ne'+'xt\x22,\x22nextd'+'irect\x22,\x22ne'+'xus\x22,\x22nfl\x22'+',\x22ngo\x22,\x22nh'+'k\x22,\x22nico\x22,'+'\x22nike\x22,\x22ni'+'kon\x22,\x22ninj'+'a\x22,\x22nissan'+'\x22,\x22nissay\x22'+',\x22nokia\x22,\x22'+'northweste'+'rnmutual\x22,'+'\x22norton\x22,\x22'+'now\x22,\x22nowr'+'uz\x22,\x22nowtv'+'\x22,\x22nra\x22,\x22n'+'rw\x22,\x22ntt\x22,'+'\x22nyc\x22,\x22obi'+'\x22,\x22observe'+'r\x22,\x22off\x22,\x22'+'office\x22,\x22o'+'kinawa\x22,\x22o'+'layan\x22,\x22ol'+'ayangroup\x22'+',\x22oldnavy\x22'+',\x22ollo\x22,\x22o'+'mega\x22,\x22one'+'\x22,\x22ong\x22,\x22o'+'nl\x22,\x22onlin'+'e\x22,\x22onyour'+'side\x22,\x22ooo'+'\x22,\x22open\x22,\x22'+'oracle\x22,\x22o'+'range\x22,\x22or'+'ganic\x22,\x22or'+'igins\x22,\x22os'+'aka\x22,\x22otsu'+'ka\x22,\x22ott\x22,'+'\x22ovh\x22,\x22pag'+'e\x22,\x22panaso'+'nic\x22,\x22pari'+'s\x22,\x22pars\x22,'+'\x22partners\x22'+',\x22parts\x22,\x22'+'party\x22,\x22pa'+'ssagens\x22,\x22'+'pay\x22,\x22pccw'+'\x22,\x22pet\x22,\x22p'+'fizer\x22,\x22ph'+'armacy\x22,\x22p'+'hd\x22,\x22phili'+'ps\x22,\x22phone'+'\x22,\x22photo\x22,'+'\x22photograp'+'hy\x22,\x22photo'+'s\x22,\x22physio'+'\x22,\x22pics\x22,\x22'+'pictet\x22,\x22p'+'ictures\x22,\x22'+'pid\x22,\x22pin\x22'+',\x22ping\x22,\x22p'+'ink\x22,\x22pion'+'eer\x22,\x22pizz'+'a\x22,\x22place\x22'+',\x22play\x22,\x22p'+'laystation'+'\x22,\x22plumbin'+'g\x22,\x22plus\x22,'+'\x22pnc\x22,\x22poh'+'l\x22,\x22poker\x22'+',\x22politie\x22'+',\x22porn\x22,\x22p'+'ramerica\x22,'+'\x22praxi\x22,\x22p'+'ress\x22,\x22pri'+'me\x22,\x22prod\x22'+',\x22producti'+'ons\x22,\x22prof'+'\x22,\x22progres')+('sive\x22,\x22pro'+'mo\x22,\x22prope'+'rties\x22,\x22pr'+'operty\x22,\x22p'+'rotection\x22'+',\x22pru\x22,\x22pr'+'udential\x22,'+'\x22pub\x22,\x22pwc'+'\x22,\x22qpon\x22,\x22'+'quebec\x22,\x22q'+'uest\x22,\x22qvc'+'\x22,\x22racing\x22'+',\x22radio\x22,\x22'+'raid\x22,\x22rea'+'d\x22,\x22reales'+'tate\x22,\x22rea'+'ltor\x22,\x22rea'+'lty\x22,\x22reci'+'pes\x22,\x22red\x22'+',\x22redstone'+'\x22,\x22redumbr'+'ella\x22,\x22reh'+'ab\x22,\x22reise'+'\x22,\x22reisen\x22'+',\x22reit\x22,\x22r'+'eliance\x22,\x22'+'ren\x22,\x22rent'+'\x22,\x22rentals'+'\x22,\x22repair\x22'+',\x22report\x22,'+'\x22republica'+'n\x22,\x22rest\x22,'+'\x22restauran'+'t\x22,\x22review'+'\x22,\x22reviews'+'\x22,\x22rexroth'+'\x22,\x22rich\x22,\x22'+'richardli\x22'+',\x22ricoh\x22,\x22'+'rightathom'+'e\x22,\x22ril\x22,\x22'+'rio\x22,\x22rip\x22'+',\x22rmit\x22,\x22r'+'ocher\x22,\x22ro'+'cks\x22,\x22rode'+'o\x22,\x22rogers'+'\x22,\x22room\x22,\x22'+'rsvp\x22,\x22rug'+'by\x22,\x22ruhr\x22'+',\x22run\x22,\x22rw'+'e\x22,\x22ryukyu'+'\x22,\x22saarlan'+'d\x22,\x22safe\x22,'+'\x22safety\x22,\x22'+'sakura\x22,\x22s'+'ale\x22,\x22salo'+'n\x22,\x22samscl'+'ub\x22,\x22samsu'+'ng\x22,\x22sandv'+'ik\x22,\x22sandv'+'ikcoromant'+'\x22,\x22sanofi\x22'+',\x22sap\x22,\x22sa'+'rl\x22,\x22sas\x22,'+'\x22save\x22,\x22sa'+'xo\x22,\x22sbi\x22,'+'\x22sbs\x22,\x22sca'+'\x22,\x22scb\x22,\x22s'+'chaeffler\x22'+',\x22schmidt\x22'+',\x22scholars'+'hips\x22,\x22sch'+'ool\x22,\x22schu'+'le\x22,\x22schwa'+'rz\x22,\x22scien'+'ce\x22,\x22scjoh'+'nson\x22,\x22sco'+'r\x22,\x22scot\x22,'+'\x22search\x22,\x22'+'seat\x22,\x22sec'+'ure\x22,\x22secu'+'rity\x22,\x22see'+'k\x22,\x22select'+'\x22,\x22sener\x22,'+'\x22services\x22'+',\x22ses\x22,\x22se'+'ven\x22,\x22sew\x22'+',\x22sex\x22,\x22se'+'xy\x22,\x22sfr\x22,'+'\x22shangrila'+'\x22,\x22sharp\x22,'+'\x22shaw\x22,\x22sh'+'ell\x22,\x22shia'+'\x22,\x22shiksha'+'\x22,\x22shoes\x22,'+'\x22shop\x22,\x22sh'+'opping\x22,\x22s'+'houji\x22,\x22sh'+'ow\x22,\x22showt'+'ime\x22,\x22shri')+('ram\x22,\x22silk'+'\x22,\x22sina\x22,\x22'+'singles\x22,\x22'+'site\x22,\x22ski'+'\x22,\x22skin\x22,\x22'+'sky\x22,\x22skyp'+'e\x22,\x22sling\x22'+',\x22smart\x22,\x22'+'smile\x22,\x22sn'+'cf\x22,\x22socce'+'r\x22,\x22social'+'\x22,\x22softban'+'k\x22,\x22softwa'+'re\x22,\x22sohu\x22'+',\x22solar\x22,\x22'+'solutions\x22'+',\x22song\x22,\x22s'+'ony\x22,\x22soy\x22'+',\x22spa\x22,\x22sp'+'ace\x22,\x22spor'+'t\x22,\x22spot\x22,'+'\x22spreadbet'+'ting\x22,\x22srl'+'\x22,\x22stada\x22,'+'\x22staples\x22,'+'\x22star\x22,\x22st'+'atebank\x22,\x22'+'statefarm\x22'+',\x22stc\x22,\x22st'+'cgroup\x22,\x22s'+'tockholm\x22,'+'\x22storage\x22,'+'\x22store\x22,\x22s'+'tream\x22,\x22st'+'udio\x22,\x22stu'+'dy\x22,\x22style'+'\x22,\x22sucks\x22,'+'\x22supplies\x22'+',\x22supply\x22,'+'\x22support\x22,'+'\x22surf\x22,\x22su'+'rgery\x22,\x22su'+'zuki\x22,\x22swa'+'tch\x22,\x22swif'+'tcover\x22,\x22s'+'wiss\x22,\x22syd'+'ney\x22,\x22syma'+'ntec\x22,\x22sys'+'tems\x22,\x22tab'+'\x22,\x22taipei\x22'+',\x22talk\x22,\x22t'+'aobao\x22,\x22ta'+'rget\x22,\x22tat'+'amotors\x22,\x22'+'tatar\x22,\x22ta'+'ttoo\x22,\x22tax'+'\x22,\x22taxi\x22,\x22'+'tci\x22,\x22tdk\x22'+',\x22team\x22,\x22t'+'ech\x22,\x22tech'+'nology\x22,\x22t'+'emasek\x22,\x22t'+'ennis\x22,\x22te'+'va\x22,\x22thd\x22,'+'\x22theater\x22,'+'\x22theatre\x22,'+'\x22tiaa\x22,\x22ti'+'ckets\x22,\x22ti'+'enda\x22,\x22tif'+'fany\x22,\x22tip'+'s\x22,\x22tires\x22'+',\x22tirol\x22,\x22'+'tjmaxx\x22,\x22t'+'jx\x22,\x22tkmax'+'x\x22,\x22tmall\x22'+',\x22today\x22,\x22'+'tokyo\x22,\x22to'+'ols\x22,\x22top\x22'+',\x22toray\x22,\x22'+'toshiba\x22,\x22'+'total\x22,\x22to'+'urs\x22,\x22town'+'\x22,\x22toyota\x22'+',\x22toys\x22,\x22t'+'rade\x22,\x22tra'+'ding\x22,\x22tra'+'ining\x22,\x22tr'+'avel\x22,\x22tra'+'velchannel'+'\x22,\x22travele'+'rs\x22,\x22trave'+'lersinsura'+'nce\x22,\x22trus'+'t\x22,\x22trv\x22,\x22'+'tube\x22,\x22tui'+'\x22,\x22tunes\x22,'+'\x22tushu\x22,\x22t'+'vs\x22,\x22ubank'+'\x22,\x22ubs\x22,\x22u'+'nicom\x22,\x22un')+('iversity\x22,'+'\x22uno\x22,\x22uol'+'\x22,\x22ups\x22,\x22v'+'acations\x22,'+'\x22vana\x22,\x22va'+'nguard\x22,\x22v'+'egas\x22,\x22ven'+'tures\x22,\x22ve'+'risign\x22,\x22v'+'ersicherun'+'g\x22,\x22vet\x22,\x22'+'viajes\x22,\x22v'+'ideo\x22,\x22vig'+'\x22,\x22viking\x22'+',\x22villas\x22,'+'\x22vin\x22,\x22vip'+'\x22,\x22virgin\x22'+',\x22visa\x22,\x22v'+'ision\x22,\x22vi'+'va\x22,\x22vivo\x22'+',\x22vlaander'+'en\x22,\x22vodka'+'\x22,\x22volkswa'+'gen\x22,\x22volv'+'o\x22,\x22vote\x22,'+'\x22voting\x22,\x22'+'voto\x22,\x22voy'+'age\x22,\x22vuel'+'os\x22,\x22wales'+'\x22,\x22walmart'+'\x22,\x22walter\x22'+',\x22wang\x22,\x22w'+'anggou\x22,\x22w'+'atch\x22,\x22wat'+'ches\x22,\x22wea'+'ther\x22,\x22wea'+'therchanne'+'l\x22,\x22webcam'+'\x22,\x22weber\x22,'+'\x22website\x22,'+'\x22wed\x22,\x22wed'+'ding\x22,\x22wei'+'bo\x22,\x22weir\x22'+',\x22whoswho\x22'+',\x22wien\x22,\x22w'+'iki\x22,\x22will'+'iamhill\x22,\x22'+'win\x22,\x22wind'+'ows\x22,\x22wine'+'\x22,\x22winners'+'\x22,\x22wme\x22,\x22w'+'olterskluw'+'er\x22,\x22woods'+'ide\x22,\x22work'+'\x22,\x22works\x22,'+'\x22world\x22,\x22w'+'ow\x22,\x22wtc\x22,'+'\x22wtf\x22,\x22xbo'+'x\x22,\x22xerox\x22'+',\x22xfinity\x22'+',\x22xihuan\x22,'+'\x22xin\x22,\x22कॉम'+'\x22,\x22セール\x22,\x22佛'+'山\x22,\x22慈善\x22,\x22集'+'团\x22,\x22在线\x22,\x22大'+'众汽车\x22,\x22点看\x22,'+'\x22คอม\x22,\x22八卦\x22'+',\x22موقع\x22,\x22公'+'益\x22,\x22公司\x22,\x22香'+'格里拉\x22,\x22网站\x22,'+'\x22移动\x22,\x22我爱你\x22'+',\x22москва\x22,'+'\x22католик\x22,'+'\x22онлайн\x22,\x22'+'сайт\x22,\x22联通\x22'+',\x22קום\x22,\x22时尚'+'\x22,\x22微博\x22,\x22淡马'+'锡\x22,\x22ファッション'+'\x22,\x22орг\x22,\x22न'+'ेट\x22,\x22ストア\x22,'+'\x22アマゾン\x22,\x22삼성'+'\x22,\x22商标\x22,\x22商店'+'\x22,\x22商城\x22,\x22де'+'ти\x22,\x22ポイント\x22'+',\x22新闻\x22,\x22工行\x22'+',\x22家電\x22,\x22كوم'+'\x22,\x22中文网\x22,\x22中'+'信\x22,\x22娱乐\x22,\x22谷'+'歌\x22,\x22電訊盈科\x22,'+'\x22购物\x22,\x22クラウド'+'\x22,\x22通販\x22,\x22网店'+'\x22,\x22संगठन\x22,'+'\x22餐厅\x22,\x22网络\x22,'+'\x22ком\x22,\x22亚马逊'+'\x22,\x22诺基亚\x22,\x22食'+'品\x22,\x22飞利浦\x22,\x22'+'手表\x22,\x22手机\x22,\x22'+'ارامكو\x22,\x22ا'+'لعليان\x22,\x22ا'+'تصالات\x22,\x22ب')+('ازار\x22,\x22ابو'+'ظبي\x22,\x22كاثو'+'ليك\x22,\x22همرا'+'ه\x22,\x22닷컴\x22,\x22政'+'府\x22,\x22شبكة\x22,'+'\x22بيتك\x22,\x22عر'+'ب\x22,\x22机构\x22,\x22组'+'织机构\x22,\x22健康\x22,'+'\x22招聘\x22,\x22рус\x22'+',\x22珠宝\x22,\x22大拿\x22'+',\x22みんな\x22,\x22グー'+'グル\x22,\x22世界\x22,\x22'+'書籍\x22,\x22网址\x22,\x22'+'닷넷\x22,\x22コム\x22,\x22'+'天主教\x22,\x22游戏\x22,'+'\x22vermögens'+'berater\x22,\x22'+'vermögensb'+'eratung\x22,\x22'+'企业\x22,\x22信息\x22,\x22'+'嘉里大酒店\x22,\x22嘉里'+'\x22,\x22广东\x22,\x22政务'+'\x22,\x22xyz\x22,\x22y'+'achts\x22,\x22ya'+'hoo\x22,\x22yama'+'xun\x22,\x22yand'+'ex\x22,\x22yodob'+'ashi\x22,\x22yog'+'a\x22,\x22yokoha'+'ma\x22,\x22you\x22,'+'\x22youtube\x22,'+'\x22yun\x22,\x22zap'+'pos\x22,\x22zara'+'\x22,\x22zero\x22,\x22'+'zip\x22,\x22zone'+'\x22,\x22zuerich'+'\x22,\x22cc.ua\x22,'+'\x22inf.ua\x22,\x22'+'ltd.ua\x22,\x22a'+'dobeaemclo'+'ud.com\x22,\x22a'+'dobeaemclo'+'ud.net\x22,\x22*'+'.dev.adobe'+'aemcloud.c'+'om\x22,\x22beep.'+'pl\x22,\x22barsy'+'.ca\x22,\x22*.co'+'mpute.esta'+'te\x22,\x22*.alc'+'es.network'+'\x22,\x22altervi'+'sta.org\x22,\x22'+'alwaysdata'+'.net\x22,\x22clo'+'udfront.ne'+'t\x22,\x22*.comp'+'ute.amazon'+'aws.com\x22,\x22'+'*.compute-'+'1.amazonaw'+'s.com\x22,\x22*.'+'compute.am'+'azonaws.co'+'m.cn\x22,\x22us-'+'east-1.ama'+'zonaws.com'+'\x22,\x22cn-nort'+'h-1.eb.ama'+'zonaws.com'+'.cn\x22,\x22cn-n'+'orthwest-1'+'.eb.amazon'+'aws.com.cn'+'\x22,\x22elastic'+'beanstalk.'+'com\x22,\x22ap-n'+'ortheast-1'+'.elasticbe'+'anstalk.co'+'m\x22,\x22ap-nor'+'theast-2.e'+'lasticbean'+'stalk.com\x22'+',\x22ap-north'+'east-3.ela'+'sticbeanst'+'alk.com\x22,\x22'+'ap-south-1'+'.elasticbe'+'anstalk.co'+'m\x22,\x22ap-sou'+'theast-1.e'+'lasticbean'+'stalk.com\x22'+',\x22ap-south'+'east-2.ela'+'sticbeanst'+'alk.com\x22,\x22'+'ca-central')+('-1.elastic'+'beanstalk.'+'com\x22,\x22eu-c'+'entral-1.e'+'lasticbean'+'stalk.com\x22'+',\x22eu-west-'+'1.elasticb'+'eanstalk.c'+'om\x22,\x22eu-we'+'st-2.elast'+'icbeanstal'+'k.com\x22,\x22eu'+'-west-3.el'+'asticbeans'+'talk.com\x22,'+'\x22sa-east-1'+'.elasticbe'+'anstalk.co'+'m\x22,\x22us-eas'+'t-1.elasti'+'cbeanstalk'+'.com\x22,\x22us-'+'east-2.ela'+'sticbeanst'+'alk.com\x22,\x22'+'us-gov-wes'+'t-1.elasti'+'cbeanstalk'+'.com\x22,\x22us-'+'west-1.ela'+'sticbeanst'+'alk.com\x22,\x22'+'us-west-2.'+'elasticbea'+'nstalk.com'+'\x22,\x22*.elb.a'+'mazonaws.c'+'om\x22,\x22*.elb'+'.amazonaws'+'.com.cn\x22,\x22'+'s3.amazona'+'ws.com\x22,\x22s'+'3-ap-north'+'east-1.ama'+'zonaws.com'+'\x22,\x22s3-ap-n'+'ortheast-2'+'.amazonaws'+'.com\x22,\x22s3-'+'ap-south-1'+'.amazonaws'+'.com\x22,\x22s3-'+'ap-southea'+'st-1.amazo'+'naws.com\x22,'+'\x22s3-ap-sou'+'theast-2.a'+'mazonaws.c'+'om\x22,\x22s3-ca'+'-central-1'+'.amazonaws'+'.com\x22,\x22s3-'+'eu-central'+'-1.amazona'+'ws.com\x22,\x22s'+'3-eu-west-'+'1.amazonaw'+'s.com\x22,\x22s3'+'-eu-west-2'+'.amazonaws'+'.com\x22,\x22s3-'+'eu-west-3.'+'amazonaws.'+'com\x22,\x22s3-e'+'xternal-1.'+'amazonaws.'+'com\x22,\x22s3-f'+'ips-us-gov'+'-west-1.am'+'azonaws.co'+'m\x22,\x22s3-sa-'+'east-1.ama'+'zonaws.com'+'\x22,\x22s3-us-g'+'ov-west-1.'+'amazonaws.'+'com\x22,\x22s3-u'+'s-east-2.a'+'mazonaws.c'+'om\x22,\x22s3-us'+'-west-1.am'+'azonaws.co'+'m\x22,\x22s3-us-'+'west-2.ama'+'zonaws.com'+'\x22,\x22s3.ap-n'+'ortheast-2'+'.amazonaws'+'.com\x22,\x22s3.')+('ap-south-1'+'.amazonaws'+'.com\x22,\x22s3.'+'cn-north-1'+'.amazonaws'+'.com.cn\x22,\x22'+'s3.ca-cent'+'ral-1.amaz'+'onaws.com\x22'+',\x22s3.eu-ce'+'ntral-1.am'+'azonaws.co'+'m\x22,\x22s3.eu-'+'west-2.ama'+'zonaws.com'+'\x22,\x22s3.eu-w'+'est-3.amaz'+'onaws.com\x22'+',\x22s3.us-ea'+'st-2.amazo'+'naws.com\x22,'+'\x22s3.dualst'+'ack.ap-nor'+'theast-1.a'+'mazonaws.c'+'om\x22,\x22s3.du'+'alstack.ap'+'-northeast'+'-2.amazona'+'ws.com\x22,\x22s'+'3.dualstac'+'k.ap-south'+'-1.amazona'+'ws.com\x22,\x22s'+'3.dualstac'+'k.ap-south'+'east-1.ama'+'zonaws.com'+'\x22,\x22s3.dual'+'stack.ap-s'+'outheast-2'+'.amazonaws'+'.com\x22,\x22s3.'+'dualstack.'+'ca-central'+'-1.amazona'+'ws.com\x22,\x22s'+'3.dualstac'+'k.eu-centr'+'al-1.amazo'+'naws.com\x22,'+'\x22s3.dualst'+'ack.eu-wes'+'t-1.amazon'+'aws.com\x22,\x22'+'s3.dualsta'+'ck.eu-west'+'-2.amazona'+'ws.com\x22,\x22s'+'3.dualstac'+'k.eu-west-'+'3.amazonaw'+'s.com\x22,\x22s3'+'.dualstack'+'.sa-east-1'+'.amazonaws'+'.com\x22,\x22s3.'+'dualstack.'+'us-east-1.'+'amazonaws.'+'com\x22,\x22s3.d'+'ualstack.u'+'s-east-2.a'+'mazonaws.c'+'om\x22,\x22s3-we'+'bsite-us-e'+'ast-1.amaz'+'onaws.com\x22'+',\x22s3-websi'+'te-us-west'+'-1.amazona'+'ws.com\x22,\x22s'+'3-website-'+'us-west-2.'+'amazonaws.'+'com\x22,\x22s3-w'+'ebsite-ap-'+'northeast-'+'1.amazonaw'+'s.com\x22,\x22s3'+'-website-a'+'p-southeas'+'t-1.amazon'+'aws.com\x22,\x22'+'s3-website'+'-ap-southe'+'ast-2.amaz'+'onaws.com\x22'+',\x22s3-websi'+'te-eu-west')+('-1.amazona'+'ws.com\x22,\x22s'+'3-website-'+'sa-east-1.'+'amazonaws.'+'com\x22,\x22s3-w'+'ebsite.ap-'+'northeast-'+'2.amazonaw'+'s.com\x22,\x22s3'+'-website.a'+'p-south-1.'+'amazonaws.'+'com\x22,\x22s3-w'+'ebsite.ca-'+'central-1.'+'amazonaws.'+'com\x22,\x22s3-w'+'ebsite.eu-'+'central-1.'+'amazonaws.'+'com\x22,\x22s3-w'+'ebsite.eu-'+'west-2.ama'+'zonaws.com'+'\x22,\x22s3-webs'+'ite.eu-wes'+'t-3.amazon'+'aws.com\x22,\x22'+'s3-website'+'.us-east-2'+'.amazonaws'+'.com\x22,\x22ams'+'w.nl\x22,\x22t3l'+'3p0rt.net\x22'+',\x22tele.amu'+'ne.org\x22,\x22a'+'pigee.io\x22,'+'\x22on-aptibl'+'e.com\x22,\x22us'+'er.aseinet'+'.ne.jp\x22,\x22g'+'v.vc\x22,\x22d.g'+'v.vc\x22,\x22use'+'r.party.eu'+'s\x22,\x22pimien'+'ta.org\x22,\x22p'+'oivron.org'+'\x22,\x22potager'+'.org\x22,\x22swe'+'etpepper.o'+'rg\x22,\x22myasu'+'stor.com\x22,'+'\x22myfritz.n'+'et\x22,\x22*.awd'+'ev.ca\x22,\x22*.'+'advisor.ws'+'\x22,\x22b-data.'+'io\x22,\x22backp'+'laneapp.io'+'\x22,\x22balena-'+'devices.co'+'m\x22,\x22app.ba'+'nzaicloud.'+'io\x22,\x22betai'+'nabox.com\x22'+',\x22bnr.la\x22,'+'\x22blackbaud'+'cdn.net\x22,\x22'+'boomla.net'+'\x22,\x22boxfuse'+'.io\x22,\x22squa'+'re7.ch\x22,\x22b'+'placed.com'+'\x22,\x22bplaced'+'.de\x22,\x22squa'+'re7.de\x22,\x22b'+'placed.net'+'\x22,\x22square7'+'.net\x22,\x22bro'+'wsersafety'+'mark.io\x22,\x22'+'uk0.bigv.i'+'o\x22,\x22dh.byt'+'emark.co.u'+'k\x22,\x22vm.byt'+'emark.co.u'+'k\x22,\x22mycd.e'+'u\x22,\x22carrd.'+'co\x22,\x22crd.c'+'o\x22,\x22uwu.ai'+'\x22,\x22ae.org\x22'+',\x22ar.com\x22,'+'\x22br.com\x22,\x22'+'cn.com\x22,\x22c'+'om.de\x22,\x22co'+'m.se\x22,\x22de.'+'com\x22,\x22eu.c'+'om\x22,\x22gb.co'+'m\x22,\x22gb.net')+('\x22,\x22hu.com\x22'+',\x22hu.net\x22,'+'\x22jp.net\x22,\x22'+'jpn.com\x22,\x22'+'kr.com\x22,\x22m'+'ex.com\x22,\x22n'+'o.com\x22,\x22qc'+'.com\x22,\x22ru.'+'com\x22,\x22sa.c'+'om\x22,\x22se.ne'+'t\x22,\x22uk.com'+'\x22,\x22uk.net\x22'+',\x22us.com\x22,'+'\x22uy.com\x22,\x22'+'za.bz\x22,\x22za'+'.com\x22,\x22afr'+'ica.com\x22,\x22'+'gr.com\x22,\x22i'+'n.net\x22,\x22us'+'.org\x22,\x22co.'+'com\x22,\x22c.la'+'\x22,\x22certmgr'+'.org\x22,\x22xen'+'apponazure'+'.com\x22,\x22dis'+'course.gro'+'up\x22,\x22disco'+'urse.team\x22'+',\x22virtueel'+'domein.nl\x22'+',\x22cleverap'+'ps.io\x22,\x22*.'+'lcl.dev\x22,\x22'+'*.stg.dev\x22'+',\x22c66.me\x22,'+'\x22cloud66.w'+'s\x22,\x22cloud6'+'6.zone\x22,\x22j'+'devcloud.c'+'om\x22,\x22wpdev'+'cloud.com\x22'+',\x22cloudacc'+'ess.host\x22,'+'\x22freesite.'+'host\x22,\x22clo'+'udaccess.n'+'et\x22,\x22cloud'+'controlled'+'.com\x22,\x22clo'+'udcontrola'+'pp.com\x22,\x22c'+'loudera.si'+'te\x22,\x22trycl'+'oudflare.c'+'om\x22,\x22worke'+'rs.dev\x22,\x22w'+'next.app\x22,'+'\x22co.ca\x22,\x22*'+'.otap.co\x22,'+'\x22co.cz\x22,\x22c'+'.cdn77.org'+'\x22,\x22cdn77-s'+'sl.net\x22,\x22r'+'.cdn77.net'+'\x22,\x22rsc.cdn'+'77.org\x22,\x22s'+'sl.origin.'+'cdn77-secu'+'re.org\x22,\x22c'+'loudns.asi'+'a\x22,\x22cloudn'+'s.biz\x22,\x22cl'+'oudns.club'+'\x22,\x22cloudns'+'.cc\x22,\x22clou'+'dns.eu\x22,\x22c'+'loudns.in\x22'+',\x22cloudns.'+'info\x22,\x22clo'+'udns.org\x22,'+'\x22cloudns.p'+'ro\x22,\x22cloud'+'ns.pw\x22,\x22cl'+'oudns.us\x22,'+'\x22cloudeity'+'.net\x22,\x22cnp'+'y.gdn\x22,\x22co'+'.nl\x22,\x22co.n'+'o\x22,\x22webhos'+'ting.be\x22,\x22'+'hosting-cl'+'uster.nl\x22,'+'\x22ac.ru\x22,\x22e'+'du.ru\x22,\x22go'+'v.ru\x22,\x22int'+'.ru\x22,\x22mil.'+'ru\x22,\x22test.'+'ru\x22,\x22dyn.c'+'osidns.de\x22'+',\x22dynamisc')+('hes-dns.de'+'\x22,\x22dnsupda'+'ter.de\x22,\x22i'+'nternet-dn'+'s.de\x22,\x22l-o'+'-g-i-n.de\x22'+',\x22dynamic-'+'dns.info\x22,'+'\x22feste-ip.'+'net\x22,\x22knx-'+'server.net'+'\x22,\x22static-'+'access.net'+'\x22,\x22realm.c'+'z\x22,\x22*.cryp'+'tonomic.ne'+'t\x22,\x22cupcak'+'e.is\x22,\x22*.c'+'ustomer-oc'+'i.com\x22,\x22*.'+'oci.custom'+'er-oci.com'+'\x22,\x22*.ocp.c'+'ustomer-oc'+'i.com\x22,\x22*.'+'ocs.custom'+'er-oci.com'+'\x22,\x22cyon.li'+'nk\x22,\x22cyon.'+'site\x22,\x22dap'+'lie.me\x22,\x22l'+'ocalhost.d'+'aplie.me\x22,'+'\x22dattoloca'+'l.com\x22,\x22da'+'ttorelay.c'+'om\x22,\x22datto'+'web.com\x22,\x22'+'mydatto.co'+'m\x22,\x22dattol'+'ocal.net\x22,'+'\x22mydatto.n'+'et\x22,\x22biz.d'+'k\x22,\x22co.dk\x22'+',\x22firm.dk\x22'+',\x22reg.dk\x22,'+'\x22store.dk\x22'+',\x22*.dapps.'+'earth\x22,\x22*.'+'bzz.dapps.'+'earth\x22,\x22bu'+'iltwithdar'+'k.com\x22,\x22ed'+'gestack.me'+'\x22,\x22debian.'+'net\x22,\x22dedy'+'n.io\x22,\x22dns'+'home.de\x22,\x22'+'online.th\x22'+',\x22shop.th\x22'+',\x22drayddns'+'.com\x22,\x22dre'+'amhosters.'+'com\x22,\x22mydr'+'obo.com\x22,\x22'+'drud.io\x22,\x22'+'drud.us\x22,\x22'+'duckdns.or'+'g\x22,\x22dy.fi\x22'+',\x22tunk.org'+'\x22,\x22dyndns-'+'at-home.co'+'m\x22,\x22dyndns'+'-at-work.c'+'om\x22,\x22dyndn'+'s-blog.com'+'\x22,\x22dyndns-'+'free.com\x22,'+'\x22dyndns-ho'+'me.com\x22,\x22d'+'yndns-ip.c'+'om\x22,\x22dyndn'+'s-mail.com'+'\x22,\x22dyndns-'+'office.com'+'\x22,\x22dyndns-'+'pics.com\x22,'+'\x22dyndns-re'+'mote.com\x22,'+'\x22dyndns-se'+'rver.com\x22,'+'\x22dyndns-we'+'b.com\x22,\x22dy'+'ndns-wiki.'+'com\x22,\x22dynd'+'ns-work.co'+'m\x22,\x22dyndns'+'.biz\x22,\x22dyn'+'dns.info\x22,'+'\x22dyndns.or')+('g\x22,\x22dyndns'+'.tv\x22,\x22at-b'+'and-camp.n'+'et\x22,\x22ath.c'+'x\x22,\x22barrel'+'-of-knowle'+'dge.info\x22,'+'\x22barrell-o'+'f-knowledg'+'e.info\x22,\x22b'+'etter-than'+'.tv\x22,\x22blog'+'dns.com\x22,\x22'+'blogdns.ne'+'t\x22,\x22blogdn'+'s.org\x22,\x22bl'+'ogsite.org'+'\x22,\x22boldlyg'+'oingnowher'+'e.org\x22,\x22br'+'oke-it.net'+'\x22,\x22buyshou'+'ses.net\x22,\x22'+'cechire.co'+'m\x22,\x22dnsali'+'as.com\x22,\x22d'+'nsalias.ne'+'t\x22,\x22dnsali'+'as.org\x22,\x22d'+'nsdojo.com'+'\x22,\x22dnsdojo'+'.net\x22,\x22dns'+'dojo.org\x22,'+'\x22does-it.n'+'et\x22,\x22doesn'+'texist.com'+'\x22,\x22doesnte'+'xist.org\x22,'+'\x22dontexist'+'.com\x22,\x22don'+'texist.net'+'\x22,\x22dontexi'+'st.org\x22,\x22d'+'oomdns.com'+'\x22,\x22doomdns'+'.org\x22,\x22dvr'+'dns.org\x22,\x22'+'dyn-o-saur'+'.com\x22,\x22dyn'+'alias.com\x22'+',\x22dynalias'+'.net\x22,\x22dyn'+'alias.org\x22'+',\x22dynathom'+'e.net\x22,\x22dy'+'ndns.ws\x22,\x22'+'endofinter'+'net.net\x22,\x22'+'endofinter'+'net.org\x22,\x22'+'endofthein'+'ternet.org'+'\x22,\x22est-a-l'+'a-maison.c'+'om\x22,\x22est-a'+'-la-masion'+'.com\x22,\x22est'+'-le-patron'+'.com\x22,\x22est'+'-mon-blogu'+'eur.com\x22,\x22'+'for-better'+'.biz\x22,\x22for'+'-more.biz\x22'+',\x22for-our.'+'info\x22,\x22for'+'-some.biz\x22'+',\x22for-the.'+'biz\x22,\x22forg'+'ot.her.nam'+'e\x22,\x22forgot'+'.his.name\x22'+',\x22from-ak.'+'com\x22,\x22from'+'-al.com\x22,\x22'+'from-ar.co'+'m\x22,\x22from-a'+'z.net\x22,\x22fr'+'om-ca.com\x22'+',\x22from-co.'+'net\x22,\x22from'+'-ct.com\x22,\x22'+'from-dc.co'+'m\x22,\x22from-d'+'e.com\x22,\x22fr'+'om-fl.com\x22'+',\x22from-ga.'+'com\x22,\x22from'+'-hi.com\x22,\x22'+'from-ia.co')+('m\x22,\x22from-i'+'d.com\x22,\x22fr'+'om-il.com\x22'+',\x22from-in.'+'com\x22,\x22from'+'-ks.com\x22,\x22'+'from-ky.co'+'m\x22,\x22from-l'+'a.net\x22,\x22fr'+'om-ma.com\x22'+',\x22from-md.'+'com\x22,\x22from'+'-me.org\x22,\x22'+'from-mi.co'+'m\x22,\x22from-m'+'n.com\x22,\x22fr'+'om-mo.com\x22'+',\x22from-ms.'+'com\x22,\x22from'+'-mt.com\x22,\x22'+'from-nc.co'+'m\x22,\x22from-n'+'d.com\x22,\x22fr'+'om-ne.com\x22'+',\x22from-nh.'+'com\x22,\x22from'+'-nj.com\x22,\x22'+'from-nm.co'+'m\x22,\x22from-n'+'v.com\x22,\x22fr'+'om-ny.net\x22'+',\x22from-oh.'+'com\x22,\x22from'+'-ok.com\x22,\x22'+'from-or.co'+'m\x22,\x22from-p'+'a.com\x22,\x22fr'+'om-pr.com\x22'+',\x22from-ri.'+'com\x22,\x22from'+'-sc.com\x22,\x22'+'from-sd.co'+'m\x22,\x22from-t'+'n.com\x22,\x22fr'+'om-tx.com\x22'+',\x22from-ut.'+'com\x22,\x22from'+'-va.com\x22,\x22'+'from-vt.co'+'m\x22,\x22from-w'+'a.com\x22,\x22fr'+'om-wi.com\x22'+',\x22from-wv.'+'com\x22,\x22from'+'-wy.com\x22,\x22'+'ftpaccess.'+'cc\x22,\x22fuett'+'ertdasnetz'+'.de\x22,\x22game'+'-host.org\x22'+',\x22game-ser'+'ver.cc\x22,\x22g'+'etmyip.com'+'\x22,\x22gets-it'+'.net\x22,\x22go.'+'dyndns.org'+'\x22,\x22gotdns.'+'com\x22,\x22gotd'+'ns.org\x22,\x22g'+'roks-the.i'+'nfo\x22,\x22grok'+'s-this.inf'+'o\x22,\x22ham-ra'+'dio-op.net'+'\x22,\x22here-fo'+'r-more.inf'+'o\x22,\x22hobby-'+'site.com\x22,'+'\x22hobby-sit'+'e.org\x22,\x22ho'+'me.dyndns.'+'org\x22,\x22home'+'dns.org\x22,\x22'+'homeftp.ne'+'t\x22,\x22homeft'+'p.org\x22,\x22ho'+'meip.net\x22,'+'\x22homelinux'+'.com\x22,\x22hom'+'elinux.net'+'\x22,\x22homelin'+'ux.org\x22,\x22h'+'omeunix.co'+'m\x22,\x22homeun'+'ix.net\x22,\x22h'+'omeunix.or'+'g\x22,\x22iamall'+'ama.com\x22,\x22'+'in-the-ban'+'d.net\x22,\x22is')+('-a-anarchi'+'st.com\x22,\x22i'+'s-a-blogge'+'r.com\x22,\x22is'+'-a-bookkee'+'per.com\x22,\x22'+'is-a-bruin'+'sfan.org\x22,'+'\x22is-a-bull'+'s-fan.com\x22'+',\x22is-a-can'+'didate.org'+'\x22,\x22is-a-ca'+'terer.com\x22'+',\x22is-a-cel'+'ticsfan.or'+'g\x22,\x22is-a-c'+'hef.com\x22,\x22'+'is-a-chef.'+'net\x22,\x22is-a'+'-chef.org\x22'+',\x22is-a-con'+'servative.'+'com\x22,\x22is-a'+'-cpa.com\x22,'+'\x22is-a-cubi'+'cle-slave.'+'com\x22,\x22is-a'+'-democrat.'+'com\x22,\x22is-a'+'-designer.'+'com\x22,\x22is-a'+'-doctor.co'+'m\x22,\x22is-a-f'+'inancialad'+'visor.com\x22'+',\x22is-a-gee'+'k.com\x22,\x22is'+'-a-geek.ne'+'t\x22,\x22is-a-g'+'eek.org\x22,\x22'+'is-a-green'+'.com\x22,\x22is-'+'a-guru.com'+'\x22,\x22is-a-ha'+'rd-worker.'+'com\x22,\x22is-a'+'-hunter.co'+'m\x22,\x22is-a-k'+'night.org\x22'+',\x22is-a-lan'+'dscaper.co'+'m\x22,\x22is-a-l'+'awyer.com\x22'+',\x22is-a-lib'+'eral.com\x22,'+'\x22is-a-libe'+'rtarian.co'+'m\x22,\x22is-a-l'+'inux-user.'+'org\x22,\x22is-a'+'-llama.com'+'\x22,\x22is-a-mu'+'sician.com'+'\x22,\x22is-a-na'+'scarfan.co'+'m\x22,\x22is-a-n'+'urse.com\x22,'+'\x22is-a-pain'+'ter.com\x22,\x22'+'is-a-patsf'+'an.org\x22,\x22i'+'s-a-person'+'altrainer.'+'com\x22,\x22is-a'+'-photograp'+'her.com\x22,\x22'+'is-a-playe'+'r.com\x22,\x22is'+'-a-republi'+'can.com\x22,\x22'+'is-a-rocks'+'tar.com\x22,\x22'+'is-a-socia'+'list.com\x22,'+'\x22is-a-soxf'+'an.org\x22,\x22i'+'s-a-studen'+'t.com\x22,\x22is'+'-a-teacher'+'.com\x22,\x22is-'+'a-techie.c'+'om\x22,\x22is-a-'+'therapist.'+'com\x22,\x22is-a'+'n-accounta'+'nt.com\x22,\x22i'+'s-an-actor'+'.com\x22,\x22is-'+'an-actress')+('.com\x22,\x22is-'+'an-anarchi'+'st.com\x22,\x22i'+'s-an-artis'+'t.com\x22,\x22is'+'-an-engine'+'er.com\x22,\x22i'+'s-an-enter'+'tainer.com'+'\x22,\x22is-by.u'+'s\x22,\x22is-cer'+'tified.com'+'\x22,\x22is-foun'+'d.org\x22,\x22is'+'-gone.com\x22'+',\x22is-into-'+'anime.com\x22'+',\x22is-into-'+'cars.com\x22,'+'\x22is-into-c'+'artoons.co'+'m\x22,\x22is-int'+'o-games.co'+'m\x22,\x22is-lee'+'t.com\x22,\x22is'+'-lost.org\x22'+',\x22is-not-c'+'ertified.c'+'om\x22,\x22is-sa'+'ved.org\x22,\x22'+'is-slick.c'+'om\x22,\x22is-ub'+'erleet.com'+'\x22,\x22is-very'+'-bad.org\x22,'+'\x22is-very-e'+'vil.org\x22,\x22'+'is-very-go'+'od.org\x22,\x22i'+'s-very-nic'+'e.org\x22,\x22is'+'-very-swee'+'t.org\x22,\x22is'+'-with-theb'+'and.com\x22,\x22'+'isa-geek.c'+'om\x22,\x22isa-g'+'eek.net\x22,\x22'+'isa-geek.o'+'rg\x22,\x22isa-h'+'ockeynut.c'+'om\x22,\x22issma'+'rterthanyo'+'u.com\x22,\x22is'+'teingeek.d'+'e\x22,\x22istmei'+'n.de\x22,\x22kic'+'ks-ass.net'+'\x22,\x22kicks-a'+'ss.org\x22,\x22k'+'nowsitall.'+'info\x22,\x22lan'+'d-4-sale.u'+'s\x22,\x22lebtim'+'netz.de\x22,\x22'+'leitungsen'+'.de\x22,\x22like'+'s-pie.com\x22'+',\x22likescan'+'dy.com\x22,\x22m'+'erseine.nu'+'\x22,\x22mine.nu'+'\x22,\x22misconf'+'used.org\x22,'+'\x22mypets.ws'+'\x22,\x22myphoto'+'s.cc\x22,\x22nea'+'t-url.com\x22'+',\x22office-o'+'n-the.net\x22'+',\x22on-the-w'+'eb.tv\x22,\x22po'+'dzone.net\x22'+',\x22podzone.'+'org\x22,\x22read'+'myblog.org'+'\x22,\x22saves-t'+'he-whales.'+'com\x22,\x22scra'+'pper-site.'+'net\x22,\x22scra'+'pping.cc\x22,'+'\x22selfip.bi'+'z\x22,\x22selfip'+'.com\x22,\x22sel'+'fip.info\x22,'+'\x22selfip.ne'+'t\x22,\x22selfip'+'.org\x22,\x22sel'+'ls-for-les')+('s.com\x22,\x22se'+'lls-for-u.'+'com\x22,\x22sell'+'s-it.net\x22,'+'\x22sellsyour'+'home.org\x22,'+'\x22servebbs.'+'com\x22,\x22serv'+'ebbs.net\x22,'+'\x22servebbs.'+'org\x22,\x22serv'+'eftp.net\x22,'+'\x22serveftp.'+'org\x22,\x22serv'+'egame.org\x22'+',\x22shacknet'+'.nu\x22,\x22simp'+'le-url.com'+'\x22,\x22space-t'+'o-rent.com'+'\x22,\x22stuff-4'+'-sale.org\x22'+',\x22stuff-4-'+'sale.us\x22,\x22'+'teaches-yo'+'ga.com\x22,\x22t'+'hruhere.ne'+'t\x22,\x22traeum'+'tgerade.de'+'\x22,\x22webhop.'+'biz\x22,\x22webh'+'op.info\x22,\x22'+'webhop.net'+'\x22,\x22webhop.'+'org\x22,\x22wors'+'e-than.tv\x22'+',\x22writesth'+'isblog.com'+'\x22,\x22ddnss.d'+'e\x22,\x22dyn.dd'+'nss.de\x22,\x22d'+'yndns.ddns'+'s.de\x22,\x22dyn'+'dns1.de\x22,\x22'+'dyn-ip24.d'+'e\x22,\x22home-w'+'ebserver.d'+'e\x22,\x22dyn.ho'+'me-webserv'+'er.de\x22,\x22my'+'home-serve'+'r.de\x22,\x22ddn'+'ss.org\x22,\x22d'+'efinima.ne'+'t\x22,\x22defini'+'ma.io\x22,\x22bc'+'i.dnstrace'+'.pro\x22,\x22ddn'+'sfree.com\x22'+',\x22ddnsgeek'+'.com\x22,\x22gii'+'ze.com\x22,\x22g'+'leeze.com\x22'+',\x22kozow.co'+'m\x22,\x22loseyo'+'urip.com\x22,'+'\x22ooguy.com'+'\x22,\x22thework'+'pc.com\x22,\x22c'+'asacam.net'+'\x22,\x22dynu.ne'+'t\x22,\x22access'+'cam.org\x22,\x22'+'camdvr.org'+'\x22,\x22freeddn'+'s.org\x22,\x22my'+'wire.org\x22,'+'\x22webredire'+'ct.org\x22,\x22m'+'yddns.rock'+'s\x22,\x22blogsi'+'te.xyz\x22,\x22d'+'ynv6.net\x22,'+'\x22e4.cz\x22,\x22e'+'n-root.fr\x22'+',\x22mytuleap'+'.com\x22,\x22onr'+'ed.one\x22,\x22s'+'taging.onr'+'ed.one\x22,\x22e'+'nonic.io\x22,'+'\x22customer.'+'enonic.io\x22'+',\x22eu.org\x22,'+'\x22al.eu.org'+'\x22,\x22asso.eu'+'.org\x22,\x22at.'+'eu.org\x22,\x22a'+'u.eu.org\x22,'+'\x22be.eu.org')+('\x22,\x22bg.eu.o'+'rg\x22,\x22ca.eu'+'.org\x22,\x22cd.'+'eu.org\x22,\x22c'+'h.eu.org\x22,'+'\x22cn.eu.org'+'\x22,\x22cy.eu.o'+'rg\x22,\x22cz.eu'+'.org\x22,\x22de.'+'eu.org\x22,\x22d'+'k.eu.org\x22,'+'\x22edu.eu.or'+'g\x22,\x22ee.eu.'+'org\x22,\x22es.e'+'u.org\x22,\x22fi'+'.eu.org\x22,\x22'+'fr.eu.org\x22'+',\x22gr.eu.or'+'g\x22,\x22hr.eu.'+'org\x22,\x22hu.e'+'u.org\x22,\x22ie'+'.eu.org\x22,\x22'+'il.eu.org\x22'+',\x22in.eu.or'+'g\x22,\x22int.eu'+'.org\x22,\x22is.'+'eu.org\x22,\x22i'+'t.eu.org\x22,'+'\x22jp.eu.org'+'\x22,\x22kr.eu.o'+'rg\x22,\x22lt.eu'+'.org\x22,\x22lu.'+'eu.org\x22,\x22l'+'v.eu.org\x22,'+'\x22mc.eu.org'+'\x22,\x22me.eu.o'+'rg\x22,\x22mk.eu'+'.org\x22,\x22mt.'+'eu.org\x22,\x22m'+'y.eu.org\x22,'+'\x22net.eu.or'+'g\x22,\x22ng.eu.'+'org\x22,\x22nl.e'+'u.org\x22,\x22no'+'.eu.org\x22,\x22'+'nz.eu.org\x22'+',\x22paris.eu'+'.org\x22,\x22pl.'+'eu.org\x22,\x22p'+'t.eu.org\x22,'+'\x22q-a.eu.or'+'g\x22,\x22ro.eu.'+'org\x22,\x22ru.e'+'u.org\x22,\x22se'+'.eu.org\x22,\x22'+'si.eu.org\x22'+',\x22sk.eu.or'+'g\x22,\x22tr.eu.'+'org\x22,\x22uk.e'+'u.org\x22,\x22us'+'.eu.org\x22,\x22'+'eu-1.evenn'+'ode.com\x22,\x22'+'eu-2.evenn'+'ode.com\x22,\x22'+'eu-3.evenn'+'ode.com\x22,\x22'+'eu-4.evenn'+'ode.com\x22,\x22'+'us-1.evenn'+'ode.com\x22,\x22'+'us-2.evenn'+'ode.com\x22,\x22'+'us-3.evenn'+'ode.com\x22,\x22'+'us-4.evenn'+'ode.com\x22,\x22'+'twmail.cc\x22'+',\x22twmail.n'+'et\x22,\x22twmai'+'l.org\x22,\x22my'+'mailer.com'+'.tw\x22,\x22url.'+'tw\x22,\x22apps.'+'fbsbx.com\x22'+',\x22ru.net\x22,'+'\x22adygeya.r'+'u\x22,\x22bashki'+'ria.ru\x22,\x22b'+'ir.ru\x22,\x22cb'+'g.ru\x22,\x22com'+'.ru\x22,\x22dage'+'stan.ru\x22,\x22'+'grozny.ru\x22'+',\x22kalmykia'+'.ru\x22,\x22kust'+'anai.ru\x22,\x22'+'marine.ru\x22'+',\x22mordovia'+'.ru\x22,\x22msk.')+('ru\x22,\x22mytis'+'.ru\x22,\x22nalc'+'hik.ru\x22,\x22n'+'ov.ru\x22,\x22py'+'atigorsk.r'+'u\x22,\x22spb.ru'+'\x22,\x22vladika'+'vkaz.ru\x22,\x22'+'vladimir.r'+'u\x22,\x22abkhaz'+'ia.su\x22,\x22ad'+'ygeya.su\x22,'+'\x22aktyubins'+'k.su\x22,\x22ark'+'hangelsk.s'+'u\x22,\x22armeni'+'a.su\x22,\x22ash'+'gabad.su\x22,'+'\x22azerbaija'+'n.su\x22,\x22bal'+'ashov.su\x22,'+'\x22bashkiria'+'.su\x22,\x22brya'+'nsk.su\x22,\x22b'+'ukhara.su\x22'+',\x22chimkent'+'.su\x22,\x22dage'+'stan.su\x22,\x22'+'east-kazak'+'hstan.su\x22,'+'\x22exnet.su\x22'+',\x22georgia.'+'su\x22,\x22grozn'+'y.su\x22,\x22iva'+'novo.su\x22,\x22'+'jambyl.su\x22'+',\x22kalmykia'+'.su\x22,\x22kalu'+'ga.su\x22,\x22ka'+'racol.su\x22,'+'\x22karaganda'+'.su\x22,\x22kare'+'lia.su\x22,\x22k'+'hakassia.s'+'u\x22,\x22krasno'+'dar.su\x22,\x22k'+'urgan.su\x22,'+'\x22kustanai.'+'su\x22,\x22lenug'+'.su\x22,\x22mang'+'yshlak.su\x22'+',\x22mordovia'+'.su\x22,\x22msk.'+'su\x22,\x22murma'+'nsk.su\x22,\x22n'+'alchik.su\x22'+',\x22navoi.su'+'\x22,\x22north-k'+'azakhstan.'+'su\x22,\x22nov.s'+'u\x22,\x22obnins'+'k.su\x22,\x22pen'+'za.su\x22,\x22po'+'krovsk.su\x22'+',\x22sochi.su'+'\x22,\x22spb.su\x22'+',\x22tashkent'+'.su\x22,\x22term'+'ez.su\x22,\x22to'+'gliatti.su'+'\x22,\x22troitsk'+'.su\x22,\x22tsel'+'inograd.su'+'\x22,\x22tula.su'+'\x22,\x22tuva.su'+'\x22,\x22vladika'+'vkaz.su\x22,\x22'+'vladimir.s'+'u\x22,\x22vologd'+'a.su\x22,\x22cha'+'nnelsdvr.n'+'et\x22,\x22u.cha'+'nnelsdvr.n'+'et\x22,\x22fastl'+'y-terrariu'+'m.com\x22,\x22fa'+'stlylb.net'+'\x22,\x22map.fas'+'tlylb.net\x22'+',\x22freetls.'+'fastly.net'+'\x22,\x22map.fas'+'tly.net\x22,\x22'+'a.prod.fas'+'tly.net\x22,\x22'+'global.pro'+'d.fastly.n'+'et\x22,\x22a.ssl'+'.fastly.ne'+'t\x22,\x22b.ssl.')+('fastly.net'+'\x22,\x22global.'+'ssl.fastly'+'.net\x22,\x22fas'+'tpanel.dir'+'ect\x22,\x22fast'+'vps-server'+'.com\x22,\x22fha'+'pp.xyz\x22,\x22f'+'edorainfra'+'cloud.org\x22'+',\x22fedorape'+'ople.org\x22,'+'\x22cloud.fed'+'oraproject'+'.org\x22,\x22app'+'.os.fedora'+'project.or'+'g\x22,\x22app.os'+'.stg.fedor'+'aproject.o'+'rg\x22,\x22mydob'+'iss.com\x22,\x22'+'filegear.m'+'e\x22,\x22filege'+'ar-au.me\x22,'+'\x22filegear-'+'de.me\x22,\x22fi'+'legear-gb.'+'me\x22,\x22fileg'+'ear-ie.me\x22'+',\x22filegear'+'-jp.me\x22,\x22f'+'ilegear-sg'+'.me\x22,\x22fire'+'baseapp.co'+'m\x22,\x22flynnh'+'ub.com\x22,\x22f'+'lynnhostin'+'g.net\x22,\x220e'+'.vc\x22,\x22free'+'box-os.com'+'\x22,\x22freebox'+'os.com\x22,\x22f'+'bx-os.fr\x22,'+'\x22fbxos.fr\x22'+',\x22freebox-'+'os.fr\x22,\x22fr'+'eeboxos.fr'+'\x22,\x22freedes'+'ktop.org\x22,'+'\x22*.futurec'+'ms.at\x22,\x22*.'+'ex.futurec'+'ms.at\x22,\x22*.'+'in.futurec'+'ms.at\x22,\x22fu'+'turehostin'+'g.at\x22,\x22fut'+'uremailing'+'.at\x22,\x22*.ex'+'.ortsinfo.'+'at\x22,\x22*.kun'+'den.ortsin'+'fo.at\x22,\x22*.'+'statics.cl'+'oud\x22,\x22serv'+'ice.gov.uk'+'\x22,\x22gehirn.'+'ne.jp\x22,\x22us'+'ercontent.'+'jp\x22,\x22genta'+'pps.com\x22,\x22'+'lab.ms\x22,\x22g'+'ithub.io\x22,'+'\x22githubuse'+'rcontent.c'+'om\x22,\x22gitla'+'b.io\x22,\x22gli'+'tch.me\x22,\x22l'+'olipop.io\x22'+',\x22cloudapp'+'s.digital\x22'+',\x22london.c'+'loudapps.d'+'igital\x22,\x22h'+'omeoffice.'+'gov.uk\x22,\x22r'+'o.im\x22,\x22sho'+'p.ro\x22,\x22goi'+'p.de\x22,\x22run'+'.app\x22,\x22a.r'+'un.app\x22,\x22w'+'eb.app\x22,\x22*'+'.0emm.com\x22'+',\x22appspot.'+'com\x22,\x22*.r.'+'appspot.co'+'m\x22,\x22blogsp'+'ot.ae\x22,\x22bl')+('ogspot.al\x22'+',\x22blogspot'+'.am\x22,\x22blog'+'spot.ba\x22,\x22'+'blogspot.b'+'e\x22,\x22blogsp'+'ot.bg\x22,\x22bl'+'ogspot.bj\x22'+',\x22blogspot'+'.ca\x22,\x22blog'+'spot.cf\x22,\x22'+'blogspot.c'+'h\x22,\x22blogsp'+'ot.cl\x22,\x22bl'+'ogspot.co.'+'at\x22,\x22blogs'+'pot.co.id\x22'+',\x22blogspot'+'.co.il\x22,\x22b'+'logspot.co'+'.ke\x22,\x22blog'+'spot.co.nz'+'\x22,\x22blogspo'+'t.co.uk\x22,\x22'+'blogspot.c'+'o.za\x22,\x22blo'+'gspot.com\x22'+',\x22blogspot'+'.com.ar\x22,\x22'+'blogspot.c'+'om.au\x22,\x22bl'+'ogspot.com'+'.br\x22,\x22blog'+'spot.com.b'+'y\x22,\x22blogsp'+'ot.com.co\x22'+',\x22blogspot'+'.com.cy\x22,\x22'+'blogspot.c'+'om.ee\x22,\x22bl'+'ogspot.com'+'.eg\x22,\x22blog'+'spot.com.e'+'s\x22,\x22blogsp'+'ot.com.mt\x22'+',\x22blogspot'+'.com.ng\x22,\x22'+'blogspot.c'+'om.tr\x22,\x22bl'+'ogspot.com'+'.uy\x22,\x22blog'+'spot.cv\x22,\x22'+'blogspot.c'+'z\x22,\x22blogsp'+'ot.de\x22,\x22bl'+'ogspot.dk\x22'+',\x22blogspot'+'.fi\x22,\x22blog'+'spot.fr\x22,\x22'+'blogspot.g'+'r\x22,\x22blogsp'+'ot.hk\x22,\x22bl'+'ogspot.hr\x22'+',\x22blogspot'+'.hu\x22,\x22blog'+'spot.ie\x22,\x22'+'blogspot.i'+'n\x22,\x22blogsp'+'ot.is\x22,\x22bl'+'ogspot.it\x22'+',\x22blogspot'+'.jp\x22,\x22blog'+'spot.kr\x22,\x22'+'blogspot.l'+'i\x22,\x22blogsp'+'ot.lt\x22,\x22bl'+'ogspot.lu\x22'+',\x22blogspot'+'.md\x22,\x22blog'+'spot.mk\x22,\x22'+'blogspot.m'+'r\x22,\x22blogsp'+'ot.mx\x22,\x22bl'+'ogspot.my\x22'+',\x22blogspot'+'.nl\x22,\x22blog'+'spot.no\x22,\x22'+'blogspot.p'+'e\x22,\x22blogsp'+'ot.pt\x22,\x22bl'+'ogspot.qa\x22'+',\x22blogspot'+'.re\x22,\x22blog'+'spot.ro\x22,\x22'+'blogspot.r'+'s\x22,\x22blogsp'+'ot.ru\x22,\x22bl'+'ogspot.se\x22'+',\x22blogspot'+'.sg\x22,\x22blog')+('spot.si\x22,\x22'+'blogspot.s'+'k\x22,\x22blogsp'+'ot.sn\x22,\x22bl'+'ogspot.td\x22'+',\x22blogspot'+'.tw\x22,\x22blog'+'spot.ug\x22,\x22'+'blogspot.v'+'n\x22,\x22cloudf'+'unctions.n'+'et\x22,\x22cloud'+'.goog\x22,\x22co'+'despot.com'+'\x22,\x22googlea'+'pis.com\x22,\x22'+'googlecode'+'.com\x22,\x22pag'+'espeedmobi'+'lizer.com\x22'+',\x22publishp'+'roxy.com\x22,'+'\x22withgoogl'+'e.com\x22,\x22wi'+'thyoutube.'+'com\x22,\x22awsm'+'ppl.com\x22,\x22'+'fin.ci\x22,\x22f'+'ree.hr\x22,\x22c'+'aa.li\x22,\x22ua'+'.rs\x22,\x22conf'+'.se\x22,\x22hs.z'+'one\x22,\x22hs.r'+'un\x22,\x22hashb'+'ang.sh\x22,\x22h'+'asura.app\x22'+',\x22hasura-a'+'pp.io\x22,\x22he'+'pforge.org'+'\x22,\x22herokua'+'pp.com\x22,\x22h'+'erokussl.c'+'om\x22,\x22myrav'+'endb.com\x22,'+'\x22ravendb.c'+'ommunity\x22,'+'\x22ravendb.m'+'e\x22,\x22develo'+'pment.run\x22'+',\x22ravendb.'+'run\x22,\x22bpl.'+'biz\x22,\x22orx.'+'biz\x22,\x22ng.c'+'ity\x22,\x22biz.'+'gl\x22,\x22ng.in'+'k\x22,\x22col.ng'+'\x22,\x22firm.ng'+'\x22,\x22gen.ng\x22'+',\x22ltd.ng\x22,'+'\x22ngo.ng\x22,\x22'+'ng.school\x22'+',\x22sch.so\x22,'+'\x22häkkinen.'+'fi\x22,\x22*.moo'+'nscale.io\x22'+',\x22moonscal'+'e.net\x22,\x22ik'+'i.fi\x22,\x22dyn'+'-berlin.de'+'\x22,\x22in-berl'+'in.de\x22,\x22in'+'-brb.de\x22,\x22'+'in-butter.'+'de\x22,\x22in-ds'+'l.de\x22,\x22in-'+'dsl.net\x22,\x22'+'in-dsl.org'+'\x22,\x22in-vpn.'+'de\x22,\x22in-vp'+'n.net\x22,\x22in'+'-vpn.org\x22,'+'\x22biz.at\x22,\x22'+'info.at\x22,\x22'+'info.cx\x22,\x22'+'ac.leg.br\x22'+',\x22al.leg.b'+'r\x22,\x22am.leg'+'.br\x22,\x22ap.l'+'eg.br\x22,\x22ba'+'.leg.br\x22,\x22'+'ce.leg.br\x22'+',\x22df.leg.b'+'r\x22,\x22es.leg'+'.br\x22,\x22go.l'+'eg.br\x22,\x22ma'+'.leg.br\x22,\x22'+'mg.leg.br\x22'+',\x22ms.leg.b'+'r\x22,\x22mt.leg'+'.br\x22,\x22pa.l')+('eg.br\x22,\x22pb'+'.leg.br\x22,\x22'+'pe.leg.br\x22'+',\x22pi.leg.b'+'r\x22,\x22pr.leg'+'.br\x22,\x22rj.l'+'eg.br\x22,\x22rn'+'.leg.br\x22,\x22'+'ro.leg.br\x22'+',\x22rr.leg.b'+'r\x22,\x22rs.leg'+'.br\x22,\x22sc.l'+'eg.br\x22,\x22se'+'.leg.br\x22,\x22'+'sp.leg.br\x22'+',\x22to.leg.b'+'r\x22,\x22pixoli'+'no.com\x22,\x22i'+'pifony.net'+'\x22,\x22mein-is'+'erv.de\x22,\x22t'+'est-iserv.'+'de\x22,\x22iserv'+'.dev\x22,\x22iob'+'b.net\x22,\x22my'+'jino.ru\x22,\x22'+'*.hosting.'+'myjino.ru\x22'+',\x22*.landin'+'g.myjino.r'+'u\x22,\x22*.spec'+'trum.myjin'+'o.ru\x22,\x22*.v'+'ps.myjino.'+'ru\x22,\x22*.tri'+'ton.zone\x22,'+'\x22*.cns.joy'+'ent.com\x22,\x22'+'js.org\x22,\x22k'+'aas.gg\x22,\x22k'+'hplay.nl\x22,'+'\x22keymachin'+'e.de\x22,\x22kin'+'ghost.net\x22'+',\x22uni5.net'+'\x22,\x22knightp'+'oint.syste'+'ms\x22,\x22oya.t'+'o\x22,\x22co.krd'+'\x22,\x22edu.krd'+'\x22,\x22git-rep'+'os.de\x22,\x22lc'+'ube-server'+'.de\x22,\x22svn-'+'repos.de\x22,'+'\x22leadpages'+'.co\x22,\x22lpag'+'es.co\x22,\x22lp'+'userconten'+'t.com\x22,\x22le'+'lux.site\x22,'+'\x22co.busine'+'ss\x22,\x22co.ed'+'ucation\x22,\x22'+'co.events\x22'+',\x22co.finan'+'cial\x22,\x22co.'+'network\x22,\x22'+'co.place\x22,'+'\x22co.techno'+'logy\x22,\x22app'+'.lmpm.com\x22'+',\x22linkitoo'+'ls.space\x22,'+'\x22linkyard.'+'cloud\x22,\x22li'+'nkyard-clo'+'ud.ch\x22,\x22me'+'mbers.lino'+'de.com\x22,\x22n'+'odebalance'+'r.linode.c'+'om\x22,\x22we.bs'+'\x22,\x22loginli'+'ne.app\x22,\x22l'+'oginline.d'+'ev\x22,\x22login'+'line.io\x22,\x22'+'loginline.'+'services\x22,'+'\x22loginline'+'.site\x22,\x22kr'+'asnik.pl\x22,'+'\x22leczna.pl'+'\x22,\x22lubarto'+'w.pl\x22,\x22lub'+'lin.pl\x22,\x22p'+'oniatowa.p'+'l\x22,\x22swidni'+'k.pl\x22,\x22ukl')+('ugs.org\x22,\x22'+'glug.org.u'+'k\x22,\x22lug.or'+'g.uk\x22,\x22lug'+'s.org.uk\x22,'+'\x22barsy.bg\x22'+',\x22barsy.co'+'.uk\x22,\x22bars'+'yonline.co'+'.uk\x22,\x22bars'+'ycenter.co'+'m\x22,\x22barsyo'+'nline.com\x22'+',\x22barsy.cl'+'ub\x22,\x22barsy'+'.de\x22,\x22bars'+'y.eu\x22,\x22bar'+'sy.in\x22,\x22ba'+'rsy.info\x22,'+'\x22barsy.io\x22'+',\x22barsy.me'+'\x22,\x22barsy.m'+'enu\x22,\x22bars'+'y.mobi\x22,\x22b'+'arsy.net\x22,'+'\x22barsy.onl'+'ine\x22,\x22bars'+'y.org\x22,\x22ba'+'rsy.pro\x22,\x22'+'barsy.pub\x22'+',\x22barsy.sh'+'op\x22,\x22barsy'+'.site\x22,\x22ba'+'rsy.suppor'+'t\x22,\x22barsy.'+'uk\x22,\x22*.mag'+'entosite.c'+'loud\x22,\x22may'+'first.info'+'\x22,\x22mayfirs'+'t.org\x22,\x22hb'+'.cldmail.r'+'u\x22,\x22minise'+'rver.com\x22,'+'\x22memset.ne'+'t\x22,\x22cloud.'+'metacentru'+'m.cz\x22,\x22cus'+'tom.metace'+'ntrum.cz\x22,'+'\x22flt.cloud'+'.muni.cz\x22,'+'\x22usr.cloud'+'.muni.cz\x22,'+'\x22meteorapp'+'.com\x22,\x22eu.'+'meteorapp.'+'com\x22,\x22co.p'+'l\x22,\x22azurec'+'ontainer.i'+'o\x22,\x22azurew'+'ebsites.ne'+'t\x22,\x22azure-'+'mobile.net'+'\x22,\x22cloudap'+'p.net\x22,\x22mo'+'zilla-iot.'+'org\x22,\x22bmoa'+'ttachments'+'.org\x22,\x22net'+'.ru\x22,\x22org.'+'ru\x22,\x22pp.ru'+'\x22,\x22ui.nabu'+'.casa\x22,\x22po'+'ny.club\x22,\x22'+'of.fashion'+'\x22,\x22on.fash'+'ion\x22,\x22of.f'+'ootball\x22,\x22'+'in.london\x22'+',\x22of.londo'+'n\x22,\x22for.me'+'n\x22,\x22and.mo'+'m\x22,\x22for.mo'+'m\x22,\x22for.on'+'e\x22,\x22for.sa'+'le\x22,\x22of.wo'+'rk\x22,\x22to.wo'+'rk\x22,\x22nctu.'+'me\x22,\x22bitba'+'lloon.com\x22'+',\x22netlify.'+'com\x22,\x224u.c'+'om\x22,\x22ngrok'+'.io\x22,\x22nh-s'+'erv.co.uk\x22'+',\x22nfshost.'+'com\x22,\x22dnsk'+'ing.ch\x22,\x22m'+'ypi.co\x22,\x22n')+('4t.co\x22,\x2200'+'1www.com\x22,'+'\x22ddnslive.'+'com\x22,\x22myip'+'host.com\x22,'+'\x22forumz.in'+'fo\x22,\x2216-b.'+'it\x22,\x2232-b.'+'it\x22,\x2264-b.'+'it\x22,\x22sound'+'cast.me\x22,\x22'+'tcp4.me\x22,\x22'+'dnsup.net\x22'+',\x22hicam.ne'+'t\x22,\x22now-dn'+'s.net\x22,\x22ow'+'nip.net\x22,\x22'+'vpndns.net'+'\x22,\x22dynserv'+'.org\x22,\x22now'+'-dns.org\x22,'+'\x22x443.pw\x22,'+'\x22now-dns.t'+'op\x22,\x22ntdll'+'.top\x22,\x22fre'+'eddns.us\x22,'+'\x22crafting.'+'xyz\x22,\x22zapt'+'o.xyz\x22,\x22ns'+'update.inf'+'o\x22,\x22nerdpo'+'l.ovh\x22,\x22bl'+'ogsyte.com'+'\x22,\x22brasili'+'a.me\x22,\x22cab'+'le-modem.o'+'rg\x22,\x22cisco'+'freak.com\x22'+',\x22collegef'+'an.org\x22,\x22c'+'ouchpotato'+'fries.org\x22'+',\x22damnserv'+'er.com\x22,\x22d'+'dns.me\x22,\x22d'+'itchyourip'+'.com\x22,\x22dns'+'for.me\x22,\x22d'+'nsiskinky.'+'com\x22,\x22dvrc'+'am.info\x22,\x22'+'dynns.com\x22'+',\x22eating-o'+'rganic.net'+'\x22,\x22fantasy'+'league.cc\x22'+',\x22geekgala'+'xy.com\x22,\x22g'+'olffan.us\x22'+',\x22health-c'+'arereform.'+'com\x22,\x22home'+'securityma'+'c.com\x22,\x22ho'+'mesecurity'+'pc.com\x22,\x22h'+'opto.me\x22,\x22'+'ilovecolle'+'ge.info\x22,\x22'+'loginto.me'+'\x22,\x22mlbfan.'+'org\x22,\x22mmaf'+'an.biz\x22,\x22m'+'yactivedir'+'ectory.com'+'\x22,\x22mydisse'+'nt.net\x22,\x22m'+'yeffect.ne'+'t\x22,\x22mymedi'+'apc.net\x22,\x22'+'mypsx.net\x22'+',\x22mysecuri'+'tycamera.c'+'om\x22,\x22mysec'+'uritycamer'+'a.net\x22,\x22my'+'securityca'+'mera.org\x22,'+'\x22net-freak'+'s.com\x22,\x22nf'+'lfan.org\x22,'+'\x22nhlfan.ne'+'t\x22,\x22no-ip.'+'ca\x22,\x22no-ip'+'.co.uk\x22,\x22n'+'o-ip.net\x22,'+'\x22noip.us\x22,'+'\x22onthewifi'+'.com\x22,\x22pga'+'fan.net\x22,\x22')+('point2this'+'.com\x22,\x22poi'+'ntto.us\x22,\x22'+'privatizeh'+'ealthinsur'+'ance.net\x22,'+'\x22quicksyte'+'s.com\x22,\x22re'+'ad-books.o'+'rg\x22,\x22secur'+'itytactics'+'.com\x22,\x22ser'+'veexchange'+'.com\x22,\x22ser'+'vehumour.c'+'om\x22,\x22serve'+'p2p.com\x22,\x22'+'servesarca'+'sm.com\x22,\x22s'+'tufftoread'+'.com\x22,\x22ufc'+'fan.org\x22,\x22'+'unusualper'+'son.com\x22,\x22'+'workisbori'+'ng.com\x22,\x223'+'utilities.'+'com\x22,\x22boun'+'ceme.net\x22,'+'\x22ddns.net\x22'+',\x22ddnsking'+'.com\x22,\x22got'+'dns.ch\x22,\x22h'+'opto.org\x22,'+'\x22myftp.biz'+'\x22,\x22myftp.o'+'rg\x22,\x22myvnc'+'.com\x22,\x22no-'+'ip.biz\x22,\x22n'+'o-ip.info\x22'+',\x22no-ip.or'+'g\x22,\x22noip.m'+'e\x22,\x22redire'+'ctme.net\x22,'+'\x22servebeer'+'.com\x22,\x22ser'+'veblog.net'+'\x22,\x22serveco'+'unterstrik'+'e.com\x22,\x22se'+'rveftp.com'+'\x22,\x22servega'+'me.com\x22,\x22s'+'ervehalfli'+'fe.com\x22,\x22s'+'ervehttp.c'+'om\x22,\x22serve'+'irc.com\x22,\x22'+'serveminec'+'raft.net\x22,'+'\x22servemp3.'+'com\x22,\x22serv'+'epics.com\x22'+',\x22servequa'+'ke.com\x22,\x22s'+'ytes.net\x22,'+'\x22webhop.me'+'\x22,\x22zapto.o'+'rg\x22,\x22stage'+'.nodeart.i'+'o\x22,\x22nodum.'+'co\x22,\x22nodum'+'.io\x22,\x22pclo'+'ud.host\x22,\x22'+'nyc.mn\x22,\x22n'+'om.ae\x22,\x22no'+'m.af\x22,\x22nom'+'.ai\x22,\x22nom.'+'al\x22,\x22nym.b'+'y\x22,\x22nom.bz'+'\x22,\x22nym.bz\x22'+',\x22nom.cl\x22,'+'\x22nym.ec\x22,\x22'+'nom.gd\x22,\x22n'+'om.ge\x22,\x22no'+'m.gl\x22,\x22nym'+'.gr\x22,\x22nom.'+'gt\x22,\x22nym.g'+'y\x22,\x22nym.hk'+'\x22,\x22nom.hn\x22'+',\x22nym.ie\x22,'+'\x22nom.im\x22,\x22'+'nom.ke\x22,\x22n'+'ym.kz\x22,\x22ny'+'m.la\x22,\x22nym'+'.lc\x22,\x22nom.'+'li\x22,\x22nym.l'+'i\x22,\x22nym.lt'+'\x22,\x22nym.lu\x22'+',\x22nom.lv\x22,')+('\x22nym.me\x22,\x22'+'nom.mk\x22,\x22n'+'ym.mn\x22,\x22ny'+'m.mx\x22,\x22nom'+'.nu\x22,\x22nym.'+'nz\x22,\x22nym.p'+'e\x22,\x22nym.pt'+'\x22,\x22nom.pw\x22'+',\x22nom.qa\x22,'+'\x22nym.ro\x22,\x22'+'nom.rs\x22,\x22n'+'om.si\x22,\x22ny'+'m.sk\x22,\x22nom'+'.st\x22,\x22nym.'+'su\x22,\x22nym.s'+'x\x22,\x22nom.tj'+'\x22,\x22nym.tw\x22'+',\x22nom.ug\x22,'+'\x22nom.uy\x22,\x22'+'nom.vc\x22,\x22n'+'om.vg\x22,\x22st'+'atic.obser'+'vableuserc'+'ontent.com'+'\x22,\x22cya.gg\x22'+',\x22cloudycl'+'uster.net\x22'+',\x22nid.io\x22,'+'\x22opencraft'+'.hosting\x22,'+'\x22operaunit'+'e.com\x22,\x22sk'+'ygearapp.c'+'om\x22,\x22outsy'+'stemscloud'+'.com\x22,\x22own'+'provider.c'+'om\x22,\x22own.p'+'m\x22,\x22ox.rs\x22'+',\x22oy.lc\x22,\x22'+'pgfog.com\x22'+',\x22pagefron'+'tapp.com\x22,'+'\x22art.pl\x22,\x22'+'gliwice.pl'+'\x22,\x22krakow.'+'pl\x22,\x22pozna'+'n.pl\x22,\x22wro'+'c.pl\x22,\x22zak'+'opane.pl\x22,'+'\x22pantheons'+'ite.io\x22,\x22g'+'otpantheon'+'.com\x22,\x22myp'+'ep.link\x22,\x22'+'perspecta.'+'cloud\x22,\x22on'+'-web.fr\x22,\x22'+'*.platform'+'.sh\x22,\x22*.pl'+'atformsh.s'+'ite\x22,\x22dyn5'+'3.io\x22,\x22co.'+'bn\x22,\x22xen.p'+'rgmr.com\x22,'+'\x22priv.at\x22,'+'\x22prvcy.pag'+'e\x22,\x22*.dweb'+'.link\x22,\x22pr'+'otonet.io\x22'+',\x22chirurgi'+'ens-dentis'+'tes-en-fra'+'nce.fr\x22,\x22b'+'yen.site\x22,'+'\x22pubtls.or'+'g\x22,\x22qualif'+'ioapp.com\x22'+',\x22qbuser.c'+'om\x22,\x22insta'+'ntcloud.cn'+'\x22,\x22ras.ru\x22'+',\x22qa2.com\x22'+',\x22qcx.io\x22,'+'\x22*.sys.qcx'+'.io\x22,\x22dev-'+'myqnapclou'+'d.com\x22,\x22al'+'pha-myqnap'+'cloud.com\x22'+',\x22myqnapcl'+'oud.com\x22,\x22'+'*.quipelem'+'ents.com\x22,'+'\x22vapor.clo'+'ud\x22,\x22vapor'+'cloud.io\x22,'+'\x22rackmaze.'+'com\x22,\x22rack'+'maze.net\x22,')+('\x22*.on-k3s.'+'io\x22,\x22*.on-'+'rancher.cl'+'oud\x22,\x22*.on'+'-rio.io\x22,\x22'+'readthedoc'+'s.io\x22,\x22rhc'+'loud.com\x22,'+'\x22app.rende'+'r.com\x22,\x22on'+'render.com'+'\x22,\x22repl.co'+'\x22,\x22repl.ru'+'n\x22,\x22resind'+'evice.io\x22,'+'\x22devices.r'+'esinstagin'+'g.io\x22,\x22hzc'+'.io\x22,\x22well'+'beingzone.'+'eu\x22,\x22ptplu'+'s.fit\x22,\x22we'+'llbeingzon'+'e.co.uk\x22,\x22'+'git-pages.'+'rit.edu\x22,\x22'+'sandcats.i'+'o\x22,\x22logoip'+'.de\x22,\x22logo'+'ip.com\x22,\x22s'+'chokokeks.'+'net\x22,\x22gov.'+'scot\x22,\x22scr'+'ysec.com\x22,'+'\x22firewall-'+'gateway.co'+'m\x22,\x22firewa'+'ll-gateway'+'.de\x22,\x22my-g'+'ateway.de\x22'+',\x22my-route'+'r.de\x22,\x22spd'+'ns.de\x22,\x22sp'+'dns.eu\x22,\x22f'+'irewall-ga'+'teway.net\x22'+',\x22my-firew'+'all.org\x22,\x22'+'myfirewall'+'.org\x22,\x22spd'+'ns.org\x22,\x22s'+'enseering.'+'net\x22,\x22biz.'+'ua\x22,\x22co.ua'+'\x22,\x22pp.ua\x22,'+'\x22shiftedit'+'.io\x22,\x22mysh'+'opblocks.c'+'om\x22,\x22shopi'+'tsite.com\x22'+',\x22mo-sieme'+'ns.io\x22,\x221k'+'app.com\x22,\x22'+'appchizi.c'+'om\x22,\x22appli'+'nzi.com\x22,\x22'+'sinaapp.co'+'m\x22,\x22vipsin'+'aapp.com\x22,'+'\x22siteleaf.'+'net\x22,\x22boun'+'ty-full.co'+'m\x22,\x22alpha.'+'bounty-ful'+'l.com\x22,\x22be'+'ta.bounty-'+'full.com\x22,'+'\x22stackhero'+'-network.c'+'om\x22,\x22stati'+'c.land\x22,\x22d'+'ev.static.'+'land\x22,\x22sit'+'es.static.'+'land\x22,\x22app'+'s.lair.io\x22'+',\x22*.stolos'+'.io\x22,\x22spac'+'ekit.io\x22,\x22'+'customer.s'+'peedpartne'+'r.de\x22,\x22api'+'.stdlib.co'+'m\x22,\x22storj.'+'farm\x22,\x22utw'+'ente.io\x22,\x22'+'soc.srcf.n'+'et\x22,\x22user.'+'srcf.net\x22,'+'\x22temp-dns.')+('com\x22,\x22appl'+'icationclo'+'ud.io\x22,\x22sc'+'app.io\x22,\x22*'+'.s5y.io\x22,\x22'+'*.sensiosi'+'te.cloud\x22,'+'\x22syncloud.'+'it\x22,\x22disks'+'tation.me\x22'+',\x22dscloud.'+'biz\x22,\x22dscl'+'oud.me\x22,\x22d'+'scloud.mob'+'i\x22,\x22dsmyna'+'s.com\x22,\x22ds'+'mynas.net\x22'+',\x22dsmynas.'+'org\x22,\x22fami'+'lyds.com\x22,'+'\x22familyds.'+'net\x22,\x22fami'+'lyds.org\x22,'+'\x22i234.me\x22,'+'\x22myds.me\x22,'+'\x22synology.'+'me\x22,\x22vpnpl'+'us.to\x22,\x22di'+'rect.quick'+'connect.to'+'\x22,\x22taifun-'+'dns.de\x22,\x22g'+'da.pl\x22,\x22gd'+'ansk.pl\x22,\x22'+'gdynia.pl\x22'+',\x22med.pl\x22,'+'\x22sopot.pl\x22'+',\x22edugit.o'+'rg\x22,\x22teleb'+'it.app\x22,\x22t'+'elebit.io\x22'+',\x22*.telebi'+'t.xyz\x22,\x22gw'+'iddle.co.u'+'k\x22,\x22thingd'+'ustdata.co'+'m\x22,\x22cust.d'+'ev.thingdu'+'st.io\x22,\x22cu'+'st.disrec.'+'thingdust.'+'io\x22,\x22cust.'+'prod.thing'+'dust.io\x22,\x22'+'cust.testi'+'ng.thingdu'+'st.io\x22,\x22ar'+'vo.network'+'\x22,\x22azimuth'+'.network\x22,'+'\x22bloxcms.c'+'om\x22,\x22townn'+'ews-stagin'+'g.com\x22,\x2212'+'hp.at\x22,\x222i'+'x.at\x22,\x224li'+'ma.at\x22,\x22li'+'ma-city.at'+'\x22,\x2212hp.ch'+'\x22,\x222ix.ch\x22'+',\x224lima.ch'+'\x22,\x22lima-ci'+'ty.ch\x22,\x22tr'+'afficplex.'+'cloud\x22,\x22de'+'.cool\x22,\x2212'+'hp.de\x22,\x222i'+'x.de\x22,\x224li'+'ma.de\x22,\x22li'+'ma-city.de'+'\x22,\x221337.pi'+'ctures\x22,\x22c'+'lan.rip\x22,\x22'+'lima-city.'+'rocks\x22,\x22we'+'bspace.roc'+'ks\x22,\x22lima.'+'zone\x22,\x22*.t'+'ransurl.be'+'\x22,\x22*.trans'+'url.eu\x22,\x22*'+'.transurl.'+'nl\x22,\x22tuxfa'+'mily.org\x22,'+'\x22dd-dns.de'+'\x22,\x22disksta'+'tion.eu\x22,\x22'+'diskstatio'+'n.org\x22,\x22dr'+'ay-dns.de\x22')+(',\x22draydns.'+'de\x22,\x22dyn-v'+'pn.de\x22,\x22dy'+'nvpn.de\x22,\x22'+'mein-vigor'+'.de\x22,\x22my-v'+'igor.de\x22,\x22'+'my-wan.de\x22'+',\x22syno-ds.'+'de\x22,\x22synol'+'ogy-diskst'+'ation.de\x22,'+'\x22synology-'+'ds.de\x22,\x22ub'+'er.space\x22,'+'\x22*.uberspa'+'ce.de\x22,\x22hk'+'.com\x22,\x22hk.'+'org\x22,\x22ltd.'+'hk\x22,\x22inc.h'+'k\x22,\x22virtua'+'luser.de\x22,'+'\x22virtual-u'+'ser.de\x22,\x22u'+'rown.cloud'+'\x22,\x22dnsupda'+'te.info\x22,\x22'+'lib.de.us\x22'+',\x222038.io\x22'+',\x22router.m'+'anagement\x22'+',\x22v-info.i'+'nfo\x22,\x22voor'+'loper.clou'+'d\x22,\x22v.ua\x22,'+'\x22wafflecel'+'l.com\x22,\x22*.'+'webhare.de'+'v\x22,\x22wedepl'+'oy.io\x22,\x22we'+'deploy.me\x22'+',\x22wedeploy'+'.sh\x22,\x22remo'+'tewd.com\x22,'+'\x22wmflabs.o'+'rg\x22,\x22myfor'+'um.communi'+'ty\x22,\x22commu'+'nity-pro.d'+'e\x22,\x22diskus'+'sionsberei'+'ch.de\x22,\x22co'+'mmunity-pr'+'o.net\x22,\x22me'+'inforum.ne'+'t\x22,\x22half.h'+'ost\x22,\x22xnba'+'y.com\x22,\x22u2'+'.xnbay.com'+'\x22,\x22u2-loca'+'l.xnbay.co'+'m\x22,\x22cistro'+'n.nl\x22,\x22dem'+'on.nl\x22,\x22xs'+'4all.space'+'\x22,\x22yandexc'+'loud.net\x22,'+'\x22storage.y'+'andexcloud'+'.net\x22,\x22web'+'site.yande'+'xcloud.net'+'\x22,\x22officia'+'l.academy\x22'+',\x22yolasite'+'.com\x22,\x22ybo'+'.faith\x22,\x22y'+'ombo.me\x22,\x22'+'homelink.o'+'ne\x22,\x22ybo.p'+'arty\x22,\x22ybo'+'.review\x22,\x22'+'ybo.scienc'+'e\x22,\x22ybo.tr'+'ade\x22,\x22noho'+'st.me\x22,\x22no'+'ho.st\x22,\x22za'+'.net\x22,\x22za.'+'org\x22,\x22now.'+'sh\x22,\x22bss.d'+'esign\x22,\x22ba'+'sicserver.'+'io\x22,\x22virtu'+'alserver.i'+'o\x22,\x22enterp'+'risecloud.'+'nu\x22]'));}},_0x1cbad1={};function _0x3e0900(_0x1bb481){var _0x41f8e4=_0x1cbad1[_0x1bb481];if(void(0x19f6+-0x1394+-0x662)!==_0x41f8e4)return _0x41f8e4['exports'];var _0x321915=_0x1cbad1[_0x1bb481]={'exports':{}};return _0x14cc85[_0x1bb481]['call'](_0x321915['exports'],_0x321915,_0x321915['exports'],_0x3e0900),_0x321915['exports'];}_0x3e0900['d']=(_0x5ad73d,_0x17d267)=>{for(var _0x50c276 in _0x17d267)_0x3e0900['o'](_0x17d267,_0x50c276)&&!_0x3e0900['o'](_0x5ad73d,_0x50c276)&&Object['defineProp'+'erty'](_0x5ad73d,_0x50c276,{'enumerable':!(0x251*0x2+-0x1a08+0x1566),'get':_0x17d267[_0x50c276]});},_0x3e0900['o']=(_0x54723e,_0x18a19b)=>Object['prototype']['hasOwnProp'+'erty']['call'](_0x54723e,_0x18a19b),_0x3e0900['r']=_0x18bd98=>{'undefined'!=typeof Symbol&&Symbol['toStringTa'+'g']&&Object['defineProp'+'erty'](_0x18bd98,Symbol['toStringTa'+'g'],{'value':'Module'}),Object['defineProp'+'erty'](_0x18bd98,'__esModule',{'value':!(0x1*-0x8a9+-0xfbf+0x1868)});};var _0x26f130=_0x3e0900(0x2c33*-0x1+-0xef*-0x41+0x168c);module['exports']=_0x26f130;})());

/***/ }),

/***/ "./src/mvm/MVM.js":
/*!************************!*\
  !*** ./src/mvm/MVM.js ***!
  \************************/
/***/ ((module) => {

((()=>{'use strict';var _0x34c26f={0x2ae:function(_0x18ee33,_0x4aeb22,_0x2bb899){var _0x208e5c=this&&this['__awaiter']||function(_0x1a31e4,_0x3e3ed6,_0x567a7b,_0x45c16a){return new(_0x567a7b||(_0x567a7b=Promise))(function(_0x66698e,_0x553c50){function _0x167d59(_0x4cdcc2){try{_0x3cd424(_0x45c16a['next'](_0x4cdcc2));}catch(_0x335cd8){_0x553c50(_0x335cd8);}}function _0x622c8(_0x3803e2){try{_0x3cd424(_0x45c16a['throw'](_0x3803e2));}catch(_0xbf326f){_0x553c50(_0xbf326f);}}function _0x3cd424(_0x1174bc){var _0x29885a;_0x1174bc['done']?_0x66698e(_0x1174bc['value']):(_0x29885a=_0x1174bc['value'],_0x29885a instanceof _0x567a7b?_0x29885a:new _0x567a7b(function(_0x19462d){_0x19462d(_0x29885a);}))['then'](_0x167d59,_0x622c8);}_0x3cd424((_0x45c16a=_0x45c16a['apply'](_0x1a31e4,_0x3e3ed6||[]))['next']());});},_0x317168=this&&this['__importDe'+'fault']||function(_0x100df8){return _0x100df8&&_0x100df8['__esModule']?_0x100df8:{'default':_0x100df8};};Object['defineProp'+'erty'](_0x4aeb22,'__esModule',{'value':!(0x1*-0x1e14+-0x20*0xeb+-0xa*-0x5f2)}),_0x4aeb22['MatlabStat'+'e']=void(-0xf54+-0x1a45+0x2999);const _0x2bf306=_0x317168(_0x2bb899(-0x4aa+0x707+0x6*0x37)),_0x593303=_0x317168(_0x2bb899(-0xa4a+0x196*0x14+-0x11e4)),_0x5981e5=_0x317168(_0x2bb899(0x567+0xcaa+0x18*-0x9e)),_0x17547e=_0x2bb899(-0x27c+0xf21+-0xc25);var _0x287557;!function(_0x52a681){_0x52a681['DISCONNECT'+'ED']='disconnect'+'ed',_0x52a681['READY']='ready',_0x52a681['BUSY']='busy';}(_0x287557=_0x4aeb22['MatlabStat'+'e']||(_0x4aeb22['MatlabStat'+'e']={})),_0x4aeb22['default']=class{constructor(_0x4afa1d,_0xc0e1f8){this['_lifecycle'+'Manager']=_0xc0e1f8,this['_lifecycle'+'Manager']['eventEmitt'+'er']['on']('connected',()=>this['_handleLif'+'ecycleEven'+'t']('connected')),this['_lifecycle'+'Manager']['eventEmitt'+'er']['on']('disconnect'+'ed',()=>this['_handleLif'+'ecycleEven'+'t']('disconnect'+'ed')),this['_notificat'+'ionService']=_0x4afa1d,this['_notificat'+'ionService']['registerNo'+'tification'+'Listener'](_0x17547e['MvmNotific'+'ation']['MVMEvalReq'+'uest'],this['_doEval']['bind'](this)),this['_notificat'+'ionService']['registerNo'+'tification'+'Listener'](_0x17547e['MvmNotific'+'ation']['MVMFevalRe'+'quest'],this['_doFeval']['bind'](this)),this['_notificat'+'ionService']['registerNo'+'tification'+'Listener'](_0x17547e['MvmNotific'+'ation']['MVMInterru'+'ptRequest'],this['_doInterru'+'pt']['bind'](this));}['_handleLif'+'ecycleEven'+'t'](_0x5f114d){if('disconnect'+'ed'===_0x5f114d)return this['_mvmImpl']&&this['_mvmImpl']['detach'](),this['_mvmImpl']=void(-0x1*0x1a91+0xc8a+-0x7*-0x201),void this['_notificat'+'ionService']['sendNotifi'+'cation'](_0x17547e['MvmNotific'+'ation']['MVMStateCh'+'ange'],_0x287557['DISCONNECT'+'ED']);this['_tryAttach']();}['_tryAttach'](){this['_readyProm'+'ise']=this['_detectImp'+'l'](),this['_readyProm'+'ise']['then'](this['_handleRea'+'dy']['bind'](this),this['_handleRea'+'dyError']['bind'](this));}['_handleRea'+'dy'](){if(!this['_mvmImpl'])throw'MVMImpl\x20no'+'t\x20set';this['_mvmImpl']['onOutput']=this['_handleOut'+'put']['bind'](this),this['_mvmImpl']['onClc']=this['_handleClc']['bind'](this),this['_notificat'+'ionService']['sendNotifi'+'cation'](_0x17547e['MvmNotific'+'ation']['MVMStateCh'+'ange'],_0x287557['READY']);}['_handleRea'+'dyError'](){}['_detectImp'+'lBasedOnTi'+'meout'](){return _0x208e5c(this,void(0x83f+0x2017+-0x2856),void(-0x74e+0x1e31+0x7*-0x345),function*(){const _0x3fc84c=new _0x593303['default'](this['_lifecycle'+'Manager']);let _0x1cd4b6=yield _0x3fc84c['tryAttach']();if(_0x1cd4b6)return void(this['_mvmImpl']=_0x3fc84c);const _0x3036eb=new _0x5981e5['default'](this['_lifecycle'+'Manager']);if(_0x1cd4b6=yield _0x3036eb['tryAttach'](),!_0x1cd4b6)throw'Unable\x20to\x20'+'attach\x20to\x20'+'MATLAB\x20MVM';this['_mvmImpl']=_0x3036eb;});}['_detectImp'+'l'](){return _0x208e5c(this,void(-0x3*-0x950+0x4*0x7cd+0x1d92*-0x2),void(0x1d*0x13a+0x24f*0xb+0x1*-0x3cf7),function*(){const _0x5e958c=this['_lifecycle'+'Manager']['getMatlabR'+'elease']();if(null===_0x5e958c)return this['_detectImp'+'lBasedOnTi'+'meout']();const _0x5f53ea=_0x5e958c['match'](/^R20([0-9]{2}[ab])$/);if(null==_0x5f53ea)return this['_detectImp'+'lBasedOnTi'+'meout']();const _0x239f0f=_0x5f53ea[-0x481*0x8+-0x43*-0x58+-0xd01*-0x1];switch(_0x239f0f){case'21a':case'21b':{const _0x2dfe23=new _0x5981e5['default'](this['_lifecycle'+'Manager']);if(yield _0x2dfe23['tryAttach'](_0x239f0f))return void(this['_mvmImpl']=_0x2dfe23);}break;case'22a':{const _0x32dba3=new _0x593303['default'](this['_lifecycle'+'Manager']);if(yield _0x32dba3['tryAttach'](_0x239f0f))return void(this['_mvmImpl']=_0x32dba3);}break;default:{const _0x138c49=new _0x2bf306['default'](this['_lifecycle'+'Manager']);if(yield _0x138c49['tryAttach'](_0x239f0f))return void(this['_mvmImpl']=_0x138c49);}}return this['_detectImp'+'lBasedOnTi'+'meout']();});}['_doEval'](_0x47a356){var _0x3f4606,_0x915303;const _0x30578f=_0x47a356['requestId'];_0x30578f&&(null===(_0x915303=null===(_0x3f4606=this['_mvmImpl'])||void(-0x29b+-0x6ad+0x948)===_0x3f4606?void(0x89*0x3b+-0xa4e+-0x1545):_0x3f4606['eval'](_0x47a356['command']))||void(-0x1*-0x115f+0x1d81+-0x2ee0)===_0x915303||_0x915303['then'](()=>{this['_notificat'+'ionService']['sendNotifi'+'cation'](_0x17547e['MvmNotific'+'ation']['MVMEvalCom'+'plete'],{'requestId':_0x30578f});}));}['_doFeval'](_0x266a39){var _0x3f12d9,_0x562b6e;const _0x3e6287=_0x266a39['requestId'];_0x3e6287&&(null===(_0x562b6e=null===(_0x3f12d9=this['_mvmImpl'])||void(-0x4f*-0x33+0x183*0x3+0x40e*-0x5)===_0x3f12d9?void(0x776+-0x17a4+0x102e):_0x3f12d9['feval'](_0x266a39['functionNa'+'me'],_0x266a39['nargout'],_0x266a39['args']))||void(-0x3*-0x131+-0x1*-0x379+-0x70c)===_0x562b6e||_0x562b6e['then'](_0x379ac6=>{this['_notificat'+'ionService']['sendNotifi'+'cation'](_0x17547e['MvmNotific'+'ation']['MVMFevalCo'+'mplete'],{'requestId':_0x3e6287,'result':_0x379ac6});}));}['_doInterru'+'pt'](){var _0x1c73a1;null===(_0x1c73a1=this['_mvmImpl'])||void(-0x20*0x8+0x4e4*0x7+-0x213c)===_0x1c73a1||_0x1c73a1['interrupt']();}['_handleOut'+'put'](_0x3e76a0){this['_notificat'+'ionService']['sendNotifi'+'cation'](_0x17547e['MvmNotific'+'ation']['MVMText'],_0x3e76a0);}['_handleClc'](){this['_notificat'+'ionService']['sendNotifi'+'cation'](_0x17547e['MvmNotific'+'ation']['MVMClc']);}['_getNewReq'+'uestId'](){return Math['random']()['toString'](0x5*-0x580+-0x59*-0x3d+0x225*0x3)['substr'](-0x11a3+0x9*-0x14c+-0x18b*-0x13,0x5*-0xd1+-0xcff+0x1*0x111d);}};},0x80:(_0x193fc0,_0x40e0dc)=>{var _0x1685cb;Object['defineProp'+'erty'](_0x40e0dc,'__esModule',{'value':!(-0xb2c+0xd*0x27b+-0xd*0x19f)}),_0x40e0dc['MvmNotific'+'ation']=void(0x468*0x3+-0x4*0x5e7+0xa*0x10a),(_0x1685cb=_0x40e0dc['MvmNotific'+'ation']||(_0x40e0dc['MvmNotific'+'ation']={}))['MVMEvalReq'+'uest']='evalReques'+'t',_0x1685cb['MVMEvalCom'+'plete']='evalReques'+'t',_0x1685cb['MVMFevalRe'+'quest']='fevalReque'+'st',_0x1685cb['MVMFevalCo'+'mplete']='fevalReque'+'st',_0x1685cb['MVMText']='text',_0x1685cb['MVMClc']='clc',_0x1685cb['MVMInterru'+'ptRequest']='interruptR'+'equest',_0x1685cb['MVMStateCh'+'ange']='mvmStateCh'+'ange';},0x341:function(_0x505828,_0x9c1fa2,_0x5ab7eb){var _0x433d2c=this&&this['__createBi'+'nding']||(Object['create']?function(_0x1c18a3,_0x3dff41,_0x2941d6,_0x46abb4){void(0x1*0x23f3+0x251f+-0x2*0x2489)===_0x46abb4&&(_0x46abb4=_0x2941d6);var _0x308f2f=Object['getOwnProp'+'ertyDescri'+'ptor'](_0x3dff41,_0x2941d6);_0x308f2f&&!('get'in _0x308f2f?!_0x3dff41['__esModule']:_0x308f2f['writable']||_0x308f2f['configurab'+'le'])||(_0x308f2f={'enumerable':!(0xa5*-0x22+0x10f3*-0x1+0x26dd),'get':function(){return _0x3dff41[_0x2941d6];}}),Object['defineProp'+'erty'](_0x1c18a3,_0x46abb4,_0x308f2f);}:function(_0x43eb5e,_0x37315e,_0x379cfe,_0x1c7225){void(-0xb2d*0x2+0x100*0x5+0x115a*0x1)===_0x1c7225&&(_0x1c7225=_0x379cfe),_0x43eb5e[_0x1c7225]=_0x37315e[_0x379cfe];}),_0x1637ae=this&&this['__setModul'+'eDefault']||(Object['create']?function(_0x4a2603,_0x37f808){Object['defineProp'+'erty'](_0x4a2603,'default',{'enumerable':!(-0x72b+0x1*0x6b6+0x75),'value':_0x37f808});}:function(_0x41ff89,_0x5c71ea){_0x41ff89['default']=_0x5c71ea;}),_0x108137=this&&this['__importSt'+'ar']||function(_0x32713d){if(_0x32713d&&_0x32713d['__esModule'])return _0x32713d;var _0x49811a={};if(null!=_0x32713d){for(var _0x41cd60 in _0x32713d)'default'!==_0x41cd60&&Object['prototype']['hasOwnProp'+'erty']['call'](_0x32713d,_0x41cd60)&&_0x433d2c(_0x49811a,_0x32713d,_0x41cd60);}return _0x1637ae(_0x49811a,_0x32713d),_0x49811a;},_0x44366f=this&&this['__awaiter']||function(_0x2e016a,_0x353ad2,_0x2574f6,_0xcef35e){return new(_0x2574f6||(_0x2574f6=Promise))(function(_0x274423,_0x2e301f){function _0x475616(_0x235d43){try{_0x1b92ad(_0xcef35e['next'](_0x235d43));}catch(_0x17cd40){_0x2e301f(_0x17cd40);}}function _0x497a97(_0x102815){try{_0x1b92ad(_0xcef35e['throw'](_0x102815));}catch(_0x215388){_0x2e301f(_0x215388);}}function _0x1b92ad(_0x169ed3){var _0x1339f2;_0x169ed3['done']?_0x274423(_0x169ed3['value']):(_0x1339f2=_0x169ed3['value'],_0x1339f2 instanceof _0x2574f6?_0x1339f2:new _0x2574f6(function(_0xbdcb03){_0xbdcb03(_0x1339f2);}))['then'](_0x475616,_0x497a97);}_0x1b92ad((_0xcef35e=_0xcef35e['apply'](_0x2e016a,_0x353ad2||[]))['next']());});};Object['defineProp'+'erty'](_0x9c1fa2,'__esModule',{'value':!(-0x2d9*-0xb+-0x885+-0x16ce)});const _0x496137=_0x108137(_0x5ab7eb(0xa72+0x1604*0x1+-0x2073)),_0xa8ed1f=_0x5ab7eb(0x151c+0x11*0x19a+-0x303c);class _0x144395 extends _0x496137['default']{constructor(_0x139db3){super(),this['_currentRe'+'questId']=-0x1125+-0x1457+0x257c,this['_lifecycle'+'Manager']=_0x139db3;}['_getChanne'+'l'](_0x22eb87,..._0x42f074){switch(_0x22eb87){case _0x496137['MessageTyp'+'e']['ATTACH']:return'/mvm/attac'+'h';case _0x496137['MessageTyp'+'e']['ATTACH_RES'+'PONSE']:return'/mvm/attac'+'h/response'+'/'+_0x42f074[0xc0f+-0x17*-0x49+0x129e*-0x1];case _0x496137['MessageTyp'+'e']['EVAL_REQUE'+'ST']:return'/mvm/reque'+'st/eval';case _0x496137['MessageTyp'+'e']['FEVAL_REQU'+'EST']:return'/mvm/reque'+'st/feval';case _0x496137['MessageTyp'+'e']['CANCEL']:return'/mvm/cance'+'l';case _0x496137['MessageTyp'+'e']['EVAL_FEVAL'+'_RESPONSE']:return'/mvm/respo'+'nse/'+this['_attachId'];case _0x496137['MessageTyp'+'e']['OUTPUT']:return'/mvm/outpu'+'t/'+this['_attachId'];case _0x496137['MessageTyp'+'e']['ERROR_OUTP'+'UT']:return'/mvm/error'+'/'+this['_attachId'];case _0x496137['MessageTyp'+'e']['EVENT_FIRE'+'D']:return'/mvm/event'+'s/'+this['_attachId'];case _0x496137['MessageTyp'+'e']['CLC']:return'/matlabls/'+'events/clc';case _0x496137['MessageTyp'+'e']['EVENT_SUBS'+'CRIBE']:case _0x496137['MessageTyp'+'e']['EVENT_SUBS'+'CRIBED']:case _0x496137['MessageTyp'+'e']['EVAL_RESPO'+'NSE']:case _0x496137['MessageTyp'+'e']['FEVAL_RESP'+'ONSE']:case _0x496137['MessageTyp'+'e']['STILL_ALIV'+'E']:case _0x496137['MessageTyp'+'e']['INTERRUPT']:throw'Message\x20un'+'used';}}['_getMessag'+'eData'](_0x12d1bc,..._0x1ff024){switch(_0x12d1bc){case _0x496137['MessageTyp'+'e']['ATTACH']:return{'attachID':_0x1ff024[-0x14b*0x1a+-0x2d*0x99+0x3c83],'mvmID':'user-mvm'};case _0x496137['MessageTyp'+'e']['EVAL_REQUE'+'ST']:return{'attachID':this['_attachId'],'requestID':_0x1ff024[0x19*-0x2f+-0x3*0x362+0xebd],'command':_0x1ff024[-0xcb9*-0x3+-0x1*0xdb4+-0x1876],'isUserEval':!(-0x1*0x935+0x1bb*-0x13+0x2*0x150b),'runOptions':_0x1ff024[-0xda*0xa+-0x1*-0x243e+-0x1bb8]};case _0x496137['MessageTyp'+'e']['FEVAL_REQU'+'EST']:return{'attachID':this['_attachId'],'requestID':_0x1ff024[0x1919*0x1+-0x75*-0x1f+-0x2744],'function':_0x1ff024[-0x2573*-0x1+0x264c+-0x569*0xe],'numOutputsExpected':_0x1ff024[0x8*-0x1f2+-0x25d3+0x3565],'rhsArgs':_0x1ff024[0xac5+0x1019+-0x271*0xb],'runOptions':_0x1ff024[-0x170d+-0x2*-0x55+0x1667]};case _0x496137['MessageTyp'+'e']['CANCEL']:return{'attachID':this['_attachId'],'requestID':_0x1ff024[-0x2ef+0x19fe+-0x170f],'interrupt':!(-0x1*-0x1b4+-0x15fb*0x1+0x1447)};}throw'Unknown\x20me'+'ssage\x20type'+'\x20to\x20get\x20da'+'ta\x20from';}['tryAttach'](_0x1e7832){return _0x44366f(this,void(0x8d*0x19+-0x1946+0xb81),void(-0x22b0*-0x1+0x1eb3+-0x4163),function*(){if(this['_matlabCon'+'nection']=yield this['_lifecycle'+'Manager']['getMatlabC'+'onnection'](),null==this['_matlabCon'+'nection'])return!(0x1*0x959+0xe9c+0xe*-0x1b6);const _0x1197de=(0x2366+0x513*-0x1+-0x1e53,_0xa8ed1f['createReso'+'lvableProm'+'ise'])();let _0x58e34b=!(0xd61+0x37b+-0x5*0x35f);const _0x2e53c8=setTimeout(()=>{_0x1197de['resolve'](!(-0x20d5*0x1+0x99f+0x1737*0x1)),_0x58e34b=!(-0x19d3+0x1*-0x1d15+0x36e8);},0x1567+0x26ab+-0x382a),_0x2cdc5e=this['_getNewAtt'+'achId']();return this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x496137['MessageTyp'+'e']['ATTACH_RES'+'PONSE'],_0x2cdc5e),_0x350f16=>{clearTimeout(_0x2e53c8),_0x58e34b||(_0x350f16['error']?_0x1197de['resolve'](!(-0x878+-0x7*0x2a1+0xd7*0x20)):this['_matlabCon'+'nection']?(this['_attachId']=_0x2cdc5e,this['_connectio'+'ns']['push'](this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x496137['MessageTyp'+'e']['EVAL_FEVAL'+'_RESPONSE']),this['_handleRes'+'ponse']['bind'](this))),this['_connectio'+'ns']['push'](this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x496137['MessageTyp'+'e']['OUTPUT']),this['_handleOut'+'put']['bind'](this))),this['_connectio'+'ns']['push'](this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x496137['MessageTyp'+'e']['ERROR_OUTP'+'UT']),this['_handleOut'+'put']['bind'](this))),this['_connectio'+'ns']['push'](this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x496137['MessageTyp'+'e']['EVENT_FIRE'+'D']),this['_handleEve'+'ntFired']['bind'](this))),this['_connectio'+'ns']['push'](this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x496137['MessageTyp'+'e']['CLC']),this['_handleClc'+'Event']['bind'](this))),_0x1197de['resolve'](!(-0x11*0x117+-0x217e+-0x243*-0x17))):_0x1197de['resolve'](!(0x232+-0xe99+0xc68)));}),this['_matlabCon'+'nection']['publish'](this['_getChanne'+'l'](_0x496137['MessageTyp'+'e']['ATTACH']),this['_getMessag'+'eData'](_0x496137['MessageTyp'+'e']['ATTACH'],_0x2cdc5e)),_0x1197de;});}['detach'](){super['detach']();}['_handleEve'+'ntFired'](_0x782a5e){}['_cancel'](_0x18c7c9){var _0x27aecc;null===(_0x27aecc=this['_matlabCon'+'nection'])||void(-0x1539+-0xb7f*0x2+0x2c37)===_0x27aecc||_0x27aecc['publish'](this['_getChanne'+'l'](_0x496137['MessageTyp'+'e']['CANCEL']),this['_getMessag'+'eData'](_0x496137['MessageTyp'+'e']['CANCEL'],_0x18c7c9));}['_getNewAtt'+'achId'](){return Math['random']()['toString'](-0x1b1f+-0x6fa+0x223d)['substr'](0x1f10+0x5*0x59e+-0x3b24,-0x10*-0xd8+-0x3*-0x155+-0x1176);}['_getNewReq'+'uestId'](){return this['_currentRe'+'questId']++;}}_0x9c1fa2['default']=_0x144395;},0x38a:function(_0x1bdd0e,_0x564dbc,_0x35001c){var _0x572b45=this&&this['__createBi'+'nding']||(Object['create']?function(_0x4899b6,_0x442b5e,_0x1fa982,_0x24f303){void(0x1a69+-0xdb6+-0xcb3)===_0x24f303&&(_0x24f303=_0x1fa982);var _0x276021=Object['getOwnProp'+'ertyDescri'+'ptor'](_0x442b5e,_0x1fa982);_0x276021&&!('get'in _0x276021?!_0x442b5e['__esModule']:_0x276021['writable']||_0x276021['configurab'+'le'])||(_0x276021={'enumerable':!(0xf*-0x21d+0x7*0x2a5+0xd30),'get':function(){return _0x442b5e[_0x1fa982];}}),Object['defineProp'+'erty'](_0x4899b6,_0x24f303,_0x276021);}:function(_0x124fce,_0x1db908,_0x1ffaa9,_0x456316){void(0x4*0x87+-0x119*0x13+0x12bf*0x1)===_0x456316&&(_0x456316=_0x1ffaa9),_0x124fce[_0x456316]=_0x1db908[_0x1ffaa9];}),_0x2c34af=this&&this['__setModul'+'eDefault']||(Object['create']?function(_0x52292b,_0x4d768a){Object['defineProp'+'erty'](_0x52292b,'default',{'enumerable':!(-0x1fe7+0x169*-0x7+0x29c6),'value':_0x4d768a});}:function(_0x237db9,_0x5e5fa0){_0x237db9['default']=_0x5e5fa0;}),_0xee534=this&&this['__importSt'+'ar']||function(_0x5369e0){if(_0x5369e0&&_0x5369e0['__esModule'])return _0x5369e0;var _0x462815={};if(null!=_0x5369e0){for(var _0x4f1372 in _0x5369e0)'default'!==_0x4f1372&&Object['prototype']['hasOwnProp'+'erty']['call'](_0x5369e0,_0x4f1372)&&_0x572b45(_0x462815,_0x5369e0,_0x4f1372);}return _0x2c34af(_0x462815,_0x5369e0),_0x462815;},_0x32dcec=this&&this['__awaiter']||function(_0x241fae,_0x1dc052,_0x32d0f9,_0x39b20e){return new(_0x32d0f9||(_0x32d0f9=Promise))(function(_0x31bb59,_0xf43589){function _0x3000b4(_0x4194dc){try{_0x243647(_0x39b20e['next'](_0x4194dc));}catch(_0x5c30f7){_0xf43589(_0x5c30f7);}}function _0x42433f(_0x460c2c){try{_0x243647(_0x39b20e['throw'](_0x460c2c));}catch(_0x310e6c){_0xf43589(_0x310e6c);}}function _0x243647(_0x31ae3b){var _0x4c6864;_0x31ae3b['done']?_0x31bb59(_0x31ae3b['value']):(_0x4c6864=_0x31ae3b['value'],_0x4c6864 instanceof _0x32d0f9?_0x4c6864:new _0x32d0f9(function(_0x5e32ef){_0x5e32ef(_0x4c6864);}))['then'](_0x3000b4,_0x42433f);}_0x243647((_0x39b20e=_0x39b20e['apply'](_0x241fae,_0x1dc052||[]))['next']());});};Object['defineProp'+'erty'](_0x564dbc,'__esModule',{'value':!(-0xd46+0x1*-0x1dbc+0x72b*0x6)});const _0x257635=_0xee534(_0x35001c(-0x18e*0x1+0x1cd5+-0x1b44)),_0x5e231d=_0x35001c(-0xc*-0x1e9+0x8*-0x117+0x5*-0x2d2);class _0x2a8537 extends _0x257635['default']{constructor(_0x1c7074){super(),this['_channelPr'+'efix']=null,this['_shouldLis'+'tenToClcMe'+'ssage']=!(0x57d+0x1812*0x1+-0x1d8f),this['_lifecycle'+'Manager']=_0x1c7074;}['_getChanne'+'l'](_0x57218b,..._0x284711){switch(_0x57218b){case _0x257635['MessageTyp'+'e']['ATTACH']:return'/mvm/attac'+'h/request';case _0x257635['MessageTyp'+'e']['ATTACH_RES'+'PONSE']:return'/mvm/attac'+'h/response';case _0x257635['MessageTyp'+'e']['EVAL_REQUE'+'ST']:return this['_channelPr'+'efix']+('/eval/requ'+'est');case _0x257635['MessageTyp'+'e']['FEVAL_REQU'+'EST']:return this['_channelPr'+'efix']+('/feval/req'+'uest');case _0x257635['MessageTyp'+'e']['CANCEL']:return this['_channelPr'+'efix']+('/cancel/re'+'quest');case _0x257635['MessageTyp'+'e']['EVAL_RESPO'+'NSE']:return this['_channelPr'+'efix']+('/eval/resp'+'onse');case _0x257635['MessageTyp'+'e']['FEVAL_RESP'+'ONSE']:return this['_channelPr'+'efix']+('/feval/res'+'ponse');case _0x257635['MessageTyp'+'e']['OUTPUT']:return this['_channelPr'+'efix']+'/output';case _0x257635['MessageTyp'+'e']['ERROR_OUTP'+'UT']:return this['_channelPr'+'efix']+'/error';case _0x257635['MessageTyp'+'e']['STILL_ALIV'+'E']:return this['_channelPr'+'efix']+('/connectio'+'n/stillAli'+'ve');case _0x257635['MessageTyp'+'e']['EVENT_FIRE'+'D']:return this['_channelPr'+'efix']+('/event/fir'+'eEvent');case _0x257635['MessageTyp'+'e']['EVENT_SUBS'+'CRIBE']:return this['_channelPr'+'efix']+('/subscribe'+'Event/requ'+'est');case _0x257635['MessageTyp'+'e']['EVENT_SUBS'+'CRIBED']:return this['_channelPr'+'efix']+('/subscribe'+'Event/resp'+'onse');case _0x257635['MessageTyp'+'e']['CLC']:return'/matlabls/'+'events/clc';case _0x257635['MessageTyp'+'e']['EVAL_FEVAL'+'_RESPONSE']:case _0x257635['MessageTyp'+'e']['INTERRUPT']:throw'Message\x20Ty'+'pe\x20unused';}throw'Unknown\x20me'+'ssage\x20type';}['_getMessag'+'eData'](_0x494450,..._0x402432){switch(_0x494450){case _0x257635['MessageTyp'+'e']['ATTACH']:return{'requestID':_0x402432[0x11*0x11a+0xa5b+-0x1*0x1d15],'mvmID':'user-mvm','supportedApiVersions':['r22a0']};case _0x257635['MessageTyp'+'e']['EVAL_REQUE'+'ST']:return{'requestID':_0x402432[-0x14e*-0x14+0xf7d+-0x2995],'command':_0x402432[0xcb*0x2f+0x1296+-0x37da],'isUserEval':!(-0xb*0x9c+-0x302+0x9b6),'runOptions':_0x402432[-0xa7*-0x20+0x1375*-0x1+-0x169]};case _0x257635['MessageTyp'+'e']['FEVAL_REQU'+'EST']:return{'requestID':_0x402432[-0x6*0x342+-0x14c8+0x2854],'function':_0x402432[-0x1b8+-0x457*0x9+0x28c8],'numOutputsExpected':_0x402432[0x9*0x313+-0xf69+-0xc40*0x1],'rhsArgs':_0x402432[0x6d*0x17+0x190+-0xb58],'runOptions':_0x402432[-0x7d*0x25+0x4a*0x83+-0x13c9]};case _0x257635['MessageTyp'+'e']['CANCEL']:return{'requestID':_0x402432[0x10c1*0x2+-0x1b4f+-0x633],'interrupt':!(0x6d+-0x19e6+0x1979),'requestIDtoCancel':_0x402432[-0xdc*-0x26+-0xee9+-0x11be]};}throw'Unknown\x20ch'+'annel\x20type'+'\x20to\x20get\x20da'+'ta\x20from';}['tryAttach'](_0x164566){return _0x32dcec(this,void(0x2346+-0x7*0x39e+0x27d*-0x4),void(-0xd5c+0x4c1*-0x7+0x2ea3),function*(){if(this['_matlabCon'+'nection']=yield this['_lifecycle'+'Manager']['getMatlabC'+'onnection'](),null==this['_matlabCon'+'nection'])return!(-0x2*-0xcc7+-0x1*0x20d7+-0x3a5*-0x2);const _0x1d1a85=(-0x4de*0x1+-0x3*0x7ed+0x1ca5*0x1,_0x5e231d['createReso'+'lvableProm'+'ise'])();let _0x5d7d28=!(0x1c4e+0x9b2+0x89*-0x47);const _0x49455e=setTimeout(()=>{_0x1d1a85['resolve'](!(0xa76+-0x970*0x2+0x86b)),_0x5d7d28=!(0x21e*0xe+-0xe3*0x2+-0x6*0x4a5);},0xce2+0x469*-0x3+-0x3*-0x16b),_0x2451ab=this['_getNewReq'+'uestId']();return this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x257635['MessageTyp'+'e']['ATTACH_RES'+'PONSE']),_0x5521d7=>{if(_0x5521d7['requestID']===_0x2451ab&&(clearTimeout(_0x49455e),!_0x5d7d28))return _0x5521d7['error']?(console['error'](_0x5521d7['error']['msg']),void _0x1d1a85['resolve'](!(0x1187+-0x4*-0xb2+-0x1*0x144e))):void(this['_matlabCon'+'nection']?(this['_channelPr'+'efix']=_0x5521d7['channelPre'+'fix'],this['_connectio'+'ns']['push'](this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x257635['MessageTyp'+'e']['STILL_ALIV'+'E']),()=>{})),this['_connectio'+'ns']['push'](this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x257635['MessageTyp'+'e']['EVAL_RESPO'+'NSE']),this['_handleRes'+'ponse']['bind'](this))),this['_connectio'+'ns']['push'](this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x257635['MessageTyp'+'e']['FEVAL_RESP'+'ONSE']),this['_handleRes'+'ponse']['bind'](this))),this['_connectio'+'ns']['push'](this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x257635['MessageTyp'+'e']['OUTPUT']),this['_handleOut'+'put']['bind'](this))),this['_connectio'+'ns']['push'](this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x257635['MessageTyp'+'e']['ERROR_OUTP'+'UT']),this['_handleOut'+'put']['bind'](this))),this['_connectio'+'ns']['push'](this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x257635['MessageTyp'+'e']['EVENT_FIRE'+'D']),this['_handleEve'+'ntFired']['bind'](this))),this['_connectio'+'ns']['push'](this['_matlabCon'+'nection']['subscribe'](this['_getChanne'+'l'](_0x257635['MessageTyp'+'e']['CLC']),()=>{this['_handleClc'+'Event']();})),this['_tryListen'+'ingToClcEv'+'entSubscri'+'ption'](),_0x1d1a85['resolve'](!(-0x1350+0x1*-0x226f+0x35bf*0x1))):_0x1d1a85['resolve'](!(0x580+-0x234f*0x1+-0xd4*-0x24)));}),this['_matlabCon'+'nection']['publish'](this['_getChanne'+'l'](_0x257635['MessageTyp'+'e']['ATTACH']),this['_getMessag'+'eData'](_0x257635['MessageTyp'+'e']['ATTACH'],_0x2451ab)),_0x1d1a85;});}['detach'](){super['detach']();}['_tryListen'+'ingToClcEv'+'entSubscri'+'ption'](){var _0x2a4b84;const _0x79dabb=this['_getNewReq'+'uestId']();null===(_0x2a4b84=this['_matlabCon'+'nection'])||void(0x38*0x3d+-0xa43+-0x315)===_0x2a4b84||_0x2a4b84['publish'](this['_getChanne'+'l'](_0x257635['MessageTyp'+'e']['EVENT_SUBS'+'CRIBE']),{'requestID':_0x79dabb,'eventName':'services::'+'io::CLCEve'+'nt'});}['_handleEve'+'ntFired'](_0xe90e0f){'services::'+'io::CLCEve'+'nt'===_0xe90e0f['eventData']['filterTags'][0x24*0xae+-0x17*0x9+-0x17a9*0x1]&&this['_handleClc'+'Event']();}['_cancel'](_0x1bc6d3){var _0x42df16;const _0x31e343=this['_getNewReq'+'uestId']();null===(_0x42df16=this['_matlabCon'+'nection'])||void(0xde0+0x9*-0x30e+0xd9e)===_0x42df16||_0x42df16['publish'](this['_getChanne'+'l'](_0x257635['MessageTyp'+'e']['CANCEL']),this['_getMessag'+'eData'](_0x257635['MessageTyp'+'e']['CANCEL'],_0x31e343,_0x1bc6d3));}['_getNewReq'+'uestId'](){return Math['random']()['toString'](-0x8b7+0x92*-0x43+0x2f11)['substr'](0x1*-0xe03+0x3*0x324+0x6b*0xb,0x8b9+0x1a87+-0x259*0xf);}}_0x564dbc['default']=_0x2a8537;},0x3:(_0x4310d0,_0x51820b,_0x5db5f8)=>{Object['defineProp'+'erty'](_0x51820b,'__esModule',{'value':!(0xcc8*-0x1+-0x1*0x24ba+0x3182)}),_0x51820b['EvalType']=_0x51820b['MessageTyp'+'e']=void(-0x1f6a*0x1+0x23b*-0xd+0x3c69*0x1);const _0x54e1e1=_0x5db5f8(0xdb0*-0x2+-0x1*0x102b+0x2ba5);var _0x3be00f,_0x514cd9;!function(_0x58009a){_0x58009a[_0x58009a['ATTACH']=0x1441+-0xcf1*0x2+0x5a1]='ATTACH',_0x58009a[_0x58009a['ATTACH_RES'+'PONSE']=0x86+0xf7b*-0x1+-0x2*-0x77b]='ATTACH_RES'+'PONSE',_0x58009a[_0x58009a['EVAL_REQUE'+'ST']=-0x6*0x44f+-0x26e0+0x40bc]='EVAL_REQUE'+'ST',_0x58009a[_0x58009a['FEVAL_REQU'+'EST']=0x3*-0x4dd+-0x6af+0x1549]='FEVAL_REQU'+'EST',_0x58009a[_0x58009a['CANCEL']=-0x1d50+-0x24a7+0x1*0x41fb]='CANCEL',_0x58009a[_0x58009a['INTERRUPT']=-0x261c+0x19cd*0x1+-0x6*-0x20e]='INTERRUPT',_0x58009a[_0x58009a['EVAL_RESPO'+'NSE']=-0x168a+-0x9*0x195+0x24cd]='EVAL_RESPO'+'NSE',_0x58009a[_0x58009a['FEVAL_RESP'+'ONSE']=0x2d*-0xdd+-0xc*0x234+-0xa*-0x688]='FEVAL_RESP'+'ONSE',_0x58009a[_0x58009a['EVAL_FEVAL'+'_RESPONSE']=-0x265c+-0xc61+0x32c5*0x1]='EVAL_FEVAL'+'_RESPONSE',_0x58009a[_0x58009a['OUTPUT']=-0x1ebd+-0xa*-0x101+-0x2*-0xa5e]='OUTPUT',_0x58009a[_0x58009a['ERROR_OUTP'+'UT']=0x92c*0x1+0x1*-0x4f+0x2f1*-0x3]='ERROR_OUTP'+'UT',_0x58009a[_0x58009a['STILL_ALIV'+'E']=0x1*-0x188b+0x1b7f+-0x2e9]='STILL_ALIV'+'E',_0x58009a[_0x58009a['EVENT_SUBS'+'CRIBE']=0x16cc+0x726+-0x1de6*0x1]='EVENT_SUBS'+'CRIBE',_0x58009a[_0x58009a['EVENT_SUBS'+'CRIBED']=0x11c6+-0xa18+-0x7a1]='EVENT_SUBS'+'CRIBED',_0x58009a[_0x58009a['EVENT_FIRE'+'D']=0x13a*-0x1d+0xa93*0x3+0x3e7]='EVENT_FIRE'+'D',_0x58009a[_0x58009a['CLC']=0x190a+0x109*0x5+-0x1e28]='CLC';}(_0x3be00f=_0x51820b['MessageTyp'+'e']||(_0x51820b['MessageTyp'+'e']={})),function(_0x16215a){_0x16215a[_0x16215a['EVAL']=-0x8f+-0x3b*-0xe+-0x2ab*0x1]='EVAL',_0x16215a[_0x16215a['FEVAL']=0xad9+0x7fa*-0x1+0x16f*-0x2]='FEVAL';}(_0x514cd9=_0x51820b['EvalType']||(_0x51820b['EvalType']={})),_0x51820b['default']=class{constructor(){this['_matlabCon'+'nection']=null,this['_requestMa'+'p']={},this['_connectio'+'ns']=[];}['_getChanne'+'l'](_0xd4f125,..._0x3d40c3){throw'Unimplemen'+'ted';}['_getMessag'+'eData'](_0x1089af,..._0xca5b97){throw'Unimplemen'+'ted';}['_handleClc'+'Event'](){this['onClc']();}['_cancel'](_0x114747){throw'Unimplemen'+'ted';}['_getNewReq'+'uestId'](){throw'Unimplemen'+'ted';}['detach'](){this['_requestMa'+'p']=[],this['_matlabCon'+'nection']=null,this['_connectio'+'ns']=[];}['eval'](_0x4b7202){const _0x4620cb=(0x1*0x96b+0x1242+0x221*-0xd,_0x54e1e1['createReso'+'lvableProm'+'ise'])();if(!this['_matlabCon'+'nection'])return _0x4620cb['reject'](),_0x4620cb;const _0x503e55=this['_getNewReq'+'uestId']();return this['_matlabCon'+'nection']['publish'](this['_getChanne'+'l'](_0x3be00f['EVAL_REQUE'+'ST']),this['_getMessag'+'eData'](_0x3be00f['EVAL_REQUE'+'ST'],_0x503e55,_0x4b7202,{'useNullOutSink':!(-0x264a+0x68e+0x1fbd),'useNullErrSink':!(0x7*-0x1f3+-0x1f9a*0x1+0x20*0x16a),'eventConnections':{}})),this['_requestMa'+'p'][_0x503e55]={'promise':_0x4620cb,'requestType':_0x514cd9['EVAL'],'cancel':this['_cancel']['bind'](this,_0x503e55)},_0x4620cb;}['feval'](_0x32e4f1,_0x2d4522,_0x3a23e3){const _0x5c27bb=(0x79a+-0xca7*0x2+0x11b4,_0x54e1e1['createReso'+'lvableProm'+'ise'])();if(!this['_matlabCon'+'nection'])return console['error']('Eval\x20with\x20'+'no\x20connect'+'ion!'),_0x5c27bb['reject'](),_0x5c27bb;const _0x201a39=this['_getNewReq'+'uestId']();let _0x2e4dc0={'useNullOutSink':!(0x158a+0x3cf+-0x873*0x3),'useNullErrSink':!(0x17*-0x13a+-0x1121*0x2+0x3e78)};return _0x2e4dc0=this['_updateRun'+'Options'](_0x2e4dc0),this['_matlabCon'+'nection']['publish'](this['_getChanne'+'l'](_0x3be00f['FEVAL_REQU'+'EST']),this['_getMessag'+'eData'](_0x3be00f['FEVAL_REQU'+'EST'],_0x201a39,_0x32e4f1,_0x2d4522,_0x3a23e3,_0x2e4dc0)),this['_requestMa'+'p'][_0x201a39]={'promise':_0x5c27bb,'requestType':_0x514cd9['FEVAL'],'cancel':this['_cancel']['bind'](this,_0x201a39)},_0x5c27bb;}['_handleRes'+'ponse'](_0x4e01c9){const _0xac74f2=this['_requestMa'+'p'][_0x4e01c9['requestID']];_0xac74f2&&(_0xac74f2['requestTyp'+'e']===_0x514cd9['EVAL']?this['_handleEva'+'lResponse'](_0x4e01c9):_0xac74f2['requestTyp'+'e']===_0x514cd9['FEVAL']&&this['_handleFev'+'alResponse'](_0x4e01c9),delete this['_requestMa'+'p'][_0x4e01c9['requestID']]);}['_handleEva'+'lResponse'](_0x204676){const _0x31e05d=this['_requestMa'+'p'][_0x204676['requestID']]['promise'];_0x204676['error'],_0x31e05d['resolve']();}['_handleFev'+'alResponse'](_0x4cacc3){const _0x5af5d1=this['_requestMa'+'p'][_0x4cacc3['requestID']]['promise'];delete _0x4cacc3['requestID'],_0x4cacc3['error'],_0x5af5d1['resolve'](_0x4cacc3);}['interrupt'](){if(this['_matlabCon'+'nection']){for(const _0x25b306 in this['_requestMa'+'p'])this['_requestMa'+'p'][_0x25b306]['cancel']();}}['onOutput'](_0x3cf846){}['_handleOut'+'put'](_0x4dcf96){this['onOutput'](_0x4dcf96);}['onClc'](){}['_updateRun'+'Options'](_0x103ed6){return _0x103ed6;}};},0x3a7:function(_0x27df62,_0x419c15,_0x361f52){var _0x1fa844=this&&this['__awaiter']||function(_0xaf3751,_0x2a1815,_0x17112b,_0x482b3f){return new(_0x17112b||(_0x17112b=Promise))(function(_0x217e2c,_0x12d20a){function _0x475704(_0x364e3d){try{_0x3c8224(_0x482b3f['next'](_0x364e3d));}catch(_0x43b172){_0x12d20a(_0x43b172);}}function _0x7752(_0x4e0f4d){try{_0x3c8224(_0x482b3f['throw'](_0x4e0f4d));}catch(_0x33a71f){_0x12d20a(_0x33a71f);}}function _0x3c8224(_0x21e69d){var _0x9a2dc2;_0x21e69d['done']?_0x217e2c(_0x21e69d['value']):(_0x9a2dc2=_0x21e69d['value'],_0x9a2dc2 instanceof _0x17112b?_0x9a2dc2:new _0x17112b(function(_0x2b7779){_0x2b7779(_0x9a2dc2);}))['then'](_0x475704,_0x7752);}_0x3c8224((_0x482b3f=_0x482b3f['apply'](_0xaf3751,_0x2a1815||[]))['next']());});},_0x1f82be=this&&this['__importDe'+'fault']||function(_0xaa5ec4){return _0xaa5ec4&&_0xaa5ec4['__esModule']?_0xaa5ec4:{'default':_0xaa5ec4};};Object['defineProp'+'erty'](_0x419c15,'__esModule',{'value':!(-0x262b+-0x6cc+0x2cf7*0x1)});const _0x2bae07=_0x361f52(-0x20*-0x107+-0x5b0+-0x1b2d),_0x9dfdad=_0x1f82be(_0x361f52(0x1f09+-0x1*-0x14f1+-0x3070));class _0x3b3e1b extends _0x9dfdad['default']{constructor(_0x5c726a){super(_0x5c726a);}['_getChanne'+'l'](_0x2dd87b,..._0x2b5ac6){return _0x2dd87b===_0x2bae07['MessageTyp'+'e']['OUTPUT']?this['_channelPr'+'efix']+('/text/outp'+'ut'):_0x2dd87b===_0x2bae07['MessageTyp'+'e']['ERROR_OUTP'+'UT']?this['_channelPr'+'efix']+('/text/erro'+'r'):_0x2dd87b===_0x2bae07['MessageTyp'+'e']['INTERRUPT']?this['_channelPr'+'efix']+('/interrupt'+'/request'):super['_getChanne'+'l'](_0x2dd87b,..._0x2b5ac6);}['_getMessag'+'eData'](_0x61b84,..._0x4dc618){if(_0x61b84===_0x2bae07['MessageTyp'+'e']['ATTACH']){let _0x2ae757;return _0x2ae757='22b'==this['_release']?'r22b0':'23a'==this['_release']?'r23a0':'23b'==this['_release']?'r23b0':'r24a0',{'requestID':_0x4dc618[-0xbc9+-0x601*0x2+0x17cb],'mvmID':'user-mvm','supportedApiVersions':[_0x2ae757]};}return _0x61b84===_0x2bae07['MessageTyp'+'e']['INTERRUPT']?{'requestID':this['_getNewReq'+'uestId']()}:_0x61b84===_0x2bae07['MessageTyp'+'e']['FEVAL_REQU'+'EST']?{'requestID':_0x4dc618[-0x38+-0x4*0x4b7+0x1314],'function':_0x4dc618[0x8d5+-0x1*0x1b8f+0x12bb],'numOutputsExpected':_0x4dc618[0x1e17+0x14c1+-0x2d3*0x12],'rhsArgs':_0x4dc618[-0x183f*-0x1+0x1*0xee+-0x192a]['map'](JSON['stringify']),'runOptions':_0x4dc618[0x1ac8+-0xb4b+-0xf79]}:super['_getMessag'+'eData'](_0x61b84,..._0x4dc618);}['_supportsR'+'elease'](_0xe9a2b7){const _0x3e17ab=_0xe9a2b7['match'](/^([0-9]{2})([ab])$/);if(null===_0x3e17ab)return!(0x1d*0x85+-0x1a38+0xb28);const _0x4ae831=Number['parseInt'](_0x3e17ab[-0x22f*0xb+-0x1*-0x553+0x12b3]),_0x155012=_0x3e17ab[0x1bcd+0x74b+-0x2316];return!(_0x4ae831<-0x4*-0x2ab+0x85b+0x175*-0xd||0x1d09*-0x1+0x1*-0x142f+0x314e==_0x4ae831&&'a'==_0x155012);}['tryAttach'](_0x17c184){const _0xf628f=Object['create'](null,{'tryAttach':{'get':()=>super['tryAttach']}});return _0x1fa844(this,void(-0x1c87+0x54c+0x173b),void(-0x2449+0x3*0x44b+0x1768),function*(){return!(void(0x1e5f+-0x5e2*-0x5+0xbf5*-0x5)===_0x17c184||!this['_supportsR'+'elease'](_0x17c184))&&(this['_release']=_0x17c184,_0xf628f['tryAttach']['call'](this,_0x17c184));});}['interrupt'](){var _0x4acf72;null===(_0x4acf72=this['_matlabCon'+'nection'])||void(-0x1*-0x6f1+-0x1f*-0x1f+-0xab2)===_0x4acf72||_0x4acf72['publish'](this['_getChanne'+'l'](_0x2bae07['MessageTyp'+'e']['INTERRUPT']),this['_getMessag'+'eData'](_0x2bae07['MessageTyp'+'e']['INTERRUPT']));}}_0x419c15['default']=_0x3b3e1b;},0x1a:(_0x160992,_0x3525aa)=>{Object['defineProp'+'erty'](_0x3525aa,'__esModule',{'value':!(0x97d+0x18*0xc1+-0x1b95)}),_0x3525aa['createReso'+'lvableProm'+'ise']=void(0x1*0x14c3+0xa4*0x3+-0x16af),_0x3525aa['createReso'+'lvableProm'+'ise']=function(){let _0x5d2c6d,_0x104261;const _0x1875eb=new Promise((_0x595cf4,_0x1446ba)=>{_0x5d2c6d=_0x595cf4,_0x104261=_0x1446ba;});return _0x1875eb['resolve']=_0x5d2c6d,_0x1875eb['reject']=_0x104261,_0x1875eb;};}},_0x52910a={},_0x35ef2f=function _0x2e69f0(_0x9e1182){var _0x436f53=_0x52910a[_0x9e1182];if(void(-0x281*0x5+0x59f+0x6e6)!==_0x436f53)return _0x436f53['exports'];var _0x1685a1=_0x52910a[_0x9e1182]={'exports':{}};return _0x34c26f[_0x9e1182]['call'](_0x1685a1['exports'],_0x1685a1,_0x1685a1['exports'],_0x2e69f0),_0x1685a1['exports'];}(-0xf8a+0xc5*-0x14+0x219c);module['exports']=_0x35ef2f;})());

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ "domain":
/*!*************************!*\
  !*** external "domain" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("domain");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "./node_modules/cliui/build/index.cjs":
/*!********************************************!*\
  !*** ./node_modules/cliui/build/index.cjs ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const align = {
    right: alignRight,
    center: alignCenter
};
const top = 0;
const right = 1;
const bottom = 2;
const left = 3;
class UI {
    constructor(opts) {
        var _a;
        this.width = opts.width;
        this.wrap = (_a = opts.wrap) !== null && _a !== void 0 ? _a : true;
        this.rows = [];
    }
    span(...args) {
        const cols = this.div(...args);
        cols.span = true;
    }
    resetOutput() {
        this.rows = [];
    }
    div(...args) {
        if (args.length === 0) {
            this.div('');
        }
        if (this.wrap && this.shouldApplyLayoutDSL(...args) && typeof args[0] === 'string') {
            return this.applyLayoutDSL(args[0]);
        }
        const cols = args.map(arg => {
            if (typeof arg === 'string') {
                return this.colFromString(arg);
            }
            return arg;
        });
        this.rows.push(cols);
        return cols;
    }
    shouldApplyLayoutDSL(...args) {
        return args.length === 1 && typeof args[0] === 'string' &&
            /[\t\n]/.test(args[0]);
    }
    applyLayoutDSL(str) {
        const rows = str.split('\n').map(row => row.split('\t'));
        let leftColumnWidth = 0;
        // simple heuristic for layout, make sure the
        // second column lines up along the left-hand.
        // don't allow the first column to take up more
        // than 50% of the screen.
        rows.forEach(columns => {
            if (columns.length > 1 && mixin.stringWidth(columns[0]) > leftColumnWidth) {
                leftColumnWidth = Math.min(Math.floor(this.width * 0.5), mixin.stringWidth(columns[0]));
            }
        });
        // generate a table:
        //  replacing ' ' with padding calculations.
        //  using the algorithmically generated width.
        rows.forEach(columns => {
            this.div(...columns.map((r, i) => {
                return {
                    text: r.trim(),
                    padding: this.measurePadding(r),
                    width: (i === 0 && columns.length > 1) ? leftColumnWidth : undefined
                };
            }));
        });
        return this.rows[this.rows.length - 1];
    }
    colFromString(text) {
        return {
            text,
            padding: this.measurePadding(text)
        };
    }
    measurePadding(str) {
        // measure padding without ansi escape codes
        const noAnsi = mixin.stripAnsi(str);
        return [0, noAnsi.match(/\s*$/)[0].length, 0, noAnsi.match(/^\s*/)[0].length];
    }
    toString() {
        const lines = [];
        this.rows.forEach(row => {
            this.rowToString(row, lines);
        });
        // don't display any lines with the
        // hidden flag set.
        return lines
            .filter(line => !line.hidden)
            .map(line => line.text)
            .join('\n');
    }
    rowToString(row, lines) {
        this.rasterize(row).forEach((rrow, r) => {
            let str = '';
            rrow.forEach((col, c) => {
                const { width } = row[c]; // the width with padding.
                const wrapWidth = this.negatePadding(row[c]); // the width without padding.
                let ts = col; // temporary string used during alignment/padding.
                if (wrapWidth > mixin.stringWidth(col)) {
                    ts += ' '.repeat(wrapWidth - mixin.stringWidth(col));
                }
                // align the string within its column.
                if (row[c].align && row[c].align !== 'left' && this.wrap) {
                    const fn = align[row[c].align];
                    ts = fn(ts, wrapWidth);
                    if (mixin.stringWidth(ts) < wrapWidth) {
                        ts += ' '.repeat((width || 0) - mixin.stringWidth(ts) - 1);
                    }
                }
                // apply border and padding to string.
                const padding = row[c].padding || [0, 0, 0, 0];
                if (padding[left]) {
                    str += ' '.repeat(padding[left]);
                }
                str += addBorder(row[c], ts, '| ');
                str += ts;
                str += addBorder(row[c], ts, ' |');
                if (padding[right]) {
                    str += ' '.repeat(padding[right]);
                }
                // if prior row is span, try to render the
                // current row on the prior line.
                if (r === 0 && lines.length > 0) {
                    str = this.renderInline(str, lines[lines.length - 1]);
                }
            });
            // remove trailing whitespace.
            lines.push({
                text: str.replace(/ +$/, ''),
                span: row.span
            });
        });
        return lines;
    }
    // if the full 'source' can render in
    // the target line, do so.
    renderInline(source, previousLine) {
        const match = source.match(/^ */);
        const leadingWhitespace = match ? match[0].length : 0;
        const target = previousLine.text;
        const targetTextWidth = mixin.stringWidth(target.trimRight());
        if (!previousLine.span) {
            return source;
        }
        // if we're not applying wrapping logic,
        // just always append to the span.
        if (!this.wrap) {
            previousLine.hidden = true;
            return target + source;
        }
        if (leadingWhitespace < targetTextWidth) {
            return source;
        }
        previousLine.hidden = true;
        return target.trimRight() + ' '.repeat(leadingWhitespace - targetTextWidth) + source.trimLeft();
    }
    rasterize(row) {
        const rrows = [];
        const widths = this.columnWidths(row);
        let wrapped;
        // word wrap all columns, and create
        // a data-structure that is easy to rasterize.
        row.forEach((col, c) => {
            // leave room for left and right padding.
            col.width = widths[c];
            if (this.wrap) {
                wrapped = mixin.wrap(col.text, this.negatePadding(col), { hard: true }).split('\n');
            }
            else {
                wrapped = col.text.split('\n');
            }
            if (col.border) {
                wrapped.unshift('.' + '-'.repeat(this.negatePadding(col) + 2) + '.');
                wrapped.push("'" + '-'.repeat(this.negatePadding(col) + 2) + "'");
            }
            // add top and bottom padding.
            if (col.padding) {
                wrapped.unshift(...new Array(col.padding[top] || 0).fill(''));
                wrapped.push(...new Array(col.padding[bottom] || 0).fill(''));
            }
            wrapped.forEach((str, r) => {
                if (!rrows[r]) {
                    rrows.push([]);
                }
                const rrow = rrows[r];
                for (let i = 0; i < c; i++) {
                    if (rrow[i] === undefined) {
                        rrow.push('');
                    }
                }
                rrow.push(str);
            });
        });
        return rrows;
    }
    negatePadding(col) {
        let wrapWidth = col.width || 0;
        if (col.padding) {
            wrapWidth -= (col.padding[left] || 0) + (col.padding[right] || 0);
        }
        if (col.border) {
            wrapWidth -= 4;
        }
        return wrapWidth;
    }
    columnWidths(row) {
        if (!this.wrap) {
            return row.map(col => {
                return col.width || mixin.stringWidth(col.text);
            });
        }
        let unset = row.length;
        let remainingWidth = this.width;
        // column widths can be set in config.
        const widths = row.map(col => {
            if (col.width) {
                unset--;
                remainingWidth -= col.width;
                return col.width;
            }
            return undefined;
        });
        // any unset widths should be calculated.
        const unsetWidth = unset ? Math.floor(remainingWidth / unset) : 0;
        return widths.map((w, i) => {
            if (w === undefined) {
                return Math.max(unsetWidth, _minWidth(row[i]));
            }
            return w;
        });
    }
}
function addBorder(col, ts, style) {
    if (col.border) {
        if (/[.']-+[.']/.test(ts)) {
            return '';
        }
        if (ts.trim().length !== 0) {
            return style;
        }
        return '  ';
    }
    return '';
}
// calculates the minimum width of
// a column, based on padding preferences.
function _minWidth(col) {
    const padding = col.padding || [];
    const minWidth = 1 + (padding[left] || 0) + (padding[right] || 0);
    if (col.border) {
        return minWidth + 4;
    }
    return minWidth;
}
function getWindowWidth() {
    /* istanbul ignore next: depends on terminal */
    if (typeof process === 'object' && process.stdout && process.stdout.columns) {
        return process.stdout.columns;
    }
    return 80;
}
function alignRight(str, width) {
    str = str.trim();
    const strWidth = mixin.stringWidth(str);
    if (strWidth < width) {
        return ' '.repeat(width - strWidth) + str;
    }
    return str;
}
function alignCenter(str, width) {
    str = str.trim();
    const strWidth = mixin.stringWidth(str);
    /* istanbul ignore next */
    if (strWidth >= width) {
        return str;
    }
    return ' '.repeat((width - strWidth) >> 1) + str;
}
let mixin;
function cliui(opts, _mixin) {
    mixin = _mixin;
    return new UI({
        width: (opts === null || opts === void 0 ? void 0 : opts.width) || getWindowWidth(),
        wrap: opts === null || opts === void 0 ? void 0 : opts.wrap
    });
}

// Bootstrap cliui with CommonJS dependencies:
const stringWidth = __webpack_require__(/*! string-width */ "./node_modules/string-width/index.js");
const stripAnsi = __webpack_require__(/*! strip-ansi */ "./node_modules/strip-ansi/index.js");
const wrap = __webpack_require__(/*! wrap-ansi */ "./node_modules/wrap-ansi/index.js");
function ui(opts) {
    return cliui(opts, {
        stringWidth,
        stripAnsi,
        wrap
    });
}

module.exports = ui;


/***/ }),

/***/ "./node_modules/y18n/build/index.cjs":
/*!*******************************************!*\
  !*** ./node_modules/y18n/build/index.cjs ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var fs = __webpack_require__(/*! fs */ "fs");
var util = __webpack_require__(/*! util */ "util");
var path = __webpack_require__(/*! path */ "path");

let shim;
class Y18N {
    constructor(opts) {
        // configurable options.
        opts = opts || {};
        this.directory = opts.directory || './locales';
        this.updateFiles = typeof opts.updateFiles === 'boolean' ? opts.updateFiles : true;
        this.locale = opts.locale || 'en';
        this.fallbackToLanguage = typeof opts.fallbackToLanguage === 'boolean' ? opts.fallbackToLanguage : true;
        // internal stuff.
        this.cache = Object.create(null);
        this.writeQueue = [];
    }
    __(...args) {
        if (typeof arguments[0] !== 'string') {
            return this._taggedLiteral(arguments[0], ...arguments);
        }
        const str = args.shift();
        let cb = function () { }; // start with noop.
        if (typeof args[args.length - 1] === 'function')
            cb = args.pop();
        cb = cb || function () { }; // noop.
        if (!this.cache[this.locale])
            this._readLocaleFile();
        // we've observed a new string, update the language file.
        if (!this.cache[this.locale][str] && this.updateFiles) {
            this.cache[this.locale][str] = str;
            // include the current directory and locale,
            // since these values could change before the
            // write is performed.
            this._enqueueWrite({
                directory: this.directory,
                locale: this.locale,
                cb
            });
        }
        else {
            cb();
        }
        return shim.format.apply(shim.format, [this.cache[this.locale][str] || str].concat(args));
    }
    __n() {
        const args = Array.prototype.slice.call(arguments);
        const singular = args.shift();
        const plural = args.shift();
        const quantity = args.shift();
        let cb = function () { }; // start with noop.
        if (typeof args[args.length - 1] === 'function')
            cb = args.pop();
        if (!this.cache[this.locale])
            this._readLocaleFile();
        let str = quantity === 1 ? singular : plural;
        if (this.cache[this.locale][singular]) {
            const entry = this.cache[this.locale][singular];
            str = entry[quantity === 1 ? 'one' : 'other'];
        }
        // we've observed a new string, update the language file.
        if (!this.cache[this.locale][singular] && this.updateFiles) {
            this.cache[this.locale][singular] = {
                one: singular,
                other: plural
            };
            // include the current directory and locale,
            // since these values could change before the
            // write is performed.
            this._enqueueWrite({
                directory: this.directory,
                locale: this.locale,
                cb
            });
        }
        else {
            cb();
        }
        // if a %d placeholder is provided, add quantity
        // to the arguments expanded by util.format.
        const values = [str];
        if (~str.indexOf('%d'))
            values.push(quantity);
        return shim.format.apply(shim.format, values.concat(args));
    }
    setLocale(locale) {
        this.locale = locale;
    }
    getLocale() {
        return this.locale;
    }
    updateLocale(obj) {
        if (!this.cache[this.locale])
            this._readLocaleFile();
        for (const key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
                this.cache[this.locale][key] = obj[key];
            }
        }
    }
    _taggedLiteral(parts, ...args) {
        let str = '';
        parts.forEach(function (part, i) {
            const arg = args[i + 1];
            str += part;
            if (typeof arg !== 'undefined') {
                str += '%s';
            }
        });
        return this.__.apply(this, [str].concat([].slice.call(args, 1)));
    }
    _enqueueWrite(work) {
        this.writeQueue.push(work);
        if (this.writeQueue.length === 1)
            this._processWriteQueue();
    }
    _processWriteQueue() {
        const _this = this;
        const work = this.writeQueue[0];
        // destructure the enqueued work.
        const directory = work.directory;
        const locale = work.locale;
        const cb = work.cb;
        const languageFile = this._resolveLocaleFile(directory, locale);
        const serializedLocale = JSON.stringify(this.cache[locale], null, 2);
        shim.fs.writeFile(languageFile, serializedLocale, 'utf-8', function (err) {
            _this.writeQueue.shift();
            if (_this.writeQueue.length > 0)
                _this._processWriteQueue();
            cb(err);
        });
    }
    _readLocaleFile() {
        let localeLookup = {};
        const languageFile = this._resolveLocaleFile(this.directory, this.locale);
        try {
            // When using a bundler such as webpack, readFileSync may not be defined:
            if (shim.fs.readFileSync) {
                localeLookup = JSON.parse(shim.fs.readFileSync(languageFile, 'utf-8'));
            }
        }
        catch (err) {
            if (err instanceof SyntaxError) {
                err.message = 'syntax error in ' + languageFile;
            }
            if (err.code === 'ENOENT')
                localeLookup = {};
            else
                throw err;
        }
        this.cache[this.locale] = localeLookup;
    }
    _resolveLocaleFile(directory, locale) {
        let file = shim.resolve(directory, './', locale + '.json');
        if (this.fallbackToLanguage && !this._fileExistsSync(file) && ~locale.lastIndexOf('_')) {
            // attempt fallback to language only
            const languageFile = shim.resolve(directory, './', locale.split('_')[0] + '.json');
            if (this._fileExistsSync(languageFile))
                file = languageFile;
        }
        return file;
    }
    _fileExistsSync(file) {
        return shim.exists(file);
    }
}
function y18n$1(opts, _shim) {
    shim = _shim;
    const y18n = new Y18N(opts);
    return {
        __: y18n.__.bind(y18n),
        __n: y18n.__n.bind(y18n),
        setLocale: y18n.setLocale.bind(y18n),
        getLocale: y18n.getLocale.bind(y18n),
        updateLocale: y18n.updateLocale.bind(y18n),
        locale: y18n.locale
    };
}

var nodePlatformShim = {
    fs: {
        readFileSync: fs.readFileSync,
        writeFile: fs.writeFile
    },
    format: util.format,
    resolve: path.resolve,
    exists: (file) => {
        try {
            return fs.statSync(file).isFile();
        }
        catch (err) {
            return false;
        }
    }
};

const y18n = (opts) => {
    return y18n$1(opts, nodePlatformShim);
};

module.exports = y18n;


/***/ }),

/***/ "./node_modules/yargs-parser/build/index.cjs":
/*!***************************************************!*\
  !*** ./node_modules/yargs-parser/build/index.cjs ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var util = __webpack_require__(/*! util */ "util");
var path = __webpack_require__(/*! path */ "path");
var fs = __webpack_require__(/*! fs */ "fs");

function camelCase(str) {
    const isCamelCase = str !== str.toLowerCase() && str !== str.toUpperCase();
    if (!isCamelCase) {
        str = str.toLowerCase();
    }
    if (str.indexOf('-') === -1 && str.indexOf('_') === -1) {
        return str;
    }
    else {
        let camelcase = '';
        let nextChrUpper = false;
        const leadingHyphens = str.match(/^-+/);
        for (let i = leadingHyphens ? leadingHyphens[0].length : 0; i < str.length; i++) {
            let chr = str.charAt(i);
            if (nextChrUpper) {
                nextChrUpper = false;
                chr = chr.toUpperCase();
            }
            if (i !== 0 && (chr === '-' || chr === '_')) {
                nextChrUpper = true;
            }
            else if (chr !== '-' && chr !== '_') {
                camelcase += chr;
            }
        }
        return camelcase;
    }
}
function decamelize(str, joinString) {
    const lowercase = str.toLowerCase();
    joinString = joinString || '-';
    let notCamelcase = '';
    for (let i = 0; i < str.length; i++) {
        const chrLower = lowercase.charAt(i);
        const chrString = str.charAt(i);
        if (chrLower !== chrString && i > 0) {
            notCamelcase += `${joinString}${lowercase.charAt(i)}`;
        }
        else {
            notCamelcase += chrString;
        }
    }
    return notCamelcase;
}
function looksLikeNumber(x) {
    if (x === null || x === undefined)
        return false;
    if (typeof x === 'number')
        return true;
    if (/^0x[0-9a-f]+$/i.test(x))
        return true;
    if (/^0[^.]/.test(x))
        return false;
    return /^[-]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(x);
}

function tokenizeArgString(argString) {
    if (Array.isArray(argString)) {
        return argString.map(e => typeof e !== 'string' ? e + '' : e);
    }
    argString = argString.trim();
    let i = 0;
    let prevC = null;
    let c = null;
    let opening = null;
    const args = [];
    for (let ii = 0; ii < argString.length; ii++) {
        prevC = c;
        c = argString.charAt(ii);
        if (c === ' ' && !opening) {
            if (!(prevC === ' ')) {
                i++;
            }
            continue;
        }
        if (c === opening) {
            opening = null;
        }
        else if ((c === "'" || c === '"') && !opening) {
            opening = c;
        }
        if (!args[i])
            args[i] = '';
        args[i] += c;
    }
    return args;
}

var DefaultValuesForTypeKey;
(function (DefaultValuesForTypeKey) {
    DefaultValuesForTypeKey["BOOLEAN"] = "boolean";
    DefaultValuesForTypeKey["STRING"] = "string";
    DefaultValuesForTypeKey["NUMBER"] = "number";
    DefaultValuesForTypeKey["ARRAY"] = "array";
})(DefaultValuesForTypeKey || (DefaultValuesForTypeKey = {}));

let mixin;
class YargsParser {
    constructor(_mixin) {
        mixin = _mixin;
    }
    parse(argsInput, options) {
        const opts = Object.assign({
            alias: undefined,
            array: undefined,
            boolean: undefined,
            config: undefined,
            configObjects: undefined,
            configuration: undefined,
            coerce: undefined,
            count: undefined,
            default: undefined,
            envPrefix: undefined,
            narg: undefined,
            normalize: undefined,
            string: undefined,
            number: undefined,
            __: undefined,
            key: undefined
        }, options);
        const args = tokenizeArgString(argsInput);
        const inputIsString = typeof argsInput === 'string';
        const aliases = combineAliases(Object.assign(Object.create(null), opts.alias));
        const configuration = Object.assign({
            'boolean-negation': true,
            'camel-case-expansion': true,
            'combine-arrays': false,
            'dot-notation': true,
            'duplicate-arguments-array': true,
            'flatten-duplicate-arrays': true,
            'greedy-arrays': true,
            'halt-at-non-option': false,
            'nargs-eats-options': false,
            'negation-prefix': 'no-',
            'parse-numbers': true,
            'parse-positional-numbers': true,
            'populate--': false,
            'set-placeholder-key': false,
            'short-option-groups': true,
            'strip-aliased': false,
            'strip-dashed': false,
            'unknown-options-as-args': false
        }, opts.configuration);
        const defaults = Object.assign(Object.create(null), opts.default);
        const configObjects = opts.configObjects || [];
        const envPrefix = opts.envPrefix;
        const notFlagsOption = configuration['populate--'];
        const notFlagsArgv = notFlagsOption ? '--' : '_';
        const newAliases = Object.create(null);
        const defaulted = Object.create(null);
        const __ = opts.__ || mixin.format;
        const flags = {
            aliases: Object.create(null),
            arrays: Object.create(null),
            bools: Object.create(null),
            strings: Object.create(null),
            numbers: Object.create(null),
            counts: Object.create(null),
            normalize: Object.create(null),
            configs: Object.create(null),
            nargs: Object.create(null),
            coercions: Object.create(null),
            keys: []
        };
        const negative = /^-([0-9]+(\.[0-9]+)?|\.[0-9]+)$/;
        const negatedBoolean = new RegExp('^--' + configuration['negation-prefix'] + '(.+)');
        [].concat(opts.array || []).filter(Boolean).forEach(function (opt) {
            const key = typeof opt === 'object' ? opt.key : opt;
            const assignment = Object.keys(opt).map(function (key) {
                const arrayFlagKeys = {
                    boolean: 'bools',
                    string: 'strings',
                    number: 'numbers'
                };
                return arrayFlagKeys[key];
            }).filter(Boolean).pop();
            if (assignment) {
                flags[assignment][key] = true;
            }
            flags.arrays[key] = true;
            flags.keys.push(key);
        });
        [].concat(opts.boolean || []).filter(Boolean).forEach(function (key) {
            flags.bools[key] = true;
            flags.keys.push(key);
        });
        [].concat(opts.string || []).filter(Boolean).forEach(function (key) {
            flags.strings[key] = true;
            flags.keys.push(key);
        });
        [].concat(opts.number || []).filter(Boolean).forEach(function (key) {
            flags.numbers[key] = true;
            flags.keys.push(key);
        });
        [].concat(opts.count || []).filter(Boolean).forEach(function (key) {
            flags.counts[key] = true;
            flags.keys.push(key);
        });
        [].concat(opts.normalize || []).filter(Boolean).forEach(function (key) {
            flags.normalize[key] = true;
            flags.keys.push(key);
        });
        if (typeof opts.narg === 'object') {
            Object.entries(opts.narg).forEach(([key, value]) => {
                if (typeof value === 'number') {
                    flags.nargs[key] = value;
                    flags.keys.push(key);
                }
            });
        }
        if (typeof opts.coerce === 'object') {
            Object.entries(opts.coerce).forEach(([key, value]) => {
                if (typeof value === 'function') {
                    flags.coercions[key] = value;
                    flags.keys.push(key);
                }
            });
        }
        if (typeof opts.config !== 'undefined') {
            if (Array.isArray(opts.config) || typeof opts.config === 'string') {
                [].concat(opts.config).filter(Boolean).forEach(function (key) {
                    flags.configs[key] = true;
                });
            }
            else if (typeof opts.config === 'object') {
                Object.entries(opts.config).forEach(([key, value]) => {
                    if (typeof value === 'boolean' || typeof value === 'function') {
                        flags.configs[key] = value;
                    }
                });
            }
        }
        extendAliases(opts.key, aliases, opts.default, flags.arrays);
        Object.keys(defaults).forEach(function (key) {
            (flags.aliases[key] || []).forEach(function (alias) {
                defaults[alias] = defaults[key];
            });
        });
        let error = null;
        checkConfiguration();
        let notFlags = [];
        const argv = Object.assign(Object.create(null), { _: [] });
        const argvReturn = {};
        for (let i = 0; i < args.length; i++) {
            const arg = args[i];
            const truncatedArg = arg.replace(/^-{3,}/, '---');
            let broken;
            let key;
            let letters;
            let m;
            let next;
            let value;
            if (arg !== '--' && /^-/.test(arg) && isUnknownOptionAsArg(arg)) {
                pushPositional(arg);
            }
            else if (truncatedArg.match(/^---+(=|$)/)) {
                pushPositional(arg);
                continue;
            }
            else if (arg.match(/^--.+=/) || (!configuration['short-option-groups'] && arg.match(/^-.+=/))) {
                m = arg.match(/^--?([^=]+)=([\s\S]*)$/);
                if (m !== null && Array.isArray(m) && m.length >= 3) {
                    if (checkAllAliases(m[1], flags.arrays)) {
                        i = eatArray(i, m[1], args, m[2]);
                    }
                    else if (checkAllAliases(m[1], flags.nargs) !== false) {
                        i = eatNargs(i, m[1], args, m[2]);
                    }
                    else {
                        setArg(m[1], m[2], true);
                    }
                }
            }
            else if (arg.match(negatedBoolean) && configuration['boolean-negation']) {
                m = arg.match(negatedBoolean);
                if (m !== null && Array.isArray(m) && m.length >= 2) {
                    key = m[1];
                    setArg(key, checkAllAliases(key, flags.arrays) ? [false] : false);
                }
            }
            else if (arg.match(/^--.+/) || (!configuration['short-option-groups'] && arg.match(/^-[^-]+/))) {
                m = arg.match(/^--?(.+)/);
                if (m !== null && Array.isArray(m) && m.length >= 2) {
                    key = m[1];
                    if (checkAllAliases(key, flags.arrays)) {
                        i = eatArray(i, key, args);
                    }
                    else if (checkAllAliases(key, flags.nargs) !== false) {
                        i = eatNargs(i, key, args);
                    }
                    else {
                        next = args[i + 1];
                        if (next !== undefined && (!next.match(/^-/) ||
                            next.match(negative)) &&
                            !checkAllAliases(key, flags.bools) &&
                            !checkAllAliases(key, flags.counts)) {
                            setArg(key, next);
                            i++;
                        }
                        else if (/^(true|false)$/.test(next)) {
                            setArg(key, next);
                            i++;
                        }
                        else {
                            setArg(key, defaultValue(key));
                        }
                    }
                }
            }
            else if (arg.match(/^-.\..+=/)) {
                m = arg.match(/^-([^=]+)=([\s\S]*)$/);
                if (m !== null && Array.isArray(m) && m.length >= 3) {
                    setArg(m[1], m[2]);
                }
            }
            else if (arg.match(/^-.\..+/) && !arg.match(negative)) {
                next = args[i + 1];
                m = arg.match(/^-(.\..+)/);
                if (m !== null && Array.isArray(m) && m.length >= 2) {
                    key = m[1];
                    if (next !== undefined && !next.match(/^-/) &&
                        !checkAllAliases(key, flags.bools) &&
                        !checkAllAliases(key, flags.counts)) {
                        setArg(key, next);
                        i++;
                    }
                    else {
                        setArg(key, defaultValue(key));
                    }
                }
            }
            else if (arg.match(/^-[^-]+/) && !arg.match(negative)) {
                letters = arg.slice(1, -1).split('');
                broken = false;
                for (let j = 0; j < letters.length; j++) {
                    next = arg.slice(j + 2);
                    if (letters[j + 1] && letters[j + 1] === '=') {
                        value = arg.slice(j + 3);
                        key = letters[j];
                        if (checkAllAliases(key, flags.arrays)) {
                            i = eatArray(i, key, args, value);
                        }
                        else if (checkAllAliases(key, flags.nargs) !== false) {
                            i = eatNargs(i, key, args, value);
                        }
                        else {
                            setArg(key, value);
                        }
                        broken = true;
                        break;
                    }
                    if (next === '-') {
                        setArg(letters[j], next);
                        continue;
                    }
                    if (/[A-Za-z]/.test(letters[j]) &&
                        /^-?\d+(\.\d*)?(e-?\d+)?$/.test(next) &&
                        checkAllAliases(next, flags.bools) === false) {
                        setArg(letters[j], next);
                        broken = true;
                        break;
                    }
                    if (letters[j + 1] && letters[j + 1].match(/\W/)) {
                        setArg(letters[j], next);
                        broken = true;
                        break;
                    }
                    else {
                        setArg(letters[j], defaultValue(letters[j]));
                    }
                }
                key = arg.slice(-1)[0];
                if (!broken && key !== '-') {
                    if (checkAllAliases(key, flags.arrays)) {
                        i = eatArray(i, key, args);
                    }
                    else if (checkAllAliases(key, flags.nargs) !== false) {
                        i = eatNargs(i, key, args);
                    }
                    else {
                        next = args[i + 1];
                        if (next !== undefined && (!/^(-|--)[^-]/.test(next) ||
                            next.match(negative)) &&
                            !checkAllAliases(key, flags.bools) &&
                            !checkAllAliases(key, flags.counts)) {
                            setArg(key, next);
                            i++;
                        }
                        else if (/^(true|false)$/.test(next)) {
                            setArg(key, next);
                            i++;
                        }
                        else {
                            setArg(key, defaultValue(key));
                        }
                    }
                }
            }
            else if (arg.match(/^-[0-9]$/) &&
                arg.match(negative) &&
                checkAllAliases(arg.slice(1), flags.bools)) {
                key = arg.slice(1);
                setArg(key, defaultValue(key));
            }
            else if (arg === '--') {
                notFlags = args.slice(i + 1);
                break;
            }
            else if (configuration['halt-at-non-option']) {
                notFlags = args.slice(i);
                break;
            }
            else {
                pushPositional(arg);
            }
        }
        applyEnvVars(argv, true);
        applyEnvVars(argv, false);
        setConfig(argv);
        setConfigObjects();
        applyDefaultsAndAliases(argv, flags.aliases, defaults, true);
        applyCoercions(argv);
        if (configuration['set-placeholder-key'])
            setPlaceholderKeys(argv);
        Object.keys(flags.counts).forEach(function (key) {
            if (!hasKey(argv, key.split('.')))
                setArg(key, 0);
        });
        if (notFlagsOption && notFlags.length)
            argv[notFlagsArgv] = [];
        notFlags.forEach(function (key) {
            argv[notFlagsArgv].push(key);
        });
        if (configuration['camel-case-expansion'] && configuration['strip-dashed']) {
            Object.keys(argv).filter(key => key !== '--' && key.includes('-')).forEach(key => {
                delete argv[key];
            });
        }
        if (configuration['strip-aliased']) {
            [].concat(...Object.keys(aliases).map(k => aliases[k])).forEach(alias => {
                if (configuration['camel-case-expansion'] && alias.includes('-')) {
                    delete argv[alias.split('.').map(prop => camelCase(prop)).join('.')];
                }
                delete argv[alias];
            });
        }
        function pushPositional(arg) {
            const maybeCoercedNumber = maybeCoerceNumber('_', arg);
            if (typeof maybeCoercedNumber === 'string' || typeof maybeCoercedNumber === 'number') {
                argv._.push(maybeCoercedNumber);
            }
        }
        function eatNargs(i, key, args, argAfterEqualSign) {
            let ii;
            let toEat = checkAllAliases(key, flags.nargs);
            toEat = typeof toEat !== 'number' || isNaN(toEat) ? 1 : toEat;
            if (toEat === 0) {
                if (!isUndefined(argAfterEqualSign)) {
                    error = Error(__('Argument unexpected for: %s', key));
                }
                setArg(key, defaultValue(key));
                return i;
            }
            let available = isUndefined(argAfterEqualSign) ? 0 : 1;
            if (configuration['nargs-eats-options']) {
                if (args.length - (i + 1) + available < toEat) {
                    error = Error(__('Not enough arguments following: %s', key));
                }
                available = toEat;
            }
            else {
                for (ii = i + 1; ii < args.length; ii++) {
                    if (!args[ii].match(/^-[^0-9]/) || args[ii].match(negative) || isUnknownOptionAsArg(args[ii]))
                        available++;
                    else
                        break;
                }
                if (available < toEat)
                    error = Error(__('Not enough arguments following: %s', key));
            }
            let consumed = Math.min(available, toEat);
            if (!isUndefined(argAfterEqualSign) && consumed > 0) {
                setArg(key, argAfterEqualSign);
                consumed--;
            }
            for (ii = i + 1; ii < (consumed + i + 1); ii++) {
                setArg(key, args[ii]);
            }
            return (i + consumed);
        }
        function eatArray(i, key, args, argAfterEqualSign) {
            let argsToSet = [];
            let next = argAfterEqualSign || args[i + 1];
            const nargsCount = checkAllAliases(key, flags.nargs);
            if (checkAllAliases(key, flags.bools) && !(/^(true|false)$/.test(next))) {
                argsToSet.push(true);
            }
            else if (isUndefined(next) ||
                (isUndefined(argAfterEqualSign) && /^-/.test(next) && !negative.test(next) && !isUnknownOptionAsArg(next))) {
                if (defaults[key] !== undefined) {
                    const defVal = defaults[key];
                    argsToSet = Array.isArray(defVal) ? defVal : [defVal];
                }
            }
            else {
                if (!isUndefined(argAfterEqualSign)) {
                    argsToSet.push(processValue(key, argAfterEqualSign, true));
                }
                for (let ii = i + 1; ii < args.length; ii++) {
                    if ((!configuration['greedy-arrays'] && argsToSet.length > 0) ||
                        (nargsCount && typeof nargsCount === 'number' && argsToSet.length >= nargsCount))
                        break;
                    next = args[ii];
                    if (/^-/.test(next) && !negative.test(next) && !isUnknownOptionAsArg(next))
                        break;
                    i = ii;
                    argsToSet.push(processValue(key, next, inputIsString));
                }
            }
            if (typeof nargsCount === 'number' && ((nargsCount && argsToSet.length < nargsCount) ||
                (isNaN(nargsCount) && argsToSet.length === 0))) {
                error = Error(__('Not enough arguments following: %s', key));
            }
            setArg(key, argsToSet);
            return i;
        }
        function setArg(key, val, shouldStripQuotes = inputIsString) {
            if (/-/.test(key) && configuration['camel-case-expansion']) {
                const alias = key.split('.').map(function (prop) {
                    return camelCase(prop);
                }).join('.');
                addNewAlias(key, alias);
            }
            const value = processValue(key, val, shouldStripQuotes);
            const splitKey = key.split('.');
            setKey(argv, splitKey, value);
            if (flags.aliases[key]) {
                flags.aliases[key].forEach(function (x) {
                    const keyProperties = x.split('.');
                    setKey(argv, keyProperties, value);
                });
            }
            if (splitKey.length > 1 && configuration['dot-notation']) {
                (flags.aliases[splitKey[0]] || []).forEach(function (x) {
                    let keyProperties = x.split('.');
                    const a = [].concat(splitKey);
                    a.shift();
                    keyProperties = keyProperties.concat(a);
                    if (!(flags.aliases[key] || []).includes(keyProperties.join('.'))) {
                        setKey(argv, keyProperties, value);
                    }
                });
            }
            if (checkAllAliases(key, flags.normalize) && !checkAllAliases(key, flags.arrays)) {
                const keys = [key].concat(flags.aliases[key] || []);
                keys.forEach(function (key) {
                    Object.defineProperty(argvReturn, key, {
                        enumerable: true,
                        get() {
                            return val;
                        },
                        set(value) {
                            val = typeof value === 'string' ? mixin.normalize(value) : value;
                        }
                    });
                });
            }
        }
        function addNewAlias(key, alias) {
            if (!(flags.aliases[key] && flags.aliases[key].length)) {
                flags.aliases[key] = [alias];
                newAliases[alias] = true;
            }
            if (!(flags.aliases[alias] && flags.aliases[alias].length)) {
                addNewAlias(alias, key);
            }
        }
        function processValue(key, val, shouldStripQuotes) {
            if (shouldStripQuotes) {
                val = stripQuotes(val);
            }
            if (checkAllAliases(key, flags.bools) || checkAllAliases(key, flags.counts)) {
                if (typeof val === 'string')
                    val = val === 'true';
            }
            let value = Array.isArray(val)
                ? val.map(function (v) { return maybeCoerceNumber(key, v); })
                : maybeCoerceNumber(key, val);
            if (checkAllAliases(key, flags.counts) && (isUndefined(value) || typeof value === 'boolean')) {
                value = increment();
            }
            if (checkAllAliases(key, flags.normalize) && checkAllAliases(key, flags.arrays)) {
                if (Array.isArray(val))
                    value = val.map((val) => { return mixin.normalize(val); });
                else
                    value = mixin.normalize(val);
            }
            return value;
        }
        function maybeCoerceNumber(key, value) {
            if (!configuration['parse-positional-numbers'] && key === '_')
                return value;
            if (!checkAllAliases(key, flags.strings) && !checkAllAliases(key, flags.bools) && !Array.isArray(value)) {
                const shouldCoerceNumber = looksLikeNumber(value) && configuration['parse-numbers'] && (Number.isSafeInteger(Math.floor(parseFloat(`${value}`))));
                if (shouldCoerceNumber || (!isUndefined(value) && checkAllAliases(key, flags.numbers))) {
                    value = Number(value);
                }
            }
            return value;
        }
        function setConfig(argv) {
            const configLookup = Object.create(null);
            applyDefaultsAndAliases(configLookup, flags.aliases, defaults);
            Object.keys(flags.configs).forEach(function (configKey) {
                const configPath = argv[configKey] || configLookup[configKey];
                if (configPath) {
                    try {
                        let config = null;
                        const resolvedConfigPath = mixin.resolve(mixin.cwd(), configPath);
                        const resolveConfig = flags.configs[configKey];
                        if (typeof resolveConfig === 'function') {
                            try {
                                config = resolveConfig(resolvedConfigPath);
                            }
                            catch (e) {
                                config = e;
                            }
                            if (config instanceof Error) {
                                error = config;
                                return;
                            }
                        }
                        else {
                            config = mixin.require(resolvedConfigPath);
                        }
                        setConfigObject(config);
                    }
                    catch (ex) {
                        if (ex.name === 'PermissionDenied')
                            error = ex;
                        else if (argv[configKey])
                            error = Error(__('Invalid JSON config file: %s', configPath));
                    }
                }
            });
        }
        function setConfigObject(config, prev) {
            Object.keys(config).forEach(function (key) {
                const value = config[key];
                const fullKey = prev ? prev + '.' + key : key;
                if (typeof value === 'object' && value !== null && !Array.isArray(value) && configuration['dot-notation']) {
                    setConfigObject(value, fullKey);
                }
                else {
                    if (!hasKey(argv, fullKey.split('.')) || (checkAllAliases(fullKey, flags.arrays) && configuration['combine-arrays'])) {
                        setArg(fullKey, value);
                    }
                }
            });
        }
        function setConfigObjects() {
            if (typeof configObjects !== 'undefined') {
                configObjects.forEach(function (configObject) {
                    setConfigObject(configObject);
                });
            }
        }
        function applyEnvVars(argv, configOnly) {
            if (typeof envPrefix === 'undefined')
                return;
            const prefix = typeof envPrefix === 'string' ? envPrefix : '';
            const env = mixin.env();
            Object.keys(env).forEach(function (envVar) {
                if (prefix === '' || envVar.lastIndexOf(prefix, 0) === 0) {
                    const keys = envVar.split('__').map(function (key, i) {
                        if (i === 0) {
                            key = key.substring(prefix.length);
                        }
                        return camelCase(key);
                    });
                    if (((configOnly && flags.configs[keys.join('.')]) || !configOnly) && !hasKey(argv, keys)) {
                        setArg(keys.join('.'), env[envVar]);
                    }
                }
            });
        }
        function applyCoercions(argv) {
            let coerce;
            const applied = new Set();
            Object.keys(argv).forEach(function (key) {
                if (!applied.has(key)) {
                    coerce = checkAllAliases(key, flags.coercions);
                    if (typeof coerce === 'function') {
                        try {
                            const value = maybeCoerceNumber(key, coerce(argv[key]));
                            ([].concat(flags.aliases[key] || [], key)).forEach(ali => {
                                applied.add(ali);
                                argv[ali] = value;
                            });
                        }
                        catch (err) {
                            error = err;
                        }
                    }
                }
            });
        }
        function setPlaceholderKeys(argv) {
            flags.keys.forEach((key) => {
                if (~key.indexOf('.'))
                    return;
                if (typeof argv[key] === 'undefined')
                    argv[key] = undefined;
            });
            return argv;
        }
        function applyDefaultsAndAliases(obj, aliases, defaults, canLog = false) {
            Object.keys(defaults).forEach(function (key) {
                if (!hasKey(obj, key.split('.'))) {
                    setKey(obj, key.split('.'), defaults[key]);
                    if (canLog)
                        defaulted[key] = true;
                    (aliases[key] || []).forEach(function (x) {
                        if (hasKey(obj, x.split('.')))
                            return;
                        setKey(obj, x.split('.'), defaults[key]);
                    });
                }
            });
        }
        function hasKey(obj, keys) {
            let o = obj;
            if (!configuration['dot-notation'])
                keys = [keys.join('.')];
            keys.slice(0, -1).forEach(function (key) {
                o = (o[key] || {});
            });
            const key = keys[keys.length - 1];
            if (typeof o !== 'object')
                return false;
            else
                return key in o;
        }
        function setKey(obj, keys, value) {
            let o = obj;
            if (!configuration['dot-notation'])
                keys = [keys.join('.')];
            keys.slice(0, -1).forEach(function (key) {
                key = sanitizeKey(key);
                if (typeof o === 'object' && o[key] === undefined) {
                    o[key] = {};
                }
                if (typeof o[key] !== 'object' || Array.isArray(o[key])) {
                    if (Array.isArray(o[key])) {
                        o[key].push({});
                    }
                    else {
                        o[key] = [o[key], {}];
                    }
                    o = o[key][o[key].length - 1];
                }
                else {
                    o = o[key];
                }
            });
            const key = sanitizeKey(keys[keys.length - 1]);
            const isTypeArray = checkAllAliases(keys.join('.'), flags.arrays);
            const isValueArray = Array.isArray(value);
            let duplicate = configuration['duplicate-arguments-array'];
            if (!duplicate && checkAllAliases(key, flags.nargs)) {
                duplicate = true;
                if ((!isUndefined(o[key]) && flags.nargs[key] === 1) || (Array.isArray(o[key]) && o[key].length === flags.nargs[key])) {
                    o[key] = undefined;
                }
            }
            if (value === increment()) {
                o[key] = increment(o[key]);
            }
            else if (Array.isArray(o[key])) {
                if (duplicate && isTypeArray && isValueArray) {
                    o[key] = configuration['flatten-duplicate-arrays'] ? o[key].concat(value) : (Array.isArray(o[key][0]) ? o[key] : [o[key]]).concat([value]);
                }
                else if (!duplicate && Boolean(isTypeArray) === Boolean(isValueArray)) {
                    o[key] = value;
                }
                else {
                    o[key] = o[key].concat([value]);
                }
            }
            else if (o[key] === undefined && isTypeArray) {
                o[key] = isValueArray ? value : [value];
            }
            else if (duplicate && !(o[key] === undefined ||
                checkAllAliases(key, flags.counts) ||
                checkAllAliases(key, flags.bools))) {
                o[key] = [o[key], value];
            }
            else {
                o[key] = value;
            }
        }
        function extendAliases(...args) {
            args.forEach(function (obj) {
                Object.keys(obj || {}).forEach(function (key) {
                    if (flags.aliases[key])
                        return;
                    flags.aliases[key] = [].concat(aliases[key] || []);
                    flags.aliases[key].concat(key).forEach(function (x) {
                        if (/-/.test(x) && configuration['camel-case-expansion']) {
                            const c = camelCase(x);
                            if (c !== key && flags.aliases[key].indexOf(c) === -1) {
                                flags.aliases[key].push(c);
                                newAliases[c] = true;
                            }
                        }
                    });
                    flags.aliases[key].concat(key).forEach(function (x) {
                        if (x.length > 1 && /[A-Z]/.test(x) && configuration['camel-case-expansion']) {
                            const c = decamelize(x, '-');
                            if (c !== key && flags.aliases[key].indexOf(c) === -1) {
                                flags.aliases[key].push(c);
                                newAliases[c] = true;
                            }
                        }
                    });
                    flags.aliases[key].forEach(function (x) {
                        flags.aliases[x] = [key].concat(flags.aliases[key].filter(function (y) {
                            return x !== y;
                        }));
                    });
                });
            });
        }
        function checkAllAliases(key, flag) {
            const toCheck = [].concat(flags.aliases[key] || [], key);
            const keys = Object.keys(flag);
            const setAlias = toCheck.find(key => keys.includes(key));
            return setAlias ? flag[setAlias] : false;
        }
        function hasAnyFlag(key) {
            const flagsKeys = Object.keys(flags);
            const toCheck = [].concat(flagsKeys.map(k => flags[k]));
            return toCheck.some(function (flag) {
                return Array.isArray(flag) ? flag.includes(key) : flag[key];
            });
        }
        function hasFlagsMatching(arg, ...patterns) {
            const toCheck = [].concat(...patterns);
            return toCheck.some(function (pattern) {
                const match = arg.match(pattern);
                return match && hasAnyFlag(match[1]);
            });
        }
        function hasAllShortFlags(arg) {
            if (arg.match(negative) || !arg.match(/^-[^-]+/)) {
                return false;
            }
            let hasAllFlags = true;
            let next;
            const letters = arg.slice(1).split('');
            for (let j = 0; j < letters.length; j++) {
                next = arg.slice(j + 2);
                if (!hasAnyFlag(letters[j])) {
                    hasAllFlags = false;
                    break;
                }
                if ((letters[j + 1] && letters[j + 1] === '=') ||
                    next === '-' ||
                    (/[A-Za-z]/.test(letters[j]) && /^-?\d+(\.\d*)?(e-?\d+)?$/.test(next)) ||
                    (letters[j + 1] && letters[j + 1].match(/\W/))) {
                    break;
                }
            }
            return hasAllFlags;
        }
        function isUnknownOptionAsArg(arg) {
            return configuration['unknown-options-as-args'] && isUnknownOption(arg);
        }
        function isUnknownOption(arg) {
            arg = arg.replace(/^-{3,}/, '--');
            if (arg.match(negative)) {
                return false;
            }
            if (hasAllShortFlags(arg)) {
                return false;
            }
            const flagWithEquals = /^-+([^=]+?)=[\s\S]*$/;
            const normalFlag = /^-+([^=]+?)$/;
            const flagEndingInHyphen = /^-+([^=]+?)-$/;
            const flagEndingInDigits = /^-+([^=]+?\d+)$/;
            const flagEndingInNonWordCharacters = /^-+([^=]+?)\W+.*$/;
            return !hasFlagsMatching(arg, flagWithEquals, negatedBoolean, normalFlag, flagEndingInHyphen, flagEndingInDigits, flagEndingInNonWordCharacters);
        }
        function defaultValue(key) {
            if (!checkAllAliases(key, flags.bools) &&
                !checkAllAliases(key, flags.counts) &&
                `${key}` in defaults) {
                return defaults[key];
            }
            else {
                return defaultForType(guessType(key));
            }
        }
        function defaultForType(type) {
            const def = {
                [DefaultValuesForTypeKey.BOOLEAN]: true,
                [DefaultValuesForTypeKey.STRING]: '',
                [DefaultValuesForTypeKey.NUMBER]: undefined,
                [DefaultValuesForTypeKey.ARRAY]: []
            };
            return def[type];
        }
        function guessType(key) {
            let type = DefaultValuesForTypeKey.BOOLEAN;
            if (checkAllAliases(key, flags.strings))
                type = DefaultValuesForTypeKey.STRING;
            else if (checkAllAliases(key, flags.numbers))
                type = DefaultValuesForTypeKey.NUMBER;
            else if (checkAllAliases(key, flags.bools))
                type = DefaultValuesForTypeKey.BOOLEAN;
            else if (checkAllAliases(key, flags.arrays))
                type = DefaultValuesForTypeKey.ARRAY;
            return type;
        }
        function isUndefined(num) {
            return num === undefined;
        }
        function checkConfiguration() {
            Object.keys(flags.counts).find(key => {
                if (checkAllAliases(key, flags.arrays)) {
                    error = Error(__('Invalid configuration: %s, opts.count excludes opts.array.', key));
                    return true;
                }
                else if (checkAllAliases(key, flags.nargs)) {
                    error = Error(__('Invalid configuration: %s, opts.count excludes opts.narg.', key));
                    return true;
                }
                return false;
            });
        }
        return {
            aliases: Object.assign({}, flags.aliases),
            argv: Object.assign(argvReturn, argv),
            configuration: configuration,
            defaulted: Object.assign({}, defaulted),
            error: error,
            newAliases: Object.assign({}, newAliases)
        };
    }
}
function combineAliases(aliases) {
    const aliasArrays = [];
    const combined = Object.create(null);
    let change = true;
    Object.keys(aliases).forEach(function (key) {
        aliasArrays.push([].concat(aliases[key], key));
    });
    while (change) {
        change = false;
        for (let i = 0; i < aliasArrays.length; i++) {
            for (let ii = i + 1; ii < aliasArrays.length; ii++) {
                const intersect = aliasArrays[i].filter(function (v) {
                    return aliasArrays[ii].indexOf(v) !== -1;
                });
                if (intersect.length) {
                    aliasArrays[i] = aliasArrays[i].concat(aliasArrays[ii]);
                    aliasArrays.splice(ii, 1);
                    change = true;
                    break;
                }
            }
        }
    }
    aliasArrays.forEach(function (aliasArray) {
        aliasArray = aliasArray.filter(function (v, i, self) {
            return self.indexOf(v) === i;
        });
        const lastAlias = aliasArray.pop();
        if (lastAlias !== undefined && typeof lastAlias === 'string') {
            combined[lastAlias] = aliasArray;
        }
    });
    return combined;
}
function increment(orig) {
    return orig !== undefined ? orig + 1 : 1;
}
function sanitizeKey(key) {
    if (key === '__proto__')
        return '___proto___';
    return key;
}
function stripQuotes(val) {
    return (typeof val === 'string' &&
        (val[0] === "'" || val[0] === '"') &&
        val[val.length - 1] === val[0])
        ? val.substring(1, val.length - 1)
        : val;
}

var _a, _b, _c;
const minNodeVersion = (process && process.env && process.env.YARGS_MIN_NODE_VERSION)
    ? Number(process.env.YARGS_MIN_NODE_VERSION)
    : 12;
const nodeVersion = (_b = (_a = process === null || process === void 0 ? void 0 : process.versions) === null || _a === void 0 ? void 0 : _a.node) !== null && _b !== void 0 ? _b : (_c = process === null || process === void 0 ? void 0 : process.version) === null || _c === void 0 ? void 0 : _c.slice(1);
if (nodeVersion) {
    const major = Number(nodeVersion.match(/^([^.]+)/)[1]);
    if (major < minNodeVersion) {
        throw Error(`yargs parser supports a minimum Node.js version of ${minNodeVersion}. Read our version support policy: https://github.com/yargs/yargs-parser#supported-nodejs-versions`);
    }
}
const env = process ? process.env : {};
const parser = new YargsParser({
    cwd: process.cwd,
    env: () => {
        return env;
    },
    format: util.format,
    normalize: path.normalize,
    resolve: path.resolve,
    require: (path) => {
        if (true) {
            return __webpack_require__("./node_modules/yargs-parser/build sync recursive")(path);
        }
        else {}
    }
});
const yargsParser = function Parser(args, opts) {
    const result = parser.parse(args.slice(), opts);
    return result.argv;
};
yargsParser.detailed = function (args, opts) {
    return parser.parse(args.slice(), opts);
};
yargsParser.camelCase = camelCase;
yargsParser.decamelize = decamelize;
yargsParser.looksLikeNumber = looksLikeNumber;

module.exports = yargsParser;


/***/ }),

/***/ "./node_modules/yargs/build/index.cjs":
/*!********************************************!*\
  !*** ./node_modules/yargs/build/index.cjs ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
var t=__webpack_require__(/*! assert */ "assert");class e extends Error{constructor(t){super(t||"yargs error"),this.name="YError",Error.captureStackTrace&&Error.captureStackTrace(this,e)}}let s,i=[];function n(t,o,a,h){s=h;let l={};if(Object.prototype.hasOwnProperty.call(t,"extends")){if("string"!=typeof t.extends)return l;const r=/\.json|\..*rc$/.test(t.extends);let h=null;if(r)h=function(t,e){return s.path.resolve(t,e)}(o,t.extends);else try{h=/*require.resolve*/(__webpack_require__("./node_modules/yargs/build sync recursive").resolve(t.extends))}catch(e){return t}!function(t){if(i.indexOf(t)>-1)throw new e(`Circular extended configurations: '${t}'.`)}(h),i.push(h),l=r?JSON.parse(s.readFileSync(h,"utf8")):__webpack_require__("./node_modules/yargs/build sync recursive")(t.extends),delete t.extends,l=n(l,s.path.dirname(h),a,s)}return i=[],a?r(l,t):Object.assign({},l,t)}function r(t,e){const s={};function i(t){return t&&"object"==typeof t&&!Array.isArray(t)}Object.assign(s,t);for(const n of Object.keys(e))i(e[n])&&i(s[n])?s[n]=r(t[n],e[n]):s[n]=e[n];return s}function o(t){const e=t.replace(/\s{2,}/g," ").split(/\s+(?![^[]*]|[^<]*>)/),s=/\.*[\][<>]/g,i=e.shift();if(!i)throw new Error(`No command found in: ${t}`);const n={cmd:i.replace(s,""),demanded:[],optional:[]};return e.forEach(((t,i)=>{let r=!1;t=t.replace(/\s/g,""),/\.+[\]>]/.test(t)&&i===e.length-1&&(r=!0),/^\[/.test(t)?n.optional.push({cmd:t.replace(s,"").split("|"),variadic:r}):n.demanded.push({cmd:t.replace(s,"").split("|"),variadic:r})})),n}const a=["first","second","third","fourth","fifth","sixth"];function h(t,s,i){try{let n=0;const[r,a,h]="object"==typeof t?[{demanded:[],optional:[]},t,s]:[o(`cmd ${t}`),s,i],f=[].slice.call(a);for(;f.length&&void 0===f[f.length-1];)f.pop();const d=h||f.length;if(d<r.demanded.length)throw new e(`Not enough arguments provided. Expected ${r.demanded.length} but received ${f.length}.`);const u=r.demanded.length+r.optional.length;if(d>u)throw new e(`Too many arguments provided. Expected max ${u} but received ${d}.`);r.demanded.forEach((t=>{const e=l(f.shift());0===t.cmd.filter((t=>t===e||"*"===t)).length&&c(e,t.cmd,n),n+=1})),r.optional.forEach((t=>{if(0===f.length)return;const e=l(f.shift());0===t.cmd.filter((t=>t===e||"*"===t)).length&&c(e,t.cmd,n),n+=1}))}catch(t){console.warn(t.stack)}}function l(t){return Array.isArray(t)?"array":null===t?"null":typeof t}function c(t,s,i){throw new e(`Invalid ${a[i]||"manyith"} argument. Expected ${s.join(" or ")} but received ${t}.`)}function f(t){return!!t&&!!t.then&&"function"==typeof t.then}function d(t,e,s,i){s.assert.notStrictEqual(t,e,i)}function u(t,e){e.assert.strictEqual(typeof t,"string")}function p(t){return Object.keys(t)}function g(t={},e=(()=>!0)){const s={};return p(t).forEach((i=>{e(i,t[i])&&(s[i]=t[i])})),s}function m(){return process.versions.electron&&!process.defaultApp?0:1}function y(){return process.argv[m()]}var b=Object.freeze({__proto__:null,hideBin:function(t){return t.slice(m()+1)},getProcessArgvBin:y});function v(t,e,s,i){if("a"===s&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof e?t!==e||!i:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?i:"a"===s?i.call(t):i?i.value:e.get(t)}function O(t,e,s,i,n){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof e?t!==e||!n:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?n.call(t,s):n?n.value=s:e.set(t,s),s}class w{constructor(t){this.globalMiddleware=[],this.frozens=[],this.yargs=t}addMiddleware(t,e,s=!0,i=!1){if(h("<array|function> [boolean] [boolean] [boolean]",[t,e,s],arguments.length),Array.isArray(t)){for(let i=0;i<t.length;i++){if("function"!=typeof t[i])throw Error("middleware must be a function");const n=t[i];n.applyBeforeValidation=e,n.global=s}Array.prototype.push.apply(this.globalMiddleware,t)}else if("function"==typeof t){const n=t;n.applyBeforeValidation=e,n.global=s,n.mutates=i,this.globalMiddleware.push(t)}return this.yargs}addCoerceMiddleware(t,e){const s=this.yargs.getAliases();return this.globalMiddleware=this.globalMiddleware.filter((t=>{const i=[...s[e]||[],e];return!t.option||!i.includes(t.option)})),t.option=e,this.addMiddleware(t,!0,!0,!0)}getMiddleware(){return this.globalMiddleware}freeze(){this.frozens.push([...this.globalMiddleware])}unfreeze(){const t=this.frozens.pop();void 0!==t&&(this.globalMiddleware=t)}reset(){this.globalMiddleware=this.globalMiddleware.filter((t=>t.global))}}function C(t,e,s,i){return s.reduce(((t,s)=>{if(s.applyBeforeValidation!==i)return t;if(s.mutates){if(s.applied)return t;s.applied=!0}if(f(t))return t.then((t=>Promise.all([t,s(t,e)]))).then((([t,e])=>Object.assign(t,e)));{const i=s(t,e);return f(i)?i.then((e=>Object.assign(t,e))):Object.assign(t,i)}}),t)}function j(t,e,s=(t=>{throw t})){try{const s="function"==typeof t?t():t;return f(s)?s.then((t=>e(t))):e(s)}catch(t){return s(t)}}const M=/(^\*)|(^\$0)/;class _{constructor(t,e,s,i){this.requireCache=new Set,this.handlers={},this.aliasMap={},this.frozens=[],this.shim=i,this.usage=t,this.globalMiddleware=s,this.validation=e}addDirectory(t,e,s,i){"boolean"!=typeof(i=i||{}).recurse&&(i.recurse=!1),Array.isArray(i.extensions)||(i.extensions=["js"]);const n="function"==typeof i.visit?i.visit:t=>t;i.visit=(t,e,s)=>{const i=n(t,e,s);if(i){if(this.requireCache.has(e))return i;this.requireCache.add(e),this.addHandler(i)}return i},this.shim.requireDirectory({require:e,filename:s},t,i)}addHandler(t,e,s,i,n,r){let a=[];const h=function(t){return t?t.map((t=>(t.applyBeforeValidation=!1,t))):[]}(n);if(i=i||(()=>{}),Array.isArray(t))if(function(t){return t.every((t=>"string"==typeof t))}(t))[t,...a]=t;else for(const e of t)this.addHandler(e);else{if(function(t){return"object"==typeof t&&!Array.isArray(t)}(t)){let e=Array.isArray(t.command)||"string"==typeof t.command?t.command:this.moduleName(t);return t.aliases&&(e=[].concat(e).concat(t.aliases)),void this.addHandler(e,this.extractDesc(t),t.builder,t.handler,t.middlewares,t.deprecated)}if(k(s))return void this.addHandler([t].concat(a),e,s.builder,s.handler,s.middlewares,s.deprecated)}if("string"==typeof t){const n=o(t);a=a.map((t=>o(t).cmd));let l=!1;const c=[n.cmd].concat(a).filter((t=>!M.test(t)||(l=!0,!1)));0===c.length&&l&&c.push("$0"),l&&(n.cmd=c[0],a=c.slice(1),t=t.replace(M,n.cmd)),a.forEach((t=>{this.aliasMap[t]=n.cmd})),!1!==e&&this.usage.command(t,e,l,a,r),this.handlers[n.cmd]={original:t,description:e,handler:i,builder:s||{},middlewares:h,deprecated:r,demanded:n.demanded,optional:n.optional},l&&(this.defaultCommand=this.handlers[n.cmd])}}getCommandHandlers(){return this.handlers}getCommands(){return Object.keys(this.handlers).concat(Object.keys(this.aliasMap))}hasDefaultCommand(){return!!this.defaultCommand}runCommand(t,e,s,i,n,r){const o=this.handlers[t]||this.handlers[this.aliasMap[t]]||this.defaultCommand,a=e.getInternalMethods().getContext(),h=a.commands.slice(),l=!t;t&&(a.commands.push(t),a.fullCommands.push(o.original));const c=this.applyBuilderUpdateUsageAndParse(l,o,e,s.aliases,h,i,n,r);return f(c)?c.then((t=>this.applyMiddlewareAndGetResult(l,o,t.innerArgv,a,n,t.aliases,e))):this.applyMiddlewareAndGetResult(l,o,c.innerArgv,a,n,c.aliases,e)}applyBuilderUpdateUsageAndParse(t,e,s,i,n,r,o,a){const h=e.builder;let l=s;if(x(h)){s.getInternalMethods().getUsageInstance().freeze();const c=h(s.getInternalMethods().reset(i),a);if(f(c))return c.then((i=>{var a;return l=(a=i)&&"function"==typeof a.getInternalMethods?i:s,this.parseAndUpdateUsage(t,e,l,n,r,o)}))}else(function(t){return"object"==typeof t})(h)&&(s.getInternalMethods().getUsageInstance().freeze(),l=s.getInternalMethods().reset(i),Object.keys(e.builder).forEach((t=>{l.option(t,h[t])})));return this.parseAndUpdateUsage(t,e,l,n,r,o)}parseAndUpdateUsage(t,e,s,i,n,r){t&&s.getInternalMethods().getUsageInstance().unfreeze(!0),this.shouldUpdateUsage(s)&&s.getInternalMethods().getUsageInstance().usage(this.usageFromParentCommandsCommandHandler(i,e),e.description);const o=s.getInternalMethods().runYargsParserAndExecuteCommands(null,void 0,!0,n,r);return f(o)?o.then((t=>({aliases:s.parsed.aliases,innerArgv:t}))):{aliases:s.parsed.aliases,innerArgv:o}}shouldUpdateUsage(t){return!t.getInternalMethods().getUsageInstance().getUsageDisabled()&&0===t.getInternalMethods().getUsageInstance().getUsage().length}usageFromParentCommandsCommandHandler(t,e){const s=M.test(e.original)?e.original.replace(M,"").trim():e.original,i=t.filter((t=>!M.test(t)));return i.push(s),`$0 ${i.join(" ")}`}handleValidationAndGetResult(t,e,s,i,n,r,o,a){if(!r.getInternalMethods().getHasOutput()){const e=r.getInternalMethods().runValidation(n,a,r.parsed.error,t);s=j(s,(t=>(e(t),t)))}if(e.handler&&!r.getInternalMethods().getHasOutput()){r.getInternalMethods().setHasOutput();const i=!!r.getOptions().configuration["populate--"];r.getInternalMethods().postProcess(s,i,!1,!1),s=j(s=C(s,r,o,!1),(t=>{const s=e.handler(t);return f(s)?s.then((()=>t)):t})),t||r.getInternalMethods().getUsageInstance().cacheHelpMessage(),f(s)&&!r.getInternalMethods().hasParseCallback()&&s.catch((t=>{try{r.getInternalMethods().getUsageInstance().fail(null,t)}catch(t){}}))}return t||(i.commands.pop(),i.fullCommands.pop()),s}applyMiddlewareAndGetResult(t,e,s,i,n,r,o){let a={};if(n)return s;o.getInternalMethods().getHasOutput()||(a=this.populatePositionals(e,s,i,o));const h=this.globalMiddleware.getMiddleware().slice(0).concat(e.middlewares),l=C(s,o,h,!0);return f(l)?l.then((s=>this.handleValidationAndGetResult(t,e,s,i,r,o,h,a))):this.handleValidationAndGetResult(t,e,l,i,r,o,h,a)}populatePositionals(t,e,s,i){e._=e._.slice(s.commands.length);const n=t.demanded.slice(0),r=t.optional.slice(0),o={};for(this.validation.positionalCount(n.length,e._.length);n.length;){const t=n.shift();this.populatePositional(t,e,o)}for(;r.length;){const t=r.shift();this.populatePositional(t,e,o)}return e._=s.commands.concat(e._.map((t=>""+t))),this.postProcessPositionals(e,o,this.cmdToParseOptions(t.original),i),o}populatePositional(t,e,s){const i=t.cmd[0];t.variadic?s[i]=e._.splice(0).map(String):e._.length&&(s[i]=[String(e._.shift())])}cmdToParseOptions(t){const e={array:[],default:{},alias:{},demand:{}},s=o(t);return s.demanded.forEach((t=>{const[s,...i]=t.cmd;t.variadic&&(e.array.push(s),e.default[s]=[]),e.alias[s]=i,e.demand[s]=!0})),s.optional.forEach((t=>{const[s,...i]=t.cmd;t.variadic&&(e.array.push(s),e.default[s]=[]),e.alias[s]=i})),e}postProcessPositionals(t,e,s,i){const n=Object.assign({},i.getOptions());n.default=Object.assign(s.default,n.default);for(const t of Object.keys(s.alias))n.alias[t]=(n.alias[t]||[]).concat(s.alias[t]);n.array=n.array.concat(s.array),n.config={};const r=[];if(Object.keys(e).forEach((t=>{e[t].map((e=>{n.configuration["unknown-options-as-args"]&&(n.key[t]=!0),r.push(`--${t}`),r.push(e)}))})),!r.length)return;const o=Object.assign({},n.configuration,{"populate--":!1}),a=this.shim.Parser.detailed(r,Object.assign({},n,{configuration:o}));if(a.error)i.getInternalMethods().getUsageInstance().fail(a.error.message,a.error);else{const s=Object.keys(e);Object.keys(e).forEach((t=>{s.push(...a.aliases[t])})),Object.keys(a.argv).forEach((n=>{s.includes(n)&&(e[n]||(e[n]=a.argv[n]),!this.isInConfigs(i,n)&&!this.isDefaulted(i,n)&&Object.prototype.hasOwnProperty.call(t,n)&&Object.prototype.hasOwnProperty.call(a.argv,n)&&(Array.isArray(t[n])||Array.isArray(a.argv[n]))?t[n]=[].concat(t[n],a.argv[n]):t[n]=a.argv[n])}))}}isDefaulted(t,e){const{default:s}=t.getOptions();return Object.prototype.hasOwnProperty.call(s,e)||Object.prototype.hasOwnProperty.call(s,this.shim.Parser.camelCase(e))}isInConfigs(t,e){const{configObjects:s}=t.getOptions();return s.some((t=>Object.prototype.hasOwnProperty.call(t,e)))||s.some((t=>Object.prototype.hasOwnProperty.call(t,this.shim.Parser.camelCase(e))))}runDefaultBuilderOn(t){if(!this.defaultCommand)return;if(this.shouldUpdateUsage(t)){const e=M.test(this.defaultCommand.original)?this.defaultCommand.original:this.defaultCommand.original.replace(/^[^[\]<>]*/,"$0 ");t.getInternalMethods().getUsageInstance().usage(e,this.defaultCommand.description)}const e=this.defaultCommand.builder;if(x(e))return e(t,!0);k(e)||Object.keys(e).forEach((s=>{t.option(s,e[s])}))}moduleName(t){const e=function(t){if(false){}for(let e,s=0,i=Object.keys(__webpack_require__.c);s<i.length;s++)if(e=__webpack_require__.c[i[s]],e.exports===t)return e;return null}(t);if(!e)throw new Error(`No command name given for module: ${this.shim.inspect(t)}`);return this.commandFromFilename(e.filename)}commandFromFilename(t){return this.shim.path.basename(t,this.shim.path.extname(t))}extractDesc({describe:t,description:e,desc:s}){for(const i of[t,e,s]){if("string"==typeof i||!1===i)return i;d(i,!0,this.shim)}return!1}freeze(){this.frozens.push({handlers:this.handlers,aliasMap:this.aliasMap,defaultCommand:this.defaultCommand})}unfreeze(){const t=this.frozens.pop();d(t,void 0,this.shim),({handlers:this.handlers,aliasMap:this.aliasMap,defaultCommand:this.defaultCommand}=t)}reset(){return this.handlers={},this.aliasMap={},this.defaultCommand=void 0,this.requireCache=new Set,this}}function k(t){return"object"==typeof t&&!!t.builder&&"function"==typeof t.handler}function x(t){return"function"==typeof t}function E(t){"undefined"!=typeof process&&[process.stdout,process.stderr].forEach((e=>{const s=e;s._handle&&s.isTTY&&"function"==typeof s._handle.setBlocking&&s._handle.setBlocking(t)}))}function A(t){return"boolean"==typeof t}function P(t,s){const i=s.y18n.__,n={},r=[];n.failFn=function(t){r.push(t)};let o=null,a=null,h=!0;n.showHelpOnFail=function(e=!0,s){const[i,r]="string"==typeof e?[!0,e]:[e,s];return t.getInternalMethods().isGlobalContext()&&(a=r),o=r,h=i,n};let l=!1;n.fail=function(s,i){const c=t.getInternalMethods().getLoggerInstance();if(!r.length){if(t.getExitProcess()&&E(!0),!l){l=!0,h&&(t.showHelp("error"),c.error()),(s||i)&&c.error(s||i);const e=o||a;e&&((s||i)&&c.error(""),c.error(e))}if(i=i||new e(s),t.getExitProcess())return t.exit(1);if(t.getInternalMethods().hasParseCallback())return t.exit(1,i);throw i}for(let t=r.length-1;t>=0;--t){const e=r[t];if(A(e)){if(i)throw i;if(s)throw Error(s)}else e(s,i,n)}};let c=[],f=!1;n.usage=(t,e)=>null===t?(f=!0,c=[],n):(f=!1,c.push([t,e||""]),n),n.getUsage=()=>c,n.getUsageDisabled=()=>f,n.getPositionalGroupName=()=>i("Positionals:");let d=[];n.example=(t,e)=>{d.push([t,e||""])};let u=[];n.command=function(t,e,s,i,n=!1){s&&(u=u.map((t=>(t[2]=!1,t)))),u.push([t,e||"",s,i,n])},n.getCommands=()=>u;let p={};n.describe=function(t,e){Array.isArray(t)?t.forEach((t=>{n.describe(t,e)})):"object"==typeof t?Object.keys(t).forEach((e=>{n.describe(e,t[e])})):p[t]=e},n.getDescriptions=()=>p;let m=[];n.epilog=t=>{m.push(t)};let y,b=!1;n.wrap=t=>{b=!0,y=t},n.getWrap=()=>s.getEnv("YARGS_DISABLE_WRAP")?null:(b||(y=function(){const t=80;return s.process.stdColumns?Math.min(t,s.process.stdColumns):t}(),b=!0),y);const v="__yargsString__:";function O(t,e,i){let n=0;return Array.isArray(t)||(t=Object.values(t).map((t=>[t]))),t.forEach((t=>{n=Math.max(s.stringWidth(i?`${i} ${I(t[0])}`:I(t[0]))+$(t[0]),n)})),e&&(n=Math.min(n,parseInt((.5*e).toString(),10))),n}let w;function C(e){return t.getOptions().hiddenOptions.indexOf(e)<0||t.parsed.argv[t.getOptions().showHiddenOpt]}function j(t,e){let s=`[${i("default:")} `;if(void 0===t&&!e)return null;if(e)s+=e;else switch(typeof t){case"string":s+=`"${t}"`;break;case"object":s+=JSON.stringify(t);break;default:s+=t}return`${s}]`}n.deferY18nLookup=t=>v+t,n.help=function(){if(w)return w;!function(){const e=t.getDemandedOptions(),s=t.getOptions();(Object.keys(s.alias)||[]).forEach((i=>{s.alias[i].forEach((r=>{p[r]&&n.describe(i,p[r]),r in e&&t.demandOption(i,e[r]),s.boolean.includes(r)&&t.boolean(i),s.count.includes(r)&&t.count(i),s.string.includes(r)&&t.string(i),s.normalize.includes(r)&&t.normalize(i),s.array.includes(r)&&t.array(i),s.number.includes(r)&&t.number(i)}))}))}();const e=t.customScriptName?t.$0:s.path.basename(t.$0),r=t.getDemandedOptions(),o=t.getDemandedCommands(),a=t.getDeprecatedOptions(),h=t.getGroups(),l=t.getOptions();let g=[];g=g.concat(Object.keys(p)),g=g.concat(Object.keys(r)),g=g.concat(Object.keys(o)),g=g.concat(Object.keys(l.default)),g=g.filter(C),g=Object.keys(g.reduce(((t,e)=>("_"!==e&&(t[e]=!0),t)),{}));const y=n.getWrap(),b=s.cliui({width:y,wrap:!!y});if(!f)if(c.length)c.forEach((t=>{b.div({text:`${t[0].replace(/\$0/g,e)}`}),t[1]&&b.div({text:`${t[1]}`,padding:[1,0,0,0]})})),b.div();else if(u.length){let t=null;t=o._?`${e} <${i("command")}>\n`:`${e} [${i("command")}]\n`,b.div(`${t}`)}if(u.length>1||1===u.length&&!u[0][2]){b.div(i("Commands:"));const s=t.getInternalMethods().getContext(),n=s.commands.length?`${s.commands.join(" ")} `:"";!0===t.getInternalMethods().getParserConfiguration()["sort-commands"]&&(u=u.sort(((t,e)=>t[0].localeCompare(e[0]))));const r=e?`${e} `:"";u.forEach((t=>{const s=`${r}${n}${t[0].replace(/^\$0 ?/,"")}`;b.span({text:s,padding:[0,2,0,2],width:O(u,y,`${e}${n}`)+4},{text:t[1]});const o=[];t[2]&&o.push(`[${i("default")}]`),t[3]&&t[3].length&&o.push(`[${i("aliases:")} ${t[3].join(", ")}]`),t[4]&&("string"==typeof t[4]?o.push(`[${i("deprecated: %s",t[4])}]`):o.push(`[${i("deprecated")}]`)),o.length?b.div({text:o.join(" "),padding:[0,0,0,2],align:"right"}):b.div()})),b.div()}const M=(Object.keys(l.alias)||[]).concat(Object.keys(t.parsed.newAliases)||[]);g=g.filter((e=>!t.parsed.newAliases[e]&&M.every((t=>-1===(l.alias[t]||[]).indexOf(e)))));const _=i("Options:");h[_]||(h[_]=[]),function(t,e,s,i){let n=[],r=null;Object.keys(s).forEach((t=>{n=n.concat(s[t])})),t.forEach((t=>{r=[t].concat(e[t]),r.some((t=>-1!==n.indexOf(t)))||s[i].push(t)}))}(g,l.alias,h,_);const k=t=>/^--/.test(I(t)),x=Object.keys(h).filter((t=>h[t].length>0)).map((t=>({groupName:t,normalizedKeys:h[t].filter(C).map((t=>{if(M.includes(t))return t;for(let e,s=0;void 0!==(e=M[s]);s++)if((l.alias[e]||[]).includes(t))return e;return t}))}))).filter((({normalizedKeys:t})=>t.length>0)).map((({groupName:t,normalizedKeys:e})=>{const s=e.reduce(((e,s)=>(e[s]=[s].concat(l.alias[s]||[]).map((e=>t===n.getPositionalGroupName()?e:(/^[0-9]$/.test(e)?l.boolean.includes(s)?"-":"--":e.length>1?"--":"-")+e)).sort(((t,e)=>k(t)===k(e)?0:k(t)?1:-1)).join(", "),e)),{});return{groupName:t,normalizedKeys:e,switches:s}}));if(x.filter((({groupName:t})=>t!==n.getPositionalGroupName())).some((({normalizedKeys:t,switches:e})=>!t.every((t=>k(e[t])))))&&x.filter((({groupName:t})=>t!==n.getPositionalGroupName())).forEach((({normalizedKeys:t,switches:e})=>{t.forEach((t=>{var s,i;k(e[t])&&(e[t]=(s=e[t],i="-x, ".length,S(s)?{text:s.text,indentation:s.indentation+i}:{text:s,indentation:i}))}))})),x.forEach((({groupName:e,normalizedKeys:s,switches:o})=>{b.div(e),s.forEach((e=>{const s=o[e];let h=p[e]||"",c=null;h.includes(v)&&(h=i(h.substring(v.length))),l.boolean.includes(e)&&(c=`[${i("boolean")}]`),l.count.includes(e)&&(c=`[${i("count")}]`),l.string.includes(e)&&(c=`[${i("string")}]`),l.normalize.includes(e)&&(c=`[${i("string")}]`),l.array.includes(e)&&(c=`[${i("array")}]`),l.number.includes(e)&&(c=`[${i("number")}]`);const f=[e in a?(d=a[e],"string"==typeof d?`[${i("deprecated: %s",d)}]`:`[${i("deprecated")}]`):null,c,e in r?`[${i("required")}]`:null,l.choices&&l.choices[e]?`[${i("choices:")} ${n.stringifiedValues(l.choices[e])}]`:null,j(l.default[e],l.defaultDescription[e])].filter(Boolean).join(" ");var d;b.span({text:I(s),padding:[0,2,0,2+$(s)],width:O(o,y)+4},h);const u=!0===t.getInternalMethods().getUsageConfiguration()["hide-types"];f&&!u?b.div({text:f,padding:[0,0,0,2],align:"right"}):b.div()})),b.div()})),d.length&&(b.div(i("Examples:")),d.forEach((t=>{t[0]=t[0].replace(/\$0/g,e)})),d.forEach((t=>{""===t[1]?b.div({text:t[0],padding:[0,2,0,2]}):b.div({text:t[0],padding:[0,2,0,2],width:O(d,y)+4},{text:t[1]})})),b.div()),m.length>0){const t=m.map((t=>t.replace(/\$0/g,e))).join("\n");b.div(`${t}\n`)}return b.toString().replace(/\s*$/,"")},n.cacheHelpMessage=function(){w=this.help()},n.clearCachedHelpMessage=function(){w=void 0},n.hasCachedHelpMessage=function(){return!!w},n.showHelp=e=>{const s=t.getInternalMethods().getLoggerInstance();e||(e="error");("function"==typeof e?e:s[e])(n.help())},n.functionDescription=t=>["(",t.name?s.Parser.decamelize(t.name,"-"):i("generated-value"),")"].join(""),n.stringifiedValues=function(t,e){let s="";const i=e||", ",n=[].concat(t);return t&&n.length?(n.forEach((t=>{s.length&&(s+=i),s+=JSON.stringify(t)})),s):s};let M=null;n.version=t=>{M=t},n.showVersion=e=>{const s=t.getInternalMethods().getLoggerInstance();e||(e="error");("function"==typeof e?e:s[e])(M)},n.reset=function(t){return o=null,l=!1,c=[],f=!1,m=[],d=[],u=[],p=g(p,(e=>!t[e])),n};const _=[];return n.freeze=function(){_.push({failMessage:o,failureOutput:l,usages:c,usageDisabled:f,epilogs:m,examples:d,commands:u,descriptions:p})},n.unfreeze=function(t=!1){const e=_.pop();e&&(t?(p={...e.descriptions,...p},u=[...e.commands,...u],c=[...e.usages,...c],d=[...e.examples,...d],m=[...e.epilogs,...m]):({failMessage:o,failureOutput:l,usages:c,usageDisabled:f,epilogs:m,examples:d,commands:u,descriptions:p}=e))},n}function S(t){return"object"==typeof t}function $(t){return S(t)?t.indentation:0}function I(t){return S(t)?t.text:t}class D{constructor(t,e,s,i){var n,r,o;this.yargs=t,this.usage=e,this.command=s,this.shim=i,this.completionKey="get-yargs-completions",this.aliases=null,this.customCompletionFunction=null,this.indexAfterLastReset=0,this.zshShell=null!==(o=(null===(n=this.shim.getEnv("SHELL"))||void 0===n?void 0:n.includes("zsh"))||(null===(r=this.shim.getEnv("ZSH_NAME"))||void 0===r?void 0:r.includes("zsh")))&&void 0!==o&&o}defaultCompletion(t,e,s,i){const n=this.command.getCommandHandlers();for(let e=0,s=t.length;e<s;++e)if(n[t[e]]&&n[t[e]].builder){const s=n[t[e]].builder;if(x(s)){this.indexAfterLastReset=e+1;const t=this.yargs.getInternalMethods().reset();return s(t,!0),t.argv}}const r=[];this.commandCompletions(r,t,s),this.optionCompletions(r,t,e,s),this.choicesFromOptionsCompletions(r,t,e,s),this.choicesFromPositionalsCompletions(r,t,e,s),i(null,r)}commandCompletions(t,e,s){const i=this.yargs.getInternalMethods().getContext().commands;s.match(/^-/)||i[i.length-1]===s||this.previousArgHasChoices(e)||this.usage.getCommands().forEach((s=>{const i=o(s[0]).cmd;if(-1===e.indexOf(i))if(this.zshShell){const e=s[1]||"";t.push(i.replace(/:/g,"\\:")+":"+e)}else t.push(i)}))}optionCompletions(t,e,s,i){if((i.match(/^-/)||""===i&&0===t.length)&&!this.previousArgHasChoices(e)){const s=this.yargs.getOptions(),n=this.yargs.getGroups()[this.usage.getPositionalGroupName()]||[];Object.keys(s.key).forEach((r=>{const o=!!s.configuration["boolean-negation"]&&s.boolean.includes(r);n.includes(r)||s.hiddenOptions.includes(r)||this.argsContainKey(e,r,o)||(this.completeOptionKey(r,t,i),o&&s.default[r]&&this.completeOptionKey(`no-${r}`,t,i))}))}}choicesFromOptionsCompletions(t,e,s,i){if(this.previousArgHasChoices(e)){const s=this.getPreviousArgChoices(e);s&&s.length>0&&t.push(...s.map((t=>t.replace(/:/g,"\\:"))))}}choicesFromPositionalsCompletions(t,e,s,i){if(""===i&&t.length>0&&this.previousArgHasChoices(e))return;const n=this.yargs.getGroups()[this.usage.getPositionalGroupName()]||[],r=Math.max(this.indexAfterLastReset,this.yargs.getInternalMethods().getContext().commands.length+1),o=n[s._.length-r-1];if(!o)return;const a=this.yargs.getOptions().choices[o]||[];for(const e of a)e.startsWith(i)&&t.push(e.replace(/:/g,"\\:"))}getPreviousArgChoices(t){if(t.length<1)return;let e=t[t.length-1],s="";if(!e.startsWith("-")&&t.length>1&&(s=e,e=t[t.length-2]),!e.startsWith("-"))return;const i=e.replace(/^-+/,""),n=this.yargs.getOptions(),r=[i,...this.yargs.getAliases()[i]||[]];let o;for(const t of r)if(Object.prototype.hasOwnProperty.call(n.key,t)&&Array.isArray(n.choices[t])){o=n.choices[t];break}return o?o.filter((t=>!s||t.startsWith(s))):void 0}previousArgHasChoices(t){const e=this.getPreviousArgChoices(t);return void 0!==e&&e.length>0}argsContainKey(t,e,s){const i=e=>-1!==t.indexOf((/^[^0-9]$/.test(e)?"-":"--")+e);if(i(e))return!0;if(s&&i(`no-${e}`))return!0;if(this.aliases)for(const t of this.aliases[e])if(i(t))return!0;return!1}completeOptionKey(t,e,s){var i,n,r;const o=this.usage.getDescriptions(),a=!/^--/.test(s)&&(t=>/^[^0-9]$/.test(t))(t)?"-":"--";if(this.zshShell){const s=null===(i=null==this?void 0:this.aliases)||void 0===i?void 0:i[t].find((t=>{const e=o[t];return"string"==typeof e&&e.length>0})),h=s?o[s]:void 0,l=null!==(r=null!==(n=o[t])&&void 0!==n?n:h)&&void 0!==r?r:"";e.push(a+`${t.replace(/:/g,"\\:")}:${l.replace("__yargsString__:","").replace(/(\r\n|\n|\r)/gm," ")}`)}else e.push(a+t)}customCompletion(t,e,s,i){if(d(this.customCompletionFunction,null,this.shim),this.customCompletionFunction.length<3){const t=this.customCompletionFunction(s,e);return f(t)?t.then((t=>{this.shim.process.nextTick((()=>{i(null,t)}))})).catch((t=>{this.shim.process.nextTick((()=>{i(t,void 0)}))})):i(null,t)}return function(t){return t.length>3}(this.customCompletionFunction)?this.customCompletionFunction(s,e,((n=i)=>this.defaultCompletion(t,e,s,n)),(t=>{i(null,t)})):this.customCompletionFunction(s,e,(t=>{i(null,t)}))}getCompletion(t,e){const s=t.length?t[t.length-1]:"",i=this.yargs.parse(t,!0),n=this.customCompletionFunction?i=>this.customCompletion(t,i,s,e):i=>this.defaultCompletion(t,i,s,e);return f(i)?i.then(n):n(i)}generateCompletionScript(t,e){let s=this.zshShell?'#compdef {{app_name}}\n###-begin-{{app_name}}-completions-###\n#\n# yargs command completion script\n#\n# Installation: {{app_path}} {{completion_command}} >> ~/.zshrc\n#    or {{app_path}} {{completion_command}} >> ~/.zprofile on OSX.\n#\n_{{app_name}}_yargs_completions()\n{\n  local reply\n  local si=$IFS\n  IFS=$\'\n\' reply=($(COMP_CWORD="$((CURRENT-1))" COMP_LINE="$BUFFER" COMP_POINT="$CURSOR" {{app_path}} --get-yargs-completions "${words[@]}"))\n  IFS=$si\n  _describe \'values\' reply\n}\ncompdef _{{app_name}}_yargs_completions {{app_name}}\n###-end-{{app_name}}-completions-###\n':'###-begin-{{app_name}}-completions-###\n#\n# yargs command completion script\n#\n# Installation: {{app_path}} {{completion_command}} >> ~/.bashrc\n#    or {{app_path}} {{completion_command}} >> ~/.bash_profile on OSX.\n#\n_{{app_name}}_yargs_completions()\n{\n    local cur_word args type_list\n\n    cur_word="${COMP_WORDS[COMP_CWORD]}"\n    args=("${COMP_WORDS[@]}")\n\n    # ask yargs to generate completions.\n    type_list=$({{app_path}} --get-yargs-completions "${args[@]}")\n\n    COMPREPLY=( $(compgen -W "${type_list}" -- ${cur_word}) )\n\n    # if no match was found, fall back to filename completion\n    if [ ${#COMPREPLY[@]} -eq 0 ]; then\n      COMPREPLY=()\n    fi\n\n    return 0\n}\ncomplete -o bashdefault -o default -F _{{app_name}}_yargs_completions {{app_name}}\n###-end-{{app_name}}-completions-###\n';const i=this.shim.path.basename(t);return t.match(/\.js$/)&&(t=`./${t}`),s=s.replace(/{{app_name}}/g,i),s=s.replace(/{{completion_command}}/g,e),s.replace(/{{app_path}}/g,t)}registerFunction(t){this.customCompletionFunction=t}setParsed(t){this.aliases=t.aliases}}function N(t,e){if(0===t.length)return e.length;if(0===e.length)return t.length;const s=[];let i,n;for(i=0;i<=e.length;i++)s[i]=[i];for(n=0;n<=t.length;n++)s[0][n]=n;for(i=1;i<=e.length;i++)for(n=1;n<=t.length;n++)e.charAt(i-1)===t.charAt(n-1)?s[i][n]=s[i-1][n-1]:i>1&&n>1&&e.charAt(i-2)===t.charAt(n-1)&&e.charAt(i-1)===t.charAt(n-2)?s[i][n]=s[i-2][n-2]+1:s[i][n]=Math.min(s[i-1][n-1]+1,Math.min(s[i][n-1]+1,s[i-1][n]+1));return s[e.length][t.length]}const H=["$0","--","_"];var z,W,q,U,F,L,V,G,R,T,B,K,Y,J,Z,X,Q,tt,et,st,it,nt,rt,ot,at,ht,lt,ct,ft,dt,ut,pt,gt,mt,yt;const bt=Symbol("copyDoubleDash"),vt=Symbol("copyDoubleDash"),Ot=Symbol("deleteFromParserHintObject"),wt=Symbol("emitWarning"),Ct=Symbol("freeze"),jt=Symbol("getDollarZero"),Mt=Symbol("getParserConfiguration"),_t=Symbol("getUsageConfiguration"),kt=Symbol("guessLocale"),xt=Symbol("guessVersion"),Et=Symbol("parsePositionalNumbers"),At=Symbol("pkgUp"),Pt=Symbol("populateParserHintArray"),St=Symbol("populateParserHintSingleValueDictionary"),$t=Symbol("populateParserHintArrayDictionary"),It=Symbol("populateParserHintDictionary"),Dt=Symbol("sanitizeKey"),Nt=Symbol("setKey"),Ht=Symbol("unfreeze"),zt=Symbol("validateAsync"),Wt=Symbol("getCommandInstance"),qt=Symbol("getContext"),Ut=Symbol("getHasOutput"),Ft=Symbol("getLoggerInstance"),Lt=Symbol("getParseContext"),Vt=Symbol("getUsageInstance"),Gt=Symbol("getValidationInstance"),Rt=Symbol("hasParseCallback"),Tt=Symbol("isGlobalContext"),Bt=Symbol("postProcess"),Kt=Symbol("rebase"),Yt=Symbol("reset"),Jt=Symbol("runYargsParserAndExecuteCommands"),Zt=Symbol("runValidation"),Xt=Symbol("setHasOutput"),Qt=Symbol("kTrackManuallySetKeys");class te{constructor(t=[],e,s,i){this.customScriptName=!1,this.parsed=!1,z.set(this,void 0),W.set(this,void 0),q.set(this,{commands:[],fullCommands:[]}),U.set(this,null),F.set(this,null),L.set(this,"show-hidden"),V.set(this,null),G.set(this,!0),R.set(this,{}),T.set(this,!0),B.set(this,[]),K.set(this,void 0),Y.set(this,{}),J.set(this,!1),Z.set(this,null),X.set(this,!0),Q.set(this,void 0),tt.set(this,""),et.set(this,void 0),st.set(this,void 0),it.set(this,{}),nt.set(this,null),rt.set(this,null),ot.set(this,{}),at.set(this,{}),ht.set(this,void 0),lt.set(this,!1),ct.set(this,void 0),ft.set(this,!1),dt.set(this,!1),ut.set(this,!1),pt.set(this,void 0),gt.set(this,{}),mt.set(this,null),yt.set(this,void 0),O(this,ct,i,"f"),O(this,ht,t,"f"),O(this,W,e,"f"),O(this,st,s,"f"),O(this,K,new w(this),"f"),this.$0=this[jt](),this[Yt](),O(this,z,v(this,z,"f"),"f"),O(this,pt,v(this,pt,"f"),"f"),O(this,yt,v(this,yt,"f"),"f"),O(this,et,v(this,et,"f"),"f"),v(this,et,"f").showHiddenOpt=v(this,L,"f"),O(this,Q,this[vt](),"f")}addHelpOpt(t,e){return h("[string|boolean] [string]",[t,e],arguments.length),v(this,Z,"f")&&(this[Ot](v(this,Z,"f")),O(this,Z,null,"f")),!1===t&&void 0===e||(O(this,Z,"string"==typeof t?t:"help","f"),this.boolean(v(this,Z,"f")),this.describe(v(this,Z,"f"),e||v(this,pt,"f").deferY18nLookup("Show help"))),this}help(t,e){return this.addHelpOpt(t,e)}addShowHiddenOpt(t,e){if(h("[string|boolean] [string]",[t,e],arguments.length),!1===t&&void 0===e)return this;const s="string"==typeof t?t:v(this,L,"f");return this.boolean(s),this.describe(s,e||v(this,pt,"f").deferY18nLookup("Show hidden options")),v(this,et,"f").showHiddenOpt=s,this}showHidden(t,e){return this.addShowHiddenOpt(t,e)}alias(t,e){return h("<object|string|array> [string|array]",[t,e],arguments.length),this[$t](this.alias.bind(this),"alias",t,e),this}array(t){return h("<array|string>",[t],arguments.length),this[Pt]("array",t),this[Qt](t),this}boolean(t){return h("<array|string>",[t],arguments.length),this[Pt]("boolean",t),this[Qt](t),this}check(t,e){return h("<function> [boolean]",[t,e],arguments.length),this.middleware(((e,s)=>j((()=>t(e,s.getOptions())),(s=>(s?("string"==typeof s||s instanceof Error)&&v(this,pt,"f").fail(s.toString(),s):v(this,pt,"f").fail(v(this,ct,"f").y18n.__("Argument check failed: %s",t.toString())),e)),(t=>(v(this,pt,"f").fail(t.message?t.message:t.toString(),t),e)))),!1,e),this}choices(t,e){return h("<object|string|array> [string|array]",[t,e],arguments.length),this[$t](this.choices.bind(this),"choices",t,e),this}coerce(t,s){if(h("<object|string|array> [function]",[t,s],arguments.length),Array.isArray(t)){if(!s)throw new e("coerce callback must be provided");for(const e of t)this.coerce(e,s);return this}if("object"==typeof t){for(const e of Object.keys(t))this.coerce(e,t[e]);return this}if(!s)throw new e("coerce callback must be provided");return v(this,et,"f").key[t]=!0,v(this,K,"f").addCoerceMiddleware(((i,n)=>{let r;return Object.prototype.hasOwnProperty.call(i,t)?j((()=>(r=n.getAliases(),s(i[t]))),(e=>{i[t]=e;const s=n.getInternalMethods().getParserConfiguration()["strip-aliased"];if(r[t]&&!0!==s)for(const s of r[t])i[s]=e;return i}),(t=>{throw new e(t.message)})):i}),t),this}conflicts(t,e){return h("<string|object> [string|array]",[t,e],arguments.length),v(this,yt,"f").conflicts(t,e),this}config(t="config",e,s){return h("[object|string] [string|function] [function]",[t,e,s],arguments.length),"object"!=typeof t||Array.isArray(t)?("function"==typeof e&&(s=e,e=void 0),this.describe(t,e||v(this,pt,"f").deferY18nLookup("Path to JSON config file")),(Array.isArray(t)?t:[t]).forEach((t=>{v(this,et,"f").config[t]=s||!0})),this):(t=n(t,v(this,W,"f"),this[Mt]()["deep-merge-config"]||!1,v(this,ct,"f")),v(this,et,"f").configObjects=(v(this,et,"f").configObjects||[]).concat(t),this)}completion(t,e,s){return h("[string] [string|boolean|function] [function]",[t,e,s],arguments.length),"function"==typeof e&&(s=e,e=void 0),O(this,F,t||v(this,F,"f")||"completion","f"),e||!1===e||(e="generate completion script"),this.command(v(this,F,"f"),e),s&&v(this,U,"f").registerFunction(s),this}command(t,e,s,i,n,r){return h("<string|array|object> [string|boolean] [function|object] [function] [array] [boolean|string]",[t,e,s,i,n,r],arguments.length),v(this,z,"f").addHandler(t,e,s,i,n,r),this}commands(t,e,s,i,n,r){return this.command(t,e,s,i,n,r)}commandDir(t,e){h("<string> [object]",[t,e],arguments.length);const s=v(this,st,"f")||v(this,ct,"f").require;return v(this,z,"f").addDirectory(t,s,v(this,ct,"f").getCallerFile(),e),this}count(t){return h("<array|string>",[t],arguments.length),this[Pt]("count",t),this[Qt](t),this}default(t,e,s){return h("<object|string|array> [*] [string]",[t,e,s],arguments.length),s&&(u(t,v(this,ct,"f")),v(this,et,"f").defaultDescription[t]=s),"function"==typeof e&&(u(t,v(this,ct,"f")),v(this,et,"f").defaultDescription[t]||(v(this,et,"f").defaultDescription[t]=v(this,pt,"f").functionDescription(e)),e=e.call()),this[St](this.default.bind(this),"default",t,e),this}defaults(t,e,s){return this.default(t,e,s)}demandCommand(t=1,e,s,i){return h("[number] [number|string] [string|null|undefined] [string|null|undefined]",[t,e,s,i],arguments.length),"number"!=typeof e&&(s=e,e=1/0),this.global("_",!1),v(this,et,"f").demandedCommands._={min:t,max:e,minMsg:s,maxMsg:i},this}demand(t,e,s){return Array.isArray(e)?(e.forEach((t=>{d(s,!0,v(this,ct,"f")),this.demandOption(t,s)})),e=1/0):"number"!=typeof e&&(s=e,e=1/0),"number"==typeof t?(d(s,!0,v(this,ct,"f")),this.demandCommand(t,e,s,s)):Array.isArray(t)?t.forEach((t=>{d(s,!0,v(this,ct,"f")),this.demandOption(t,s)})):"string"==typeof s?this.demandOption(t,s):!0!==s&&void 0!==s||this.demandOption(t),this}demandOption(t,e){return h("<object|string|array> [string]",[t,e],arguments.length),this[St](this.demandOption.bind(this),"demandedOptions",t,e),this}deprecateOption(t,e){return h("<string> [string|boolean]",[t,e],arguments.length),v(this,et,"f").deprecatedOptions[t]=e,this}describe(t,e){return h("<object|string|array> [string]",[t,e],arguments.length),this[Nt](t,!0),v(this,pt,"f").describe(t,e),this}detectLocale(t){return h("<boolean>",[t],arguments.length),O(this,G,t,"f"),this}env(t){return h("[string|boolean]",[t],arguments.length),!1===t?delete v(this,et,"f").envPrefix:v(this,et,"f").envPrefix=t||"",this}epilogue(t){return h("<string>",[t],arguments.length),v(this,pt,"f").epilog(t),this}epilog(t){return this.epilogue(t)}example(t,e){return h("<string|array> [string]",[t,e],arguments.length),Array.isArray(t)?t.forEach((t=>this.example(...t))):v(this,pt,"f").example(t,e),this}exit(t,e){O(this,J,!0,"f"),O(this,V,e,"f"),v(this,T,"f")&&v(this,ct,"f").process.exit(t)}exitProcess(t=!0){return h("[boolean]",[t],arguments.length),O(this,T,t,"f"),this}fail(t){if(h("<function|boolean>",[t],arguments.length),"boolean"==typeof t&&!1!==t)throw new e("Invalid first argument. Expected function or boolean 'false'");return v(this,pt,"f").failFn(t),this}getAliases(){return this.parsed?this.parsed.aliases:{}}async getCompletion(t,e){return h("<array> [function]",[t,e],arguments.length),e?v(this,U,"f").getCompletion(t,e):new Promise(((e,s)=>{v(this,U,"f").getCompletion(t,((t,i)=>{t?s(t):e(i)}))}))}getDemandedOptions(){return h([],0),v(this,et,"f").demandedOptions}getDemandedCommands(){return h([],0),v(this,et,"f").demandedCommands}getDeprecatedOptions(){return h([],0),v(this,et,"f").deprecatedOptions}getDetectLocale(){return v(this,G,"f")}getExitProcess(){return v(this,T,"f")}getGroups(){return Object.assign({},v(this,Y,"f"),v(this,at,"f"))}getHelp(){if(O(this,J,!0,"f"),!v(this,pt,"f").hasCachedHelpMessage()){if(!this.parsed){const t=this[Jt](v(this,ht,"f"),void 0,void 0,0,!0);if(f(t))return t.then((()=>v(this,pt,"f").help()))}const t=v(this,z,"f").runDefaultBuilderOn(this);if(f(t))return t.then((()=>v(this,pt,"f").help()))}return Promise.resolve(v(this,pt,"f").help())}getOptions(){return v(this,et,"f")}getStrict(){return v(this,ft,"f")}getStrictCommands(){return v(this,dt,"f")}getStrictOptions(){return v(this,ut,"f")}global(t,e){return h("<string|array> [boolean]",[t,e],arguments.length),t=[].concat(t),!1!==e?v(this,et,"f").local=v(this,et,"f").local.filter((e=>-1===t.indexOf(e))):t.forEach((t=>{v(this,et,"f").local.includes(t)||v(this,et,"f").local.push(t)})),this}group(t,e){h("<string|array> <string>",[t,e],arguments.length);const s=v(this,at,"f")[e]||v(this,Y,"f")[e];v(this,at,"f")[e]&&delete v(this,at,"f")[e];const i={};return v(this,Y,"f")[e]=(s||[]).concat(t).filter((t=>!i[t]&&(i[t]=!0))),this}hide(t){return h("<string>",[t],arguments.length),v(this,et,"f").hiddenOptions.push(t),this}implies(t,e){return h("<string|object> [number|string|array]",[t,e],arguments.length),v(this,yt,"f").implies(t,e),this}locale(t){return h("[string]",[t],arguments.length),void 0===t?(this[kt](),v(this,ct,"f").y18n.getLocale()):(O(this,G,!1,"f"),v(this,ct,"f").y18n.setLocale(t),this)}middleware(t,e,s){return v(this,K,"f").addMiddleware(t,!!e,s)}nargs(t,e){return h("<string|object|array> [number]",[t,e],arguments.length),this[St](this.nargs.bind(this),"narg",t,e),this}normalize(t){return h("<array|string>",[t],arguments.length),this[Pt]("normalize",t),this}number(t){return h("<array|string>",[t],arguments.length),this[Pt]("number",t),this[Qt](t),this}option(t,e){if(h("<string|object> [object]",[t,e],arguments.length),"object"==typeof t)Object.keys(t).forEach((e=>{this.options(e,t[e])}));else{"object"!=typeof e&&(e={}),this[Qt](t),!v(this,mt,"f")||"version"!==t&&"version"!==(null==e?void 0:e.alias)||this[wt](['"version" is a reserved word.',"Please do one of the following:",'- Disable version with `yargs.version(false)` if using "version" as an option',"- Use the built-in `yargs.version` method instead (if applicable)","- Use a different option key","https://yargs.js.org/docs/#api-reference-version"].join("\n"),void 0,"versionWarning"),v(this,et,"f").key[t]=!0,e.alias&&this.alias(t,e.alias);const s=e.deprecate||e.deprecated;s&&this.deprecateOption(t,s);const i=e.demand||e.required||e.require;i&&this.demand(t,i),e.demandOption&&this.demandOption(t,"string"==typeof e.demandOption?e.demandOption:void 0),e.conflicts&&this.conflicts(t,e.conflicts),"default"in e&&this.default(t,e.default),void 0!==e.implies&&this.implies(t,e.implies),void 0!==e.nargs&&this.nargs(t,e.nargs),e.config&&this.config(t,e.configParser),e.normalize&&this.normalize(t),e.choices&&this.choices(t,e.choices),e.coerce&&this.coerce(t,e.coerce),e.group&&this.group(t,e.group),(e.boolean||"boolean"===e.type)&&(this.boolean(t),e.alias&&this.boolean(e.alias)),(e.array||"array"===e.type)&&(this.array(t),e.alias&&this.array(e.alias)),(e.number||"number"===e.type)&&(this.number(t),e.alias&&this.number(e.alias)),(e.string||"string"===e.type)&&(this.string(t),e.alias&&this.string(e.alias)),(e.count||"count"===e.type)&&this.count(t),"boolean"==typeof e.global&&this.global(t,e.global),e.defaultDescription&&(v(this,et,"f").defaultDescription[t]=e.defaultDescription),e.skipValidation&&this.skipValidation(t);const n=e.describe||e.description||e.desc,r=v(this,pt,"f").getDescriptions();Object.prototype.hasOwnProperty.call(r,t)&&"string"!=typeof n||this.describe(t,n),e.hidden&&this.hide(t),e.requiresArg&&this.requiresArg(t)}return this}options(t,e){return this.option(t,e)}parse(t,e,s){h("[string|array] [function|boolean|object] [function]",[t,e,s],arguments.length),this[Ct](),void 0===t&&(t=v(this,ht,"f")),"object"==typeof e&&(O(this,rt,e,"f"),e=s),"function"==typeof e&&(O(this,nt,e,"f"),e=!1),e||O(this,ht,t,"f"),v(this,nt,"f")&&O(this,T,!1,"f");const i=this[Jt](t,!!e),n=this.parsed;return v(this,U,"f").setParsed(this.parsed),f(i)?i.then((t=>(v(this,nt,"f")&&v(this,nt,"f").call(this,v(this,V,"f"),t,v(this,tt,"f")),t))).catch((t=>{throw v(this,nt,"f")&&v(this,nt,"f")(t,this.parsed.argv,v(this,tt,"f")),t})).finally((()=>{this[Ht](),this.parsed=n})):(v(this,nt,"f")&&v(this,nt,"f").call(this,v(this,V,"f"),i,v(this,tt,"f")),this[Ht](),this.parsed=n,i)}parseAsync(t,e,s){const i=this.parse(t,e,s);return f(i)?i:Promise.resolve(i)}parseSync(t,s,i){const n=this.parse(t,s,i);if(f(n))throw new e(".parseSync() must not be used with asynchronous builders, handlers, or middleware");return n}parserConfiguration(t){return h("<object>",[t],arguments.length),O(this,it,t,"f"),this}pkgConf(t,e){h("<string> [string]",[t,e],arguments.length);let s=null;const i=this[At](e||v(this,W,"f"));return i[t]&&"object"==typeof i[t]&&(s=n(i[t],e||v(this,W,"f"),this[Mt]()["deep-merge-config"]||!1,v(this,ct,"f")),v(this,et,"f").configObjects=(v(this,et,"f").configObjects||[]).concat(s)),this}positional(t,e){h("<string> <object>",[t,e],arguments.length);const s=["default","defaultDescription","implies","normalize","choices","conflicts","coerce","type","describe","desc","description","alias"];e=g(e,((t,e)=>!("type"===t&&!["string","number","boolean"].includes(e))&&s.includes(t)));const i=v(this,q,"f").fullCommands[v(this,q,"f").fullCommands.length-1],n=i?v(this,z,"f").cmdToParseOptions(i):{array:[],alias:{},default:{},demand:{}};return p(n).forEach((s=>{const i=n[s];Array.isArray(i)?-1!==i.indexOf(t)&&(e[s]=!0):i[t]&&!(s in e)&&(e[s]=i[t])})),this.group(t,v(this,pt,"f").getPositionalGroupName()),this.option(t,e)}recommendCommands(t=!0){return h("[boolean]",[t],arguments.length),O(this,lt,t,"f"),this}required(t,e,s){return this.demand(t,e,s)}require(t,e,s){return this.demand(t,e,s)}requiresArg(t){return h("<array|string|object> [number]",[t],arguments.length),"string"==typeof t&&v(this,et,"f").narg[t]||this[St](this.requiresArg.bind(this),"narg",t,NaN),this}showCompletionScript(t,e){return h("[string] [string]",[t,e],arguments.length),t=t||this.$0,v(this,Q,"f").log(v(this,U,"f").generateCompletionScript(t,e||v(this,F,"f")||"completion")),this}showHelp(t){if(h("[string|function]",[t],arguments.length),O(this,J,!0,"f"),!v(this,pt,"f").hasCachedHelpMessage()){if(!this.parsed){const e=this[Jt](v(this,ht,"f"),void 0,void 0,0,!0);if(f(e))return e.then((()=>{v(this,pt,"f").showHelp(t)})),this}const e=v(this,z,"f").runDefaultBuilderOn(this);if(f(e))return e.then((()=>{v(this,pt,"f").showHelp(t)})),this}return v(this,pt,"f").showHelp(t),this}scriptName(t){return this.customScriptName=!0,this.$0=t,this}showHelpOnFail(t,e){return h("[boolean|string] [string]",[t,e],arguments.length),v(this,pt,"f").showHelpOnFail(t,e),this}showVersion(t){return h("[string|function]",[t],arguments.length),v(this,pt,"f").showVersion(t),this}skipValidation(t){return h("<array|string>",[t],arguments.length),this[Pt]("skipValidation",t),this}strict(t){return h("[boolean]",[t],arguments.length),O(this,ft,!1!==t,"f"),this}strictCommands(t){return h("[boolean]",[t],arguments.length),O(this,dt,!1!==t,"f"),this}strictOptions(t){return h("[boolean]",[t],arguments.length),O(this,ut,!1!==t,"f"),this}string(t){return h("<array|string>",[t],arguments.length),this[Pt]("string",t),this[Qt](t),this}terminalWidth(){return h([],0),v(this,ct,"f").process.stdColumns}updateLocale(t){return this.updateStrings(t)}updateStrings(t){return h("<object>",[t],arguments.length),O(this,G,!1,"f"),v(this,ct,"f").y18n.updateLocale(t),this}usage(t,s,i,n){if(h("<string|null|undefined> [string|boolean] [function|object] [function]",[t,s,i,n],arguments.length),void 0!==s){if(d(t,null,v(this,ct,"f")),(t||"").match(/^\$0( |$)/))return this.command(t,s,i,n);throw new e(".usage() description must start with $0 if being used as alias for .command()")}return v(this,pt,"f").usage(t),this}usageConfiguration(t){return h("<object>",[t],arguments.length),O(this,gt,t,"f"),this}version(t,e,s){const i="version";if(h("[boolean|string] [string] [string]",[t,e,s],arguments.length),v(this,mt,"f")&&(this[Ot](v(this,mt,"f")),v(this,pt,"f").version(void 0),O(this,mt,null,"f")),0===arguments.length)s=this[xt](),t=i;else if(1===arguments.length){if(!1===t)return this;s=t,t=i}else 2===arguments.length&&(s=e,e=void 0);return O(this,mt,"string"==typeof t?t:i,"f"),e=e||v(this,pt,"f").deferY18nLookup("Show version number"),v(this,pt,"f").version(s||void 0),this.boolean(v(this,mt,"f")),this.describe(v(this,mt,"f"),e),this}wrap(t){return h("<number|null|undefined>",[t],arguments.length),v(this,pt,"f").wrap(t),this}[(z=new WeakMap,W=new WeakMap,q=new WeakMap,U=new WeakMap,F=new WeakMap,L=new WeakMap,V=new WeakMap,G=new WeakMap,R=new WeakMap,T=new WeakMap,B=new WeakMap,K=new WeakMap,Y=new WeakMap,J=new WeakMap,Z=new WeakMap,X=new WeakMap,Q=new WeakMap,tt=new WeakMap,et=new WeakMap,st=new WeakMap,it=new WeakMap,nt=new WeakMap,rt=new WeakMap,ot=new WeakMap,at=new WeakMap,ht=new WeakMap,lt=new WeakMap,ct=new WeakMap,ft=new WeakMap,dt=new WeakMap,ut=new WeakMap,pt=new WeakMap,gt=new WeakMap,mt=new WeakMap,yt=new WeakMap,bt)](t){if(!t._||!t["--"])return t;t._.push.apply(t._,t["--"]);try{delete t["--"]}catch(t){}return t}[vt](){return{log:(...t)=>{this[Rt]()||console.log(...t),O(this,J,!0,"f"),v(this,tt,"f").length&&O(this,tt,v(this,tt,"f")+"\n","f"),O(this,tt,v(this,tt,"f")+t.join(" "),"f")},error:(...t)=>{this[Rt]()||console.error(...t),O(this,J,!0,"f"),v(this,tt,"f").length&&O(this,tt,v(this,tt,"f")+"\n","f"),O(this,tt,v(this,tt,"f")+t.join(" "),"f")}}}[Ot](t){p(v(this,et,"f")).forEach((e=>{if("configObjects"===e)return;const s=v(this,et,"f")[e];Array.isArray(s)?s.includes(t)&&s.splice(s.indexOf(t),1):"object"==typeof s&&delete s[t]})),delete v(this,pt,"f").getDescriptions()[t]}[wt](t,e,s){v(this,R,"f")[s]||(v(this,ct,"f").process.emitWarning(t,e),v(this,R,"f")[s]=!0)}[Ct](){v(this,B,"f").push({options:v(this,et,"f"),configObjects:v(this,et,"f").configObjects.slice(0),exitProcess:v(this,T,"f"),groups:v(this,Y,"f"),strict:v(this,ft,"f"),strictCommands:v(this,dt,"f"),strictOptions:v(this,ut,"f"),completionCommand:v(this,F,"f"),output:v(this,tt,"f"),exitError:v(this,V,"f"),hasOutput:v(this,J,"f"),parsed:this.parsed,parseFn:v(this,nt,"f"),parseContext:v(this,rt,"f")}),v(this,pt,"f").freeze(),v(this,yt,"f").freeze(),v(this,z,"f").freeze(),v(this,K,"f").freeze()}[jt](){let t,e="";return t=/\b(node|iojs|electron)(\.exe)?$/.test(v(this,ct,"f").process.argv()[0])?v(this,ct,"f").process.argv().slice(1,2):v(this,ct,"f").process.argv().slice(0,1),e=t.map((t=>{const e=this[Kt](v(this,W,"f"),t);return t.match(/^(\/|([a-zA-Z]:)?\\)/)&&e.length<t.length?e:t})).join(" ").trim(),v(this,ct,"f").getEnv("_")&&v(this,ct,"f").getProcessArgvBin()===v(this,ct,"f").getEnv("_")&&(e=v(this,ct,"f").getEnv("_").replace(`${v(this,ct,"f").path.dirname(v(this,ct,"f").process.execPath())}/`,"")),e}[Mt](){return v(this,it,"f")}[_t](){return v(this,gt,"f")}[kt](){if(!v(this,G,"f"))return;const t=v(this,ct,"f").getEnv("LC_ALL")||v(this,ct,"f").getEnv("LC_MESSAGES")||v(this,ct,"f").getEnv("LANG")||v(this,ct,"f").getEnv("LANGUAGE")||"en_US";this.locale(t.replace(/[.:].*/,""))}[xt](){return this[At]().version||"unknown"}[Et](t){const e=t["--"]?t["--"]:t._;for(let t,s=0;void 0!==(t=e[s]);s++)v(this,ct,"f").Parser.looksLikeNumber(t)&&Number.isSafeInteger(Math.floor(parseFloat(`${t}`)))&&(e[s]=Number(t));return t}[At](t){const e=t||"*";if(v(this,ot,"f")[e])return v(this,ot,"f")[e];let s={};try{let e=t||v(this,ct,"f").mainFilename;!t&&v(this,ct,"f").path.extname(e)&&(e=v(this,ct,"f").path.dirname(e));const i=v(this,ct,"f").findUp(e,((t,e)=>e.includes("package.json")?"package.json":void 0));d(i,void 0,v(this,ct,"f")),s=JSON.parse(v(this,ct,"f").readFileSync(i,"utf8"))}catch(t){}return v(this,ot,"f")[e]=s||{},v(this,ot,"f")[e]}[Pt](t,e){(e=[].concat(e)).forEach((e=>{e=this[Dt](e),v(this,et,"f")[t].push(e)}))}[St](t,e,s,i){this[It](t,e,s,i,((t,e,s)=>{v(this,et,"f")[t][e]=s}))}[$t](t,e,s,i){this[It](t,e,s,i,((t,e,s)=>{v(this,et,"f")[t][e]=(v(this,et,"f")[t][e]||[]).concat(s)}))}[It](t,e,s,i,n){if(Array.isArray(s))s.forEach((e=>{t(e,i)}));else if((t=>"object"==typeof t)(s))for(const e of p(s))t(e,s[e]);else n(e,this[Dt](s),i)}[Dt](t){return"__proto__"===t?"___proto___":t}[Nt](t,e){return this[St](this[Nt].bind(this),"key",t,e),this}[Ht](){var t,e,s,i,n,r,o,a,h,l,c,f;const u=v(this,B,"f").pop();let p;d(u,void 0,v(this,ct,"f")),t=this,e=this,s=this,i=this,n=this,r=this,o=this,a=this,h=this,l=this,c=this,f=this,({options:{set value(e){O(t,et,e,"f")}}.value,configObjects:p,exitProcess:{set value(t){O(e,T,t,"f")}}.value,groups:{set value(t){O(s,Y,t,"f")}}.value,output:{set value(t){O(i,tt,t,"f")}}.value,exitError:{set value(t){O(n,V,t,"f")}}.value,hasOutput:{set value(t){O(r,J,t,"f")}}.value,parsed:this.parsed,strict:{set value(t){O(o,ft,t,"f")}}.value,strictCommands:{set value(t){O(a,dt,t,"f")}}.value,strictOptions:{set value(t){O(h,ut,t,"f")}}.value,completionCommand:{set value(t){O(l,F,t,"f")}}.value,parseFn:{set value(t){O(c,nt,t,"f")}}.value,parseContext:{set value(t){O(f,rt,t,"f")}}.value}=u),v(this,et,"f").configObjects=p,v(this,pt,"f").unfreeze(),v(this,yt,"f").unfreeze(),v(this,z,"f").unfreeze(),v(this,K,"f").unfreeze()}[zt](t,e){return j(e,(e=>(t(e),e)))}getInternalMethods(){return{getCommandInstance:this[Wt].bind(this),getContext:this[qt].bind(this),getHasOutput:this[Ut].bind(this),getLoggerInstance:this[Ft].bind(this),getParseContext:this[Lt].bind(this),getParserConfiguration:this[Mt].bind(this),getUsageConfiguration:this[_t].bind(this),getUsageInstance:this[Vt].bind(this),getValidationInstance:this[Gt].bind(this),hasParseCallback:this[Rt].bind(this),isGlobalContext:this[Tt].bind(this),postProcess:this[Bt].bind(this),reset:this[Yt].bind(this),runValidation:this[Zt].bind(this),runYargsParserAndExecuteCommands:this[Jt].bind(this),setHasOutput:this[Xt].bind(this)}}[Wt](){return v(this,z,"f")}[qt](){return v(this,q,"f")}[Ut](){return v(this,J,"f")}[Ft](){return v(this,Q,"f")}[Lt](){return v(this,rt,"f")||{}}[Vt](){return v(this,pt,"f")}[Gt](){return v(this,yt,"f")}[Rt](){return!!v(this,nt,"f")}[Tt](){return v(this,X,"f")}[Bt](t,e,s,i){if(s)return t;if(f(t))return t;e||(t=this[bt](t));return(this[Mt]()["parse-positional-numbers"]||void 0===this[Mt]()["parse-positional-numbers"])&&(t=this[Et](t)),i&&(t=C(t,this,v(this,K,"f").getMiddleware(),!1)),t}[Yt](t={}){O(this,et,v(this,et,"f")||{},"f");const e={};e.local=v(this,et,"f").local||[],e.configObjects=v(this,et,"f").configObjects||[];const s={};e.local.forEach((e=>{s[e]=!0,(t[e]||[]).forEach((t=>{s[t]=!0}))})),Object.assign(v(this,at,"f"),Object.keys(v(this,Y,"f")).reduce(((t,e)=>{const i=v(this,Y,"f")[e].filter((t=>!(t in s)));return i.length>0&&(t[e]=i),t}),{})),O(this,Y,{},"f");return["array","boolean","string","skipValidation","count","normalize","number","hiddenOptions"].forEach((t=>{e[t]=(v(this,et,"f")[t]||[]).filter((t=>!s[t]))})),["narg","key","alias","default","defaultDescription","config","choices","demandedOptions","demandedCommands","deprecatedOptions"].forEach((t=>{e[t]=g(v(this,et,"f")[t],(t=>!s[t]))})),e.envPrefix=v(this,et,"f").envPrefix,O(this,et,e,"f"),O(this,pt,v(this,pt,"f")?v(this,pt,"f").reset(s):P(this,v(this,ct,"f")),"f"),O(this,yt,v(this,yt,"f")?v(this,yt,"f").reset(s):function(t,e,s){const i=s.y18n.__,n=s.y18n.__n,r={nonOptionCount:function(s){const i=t.getDemandedCommands(),r=s._.length+(s["--"]?s["--"].length:0)-t.getInternalMethods().getContext().commands.length;i._&&(r<i._.min||r>i._.max)&&(r<i._.min?void 0!==i._.minMsg?e.fail(i._.minMsg?i._.minMsg.replace(/\$0/g,r.toString()).replace(/\$1/,i._.min.toString()):null):e.fail(n("Not enough non-option arguments: got %s, need at least %s","Not enough non-option arguments: got %s, need at least %s",r,r.toString(),i._.min.toString())):r>i._.max&&(void 0!==i._.maxMsg?e.fail(i._.maxMsg?i._.maxMsg.replace(/\$0/g,r.toString()).replace(/\$1/,i._.max.toString()):null):e.fail(n("Too many non-option arguments: got %s, maximum of %s","Too many non-option arguments: got %s, maximum of %s",r,r.toString(),i._.max.toString()))))},positionalCount:function(t,s){s<t&&e.fail(n("Not enough non-option arguments: got %s, need at least %s","Not enough non-option arguments: got %s, need at least %s",s,s+"",t+""))},requiredArguments:function(t,s){let i=null;for(const e of Object.keys(s))Object.prototype.hasOwnProperty.call(t,e)&&void 0!==t[e]||(i=i||{},i[e]=s[e]);if(i){const t=[];for(const e of Object.keys(i)){const s=i[e];s&&t.indexOf(s)<0&&t.push(s)}const s=t.length?`\n${t.join("\n")}`:"";e.fail(n("Missing required argument: %s","Missing required arguments: %s",Object.keys(i).length,Object.keys(i).join(", ")+s))}},unknownArguments:function(s,i,o,a,h=!0){var l;const c=t.getInternalMethods().getCommandInstance().getCommands(),f=[],d=t.getInternalMethods().getContext();if(Object.keys(s).forEach((e=>{H.includes(e)||Object.prototype.hasOwnProperty.call(o,e)||Object.prototype.hasOwnProperty.call(t.getInternalMethods().getParseContext(),e)||r.isValidAndSomeAliasIsNotNew(e,i)||f.push(e)})),h&&(d.commands.length>0||c.length>0||a)&&s._.slice(d.commands.length).forEach((t=>{c.includes(""+t)||f.push(""+t)})),h){const e=(null===(l=t.getDemandedCommands()._)||void 0===l?void 0:l.max)||0,i=d.commands.length+e;i<s._.length&&s._.slice(i).forEach((t=>{t=String(t),d.commands.includes(t)||f.includes(t)||f.push(t)}))}f.length&&e.fail(n("Unknown argument: %s","Unknown arguments: %s",f.length,f.map((t=>t.trim()?t:`"${t}"`)).join(", ")))},unknownCommands:function(s){const i=t.getInternalMethods().getCommandInstance().getCommands(),r=[],o=t.getInternalMethods().getContext();return(o.commands.length>0||i.length>0)&&s._.slice(o.commands.length).forEach((t=>{i.includes(""+t)||r.push(""+t)})),r.length>0&&(e.fail(n("Unknown command: %s","Unknown commands: %s",r.length,r.join(", "))),!0)},isValidAndSomeAliasIsNotNew:function(e,s){if(!Object.prototype.hasOwnProperty.call(s,e))return!1;const i=t.parsed.newAliases;return[e,...s[e]].some((t=>!Object.prototype.hasOwnProperty.call(i,t)||!i[e]))},limitedChoices:function(s){const n=t.getOptions(),r={};if(!Object.keys(n.choices).length)return;Object.keys(s).forEach((t=>{-1===H.indexOf(t)&&Object.prototype.hasOwnProperty.call(n.choices,t)&&[].concat(s[t]).forEach((e=>{-1===n.choices[t].indexOf(e)&&void 0!==e&&(r[t]=(r[t]||[]).concat(e))}))}));const o=Object.keys(r);if(!o.length)return;let a=i("Invalid values:");o.forEach((t=>{a+=`\n  ${i("Argument: %s, Given: %s, Choices: %s",t,e.stringifiedValues(r[t]),e.stringifiedValues(n.choices[t]))}`})),e.fail(a)}};let o={};function a(t,e){const s=Number(e);return"number"==typeof(e=isNaN(s)?e:s)?e=t._.length>=e:e.match(/^--no-.+/)?(e=e.match(/^--no-(.+)/)[1],e=!Object.prototype.hasOwnProperty.call(t,e)):e=Object.prototype.hasOwnProperty.call(t,e),e}r.implies=function(e,i){h("<string|object> [array|number|string]",[e,i],arguments.length),"object"==typeof e?Object.keys(e).forEach((t=>{r.implies(t,e[t])})):(t.global(e),o[e]||(o[e]=[]),Array.isArray(i)?i.forEach((t=>r.implies(e,t))):(d(i,void 0,s),o[e].push(i)))},r.getImplied=function(){return o},r.implications=function(t){const s=[];if(Object.keys(o).forEach((e=>{const i=e;(o[e]||[]).forEach((e=>{let n=i;const r=e;n=a(t,n),e=a(t,e),n&&!e&&s.push(` ${i} -> ${r}`)}))})),s.length){let t=`${i("Implications failed:")}\n`;s.forEach((e=>{t+=e})),e.fail(t)}};let l={};r.conflicts=function(e,s){h("<string|object> [array|string]",[e,s],arguments.length),"object"==typeof e?Object.keys(e).forEach((t=>{r.conflicts(t,e[t])})):(t.global(e),l[e]||(l[e]=[]),Array.isArray(s)?s.forEach((t=>r.conflicts(e,t))):l[e].push(s))},r.getConflicting=()=>l,r.conflicting=function(n){Object.keys(n).forEach((t=>{l[t]&&l[t].forEach((s=>{s&&void 0!==n[t]&&void 0!==n[s]&&e.fail(i("Arguments %s and %s are mutually exclusive",t,s))}))})),t.getInternalMethods().getParserConfiguration()["strip-dashed"]&&Object.keys(l).forEach((t=>{l[t].forEach((r=>{r&&void 0!==n[s.Parser.camelCase(t)]&&void 0!==n[s.Parser.camelCase(r)]&&e.fail(i("Arguments %s and %s are mutually exclusive",t,r))}))}))},r.recommendCommands=function(t,s){s=s.sort(((t,e)=>e.length-t.length));let n=null,r=1/0;for(let e,i=0;void 0!==(e=s[i]);i++){const s=N(t,e);s<=3&&s<r&&(r=s,n=e)}n&&e.fail(i("Did you mean %s?",n))},r.reset=function(t){return o=g(o,(e=>!t[e])),l=g(l,(e=>!t[e])),r};const c=[];return r.freeze=function(){c.push({implied:o,conflicting:l})},r.unfreeze=function(){const t=c.pop();d(t,void 0,s),({implied:o,conflicting:l}=t)},r}(this,v(this,pt,"f"),v(this,ct,"f")),"f"),O(this,z,v(this,z,"f")?v(this,z,"f").reset():function(t,e,s,i){return new _(t,e,s,i)}(v(this,pt,"f"),v(this,yt,"f"),v(this,K,"f"),v(this,ct,"f")),"f"),v(this,U,"f")||O(this,U,function(t,e,s,i){return new D(t,e,s,i)}(this,v(this,pt,"f"),v(this,z,"f"),v(this,ct,"f")),"f"),v(this,K,"f").reset(),O(this,F,null,"f"),O(this,tt,"","f"),O(this,V,null,"f"),O(this,J,!1,"f"),this.parsed=!1,this}[Kt](t,e){return v(this,ct,"f").path.relative(t,e)}[Jt](t,s,i,n=0,r=!1){let o=!!i||r;t=t||v(this,ht,"f"),v(this,et,"f").__=v(this,ct,"f").y18n.__,v(this,et,"f").configuration=this[Mt]();const a=!!v(this,et,"f").configuration["populate--"],h=Object.assign({},v(this,et,"f").configuration,{"populate--":!0}),l=v(this,ct,"f").Parser.detailed(t,Object.assign({},v(this,et,"f"),{configuration:{"parse-positional-numbers":!1,...h}})),c=Object.assign(l.argv,v(this,rt,"f"));let d;const u=l.aliases;let p=!1,g=!1;Object.keys(c).forEach((t=>{t===v(this,Z,"f")&&c[t]?p=!0:t===v(this,mt,"f")&&c[t]&&(g=!0)})),c.$0=this.$0,this.parsed=l,0===n&&v(this,pt,"f").clearCachedHelpMessage();try{if(this[kt](),s)return this[Bt](c,a,!!i,!1);if(v(this,Z,"f")){[v(this,Z,"f")].concat(u[v(this,Z,"f")]||[]).filter((t=>t.length>1)).includes(""+c._[c._.length-1])&&(c._.pop(),p=!0)}O(this,X,!1,"f");const h=v(this,z,"f").getCommands(),m=v(this,U,"f").completionKey in c,y=p||m||r;if(c._.length){if(h.length){let t;for(let e,s=n||0;void 0!==c._[s];s++){if(e=String(c._[s]),h.includes(e)&&e!==v(this,F,"f")){const t=v(this,z,"f").runCommand(e,this,l,s+1,r,p||g||r);return this[Bt](t,a,!!i,!1)}if(!t&&e!==v(this,F,"f")){t=e;break}}!v(this,z,"f").hasDefaultCommand()&&v(this,lt,"f")&&t&&!y&&v(this,yt,"f").recommendCommands(t,h)}v(this,F,"f")&&c._.includes(v(this,F,"f"))&&!m&&(v(this,T,"f")&&E(!0),this.showCompletionScript(),this.exit(0))}if(v(this,z,"f").hasDefaultCommand()&&!y){const t=v(this,z,"f").runCommand(null,this,l,0,r,p||g||r);return this[Bt](t,a,!!i,!1)}if(m){v(this,T,"f")&&E(!0);const s=(t=[].concat(t)).slice(t.indexOf(`--${v(this,U,"f").completionKey}`)+1);return v(this,U,"f").getCompletion(s,((t,s)=>{if(t)throw new e(t.message);(s||[]).forEach((t=>{v(this,Q,"f").log(t)})),this.exit(0)})),this[Bt](c,!a,!!i,!1)}if(v(this,J,"f")||(p?(v(this,T,"f")&&E(!0),o=!0,this.showHelp("log"),this.exit(0)):g&&(v(this,T,"f")&&E(!0),o=!0,v(this,pt,"f").showVersion("log"),this.exit(0))),!o&&v(this,et,"f").skipValidation.length>0&&(o=Object.keys(c).some((t=>v(this,et,"f").skipValidation.indexOf(t)>=0&&!0===c[t]))),!o){if(l.error)throw new e(l.error.message);if(!m){const t=this[Zt](u,{},l.error);i||(d=C(c,this,v(this,K,"f").getMiddleware(),!0)),d=this[zt](t,null!=d?d:c),f(d)&&!i&&(d=d.then((()=>C(c,this,v(this,K,"f").getMiddleware(),!1))))}}}catch(t){if(!(t instanceof e))throw t;v(this,pt,"f").fail(t.message,t)}return this[Bt](null!=d?d:c,a,!!i,!0)}[Zt](t,s,i,n){const r={...this.getDemandedOptions()};return o=>{if(i)throw new e(i.message);v(this,yt,"f").nonOptionCount(o),v(this,yt,"f").requiredArguments(o,r);let a=!1;v(this,dt,"f")&&(a=v(this,yt,"f").unknownCommands(o)),v(this,ft,"f")&&!a?v(this,yt,"f").unknownArguments(o,t,s,!!n):v(this,ut,"f")&&v(this,yt,"f").unknownArguments(o,t,{},!1,!1),v(this,yt,"f").limitedChoices(o),v(this,yt,"f").implications(o),v(this,yt,"f").conflicting(o)}}[Xt](){O(this,J,!0,"f")}[Qt](t){if("string"==typeof t)v(this,et,"f").key[t]=!0;else for(const e of t)v(this,et,"f").key[e]=!0}}var ee,se;const{readFileSync:ie}=__webpack_require__(/*! fs */ "fs"),{inspect:ne}=__webpack_require__(/*! util */ "util"),{resolve:re}=__webpack_require__(/*! path */ "path"),oe=__webpack_require__(/*! y18n */ "./node_modules/y18n/build/index.cjs"),ae=__webpack_require__(/*! yargs-parser */ "./node_modules/yargs-parser/build/index.cjs");var he,le={assert:{notStrictEqual:t.notStrictEqual,strictEqual:t.strictEqual},cliui:__webpack_require__(/*! cliui */ "./node_modules/cliui/build/index.cjs"),findUp:__webpack_require__(/*! escalade/sync */ "./node_modules/escalade/sync/index.js"),getEnv:t=>process.env[t],getCallerFile:__webpack_require__(/*! get-caller-file */ "./node_modules/get-caller-file/index.js"),getProcessArgvBin:y,inspect:ne,mainFilename:null!==(se=null===(ee= false||void 0===__webpack_require__("./node_modules/yargs/build sync recursive")?void 0:__webpack_require__.c[__webpack_require__.s])||void 0===ee?void 0:ee.filename)&&void 0!==se?se:process.cwd(),Parser:ae,path:__webpack_require__(/*! path */ "path"),process:{argv:()=>process.argv,cwd:process.cwd,emitWarning:(t,e)=>process.emitWarning(t,e),execPath:()=>process.execPath,exit:t=>{process.exit(t)},nextTick:process.nextTick,stdColumns:void 0!==process.stdout.columns?process.stdout.columns:null},readFileSync:ie,require:__webpack_require__("./node_modules/yargs/build sync recursive"),requireDirectory:__webpack_require__(/*! require-directory */ "./node_modules/require-directory/index.js"),stringWidth:__webpack_require__(/*! string-width */ "./node_modules/string-width/index.js"),y18n:oe({directory:re(__dirname,"../locales"),updateFiles:!1})};const ce=(null===(he=null===process||void 0===process?void 0:process.env)||void 0===he?void 0:he.YARGS_MIN_NODE_VERSION)?Number(process.env.YARGS_MIN_NODE_VERSION):12;if(process&&process.version){if(Number(process.version.match(/v([^.]+)/)[1])<ce)throw Error(`yargs supports a minimum Node.js version of ${ce}. Read our version support policy: https://github.com/yargs/yargs#supported-nodejs-versions`)}const fe=__webpack_require__(/*! yargs-parser */ "./node_modules/yargs-parser/build/index.cjs");var de,ue={applyExtends:n,cjsPlatformShim:le,Yargs:(de=le,(t=[],e=de.process.cwd(),s)=>{const i=new te(t,e,s,de);return Object.defineProperty(i,"argv",{get:()=>i.parse(),enumerable:!0}),i.help(),i.version(),i}),argsert:h,isPromise:f,objFilter:g,parseCommand:o,Parser:fe,processArgv:b,YError:e};module.exports=ue;


/***/ }),

/***/ "./node_modules/yargs/index.cjs":
/*!**************************************!*\
  !*** ./node_modules/yargs/index.cjs ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// classic singleton yargs API, to use yargs
// without running as a singleton do:
// require('yargs/yargs')(process.argv.slice(2))
const {Yargs, processArgv} = __webpack_require__(/*! ./build/index.cjs */ "./node_modules/yargs/build/index.cjs");

Argv(processArgv.hideBin(process.argv));

module.exports = Argv;

function Argv(processArgs, cwd) {
  const argv = Yargs(processArgs, cwd, __webpack_require__("./node_modules/yargs sync recursive"));
  singletonify(argv);
  // TODO(bcoe): warn if argv.parse() or argv.argv is used directly.
  return argv;
}

function defineGetter(obj, key, getter) {
  Object.defineProperty(obj, key, {
    configurable: true,
    enumerable: true,
    get: getter,
  });
}
function lookupGetter(obj, key) {
  const desc = Object.getOwnPropertyDescriptor(obj, key);
  if (typeof desc !== 'undefined') {
    return desc.get;
  }
}

/*  Hack an instance of Argv with process.argv into Argv
    so people can do
    require('yargs')(['--beeble=1','-z','zizzle']).argv
    to parse a list of args and
    require('yargs').argv
    to get a parsed version of process.argv.
*/
function singletonify(inst) {
  [
    ...Object.keys(inst),
    ...Object.getOwnPropertyNames(inst.constructor.prototype),
  ].forEach(key => {
    if (key === 'argv') {
      defineGetter(Argv, key, lookupGetter(inst, key));
    } else if (typeof inst[key] === 'function') {
      Argv[key] = inst[key].bind(inst);
    } else {
      defineGetter(Argv, '$0', () => inst.$0);
      defineGetter(Argv, 'parsed', () => inst.parsed);
    }
  });
}


/***/ }),

/***/ "./node_modules/binary-extensions/binary-extensions.json":
/*!***************************************************************!*\
  !*** ./node_modules/binary-extensions/binary-extensions.json ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('["3dm","3ds","3g2","3gp","7z","a","aac","adp","afdesign","afphoto","afpub","ai","aif","aiff","alz","ape","apk","appimage","ar","arj","asf","au","avi","bak","baml","bh","bin","bk","bmp","btif","bz2","bzip2","cab","caf","cgm","class","cmx","cpio","cr2","cur","dat","dcm","deb","dex","djvu","dll","dmg","dng","doc","docm","docx","dot","dotm","dra","DS_Store","dsk","dts","dtshd","dvb","dwg","dxf","ecelp4800","ecelp7470","ecelp9600","egg","eol","eot","epub","exe","f4v","fbs","fh","fla","flac","flatpak","fli","flv","fpx","fst","fvt","g3","gh","gif","graffle","gz","gzip","h261","h263","h264","icns","ico","ief","img","ipa","iso","jar","jpeg","jpg","jpgv","jpm","jxr","key","ktx","lha","lib","lvp","lz","lzh","lzma","lzo","m3u","m4a","m4v","mar","mdi","mht","mid","midi","mj2","mka","mkv","mmr","mng","mobi","mov","movie","mp3","mp4","mp4a","mpeg","mpg","mpga","mxu","nef","npx","numbers","nupkg","o","odp","ods","odt","oga","ogg","ogv","otf","ott","pages","pbm","pcx","pdb","pdf","pea","pgm","pic","png","pnm","pot","potm","potx","ppa","ppam","ppm","pps","ppsm","ppsx","ppt","pptm","pptx","psd","pya","pyc","pyo","pyv","qt","rar","ras","raw","resources","rgb","rip","rlc","rmf","rmvb","rpm","rtf","rz","s3m","s7z","scpt","sgi","shar","snap","sil","sketch","slk","smv","snk","so","stl","suo","sub","swf","tar","tbz","tbz2","tga","tgz","thmx","tif","tiff","tlz","ttc","ttf","txz","udf","uvh","uvi","uvm","uvp","uvs","uvu","viv","vob","war","wav","wax","wbmp","wdp","weba","webm","webp","whl","wim","wm","wma","wmv","wmx","woff","woff2","wrm","wvx","xbm","xif","xla","xlam","xls","xlsb","xlsm","xlsx","xlt","xltm","xltx","xm","xmind","xpi","xpm","xwd","xz","z","zip","zipx"]');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = __webpack_module_cache__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// module cache are used so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	var __webpack_exports__ = __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;
//# sourceMappingURL=index.js.map