exports.id=624,exports.ids=[624],exports.modules={4416:(e,n,t)=>{t.d(n,{GitCodeLensProvider:()=>GitCodeLensProvider});var o=t(1398),i=t(2434),s=t(3807),a=t(1391),r=t(2124),l=t(7899),c=t(4832),m=t(560),u=t(4026),d=t(3916),g=t(3446),h=t(3166),y=t(2471),b=(e,n)=>(n=Symbol[e])?n:Symbol.for("Symbol."+e),p=e=>{throw TypeError(e)},C=(e,n,t)=>{if(null!=n){var o,i;"object"!=typeof n&&"function"!=typeof n&&p("Object expected"),t&&(o=n[b("asyncDispose")]),void 0===o&&(o=n[b("dispose")],t&&(i=o)),"function"!=typeof o&&p("Object not disposable"),i&&(o=function(){try{i.call(this)}catch(e){return Promise.reject(e)}}),e.push([t,o,n])}else t&&e.push([t]);return n},f=(e,n,t)=>{var o="function"==typeof SuppressedError?SuppressedError:function(e,n,t,o){return(o=Error(t)).name="SuppressedError",o.error=e,o.suppressed=n,o},i=e=>n=t?new o(e,n,"An error was suppressed during disposal"):(t=!0,e),s=o=>{for(;o=e.pop();)try{var a=o[1]&&o[1].call(o[2]);if(o[0])return Promise.resolve(a).then(s,e=>(i(e),s()))}catch(e){i(e)}if(t)throw n};return s()};let GitRecentChangeCodeLens=class GitRecentChangeCodeLens extends o.CodeLens{constructor(e,n,t,o,i,s,a,r,l,c){super(r,c),this.languageId=e,this.symbol=n,this.uri=t,this.dateFormat=o,this.blame=i,this.blameRange=s,this.isFullRange=a,this.desiredCommand=l}getBlame(){return this.blame?.()}};let GitAuthorsCodeLens=class GitAuthorsCodeLens extends o.CodeLens{constructor(e,n,t,o,i,s,a,r){super(a),this.languageId=e,this.symbol=n,this.uri=t,this.blame=o,this.blameRange=i,this.isFullRange=s,this.desiredCommand=r}getBlame(){return this.blame()}};let GitCodeLensProvider=class GitCodeLensProvider{constructor(e){this.container=e}static selector=[...(0,u.Tj)(s.MV,e=>({scheme:e}))];_onDidChangeCodeLenses=new o.EventEmitter;get onDidChangeCodeLenses(){return this._onDidChangeCodeLenses.event}reset(){this._onDidChangeCodeLenses.fire()}async provideCodeLenses(e,n){var t=[];try{let i,s;if(e.isDirty&&(0,y.QK)(e.uri))return[];let a=C(t,(0,g.bP)(`${(0,d.zu)(this)}.provideCodeLenses(${d.Vy.toLoggable(e)})`,!1)),r=await this.container.documentTracker.getOrAdd(e),u=await r.getStatus();if(!u.blameable)return[];let h=!1;e.isDirty&&!u.dirtyIdle&&(h=!0);let b=c.H.get("codeLens",e),p={...b.scopesByLanguage?.find(n=>n.language?.toLowerCase()===e.languageId)};null==p&&(p={language:e.languageId}),null==p.scopes&&(p.scopes=b.scopes),null==p.symbolScopes&&(p.symbolScopes=b.symbolScopes),p.symbolScopes=null!=p.symbolScopes?p.symbolScopes=p.symbolScopes.map(e=>e.toLowerCase()):[];let f=[],S=r.uri;if(h){if(1!==p.scopes.length||!p.scopes.includes("document")){let n;if([n,s]=await Promise.all([this.container.git.isTracked(S),(0,l.S4)("vscode.executeDocumentSymbolProvider",e.uri)]),!n)return f}}else if(n.isCancellationRequested||(1===p.scopes.length&&p.scopes.includes("document")?i=await this.container.git.getBlame(S,e):[i,s]=await Promise.all([this.container.git.getBlame(S,e),(0,l.S4)("vscode.executeDocumentSymbolProvider",e.uri)]),null==i||i?.lines.length===0))return f;if(n.isCancellationRequested)return f;let v=(0,m.Oo)(()=>e.validateRange(new o.Range(0,0,1e6,1e6))),w=h?{command:void 0,title:this.getDirtyTitle(b)}:void 0;if(void 0!==s)for(let n of(d.Vy.log(a,`${s.length} symbol(s) found`),s))this.provideCodeLens(f,e,n,p,v,i,S,b,h,w);if((p.scopes.includes("document")||p.symbolScopes.includes("file"))&&!p.symbolScopes.includes("!file")&&null==f.find(e=>0===e.range.start.line&&0===e.range.end.line)){let n;let t=v();if(h||b.recentChange.enabled){h||(n=(0,m.Oo)(()=>this.container.git.getBlameRange(i,S,t)));let s=new o.SymbolInformation(S.fileName,o.SymbolKind.File,"",new o.Location(S.documentUri(),new o.Range(0,0,0,t.start.character)));f.push(new GitRecentChangeCodeLens(e.languageId,s,S,b.dateFormat,n,t,!0,A(s),b.recentChange.command,w))}if(!h&&b.authors.enabled){void 0===n&&(n=(0,m.Oo)(()=>this.container.git.getBlameRange(i,S,t)));let s=new o.SymbolInformation(S.fileName,o.SymbolKind.File,"",new o.Location(S.documentUri(),new o.Range(0,1,0,t.start.character)));f.push(new GitAuthorsCodeLens(e.languageId,s,S,n,t,!0,A(s),b.authors.command))}}return f}catch(e){var i=e,s=!0}finally{f(t,i,s)}}getValidateSymbolRange(e,n,t,i){let s,a=!1,r=o.SymbolKind[e.kind].toLowerCase();switch(e.kind){case o.SymbolKind.File:(n.scopes.includes("containers")||n.symbolScopes.includes(r))&&(a=!n.symbolScopes.includes(`!${r}`)),a&&(s=t());break;case o.SymbolKind.Package:(n.scopes.includes("containers")||n.symbolScopes.includes(r))&&(a=!n.symbolScopes.includes(`!${r}`)),a&&0===(s=A(e)).start.line&&0===s.end.line&&(s=t());break;case o.SymbolKind.Class:case o.SymbolKind.Interface:case o.SymbolKind.Module:case o.SymbolKind.Namespace:case o.SymbolKind.Struct:(n.scopes.includes("containers")||n.symbolScopes.includes(r))&&(s=A(e),a=!n.symbolScopes.includes(`!${r}`)&&(i||!s.isSingleLine));break;case o.SymbolKind.Constructor:case o.SymbolKind.Enum:case o.SymbolKind.Function:case o.SymbolKind.Method:case o.SymbolKind.Property:(n.scopes.includes("blocks")||n.symbolScopes.includes(r))&&(s=A(e),a=!n.symbolScopes.includes(`!${r}`)&&(i||!s.isSingleLine));break;case o.SymbolKind.String:(n.symbolScopes.includes(r)||"markdown"===n.language&&n.scopes.includes("containers"))&&(s=A(e),a=!n.symbolScopes.includes(`!${r}`)&&(i||!s.isSingleLine));break;default:n.symbolScopes.includes(r)&&(s=A(e),a=!n.symbolScopes.includes(`!${r}`)&&(i||!s.isSingleLine))}return a?s??A(e):void 0}provideCodeLens(e,n,t,i,s,a,r,l,c,u){try{let d;let g=this.getValidateSymbolRange(t,i,s,l.includeSingleLineSymbols);if(void 0===g)return;let h=n.lineAt(A(t).start);if(e.length&&e[e.length-1].range.start.line===h.lineNumber)return;let y=0;if((c||l.recentChange.enabled)&&(c||(d=(0,m.Oo)(()=>this.container.git.getBlameRange(a,r,g))),e.push(new GitRecentChangeCodeLens(n.languageId,t,r,l.dateFormat,d,g,!1,h.range.with(new o.Position(h.range.start.line,y)),l.recentChange.command,u)),y++),l.authors.enabled){let i=!g.isSingleLine;if(!i&&"csharp"===n.languageId)switch(t.kind){case o.SymbolKind.File:break;case o.SymbolKind.Package:case o.SymbolKind.Module:case o.SymbolKind.Namespace:case o.SymbolKind.Class:case o.SymbolKind.Interface:case o.SymbolKind.Constructor:case o.SymbolKind.Method:case o.SymbolKind.Function:case o.SymbolKind.Enum:i=!0}i&&!c&&(void 0===d&&(d=(0,m.Oo)(()=>this.container.git.getBlameRange(a,r,g))),e.push(new GitAuthorsCodeLens(n.languageId,t,r,d,g,!1,h.range.with(new o.Position(h.range.start.line,y)),l.authors.command)))}}finally{if(O(t))for(let o of t.children)this.provideCodeLens(e,n,o,i,s,a,r,l,c,u)}}resolveCodeLens(e,n){return e instanceof GitRecentChangeCodeLens?this.resolveGitRecentChangeCodeLens(e,n):e instanceof GitAuthorsCodeLens?this.resolveGitAuthorsCodeLens(e,n):Promise.reject(void 0)}resolveGitRecentChangeCodeLens(e,n){let t=e.getBlame();if(null==t)return T("Unknown, (Blame failed)",e);let s=(0,u.$1)(t.commits.values());if(null==s)return T("Unknown, (Blame failed)",e);let a=`${s.author.name}, ${null==e.dateFormat?s.formattedDate:s.formatDate(e.dateFormat)}`;if(c.H.get("debug")&&(a+=` [${e.languageId}: ${o.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Commit (${s.shortSha})]`),!1===e.desiredCommand)return T(a,e);switch(e.desiredCommand){case i.Vg.CopyRemoteCommitUrl:return v(a,e,s,!0);case i.Vg.CopyRemoteFileUrl:return w(a,e,s,!0);case i.Vg.DiffWithPrevious:return S(a,e,s);case i.Vg.OpenCommitOnRemote:return v(a,e,s);case i.Vg.OpenFileOnRemote:return w(a,e,s);case i.Vg.RevealCommitInView:return L(a,e,s);case i.Vg.ShowCommitsInView:return V(a,e,t,s);case i.Vg.ShowQuickCommitDetails:return F(a,e,s);case i.Vg.ShowQuickCommitFileDetails:return R(a,e,s);case i.Vg.ShowQuickCurrentBranchHistory:return $(a,e);case i.Vg.ShowQuickFileHistory:return U(a,e);case i.Vg.ToggleFileBlame:return k(a,e);case i.Vg.ToggleFileChanges:return K(a,e,s);case i.Vg.ToggleFileChangesOnly:return K(a,e,s,!0);case i.Vg.ToggleFileHeatmap:return P(a,e);default:return e}}resolveGitAuthorsCodeLens(e,n){let t=e.getBlame();if(null==t)return T("? authors (Blame failed)",e);let s=t.authors.size,a=u.$1(t.authors.values())?.name??"Unknown",r=s>1?` and ${(0,h.td)("one other",s-1,{only:!0,plural:"others"})}`:"",l=`${(0,h.td)("author",s,{zero:"?"})} (${a}${r})`;if(c.H.get("debug")&&(l+=` [${e.languageId}: ${o.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Authors (${(0,u.fj)((0,u.Tj)(t.authors.values(),e=>e.name),", ")})]`),!1===e.desiredCommand)return T(l,e);let m=(0,u.I6)(t.commits.values(),e=>e.author.name===a)??(0,u.$1)(t.commits.values());if(null==m)return T(l,e);switch(e.desiredCommand){case i.Vg.CopyRemoteCommitUrl:return v(l,e,m,!0);case i.Vg.CopyRemoteFileUrl:return w(l,e,m,!0);case i.Vg.DiffWithPrevious:return S(l,e,m);case i.Vg.OpenCommitOnRemote:return v(l,e,m);case i.Vg.OpenFileOnRemote:return w(l,e,m);case i.Vg.RevealCommitInView:return L(l,e,m);case i.Vg.ShowCommitsInView:return V(l,e,t);case i.Vg.ShowQuickCommitDetails:return F(l,e,m);case i.Vg.ShowQuickCommitFileDetails:return R(l,e,m);case i.Vg.ShowQuickCurrentBranchHistory:return $(l,e);case i.Vg.ShowQuickFileHistory:return U(l,e);case i.Vg.ToggleFileBlame:return k(l,e);case i.Vg.ToggleFileChanges:return K(l,e,m);case i.Vg.ToggleFileChangesOnly:return K(l,e,m,!0);case i.Vg.ToggleFileHeatmap:return P(l,e);default:return e}}getDirtyTitle(e){return e.recentChange.enabled&&e.authors.enabled?c.H.get("strings.codeLens.unsavedChanges.recentChangeAndAuthors"):e.recentChange.enabled?c.H.get("strings.codeLens.unsavedChanges.recentChangeOnly"):c.H.get("strings.codeLens.unsavedChanges.authorsOnly")}};function S(e,n,t){return n.command=(0,l.AU)({title:e,command:a.T.DiffWithPrevious,arguments:[void 0,{commit:t,uri:n.uri.toFileUri()}]}),n}function v(e,n,t,o=!1){return n.command=(0,l.AU)({title:e,command:a.T.OpenOnRemote,arguments:[{resource:{type:r.J.Commit,sha:t.sha},repoPath:t.repoPath,clipboard:o}]}),n}function w(e,n,t,o=!1){return n.command=(0,l.AU)({title:e,command:a.T.OpenOnRemote,arguments:[{resource:{type:r.J.Revision,fileName:t.file?.path??"",sha:t.sha},repoPath:t.repoPath,clipboard:o}]}),n}function L(e,n,t){return n.command=(0,l.AU)({title:e,command:t?.isUncommitted?"":i.Vg.RevealCommitInView,arguments:[n.uri.toFileUri(),{commit:t,sha:void 0===t?void 0:t.sha}]}),n}function V(e,n,t,o){let i;return i=void 0===o?[...(0,u.x1)(t.commits.values(),e=>e.isUncommitted?void 0:e.ref)]:[o.ref],n.command=(0,l.AU)({title:e,command:0===i.length?"":a.T.ShowCommitsInView,arguments:[{repoPath:t.repoPath,refs:i}]}),n}function F(e,n,t){return n.command=(0,l.AU)({title:e,command:t?.isUncommitted?"":i.Vg.ShowQuickCommitDetails,arguments:[n.uri.toFileUri(),{commit:t,sha:void 0===t?void 0:t.sha}]}),n}function R(e,n,t){return n.command=(0,l.AU)({title:e,command:t?.isUncommitted?"":i.Vg.ShowQuickCommitFileDetails,arguments:[n.uri.toFileUri(),{commit:t,sha:void 0===t?void 0:t.sha}]}),n}function $(e,n){return n.command=(0,l.AU)({title:e,command:i.Vg.ShowQuickCurrentBranchHistory,arguments:[n.uri.toFileUri()]}),n}function U(e,n){return n.command=(0,l.AU)({title:e,command:i.Vg.ShowQuickFileHistory,arguments:[n.uri.toFileUri(),{range:n.isFullRange?void 0:n.blameRange}]}),n}function k(e,n){return n.command=(0,l.AU)({title:e,command:a.T.ToggleFileBlame,arguments:[n.uri.toFileUri()]}),n}function K(e,n,t,o){return n.command=(0,l.AU)({title:e,command:a.T.ToggleFileChanges,arguments:[n.uri.toFileUri(),{type:"changes",context:{sha:t.sha,only:o,selection:!1}}]}),n}function P(e,n){return n.command=(0,l.AU)({title:e,command:a.T.ToggleFileHeatmap,arguments:[n.uri.toFileUri()]}),n}function T(e,n){return n.command={title:e,command:""},n}function A(e){return O(e)?e.range:e.location.range}function O(e){return(0,m.is)(e,"children")}}};