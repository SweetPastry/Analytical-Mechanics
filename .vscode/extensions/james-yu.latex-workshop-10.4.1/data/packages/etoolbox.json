{
  "deps": [],
  "macros": [
    {
      "name": "newrobustcmd",
      "arg": {
        "format": "{}{}",
        "snippet": "newrobustcmd{${1:cmd}}{${2:def}}"
      }
    },
    {
      "name": "newrobustcmd",
      "arg": {
        "format": "{}[]{}",
        "snippet": "newrobustcmd{${1:cmd}}[${3:args}]{${2:def}}"
      }
    },
    {
      "name": "newrobustcmd",
      "arg": {
        "format": "{}[][]{}",
        "snippet": "newrobustcmd{${1:cmd}}[${3:args}][${4:default}]{${2:def}}"
      }
    },
    {
      "name": "newrobustcmd*",
      "arg": {
        "format": "{}{}",
        "snippet": "newrobustcmd*{${1:cmd}}{${2:def}}"
      }
    },
    {
      "name": "newrobustcmd*",
      "arg": {
        "format": "{}[]{}",
        "snippet": "newrobustcmd*{${1:cmd}}[${3:args}]{${2:def}}"
      }
    },
    {
      "name": "newrobustcmd*",
      "arg": {
        "format": "{}[][]{}",
        "snippet": "newrobustcmd*{${1:cmd}}[${3:args}][${4:default}]{${2:def}}"
      }
    },
    {
      "name": "renewrobustcmd",
      "arg": {
        "format": "{}{}",
        "snippet": "renewrobustcmd{${1:cmd}}{${2:def}}"
      }
    },
    {
      "name": "renewrobustcmd",
      "arg": {
        "format": "{}[]{}",
        "snippet": "renewrobustcmd{${1:cmd}}[${3:args}]{${2:def}}"
      }
    },
    {
      "name": "renewrobustcmd",
      "arg": {
        "format": "{}[][]{}",
        "snippet": "renewrobustcmd{${1:cmd}}[${3:args}][${4:default}]{${2:def}}"
      }
    },
    {
      "name": "renewrobustcmd*",
      "arg": {
        "format": "{}{}",
        "snippet": "renewrobustcmd*{${1:cmd}}{${2:def}}"
      }
    },
    {
      "name": "renewrobustcmd*",
      "arg": {
        "format": "{}[]{}",
        "snippet": "renewrobustcmd*{${1:cmd}}[${3:args}]{${2:def}}"
      }
    },
    {
      "name": "renewrobustcmd*",
      "arg": {
        "format": "{}[][]{}",
        "snippet": "renewrobustcmd*{${1:cmd}}[${3:args}][${4:default}]{${2:def}}"
      }
    },
    {
      "name": "providerobustcmd",
      "arg": {
        "format": "{}{}",
        "snippet": "providerobustcmd{${1:cmd}}{${2:def}}"
      }
    },
    {
      "name": "providerobustcmd",
      "arg": {
        "format": "{}[]{}",
        "snippet": "providerobustcmd{${1:cmd}}[${3:args}]{${2:def}}"
      }
    },
    {
      "name": "providerobustcmd",
      "arg": {
        "format": "{}[][]{}",
        "snippet": "providerobustcmd{${1:cmd}}[${3:args}][${4:default}]{${2:def}}"
      }
    },
    {
      "name": "providerobustcmd*",
      "arg": {
        "format": "{}{}",
        "snippet": "providerobustcmd*{${1:cmd}}{${2:def}}"
      }
    },
    {
      "name": "providerobustcmd*",
      "arg": {
        "format": "{}[]{}",
        "snippet": "providerobustcmd*{${1:cmd}}[${3:args}]{${2:def}}"
      }
    },
    {
      "name": "providerobustcmd*",
      "arg": {
        "format": "{}[][]{}",
        "snippet": "providerobustcmd*{${1:cmd}}[${3:args}][${4:default}]{${2:def}}"
      }
    },
    {
      "name": "robustify",
      "arg": {
        "format": "{}",
        "snippet": "robustify{${1:command}}"
      }
    },
    {
      "name": "protecting",
      "arg": {
        "format": "{}",
        "snippet": "protecting{${1:code}}"
      }
    },
    {
      "name": "defcounter",
      "arg": {
        "format": "{}{}",
        "snippet": "defcounter{${1:counter}}{${2:integer expression}}"
      }
    },
    {
      "name": "deflength",
      "arg": {
        "format": "{}{}",
        "snippet": "deflength{${1:length%cmd}}{${2:glue expression}}"
      }
    },
    {
      "name": "AfterPreamble",
      "arg": {
        "format": "{}",
        "snippet": "AfterPreamble{${1:code}}"
      }
    },
    {
      "name": "AtEndPreamble",
      "arg": {
        "format": "{}",
        "snippet": "AtEndPreamble{${1:code}}"
      }
    },
    {
      "name": "AfterEndPreamble",
      "arg": {
        "format": "{}",
        "snippet": "AfterEndPreamble{${1:code}}"
      }
    },
    {
      "name": "AfterEndDocument",
      "arg": {
        "format": "{}",
        "snippet": "AfterEndDocument{${1:code}}"
      }
    },
    {
      "name": "AtBeginEnvironment",
      "arg": {
        "format": "{}{}",
        "snippet": "AtBeginEnvironment{${1:environment}}{${2:code}}"
      }
    },
    {
      "name": "AtEndEnvironment",
      "arg": {
        "format": "{}{}",
        "snippet": "AtEndEnvironment{${1:environment}}{${2:code}}"
      }
    },
    {
      "name": "AfterEndEnvironment",
      "arg": {
        "format": "{}{}",
        "snippet": "AfterEndEnvironment{${1:environment}}{${2:code}}"
      }
    },
    {
      "name": "BeforeBeginEnvironment",
      "arg": {
        "format": "{}{}",
        "snippet": "BeforeBeginEnvironment{${1:environment}}{${2:code}}"
      }
    },
    {
      "name": "cslet",
      "arg": {
        "format": "{}{}",
        "snippet": "cslet{${1:csname}}{${2:command}}"
      }
    },
    {
      "name": "letcs",
      "arg": {
        "format": "{}{}",
        "snippet": "letcs{${1:command}}{${2:csname}}"
      }
    },
    {
      "name": "csletcs",
      "arg": {
        "format": "{}{}",
        "snippet": "csletcs{${1:csname}}{${2:csname}}"
      }
    },
    {
      "name": "csuse",
      "arg": {
        "format": "{}",
        "snippet": "csuse{${1:csname}}"
      }
    },
    {
      "name": "undef",
      "arg": {
        "format": "{}",
        "snippet": "undef{${1:command}}"
      }
    },
    {
      "name": "gundef",
      "arg": {
        "format": "{}",
        "snippet": "gundef{${1:command}}"
      }
    },
    {
      "name": "csundef",
      "arg": {
        "format": "{}",
        "snippet": "csundef{${1:csname}}"
      }
    },
    {
      "name": "csgundef",
      "arg": {
        "format": "{}",
        "snippet": "csgundef{${1:csname}}"
      }
    },
    {
      "name": "csmeaning",
      "arg": {
        "format": "{}",
        "snippet": "csmeaning{${1:csname}}"
      }
    },
    {
      "name": "csshow",
      "arg": {
        "format": "{}",
        "snippet": "csshow{${1:csname}}"
      }
    },
    {
      "name": "numdef",
      "arg": {
        "format": "{}{}",
        "snippet": "numdef{${1:command}}{${2:integer expression}}"
      }
    },
    {
      "name": "numgdef",
      "arg": {
        "format": "{}{}",
        "snippet": "numgdef{${1:command}}{${2:integer expression}}"
      }
    },
    {
      "name": "csnumdef",
      "arg": {
        "format": "{}{}",
        "snippet": "csnumdef{${1:csname}}{${2:integer expression}}"
      }
    },
    {
      "name": "csnumgdef",
      "arg": {
        "format": "{}{}",
        "snippet": "csnumgdef{${1:csname}}{${2:integer expression}}"
      }
    },
    {
      "name": "dimdef",
      "arg": {
        "format": "{}{}",
        "snippet": "dimdef{${1:command}}{${2:dimen expression}}"
      }
    },
    {
      "name": "dimgdef",
      "arg": {
        "format": "{}{}",
        "snippet": "dimgdef{${1:command}}{${2:dimen expression}}"
      }
    },
    {
      "name": "csdimdef",
      "arg": {
        "format": "{}{}",
        "snippet": "csdimdef{${1:csname}}{${2:dimen expression}}"
      }
    },
    {
      "name": "csdimgdef",
      "arg": {
        "format": "{}{}",
        "snippet": "csdimgdef{${1:csname}}{${2:dimen expression}}"
      }
    },
    {
      "name": "gluedef",
      "arg": {
        "format": "{}{}",
        "snippet": "gluedef{${1:command}}{${2:glue expression}}"
      }
    },
    {
      "name": "gluegdef",
      "arg": {
        "format": "{}{}",
        "snippet": "gluegdef{${1:command}}{${2:glue expression}}"
      }
    },
    {
      "name": "csgluedef",
      "arg": {
        "format": "{}{}",
        "snippet": "csgluedef{${1:csname}}{${2:glue expression}}"
      }
    },
    {
      "name": "csgluegdef",
      "arg": {
        "format": "{}{}",
        "snippet": "csgluegdef{${1:csname}}{${2:glue expression}}"
      }
    },
    {
      "name": "mudef",
      "arg": {
        "format": "{}{}",
        "snippet": "mudef{${1:command}}{${2:muglue expression}}"
      }
    },
    {
      "name": "mugdef",
      "arg": {
        "format": "{}{}",
        "snippet": "mugdef{${1:command}}{${2:muglue expression}}"
      }
    },
    {
      "name": "csmudef",
      "arg": {
        "format": "{}{}",
        "snippet": "csmudef{${1:csname}}{${2:muglue expression}}"
      }
    },
    {
      "name": "csmugdef",
      "arg": {
        "format": "{}{}",
        "snippet": "csmugdef{${1:csname}}{${2:muglue expression}}"
      }
    },
    {
      "name": "expandonce",
      "arg": {
        "format": "{}",
        "snippet": "expandonce{${1:command}}"
      }
    },
    {
      "name": "csexpandonce",
      "arg": {
        "format": "{}",
        "snippet": "csexpandonce{${1:csname}}"
      }
    },
    {
      "name": "appto",
      "arg": {
        "format": "{}{}",
        "snippet": "appto{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "gappto",
      "arg": {
        "format": "{}{}",
        "snippet": "gappto{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "eappto",
      "arg": {
        "format": "{}{}",
        "snippet": "eappto{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "xappto",
      "arg": {
        "format": "{}{}",
        "snippet": "xappto{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "csappto",
      "arg": {
        "format": "{}{}",
        "snippet": "csappto{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "csgappto",
      "arg": {
        "format": "{}{}",
        "snippet": "csgappto{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "cseappto",
      "arg": {
        "format": "{}{}",
        "snippet": "cseappto{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "csxappto",
      "arg": {
        "format": "{}{}",
        "snippet": "csxappto{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "preto",
      "arg": {
        "format": "{}{}",
        "snippet": "preto{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "gpreto",
      "arg": {
        "format": "{}{}",
        "snippet": "gpreto{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "epreto",
      "arg": {
        "format": "{}{}",
        "snippet": "epreto{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "xpreto",
      "arg": {
        "format": "{}{}",
        "snippet": "xpreto{${1:hook%cmd}}{${2:code}}"
      }
    },
    {
      "name": "cspreto",
      "arg": {
        "format": "{}{}",
        "snippet": "cspreto{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "csgpreto",
      "arg": {
        "format": "{}{}",
        "snippet": "csgpreto{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "csepreto",
      "arg": {
        "format": "{}{}",
        "snippet": "csepreto{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "csxpreto",
      "arg": {
        "format": "{}{}",
        "snippet": "csxpreto{${1:csname}}{${2:code}}"
      }
    },
    {
      "name": "patchcmd",
      "arg": {
        "format": "{}{}{}{}{}",
        "snippet": "patchcmd{${1:command}}{${2:search}}{${3:replace}}{${4:success}}{${5:failure}}"
      }
    },
    {
      "name": "patchcmd",
      "arg": {
        "format": "[]{}{}{}{}{}",
        "snippet": "patchcmd[${6:prefix}]{${1:command}}{${2:search}}{${3:replace}}{${4:success}}{${5:failure}}"
      }
    },
    {
      "name": "ifpatchable",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifpatchable{${1:command}}{${2:search}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifpatchable*",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifpatchable*{${1:command}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "apptocmd",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "apptocmd{${1:command}}{${2:code}}{${3:success}}{${4:failure}}"
      }
    },
    {
      "name": "pretocmd",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "pretocmd{${1:command}}{${2:code}}{${3:success}}{${4:failure}}"
      }
    },
    {
      "name": "tracingpatches"
    },
    {
      "name": "newbool",
      "arg": {
        "format": "{}",
        "snippet": "newbool{${1:bool name}}"
      }
    },
    {
      "name": "providebool",
      "arg": {
        "format": "{}",
        "snippet": "providebool{${1:bool name}}"
      }
    },
    {
      "name": "booltrue",
      "arg": {
        "format": "{}",
        "snippet": "booltrue{${1:bool name}}"
      }
    },
    {
      "name": "boolfalse",
      "arg": {
        "format": "{}",
        "snippet": "boolfalse{${1:bool name}}"
      }
    },
    {
      "name": "setbool",
      "arg": {
        "format": "{}{}",
        "snippet": "setbool{${1:bool name}}{${2:true|false}}"
      }
    },
    {
      "name": "ifbool",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifbool{${1:bool name}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "notbool",
      "arg": {
        "format": "{}{}{}",
        "snippet": "notbool{${1:bool name}}{${2:not true}}{${3:not false}}"
      }
    },
    {
      "name": "newtoggle",
      "arg": {
        "format": "{}",
        "snippet": "newtoggle{${1:toggle name}}"
      }
    },
    {
      "name": "providetoggle",
      "arg": {
        "format": "{}",
        "snippet": "providetoggle{${1:toggle name}}"
      }
    },
    {
      "name": "toggletrue",
      "arg": {
        "format": "{}",
        "snippet": "toggletrue{${1:toggle name}}"
      }
    },
    {
      "name": "togglefalse",
      "arg": {
        "format": "{}",
        "snippet": "togglefalse{${1:toggle name}}"
      }
    },
    {
      "name": "settoggle",
      "arg": {
        "format": "{}{}",
        "snippet": "settoggle{${1:toggle name}}{${2:true|false}}"
      }
    },
    {
      "name": "iftoggle",
      "arg": {
        "format": "{}{}{}",
        "snippet": "iftoggle{${1:toggle name}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "nottoggle",
      "arg": {
        "format": "{}{}{}",
        "snippet": "nottoggle{${1:toggle name}}{${2:not true}}{${3:not false}}"
      }
    },
    {
      "name": "ifdef",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifdef{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsdef",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifcsdef{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifundef",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifundef{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsundef",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifcsundef{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefmacro",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifdefmacro{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsmacro",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifcsmacro{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefparam",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifdefparam{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsparam",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifcsparam{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefprefix",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifdefprefix{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsprefix",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifcsprefix{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefprotected",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifdefprotected{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsprotected",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifcsprotected{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefltxprotect",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifdefltxprotect{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsltxprotect",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifcsltxprotect{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefempty",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifdefempty{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsempty",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifcsempty{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefvoid",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifdefvoid{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsvoid",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifcsvoid{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifdefequal{${1:control sequence}}{${2:control sequence}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifcsequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifcsequal{${1:csname}}{${2:csname}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifdefstring",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifdefstring{${1:command}}{${2:string}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifcsstring",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifcsstring{${1:csname}}{${2:string}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifdefstrequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifdefstrequal{${1:command}}{${2:command}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifcsstrequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifcsstrequal{${1:csname}}{${2:csname}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifdefcounter",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifdefcounter{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcscounter",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifcscounter{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifltxcounter",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifltxcounter{${1:counter}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdeflength",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifdeflength{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcslength",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifcslength{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdefdimen",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifdefdimen{${1:control sequence}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifcsdimen",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifcsdimen{${1:csname}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifstrequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifstrequal{${1:string}}{${2:string}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifstrempty",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifstrempty{${1:string}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifblank",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifblank{${1:string}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "notblank",
      "arg": {
        "format": "{}{}{}",
        "snippet": "notblank{${1:string}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifnumcomp",
      "arg": {
        "format": "{}{}{}{}{}",
        "snippet": "ifnumcomp{${1:integer expression}}{${2:relation}}{${3:integer expression}}{${4:true}}{${5:false}}"
      }
    },
    {
      "name": "ifnumequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifnumequal{${1:integer expression}}{${2:integer expression}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifnumgreater",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifnumgreater{${1:integer expression}}{${2:integer expression}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifnumless",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifnumless{${1:integer expression}}{${2:integer expression}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifnumodd",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifnumodd{${1:integer expression}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifdimcomp",
      "arg": {
        "format": "{}{}{}{}{}",
        "snippet": "ifdimcomp{${1:dimen expression}}{${2:relation}}{${3:dimen expression}}{${4:true}}{${5:false}}"
      }
    },
    {
      "name": "ifdimequal",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifdimequal{${1:dimen expression}}{${2:dimen expression}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifdimgreater",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifdimgreater{${1:dimen expression}}{${2:dimen expression}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifdimless",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifdimless{${1:dimen expression}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifboolexpr",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifboolexpr{${1:expression}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "ifboolexpe",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifboolexpe{${1:expression}}{${2:true}}{${3:false}}"
      }
    },
    {
      "name": "whileboolexpr",
      "arg": {
        "format": "{}{}",
        "snippet": "whileboolexpr{${1:expression}}{${2:code}}"
      }
    },
    {
      "name": "unlessboolexpr",
      "arg": {
        "format": "{}{}",
        "snippet": "unlessboolexpr{${1:expression}}{${2:code}}"
      }
    },
    {
      "name": "DeclareListParser",
      "arg": {
        "format": "{}{}",
        "snippet": "DeclareListParser{${1:command}}{${2:separator}}"
      }
    },
    {
      "name": "DeclareListParser*",
      "arg": {
        "format": "{}{}",
        "snippet": "DeclareListParser*{${1:command}}{${2:separator}}"
      }
    },
    {
      "name": "docsvlist",
      "arg": {
        "format": "{}",
        "snippet": "docsvlist{${1:csvlist}}"
      }
    },
    {
      "name": "listbreak"
    },
    {
      "name": "forcsvlist",
      "arg": {
        "format": "{}{}",
        "snippet": "forcsvlist{${1:handler}}{${2:csvlist}}"
      }
    },
    {
      "name": "listadd",
      "arg": {
        "format": "{}{}",
        "snippet": "listadd{${1:list macro}}{${2:item}}"
      }
    },
    {
      "name": "listgadd",
      "arg": {
        "format": "{}{}",
        "snippet": "listgadd{${1:list macro}}{${2:item}}"
      }
    },
    {
      "name": "listeadd",
      "arg": {
        "format": "{}{}",
        "snippet": "listeadd{${1:list macro}}{${2:item}}"
      }
    },
    {
      "name": "listxadd",
      "arg": {
        "format": "{}{}",
        "snippet": "listxadd{${1:list macro}}{${2:item}}"
      }
    },
    {
      "name": "listcsadd",
      "arg": {
        "format": "{}{}",
        "snippet": "listcsadd{${1:list csname}}{${2:item}}"
      }
    },
    {
      "name": "listcsgadd",
      "arg": {
        "format": "{}{}",
        "snippet": "listcsgadd{${1:list csname}}{${2:item}}"
      }
    },
    {
      "name": "listcseadd",
      "arg": {
        "format": "{}{}",
        "snippet": "listcseadd{${1:list csname}}{${2:item}}"
      }
    },
    {
      "name": "listcsxadd",
      "arg": {
        "format": "{}{}",
        "snippet": "listcsxadd{${1:list csname}}{${2:item}}"
      }
    },
    {
      "name": "listremove",
      "arg": {
        "format": "{}{}",
        "snippet": "listremove{${1:list macro}}{${2:item}}"
      }
    },
    {
      "name": "listgremove",
      "arg": {
        "format": "{}{}",
        "snippet": "listgremove{${1:list macro}}{${2:item}}"
      }
    },
    {
      "name": "listcsremove",
      "arg": {
        "format": "{}{}",
        "snippet": "listcsremove{${1:list csname}}{${2:item}}"
      }
    },
    {
      "name": "listcsgremove",
      "arg": {
        "format": "{}{}",
        "snippet": "listcsgremove{${1:list csname}}{${2:item}}"
      }
    },
    {
      "name": "dolistloop",
      "arg": {
        "format": "{}",
        "snippet": "dolistloop{${1:list macro}}"
      }
    },
    {
      "name": "dolistcsloop",
      "arg": {
        "format": "{}",
        "snippet": "dolistcsloop{${1:list csname}}"
      }
    },
    {
      "name": "forlistloop",
      "arg": {
        "format": "{}{}",
        "snippet": "forlistloop{${1:handler}}{${2:list macro}}"
      }
    },
    {
      "name": "forlistcsloop",
      "arg": {
        "format": "{}{}",
        "snippet": "forlistcsloop{${1:handler}}{${2:list csname}}"
      }
    },
    {
      "name": "ifinlist",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifinlist{${1:item}}{${2:list macro}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "xifinlist",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "xifinlist{${1:item}}{${2:list macro}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "ifinlistcs",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "ifinlistcs{${1:item}}{${2:list csname}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "xifinlistcs",
      "arg": {
        "format": "{}{}{}{}",
        "snippet": "xifinlistcs{${1:item}}{${2:list csname}}{${3:true}}{${4:false}}"
      }
    },
    {
      "name": "rmntonum",
      "arg": {
        "format": "{}",
        "snippet": "rmntonum{${1:numeral}}"
      }
    },
    {
      "name": "ifrmnum",
      "arg": {
        "format": "{}{}{}",
        "snippet": "ifrmnum{${1:string}}{${2:true}}{${3:false}}"
      }
    }
  ],
  "envs": [],
  "keys": {},
  "args": []
}